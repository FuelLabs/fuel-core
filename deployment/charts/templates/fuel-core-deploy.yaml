apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app.volume.claimname }}
  labels:
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  accessModes:
    - {{ .Values.app.volume.accessmodes }}
  resources:
    requests:
      storage: {{ .Values.app.volume.storagerequests }}
  storageClassName: {{ .Values.app.volume.storageclass }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-chainspec-configmap
data:
  chainspec.json: |-
{{ .Files.Get "chainspec.json" | indent 4 }}
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: {{ template "fuel-core.name" . }}
    chart: {{ template "fuel-core.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "fuel-core.name" . }}-service
spec:
  type: NodePort
  selector:
    app: {{ template "fuel-core.name" . }}
  ports:
    - name: http
      port: {{ .Values.app.httpport }}
      protocol: TCP
      targetPort: {{ .Values.app.targetport }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fuel-core.name" . }}-k8s
  labels:
    app: {{ template "fuel-core.name" . }}
    chart: {{ template "fuel-core.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "fuel-core.name" . }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.app.replicas }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ template "fuel-core.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          command: ["./fuel-core"]
          args:
            - "run"
            - "--ip"
            - "0.0.0.0"
            - "--port"
            - "4000"
            - "--db-path"
            - "{{ .Values.app.volume.mountPath }}"
            - "--chain"
            - "/mnt/config/chainspec.json"
          {{- if .Values.app.utxo_validation }}
            - "--utxo-validation"
          {{- end}}
          {{- if .Values.app.vm_backtrace }}
            - "--vm-backtrace"
          {{- end}}
          {{- if .Values.app.predicates }}
            - "--predicates"
          {{- end}}
            - "--min-gas-price"
            - "{{ .Values.app.min_gas_price }}"
          resources: {}
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.targetport }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.app.targetport }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
          volumeMounts:
            - name: {{ .Values.app.volume.pvname }}
              mountPath: "{{ .Values.app.volume.mountPath }}"
            - name: config
              mountPath: "/mnt/config"
          env:
            - name: HUMAN_LOGGING
              value: {{ .Values.app.human_logging | quote }}
      volumes:
        - name: {{ .Values.app.volume.pvname }}
          persistentVolumeClaim:
            claimName: {{ .Values.app.volume.claimname }}
        - name: config
          configMap:
            name: {{ .Release.Name }}-chainspec-configmap
