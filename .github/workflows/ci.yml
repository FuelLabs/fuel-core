name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    # Build caching action
    - uses: Swatinem/rust-cache@v1

    - name: Install rustfmt
      run: rustup component add rustfmt

    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all --verbose -- --check

    - name: Check build
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --verbose --all-targets

    - name: Check Clippy Lints
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --verbose --all-targets

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --all-targets

    - name: Check formatting (examples)
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --manifest-path examples/Cargo.toml --all --verbose -- --check

    - name: Check build (examples)
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --manifest-path examples/Cargo.toml --verbose --all-targets

    - name: Check Clippy Lints (examples)
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --manifest-path examples/Cargo.toml --verbose --all-targets

    - name: Run tests (examples)
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path examples/Cargo.toml --verbose --all-targets

  publish:
    # Only do this job if publishing a release
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Verify tag version
        run: |
          cargo install toml-cli
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} fuel-client/Cargo.toml
          ./.github/workflows/scripts/verify_tag.sh ${{ github.ref_name }} fuel-core/Cargo.toml

      - name: Publish crate
        uses: katyo/publish-crates@v1
        with:
          publish-delay: 30000
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  build-publish-master-image:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
            
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/fuellabs/fuel-core
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=tag
          flavor: |
            latest=${{ github.ref == 'refs/heads/master' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Log in to the ghcr.io registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Build and push the image to ghcr.io
        uses: docker/build-push-action@v2
        with:
          context: .
          file: deployment/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max  
  
  build-publish-release-image:
    # Build & Publish Docker Image Per Fuel-Core Release
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
            
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/fuellabs/fuel-core

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Log in to the ghcr.io registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Build and push the image to ghcr.io
        uses: docker/build-push-action@v2
        with:
          context: .
          file: deployment/Dockerfile
          push: true
          tags: ${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
