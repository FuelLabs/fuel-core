<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="565.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="565.00"> </text><svg id="frames" x="10" width="1180" total_samples="43639"><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (5 samples, 0.01%)</title><rect x="0.0000%" y="437" width="0.0115%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="447.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (7 samples, 0.02%)</title><rect x="0.0115%" y="437" width="0.0160%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="7"/><text x="0.2615%" y="447.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.01%)</title><rect x="0.0321%" y="421" width="0.0115%" height="15" fill="rgb(221,193,54)" fg:x="14" fg:w="5"/><text x="0.2821%" y="431.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="0.0321%" y="405" width="0.0115%" height="15" fill="rgb(248,212,6)" fg:x="14" fg:w="5"/><text x="0.2821%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.01%)</title><rect x="0.0321%" y="389" width="0.0115%" height="15" fill="rgb(208,68,35)" fg:x="14" fg:w="5"/><text x="0.2821%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.01%)</title><rect x="0.0321%" y="373" width="0.0115%" height="15" fill="rgb(232,128,0)" fg:x="14" fg:w="5"/><text x="0.2821%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="0.0321%" y="357" width="0.0115%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="5"/><text x="0.2821%" y="367.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (8 samples, 0.02%)</title><rect x="0.0298%" y="437" width="0.0183%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="8"/><text x="0.2798%" y="447.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::on_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core_storage::tables::Coins,fuel_core_storage::tables::Coins&gt;&gt;::process (25 samples, 0.06%)</title><rect x="0.0000%" y="453" width="0.0573%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="25"/><text x="0.2500%" y="463.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (49 samples, 0.11%)</title><rect x="0.0000%" y="517" width="0.1123%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="49"/><text x="0.2500%" y="527.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (49 samples, 0.11%)</title><rect x="0.0000%" y="501" width="0.1123%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="49"/><text x="0.2500%" y="511.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (49 samples, 0.11%)</title><rect x="0.0000%" y="485" width="0.1123%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="49"/><text x="0.2500%" y="495.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_on_chain::_{{closure}} (49 samples, 0.11%)</title><rect x="0.0000%" y="469" width="0.1123%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="49"/><text x="0.2500%" y="479.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (24 samples, 0.05%)</title><rect x="0.0573%" y="453" width="0.0550%" height="15" fill="rgb(206,188,39)" fg:x="25" fg:w="24"/><text x="0.3073%" y="463.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (24 samples, 0.05%)</title><rect x="0.0573%" y="437" width="0.0550%" height="15" fill="rgb(217,207,13)" fg:x="25" fg:w="24"/><text x="0.3073%" y="447.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (24 samples, 0.05%)</title><rect x="0.0573%" y="421" width="0.0550%" height="15" fill="rgb(231,73,38)" fg:x="25" fg:w="24"/><text x="0.3073%" y="431.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (21 samples, 0.05%)</title><rect x="0.0642%" y="405" width="0.0481%" height="15" fill="rgb(225,20,46)" fg:x="28" fg:w="21"/><text x="0.3142%" y="415.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (21 samples, 0.05%)</title><rect x="0.0642%" y="389" width="0.0481%" height="15" fill="rgb(210,31,41)" fg:x="28" fg:w="21"/><text x="0.3142%" y="399.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (17 samples, 0.04%)</title><rect x="0.0733%" y="373" width="0.0390%" height="15" fill="rgb(221,200,47)" fg:x="32" fg:w="17"/><text x="0.3233%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="0.0940%" y="357" width="0.0183%" height="15" fill="rgb(226,26,5)" fg:x="41" fg:w="8"/><text x="0.3440%" y="367.50"></text></g><g><title>block_verifier`DYLD-STUB$$read (10 samples, 0.02%)</title><rect x="0.1169%" y="437" width="0.0229%" height="15" fill="rgb(249,33,26)" fg:x="51" fg:w="10"/><text x="0.3669%" y="447.50"></text></g><g><title>block_verifier`DYLD-STUB$$read (22 samples, 0.05%)</title><rect x="0.2452%" y="405" width="0.0504%" height="15" fill="rgb(235,183,28)" fg:x="107" fg:w="22"/><text x="0.4952%" y="415.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (18 samples, 0.04%)</title><rect x="0.4377%" y="389" width="0.0412%" height="15" fill="rgb(221,5,38)" fg:x="191" fg:w="18"/><text x="0.6877%" y="399.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (325 samples, 0.74%)</title><rect x="0.4835%" y="389" width="0.7447%" height="15" fill="rgb(247,18,42)" fg:x="211" fg:w="325"/><text x="0.7335%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`read (320 samples, 0.73%)</title><rect x="0.4950%" y="373" width="0.7333%" height="15" fill="rgb(241,131,45)" fg:x="216" fg:w="320"/><text x="0.7450%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`read (3,613 samples, 8.28%)</title><rect x="1.2283%" y="389" width="8.2793%" height="15" fill="rgb(249,31,29)" fg:x="536" fg:w="3613"/><text x="1.4783%" y="399.50">libsystem_ke..</text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (4,020 samples, 9.21%)</title><rect x="0.2979%" y="405" width="9.2119%" height="15" fill="rgb(225,111,53)" fg:x="130" fg:w="4020"/><text x="0.5479%" y="415.50">block_verifie..</text></g><g><title>block_verifier`std::io::Read::read_exact (9 samples, 0.02%)</title><rect x="9.5098%" y="405" width="0.0206%" height="15" fill="rgb(238,160,17)" fg:x="4150" fg:w="9"/><text x="9.7598%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`read (17,708 samples, 40.58%)</title><rect x="9.5305%" y="405" width="40.5784%" height="15" fill="rgb(214,148,48)" fg:x="4159" fg:w="17708"/><text x="9.7805%" y="415.50">libsystem_kernel.dylib`read</text></g><g><title>block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserialize for fuel_core_types::blockchain::block::BlockV1&lt;TransactionRepresentation&gt;&gt;::deserialize::__Visitor&lt;TransactionRepresentation&gt; as serde::de::Visitor&gt;::visit_seq (21,773 samples, 49.89%)</title><rect x="0.2200%" y="421" width="49.8934%" height="15" fill="rgb(232,36,49)" fg:x="96" fg:w="21773"/><text x="0.4700%" y="431.50">block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserializ..</text></g><g><title>block_verifier`core::ops::function::Fn::call (8 samples, 0.02%)</title><rect x="50.1249%" y="357" width="0.0183%" height="15" fill="rgb(209,103,24)" fg:x="21874" fg:w="8"/><text x="50.3749%" y="367.50"></text></g><g><title>block_verifier`rocksdb_open (8 samples, 0.02%)</title><rect x="50.1249%" y="341" width="0.0183%" height="15" fill="rgb(229,88,8)" fg:x="21874" fg:w="8"/><text x="50.3749%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DB::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.02%)</title><rect x="50.1249%" y="325" width="0.0183%" height="15" fill="rgb(213,181,19)" fg:x="21874" fg:w="8"/><text x="50.3749%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Open(rocksdb::DBOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyDescriptor, std::__1::allocator&lt;rocksdb::ColumnFamilyDescriptor&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator (8 samples, 0.02%)</title><rect x="50.1249%" y="309" width="0.0183%" height="15" fill="rgb(254,191,54)" fg:x="21874" fg:w="8"/><text x="50.3749%" y="319.50"></text></g><g><title>block_verifier`fuel_core::combined_database::CombinedDatabase::from_config (10 samples, 0.02%)</title><rect x="50.1249%" y="405" width="0.0229%" height="15" fill="rgb(241,83,37)" fg:x="21874" fg:w="10"/><text x="50.3749%" y="415.50"></text></g><g><title>block_verifier`fuel_core::combined_database::CombinedDatabase::temp_database_with_state_rewind_policy (10 samples, 0.02%)</title><rect x="50.1249%" y="389" width="0.0229%" height="15" fill="rgb(233,36,39)" fg:x="21874" fg:w="10"/><text x="50.3749%" y="399.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::open_with (10 samples, 0.02%)</title><rect x="50.1249%" y="373" width="0.0229%" height="15" fill="rgb(226,3,54)" fg:x="21874" fg:w="10"/><text x="50.3749%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core::service::Task as fuel_core_services::service::RunnableService&gt;::shared_data (5 samples, 0.01%)</title><rect x="50.1478%" y="389" width="0.0115%" height="15" fill="rgb(245,192,40)" fg:x="21884" fg:w="5"/><text x="50.3978%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core::service::config::Config as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="50.1478%" y="373" width="0.0115%" height="15" fill="rgb(238,167,29)" fg:x="21884" fg:w="5"/><text x="50.3978%" y="383.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntryInternal (5 samples, 0.01%)</title><rect x="50.1913%" y="277" width="0.0115%" height="15" fill="rgb(232,182,51)" fg:x="21903" fg:w="5"/><text x="50.4413%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntry (9 samples, 0.02%)</title><rect x="50.1913%" y="293" width="0.0206%" height="15" fill="rgb(231,60,39)" fg:x="21903" fg:w="9"/><text x="50.4413%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBIter::Next (13 samples, 0.03%)</title><rect x="50.1891%" y="309" width="0.0298%" height="15" fill="rgb(208,69,12)" fg:x="21902" fg:w="13"/><text x="50.4391%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db_key_iterator::RocksDBKeyIterator&lt;D,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.04%)</title><rect x="50.1891%" y="325" width="0.0390%" height="15" fill="rgb(235,93,37)" fg:x="21902" fg:w="17"/><text x="50.4391%" y="335.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="50.1891%" y="341" width="0.0435%" height="15" fill="rgb(213,116,39)" fg:x="21902" fg:w="19"/><text x="50.4391%" y="351.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.07%)</title><rect x="50.1891%" y="357" width="0.0733%" height="15" fill="rgb(222,207,29)" fg:x="21902" fg:w="32"/><text x="50.4391%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="50.2509%" y="341" width="0.0115%" height="15" fill="rgb(206,96,30)" fg:x="21929" fg:w="5"/><text x="50.5009%" y="351.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (39 samples, 0.09%)</title><rect x="50.2693%" y="341" width="0.0894%" height="15" fill="rgb(218,138,4)" fg:x="21937" fg:w="39"/><text x="50.5193%" y="351.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::coin::_&lt;impl fuel_core_chain_config::genesis::GenesisCommitment for fuel_core_types::entities::coins::coin::Coin&gt;::root (43 samples, 0.10%)</title><rect x="50.2624%" y="357" width="0.0985%" height="15" fill="rgb(250,191,14)" fg:x="21934" fg:w="43"/><text x="50.5124%" y="367.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (121 samples, 0.28%)</title><rect x="50.3609%" y="357" width="0.2773%" height="15" fill="rgb(239,60,40)" fg:x="21977" fg:w="121"/><text x="50.6109%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (116 samples, 0.27%)</title><rect x="50.3724%" y="341" width="0.2658%" height="15" fill="rgb(206,27,48)" fg:x="21982" fg:w="116"/><text x="50.6224%" y="351.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (40 samples, 0.09%)</title><rect x="50.6382%" y="357" width="0.0917%" height="15" fill="rgb(225,35,8)" fg:x="22098" fg:w="40"/><text x="50.8882%" y="367.50"></text></g><g><title>block_verifier`fuel_core::database::genesis_progress::_&lt;impl fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::GenesisStage&gt;&gt;&gt;::genesis_coins_root (237 samples, 0.54%)</title><rect x="50.1891%" y="373" width="0.5431%" height="15" fill="rgb(250,213,24)" fg:x="21902" fg:w="237"/><text x="50.4391%" y="383.50"></text></g><g><title>block_verifier`fuel_core::database::genesis_progress::_&lt;impl fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::GenesisStage&gt;&gt;&gt;::genesis_messages_root (5 samples, 0.01%)</title><rect x="50.7367%" y="373" width="0.0115%" height="15" fill="rgb(247,123,22)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="383.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::_iter_store (5 samples, 0.01%)</title><rect x="50.7367%" y="357" width="0.0115%" height="15" fill="rgb(231,138,38)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="367.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::iterator (5 samples, 0.01%)</title><rect x="50.7367%" y="341" width="0.0115%" height="15" fill="rgb(231,145,46)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="351.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (5 samples, 0.01%)</title><rect x="50.7367%" y="325" width="0.0115%" height="15" fill="rgb(251,118,11)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="335.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (5 samples, 0.01%)</title><rect x="50.7367%" y="309" width="0.0115%" height="15" fill="rgb(217,147,25)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="319.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (5 samples, 0.01%)</title><rect x="50.7367%" y="293" width="0.0115%" height="15" fill="rgb(247,81,37)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="50.7367%" y="277" width="0.0115%" height="15" fill="rgb(209,12,38)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (5 samples, 0.01%)</title><rect x="50.7367%" y="261" width="0.0115%" height="15" fill="rgb(227,1,9)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="271.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="50.7367%" y="245" width="0.0115%" height="15" fill="rgb(248,47,43)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="255.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="50.7367%" y="229" width="0.0115%" height="15" fill="rgb(221,10,30)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="239.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="50.7367%" y="213" width="0.0115%" height="15" fill="rgb(210,229,1)" fg:x="22141" fg:w="5"/><text x="50.9867%" y="223.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="50.7505%" y="197" width="0.0115%" height="15" fill="rgb(222,148,37)" fg:x="22147" fg:w="5"/><text x="51.0005%" y="207.50"></text></g><g><title>block_verifier`fuel_core::database::genesis_progress::_&lt;impl fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::GenesisStage&gt;&gt;&gt;::processed_transactions_root (7 samples, 0.02%)</title><rect x="50.7482%" y="373" width="0.0160%" height="15" fill="rgb(234,67,33)" fg:x="22146" fg:w="7"/><text x="50.9982%" y="383.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::_iter_store (7 samples, 0.02%)</title><rect x="50.7482%" y="357" width="0.0160%" height="15" fill="rgb(247,98,35)" fg:x="22146" fg:w="7"/><text x="50.9982%" y="367.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::iterator (7 samples, 0.02%)</title><rect x="50.7482%" y="341" width="0.0160%" height="15" fill="rgb(247,138,52)" fg:x="22146" fg:w="7"/><text x="50.9982%" y="351.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (7 samples, 0.02%)</title><rect x="50.7482%" y="325" width="0.0160%" height="15" fill="rgb(213,79,30)" fg:x="22146" fg:w="7"/><text x="50.9982%" y="335.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (6 samples, 0.01%)</title><rect x="50.7505%" y="309" width="0.0137%" height="15" fill="rgb(246,177,23)" fg:x="22147" fg:w="6"/><text x="51.0005%" y="319.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (6 samples, 0.01%)</title><rect x="50.7505%" y="293" width="0.0137%" height="15" fill="rgb(230,62,27)" fg:x="22147" fg:w="6"/><text x="51.0005%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="50.7505%" y="277" width="0.0137%" height="15" fill="rgb(216,154,8)" fg:x="22147" fg:w="6"/><text x="51.0005%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (6 samples, 0.01%)</title><rect x="50.7505%" y="261" width="0.0137%" height="15" fill="rgb(244,35,45)" fg:x="22147" fg:w="6"/><text x="51.0005%" y="271.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="50.7505%" y="245" width="0.0137%" height="15" fill="rgb(251,115,12)" fg:x="22147" fg:w="6"/><text x="51.0005%" y="255.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="50.7505%" y="229" width="0.0137%" height="15" fill="rgb(240,54,50)" fg:x="22147" fg:w="6"/><text x="51.0005%" y="239.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="50.7505%" y="213" width="0.0137%" height="15" fill="rgb(233,84,52)" fg:x="22147" fg:w="6"/><text x="51.0005%" y="223.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::override_chain_config_if_needed (8 samples, 0.02%)</title><rect x="50.7642%" y="373" width="0.0183%" height="15" fill="rgb(207,117,47)" fg:x="22153" fg:w="8"/><text x="51.0142%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (8 samples, 0.02%)</title><rect x="50.7642%" y="357" width="0.0183%" height="15" fill="rgb(249,43,39)" fg:x="22153" fg:w="8"/><text x="51.0142%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (54 samples, 0.12%)</title><rect x="50.8101%" y="293" width="0.1237%" height="15" fill="rgb(209,38,44)" fg:x="22173" fg:w="54"/><text x="51.0601%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (74 samples, 0.17%)</title><rect x="50.8032%" y="309" width="0.1696%" height="15" fill="rgb(236,212,23)" fg:x="22170" fg:w="74"/><text x="51.0532%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.03%)</title><rect x="50.9430%" y="293" width="0.0298%" height="15" fill="rgb(242,79,21)" fg:x="22231" fg:w="13"/><text x="51.1930%" y="303.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.01%)</title><rect x="50.9750%" y="277" width="0.0137%" height="15" fill="rgb(211,96,35)" fg:x="22245" fg:w="6"/><text x="51.2250%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="50.9773%" y="261" width="0.0115%" height="15" fill="rgb(253,215,40)" fg:x="22246" fg:w="5"/><text x="51.2273%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="50.9773%" y="245" width="0.0115%" height="15" fill="rgb(211,81,21)" fg:x="22246" fg:w="5"/><text x="51.2273%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (20 samples, 0.05%)</title><rect x="50.9750%" y="293" width="0.0458%" height="15" fill="rgb(208,190,38)" fg:x="22245" fg:w="20"/><text x="51.2250%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (14 samples, 0.03%)</title><rect x="51.0209%" y="293" width="0.0321%" height="15" fill="rgb(235,213,38)" fg:x="22265" fg:w="14"/><text x="51.2709%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.02%)</title><rect x="51.0323%" y="277" width="0.0206%" height="15" fill="rgb(237,122,38)" fg:x="22270" fg:w="9"/><text x="51.2823%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.03%)</title><rect x="51.0552%" y="277" width="0.0298%" height="15" fill="rgb(244,218,35)" fg:x="22280" fg:w="13"/><text x="51.3052%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (13 samples, 0.03%)</title><rect x="51.0552%" y="261" width="0.0298%" height="15" fill="rgb(240,68,47)" fg:x="22280" fg:w="13"/><text x="51.3052%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="51.0552%" y="245" width="0.0298%" height="15" fill="rgb(210,16,53)" fg:x="22280" fg:w="13"/><text x="51.3052%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="51.0644%" y="229" width="0.0206%" height="15" fill="rgb(235,124,12)" fg:x="22284" fg:w="9"/><text x="51.3144%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="51.0667%" y="213" width="0.0183%" height="15" fill="rgb(224,169,11)" fg:x="22285" fg:w="8"/><text x="51.3167%" y="223.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (16 samples, 0.04%)</title><rect x="51.0552%" y="293" width="0.0367%" height="15" fill="rgb(250,166,2)" fg:x="22280" fg:w="16"/><text x="51.3052%" y="303.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::indexation::process_balances_update (58 samples, 0.13%)</title><rect x="50.9750%" y="309" width="0.1329%" height="15" fill="rgb(242,216,29)" fg:x="22245" fg:w="58"/><text x="51.2250%" y="319.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::off_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core::graphql_api::storage::coins::OwnedCoins,fuel_core_storage::tables::Coins&gt;&gt;::process (143 samples, 0.33%)</title><rect x="50.7963%" y="325" width="0.3277%" height="15" fill="rgb(230,116,27)" fg:x="22167" fg:w="143"/><text x="51.0463%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (29 samples, 0.07%)</title><rect x="51.1240%" y="293" width="0.0665%" height="15" fill="rgb(228,99,48)" fg:x="22310" fg:w="29"/><text x="51.3740%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.05%)</title><rect x="51.1355%" y="277" width="0.0550%" height="15" fill="rgb(253,11,6)" fg:x="22315" fg:w="24"/><text x="51.3855%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.04%)</title><rect x="51.1469%" y="261" width="0.0435%" height="15" fill="rgb(247,143,39)" fg:x="22320" fg:w="19"/><text x="51.3969%" y="271.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (20 samples, 0.05%)</title><rect x="51.1973%" y="277" width="0.0458%" height="15" fill="rgb(236,97,10)" fg:x="22342" fg:w="20"/><text x="51.4473%" y="287.50"></text></g><g><title>block_verifier`rocksdb_write (20 samples, 0.05%)</title><rect x="51.1973%" y="261" width="0.0458%" height="15" fill="rgb(233,208,19)" fg:x="22342" fg:w="20"/><text x="51.4473%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (20 samples, 0.05%)</title><rect x="51.1973%" y="245" width="0.0458%" height="15" fill="rgb(216,164,2)" fg:x="22342" fg:w="20"/><text x="51.4473%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (20 samples, 0.05%)</title><rect x="51.1973%" y="229" width="0.0458%" height="15" fill="rgb(220,129,5)" fg:x="22342" fg:w="20"/><text x="51.4473%" y="239.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (16 samples, 0.04%)</title><rect x="51.2065%" y="213" width="0.0367%" height="15" fill="rgb(242,17,10)" fg:x="22346" fg:w="16"/><text x="51.4565%" y="223.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (14 samples, 0.03%)</title><rect x="51.2111%" y="197" width="0.0321%" height="15" fill="rgb(242,107,0)" fg:x="22348" fg:w="14"/><text x="51.4611%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (14 samples, 0.03%)</title><rect x="51.2111%" y="181" width="0.0321%" height="15" fill="rgb(251,28,31)" fg:x="22348" fg:w="14"/><text x="51.4611%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (14 samples, 0.03%)</title><rect x="51.2111%" y="165" width="0.0321%" height="15" fill="rgb(233,223,10)" fg:x="22348" fg:w="14"/><text x="51.4611%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (7 samples, 0.02%)</title><rect x="51.2271%" y="149" width="0.0160%" height="15" fill="rgb(215,21,27)" fg:x="22355" fg:w="7"/><text x="51.4771%" y="159.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (10 samples, 0.02%)</title><rect x="51.2477%" y="245" width="0.0229%" height="15" fill="rgb(232,23,21)" fg:x="22364" fg:w="10"/><text x="51.4977%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (36 samples, 0.08%)</title><rect x="51.1904%" y="293" width="0.0825%" height="15" fill="rgb(244,5,23)" fg:x="22339" fg:w="36"/><text x="51.4404%" y="303.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (13 samples, 0.03%)</title><rect x="51.2432%" y="277" width="0.0298%" height="15" fill="rgb(226,81,46)" fg:x="22362" fg:w="13"/><text x="51.4932%" y="287.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (12 samples, 0.03%)</title><rect x="51.2454%" y="261" width="0.0275%" height="15" fill="rgb(247,70,30)" fg:x="22363" fg:w="12"/><text x="51.4954%" y="271.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain::_{{closure}} (214 samples, 0.49%)</title><rect x="50.7940%" y="341" width="0.4904%" height="15" fill="rgb(212,68,19)" fg:x="22166" fg:w="214"/><text x="51.0440%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (70 samples, 0.16%)</title><rect x="51.1240%" y="325" width="0.1604%" height="15" fill="rgb(240,187,13)" fg:x="22310" fg:w="70"/><text x="51.3740%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (70 samples, 0.16%)</title><rect x="51.1240%" y="309" width="0.1604%" height="15" fill="rgb(223,113,26)" fg:x="22310" fg:w="70"/><text x="51.3740%" y="319.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="51.2844%" y="325" width="0.0115%" height="15" fill="rgb(206,192,2)" fg:x="22380" fg:w="5"/><text x="51.5344%" y="335.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain (226 samples, 0.52%)</title><rect x="50.7894%" y="357" width="0.5179%" height="15" fill="rgb(241,108,4)" fg:x="22164" fg:w="226"/><text x="51.0394%" y="367.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (10 samples, 0.02%)</title><rect x="51.2844%" y="341" width="0.0229%" height="15" fill="rgb(247,173,49)" fg:x="22380" fg:w="10"/><text x="51.5344%" y="351.50"></text></g><g><title>block_verifier`core::fmt::write (5 samples, 0.01%)</title><rect x="51.3325%" y="277" width="0.0115%" height="15" fill="rgb(224,114,35)" fg:x="22401" fg:w="5"/><text x="51.5825%" y="287.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (11 samples, 0.03%)</title><rect x="51.3279%" y="293" width="0.0252%" height="15" fill="rgb(245,159,27)" fg:x="22399" fg:w="11"/><text x="51.5779%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="51.3623%" y="293" width="0.0115%" height="15" fill="rgb(245,172,44)" fg:x="22414" fg:w="5"/><text x="51.6123%" y="303.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (26 samples, 0.06%)</title><rect x="51.3211%" y="309" width="0.0596%" height="15" fill="rgb(236,23,11)" fg:x="22396" fg:w="26"/><text x="51.5711%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (12 samples, 0.03%)</title><rect x="51.3806%" y="261" width="0.0275%" height="15" fill="rgb(205,117,38)" fg:x="22422" fg:w="12"/><text x="51.6306%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (13 samples, 0.03%)</title><rect x="51.3806%" y="277" width="0.0298%" height="15" fill="rgb(237,72,25)" fg:x="22422" fg:w="13"/><text x="51.6306%" y="287.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.01%)</title><rect x="51.4104%" y="277" width="0.0137%" height="15" fill="rgb(244,70,9)" fg:x="22435" fg:w="6"/><text x="51.6604%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="51.4104%" y="261" width="0.0137%" height="15" fill="rgb(217,125,39)" fg:x="22435" fg:w="6"/><text x="51.6604%" y="271.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (24 samples, 0.05%)</title><rect x="51.3806%" y="293" width="0.0550%" height="15" fill="rgb(235,36,10)" fg:x="22422" fg:w="24"/><text x="51.6306%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (27 samples, 0.06%)</title><rect x="51.3806%" y="309" width="0.0619%" height="15" fill="rgb(251,123,47)" fg:x="22422" fg:w="27"/><text x="51.6306%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (57 samples, 0.13%)</title><rect x="51.3142%" y="325" width="0.1306%" height="15" fill="rgb(221,13,13)" fg:x="22393" fg:w="57"/><text x="51.5642%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (67 samples, 0.15%)</title><rect x="51.4448%" y="325" width="0.1535%" height="15" fill="rgb(238,131,9)" fg:x="22450" fg:w="67"/><text x="51.6948%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.03%)</title><rect x="51.6396%" y="229" width="0.0252%" height="15" fill="rgb(211,50,8)" fg:x="22535" fg:w="11"/><text x="51.8896%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="51.6648%" y="229" width="0.0183%" height="15" fill="rgb(245,182,24)" fg:x="22546" fg:w="8"/><text x="51.9148%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="51.6717%" y="213" width="0.0115%" height="15" fill="rgb(242,14,37)" fg:x="22549" fg:w="5"/><text x="51.9217%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (27 samples, 0.06%)</title><rect x="51.6281%" y="261" width="0.0619%" height="15" fill="rgb(246,228,12)" fg:x="22530" fg:w="27"/><text x="51.8781%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (24 samples, 0.05%)</title><rect x="51.6350%" y="245" width="0.0550%" height="15" fill="rgb(213,55,15)" fg:x="22533" fg:w="24"/><text x="51.8850%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (35 samples, 0.08%)</title><rect x="51.6167%" y="309" width="0.0802%" height="15" fill="rgb(209,9,3)" fg:x="22525" fg:w="35"/><text x="51.8667%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (31 samples, 0.07%)</title><rect x="51.6258%" y="293" width="0.0710%" height="15" fill="rgb(230,59,30)" fg:x="22529" fg:w="31"/><text x="51.8758%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (30 samples, 0.07%)</title><rect x="51.6281%" y="277" width="0.0687%" height="15" fill="rgb(209,121,21)" fg:x="22530" fg:w="30"/><text x="51.8781%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.02%)</title><rect x="51.6969%" y="309" width="0.0206%" height="15" fill="rgb(220,109,13)" fg:x="22560" fg:w="9"/><text x="51.9469%" y="319.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (56 samples, 0.13%)</title><rect x="51.6006%" y="325" width="0.1283%" height="15" fill="rgb(232,18,1)" fg:x="22518" fg:w="56"/><text x="51.8506%" y="335.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::on_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core_storage::tables::Coins,fuel_core_storage::tables::Coins&gt;&gt;::process (191 samples, 0.44%)</title><rect x="51.3073%" y="341" width="0.4377%" height="15" fill="rgb(215,41,42)" fg:x="22390" fg:w="191"/><text x="51.5573%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="51.8115%" y="261" width="0.0115%" height="15" fill="rgb(224,123,36)" fg:x="22610" fg:w="5"/><text x="52.0615%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.07%)</title><rect x="51.7610%" y="293" width="0.0687%" height="15" fill="rgb(240,125,3)" fg:x="22588" fg:w="30"/><text x="52.0110%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.05%)</title><rect x="51.7748%" y="277" width="0.0550%" height="15" fill="rgb(205,98,50)" fg:x="22594" fg:w="24"/><text x="52.0248%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (35 samples, 0.08%)</title><rect x="51.7519%" y="309" width="0.0802%" height="15" fill="rgb(205,185,37)" fg:x="22584" fg:w="35"/><text x="52.0019%" y="319.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (8 samples, 0.02%)</title><rect x="51.8527%" y="149" width="0.0183%" height="15" fill="rgb(238,207,15)" fg:x="22628" fg:w="8"/><text x="52.1027%" y="159.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (6 samples, 0.01%)</title><rect x="51.8573%" y="133" width="0.0137%" height="15" fill="rgb(213,199,42)" fg:x="22630" fg:w="6"/><text x="52.1073%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (10 samples, 0.02%)</title><rect x="51.8504%" y="165" width="0.0229%" height="15" fill="rgb(235,201,11)" fg:x="22627" fg:w="10"/><text x="52.1004%" y="175.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (20 samples, 0.05%)</title><rect x="51.8321%" y="309" width="0.0458%" height="15" fill="rgb(207,46,11)" fg:x="22619" fg:w="20"/><text x="52.0821%" y="319.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (20 samples, 0.05%)</title><rect x="51.8321%" y="293" width="0.0458%" height="15" fill="rgb(241,35,35)" fg:x="22619" fg:w="20"/><text x="52.0821%" y="303.50"></text></g><g><title>block_verifier`rocksdb_write (20 samples, 0.05%)</title><rect x="51.8321%" y="277" width="0.0458%" height="15" fill="rgb(243,32,47)" fg:x="22619" fg:w="20"/><text x="52.0821%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (20 samples, 0.05%)</title><rect x="51.8321%" y="261" width="0.0458%" height="15" fill="rgb(247,202,23)" fg:x="22619" fg:w="20"/><text x="52.0821%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (20 samples, 0.05%)</title><rect x="51.8321%" y="245" width="0.0458%" height="15" fill="rgb(219,102,11)" fg:x="22619" fg:w="20"/><text x="52.0821%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (17 samples, 0.04%)</title><rect x="51.8390%" y="229" width="0.0390%" height="15" fill="rgb(243,110,44)" fg:x="22622" fg:w="17"/><text x="52.0890%" y="239.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (16 samples, 0.04%)</title><rect x="51.8412%" y="213" width="0.0367%" height="15" fill="rgb(222,74,54)" fg:x="22623" fg:w="16"/><text x="52.0912%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (13 samples, 0.03%)</title><rect x="51.8481%" y="197" width="0.0298%" height="15" fill="rgb(216,99,12)" fg:x="22626" fg:w="13"/><text x="52.0981%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (12 samples, 0.03%)</title><rect x="51.8504%" y="181" width="0.0275%" height="15" fill="rgb(226,22,26)" fg:x="22627" fg:w="12"/><text x="52.1004%" y="191.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_on_chain::_{{closure}} (254 samples, 0.58%)</title><rect x="51.3073%" y="357" width="0.5820%" height="15" fill="rgb(217,163,10)" fg:x="22390" fg:w="254"/><text x="51.5573%" y="367.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (63 samples, 0.14%)</title><rect x="51.7450%" y="341" width="0.1444%" height="15" fill="rgb(213,25,53)" fg:x="22581" fg:w="63"/><text x="51.9950%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (63 samples, 0.14%)</title><rect x="51.7450%" y="325" width="0.1444%" height="15" fill="rgb(252,105,26)" fg:x="22581" fg:w="63"/><text x="51.9950%" y="335.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (493 samples, 1.13%)</title><rect x="50.7826%" y="373" width="1.1297%" height="15" fill="rgb(220,39,43)" fg:x="22161" fg:w="493"/><text x="51.0326%" y="383.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (10 samples, 0.02%)</title><rect x="51.8894%" y="357" width="0.0229%" height="15" fill="rgb(229,68,48)" fg:x="22644" fg:w="10"/><text x="52.1394%" y="367.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (779 samples, 1.79%)</title><rect x="50.1730%" y="389" width="1.7851%" height="15" fill="rgb(252,8,32)" fg:x="21895" fg:w="779"/><text x="50.4230%" y="399.50">b..</text></g><g><title>block_verifier`sha2::sha256::compress256 (20 samples, 0.05%)</title><rect x="51.9123%" y="373" width="0.0458%" height="15" fill="rgb(223,20,43)" fg:x="22654" fg:w="20"/><text x="52.1623%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core::service::config::Config as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="51.9581%" y="373" width="0.0160%" height="15" fill="rgb(229,81,49)" fg:x="22674" fg:w="7"/><text x="52.2081%" y="383.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (805 samples, 1.84%)</title><rect x="50.1478%" y="405" width="1.8447%" height="15" fill="rgb(236,28,36)" fg:x="21884" fg:w="805"/><text x="50.3978%" y="415.50">b..</text></g><g><title>block_verifier`fuel_core::service::sub_services::init_sub_services (15 samples, 0.03%)</title><rect x="51.9581%" y="389" width="0.0344%" height="15" fill="rgb(249,185,26)" fg:x="22674" fg:w="15"/><text x="52.2081%" y="399.50"></text></g><g><title>block_verifier`block_verifier::main::_{{closure}} (819 samples, 1.88%)</title><rect x="50.1180%" y="421" width="1.8768%" height="15" fill="rgb(249,174,33)" fg:x="21871" fg:w="819"/><text x="50.3680%" y="431.50">b..</text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.01%)</title><rect x="51.9971%" y="245" width="0.0115%" height="15" fill="rgb(233,201,37)" fg:x="22691" fg:w="5"/><text x="52.2471%" y="255.50"></text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.01%)</title><rect x="51.9971%" y="229" width="0.0115%" height="15" fill="rgb(221,78,26)" fg:x="22691" fg:w="5"/><text x="52.2471%" y="239.50"></text></g><g><title>block_verifier`&lt;tempfile::dir::TempDir as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="51.9971%" y="213" width="0.0115%" height="15" fill="rgb(250,127,30)" fg:x="22691" fg:w="5"/><text x="52.2471%" y="223.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all (5 samples, 0.01%)</title><rect x="51.9971%" y="197" width="0.0115%" height="15" fill="rgb(230,49,44)" fg:x="22691" fg:w="5"/><text x="52.2471%" y="207.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (5 samples, 0.01%)</title><rect x="51.9971%" y="181" width="0.0115%" height="15" fill="rgb(229,67,23)" fg:x="22691" fg:w="5"/><text x="52.2471%" y="191.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (5 samples, 0.01%)</title><rect x="51.9971%" y="165" width="0.0115%" height="15" fill="rgb(249,83,47)" fg:x="22691" fg:w="5"/><text x="52.2471%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__unlinkat (5 samples, 0.01%)</title><rect x="51.9971%" y="149" width="0.0115%" height="15" fill="rgb(215,43,3)" fg:x="22691" fg:w="5"/><text x="52.2471%" y="159.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$tracing..instrument..Instrumented$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$u (9 samples, 0.02%)</title><rect x="51.9948%" y="341" width="0.0206%" height="15" fill="rgb(238,154,13)" fg:x="22690" fg:w="9"/><text x="52.2448%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_descu (9 samples, 0.02%)</title><rect x="51.9948%" y="325" width="0.0206%" height="15" fill="rgb(219,56,2)" fg:x="22690" fg:w="9"/><text x="52.2448%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$fuel_core_services..service..run$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$u (9 samples, 0.02%)</title><rect x="51.9948%" y="309" width="0.0206%" height="15" fill="rgb(233,0,4)" fg:x="22690" fg:w="9"/><text x="52.2448%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_gas_price_service::v0::service::GasPriceServiceV0&lt;fuel_core_gas_price_service::common::l2_block_source::FuelL2BlockSource&lt;fuel_core::service::adapters::ConsensusParametersProvider&gt;,fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase&gt;&gt;&gt;&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="51.9948%" y="293" width="0.0206%" height="15" fill="rgb(235,30,7)" fg:x="22690" fg:w="9"/><text x="52.2448%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::service::adapters::consensus_parameters_provider::SharedState&gt; (8 samples, 0.02%)</title><rect x="51.9971%" y="277" width="0.0183%" height="15" fill="rgb(250,79,13)" fg:x="22691" fg:w="8"/><text x="52.2471%" y="287.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (8 samples, 0.02%)</title><rect x="51.9971%" y="261" width="0.0183%" height="15" fill="rgb(211,146,34)" fg:x="22691" fg:w="8"/><text x="52.2471%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="52.0727%" y="133" width="0.0137%" height="15" fill="rgb(228,22,38)" fg:x="22724" fg:w="6"/><text x="52.3227%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="52.0864%" y="133" width="0.0115%" height="15" fill="rgb(235,168,5)" fg:x="22730" fg:w="5"/><text x="52.3364%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (26 samples, 0.06%)</title><rect x="52.0521%" y="165" width="0.0596%" height="15" fill="rgb(221,155,16)" fg:x="22715" fg:w="26"/><text x="52.3021%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.05%)</title><rect x="52.0612%" y="149" width="0.0504%" height="15" fill="rgb(215,215,53)" fg:x="22719" fg:w="22"/><text x="52.3112%" y="159.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (34 samples, 0.08%)</title><rect x="52.0406%" y="181" width="0.0779%" height="15" fill="rgb(223,4,10)" fg:x="22710" fg:w="34"/><text x="52.2906%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="52.1254%" y="181" width="0.0137%" height="15" fill="rgb(234,103,6)" fg:x="22747" fg:w="6"/><text x="52.3754%" y="191.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fuel_tx::transaction::Transaction&gt;&gt; (45 samples, 0.10%)</title><rect x="52.0383%" y="197" width="0.1031%" height="15" fill="rgb(227,97,0)" fg:x="22709" fg:w="45"/><text x="52.2883%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.05%)</title><rect x="52.1437%" y="181" width="0.0481%" height="15" fill="rgb(234,150,53)" fg:x="22755" fg:w="21"/><text x="52.3937%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (12 samples, 0.03%)</title><rect x="52.1643%" y="165" width="0.0275%" height="15" fill="rgb(228,201,54)" fg:x="22764" fg:w="12"/><text x="52.4143%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (10 samples, 0.02%)</title><rect x="52.1689%" y="149" width="0.0229%" height="15" fill="rgb(222,22,37)" fg:x="22766" fg:w="10"/><text x="52.4189%" y="159.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_types::services::block_importer::ImportResult&gt; (73 samples, 0.17%)</title><rect x="52.0269%" y="213" width="0.1673%" height="15" fill="rgb(237,53,32)" fg:x="22704" fg:w="73"/><text x="52.2769%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.05%)</title><rect x="52.1414%" y="197" width="0.0527%" height="15" fill="rgb(233,25,53)" fg:x="22754" fg:w="23"/><text x="52.3914%" y="207.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (79 samples, 0.18%)</title><rect x="52.0154%" y="341" width="0.1810%" height="15" fill="rgb(210,40,34)" fg:x="22699" fg:w="79"/><text x="52.2654%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt; (79 samples, 0.18%)</title><rect x="52.0154%" y="325" width="0.1810%" height="15" fill="rgb(241,220,44)" fg:x="22699" fg:w="79"/><text x="52.2654%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;fuel_core_services::service::run&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (79 samples, 0.18%)</title><rect x="52.0154%" y="309" width="0.1810%" height="15" fill="rgb(235,28,35)" fg:x="22699" fg:w="79"/><text x="52.2654%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::graphql_api::worker_service::Task&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt; (79 samples, 0.18%)</title><rect x="52.0154%" y="293" width="0.1810%" height="15" fill="rgb(210,56,17)" fg:x="22699" fg:w="79"/><text x="52.2654%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::stream::filter_map::FilterMap&lt;tokio_stream::wrappers::broadcast::BroadcastStream&lt;fuel_core_importer::ImporterResult&gt;,futures_util::future::ready::Ready&lt;core::option::Option&lt;fuel_core_importer::ImporterResult&gt;&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;&gt; (75 samples, 0.17%)</title><rect x="52.0246%" y="277" width="0.1719%" height="15" fill="rgb(224,130,29)" fg:x="22703" fg:w="75"/><text x="52.2746%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::sync::broadcast::Receiver&lt;fuel_core_importer::ImporterResult&gt;&gt; (74 samples, 0.17%)</title><rect x="52.0269%" y="261" width="0.1696%" height="15" fill="rgb(235,212,8)" fg:x="22704" fg:w="74"/><text x="52.2769%" y="271.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (74 samples, 0.17%)</title><rect x="52.0269%" y="245" width="0.1696%" height="15" fill="rgb(223,33,50)" fg:x="22704" fg:w="74"/><text x="52.2769%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_importer::importer::Awaiter&gt; (74 samples, 0.17%)</title><rect x="52.0269%" y="229" width="0.1696%" height="15" fill="rgb(219,149,13)" fg:x="22704" fg:w="74"/><text x="52.2769%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (90 samples, 0.21%)</title><rect x="51.9948%" y="421" width="0.2062%" height="15" fill="rgb(250,156,29)" fg:x="22690" fg:w="90"/><text x="52.2448%" y="431.50"></text></g><g><title>block_verifier`&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (90 samples, 0.21%)</title><rect x="51.9948%" y="405" width="0.2062%" height="15" fill="rgb(216,193,19)" fg:x="22690" fg:w="90"/><text x="52.2448%" y="415.50"></text></g><g><title>block_verifier`tokio::runtime::scheduler::current_thread::shutdown2 (90 samples, 0.21%)</title><rect x="51.9948%" y="389" width="0.2062%" height="15" fill="rgb(216,135,14)" fg:x="22690" fg:w="90"/><text x="52.2448%" y="399.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::shutdown (90 samples, 0.21%)</title><rect x="51.9948%" y="373" width="0.2062%" height="15" fill="rgb(241,47,5)" fg:x="22690" fg:w="90"/><text x="52.2448%" y="383.50"></text></g><g><title>block_verifier`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (90 samples, 0.21%)</title><rect x="51.9948%" y="357" width="0.2062%" height="15" fill="rgb(233,42,35)" fg:x="22690" fg:w="90"/><text x="52.2448%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;TxPool,BlockImporter,OnChain,OffChain&gt; as fuel_core_services::service::RunnableService&gt;::into_task::_{{closure}} (6 samples, 0.01%)</title><rect x="52.2079%" y="373" width="0.0137%" height="15" fill="rgb(231,13,6)" fg:x="22783" fg:w="6"/><text x="52.4579%" y="383.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10 samples, 0.02%)</title><rect x="52.2079%" y="421" width="0.0229%" height="15" fill="rgb(207,181,40)" fg:x="22783" fg:w="10"/><text x="52.4579%" y="431.50"></text></g><g><title>block_verifier`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="52.2079%" y="405" width="0.0229%" height="15" fill="rgb(254,173,49)" fg:x="22783" fg:w="10"/><text x="52.4579%" y="415.50"></text></g><g><title>block_verifier`fuel_core_services::service::initialize_loop::_{{closure}} (10 samples, 0.02%)</title><rect x="52.2079%" y="389" width="0.0229%" height="15" fill="rgb(221,1,38)" fg:x="22783" fg:w="10"/><text x="52.4579%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`read (390 samples, 0.89%)</title><rect x="52.2308%" y="421" width="0.8937%" height="15" fill="rgb(206,124,46)" fg:x="22793" fg:w="390"/><text x="52.4808%" y="431.50"></text></g><g><title>block_verifier`block_verifier::main (23,130 samples, 53.00%)</title><rect x="0.1398%" y="437" width="53.0030%" height="15" fill="rgb(249,21,11)" fg:x="61" fg:w="23130"/><text x="0.3898%" y="447.50">block_verifier`block_verifier::main</text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="53.1245%" y="421" width="0.0183%" height="15" fill="rgb(222,201,40)" fg:x="23183" fg:w="8"/><text x="53.3745%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`read (9,194 samples, 21.07%)</title><rect x="53.1428%" y="437" width="21.0683%" height="15" fill="rgb(235,61,29)" fg:x="23191" fg:w="9194"/><text x="53.3928%" y="447.50">libsystem_kernel.dylib`read</text></g><g><title>block_verifier`main (32,337 samples, 74.10%)</title><rect x="0.1169%" y="501" width="74.1011%" height="15" fill="rgb(219,207,3)" fg:x="51" fg:w="32337"/><text x="0.3669%" y="511.50">block_verifier`main</text></g><g><title>block_verifier`std::rt::lang_start_internal (32,337 samples, 74.10%)</title><rect x="0.1169%" y="485" width="74.1011%" height="15" fill="rgb(222,56,46)" fg:x="51" fg:w="32337"/><text x="0.3669%" y="495.50">block_verifier`std::rt::lang_start_internal</text></g><g><title>block_verifier`std::rt::lang_start::_{{closure}} (32,337 samples, 74.10%)</title><rect x="0.1169%" y="469" width="74.1011%" height="15" fill="rgb(239,76,54)" fg:x="51" fg:w="32337"/><text x="0.3669%" y="479.50">block_verifier`std::rt::lang_start::_{{closure}}</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (32,337 samples, 74.10%)</title><rect x="0.1169%" y="453" width="74.1011%" height="15" fill="rgb(231,124,27)" fg:x="51" fg:w="32337"/><text x="0.3669%" y="463.50">block_verifier`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>dyld`start (32,339 samples, 74.11%)</title><rect x="0.1169%" y="517" width="74.1057%" height="15" fill="rgb(249,195,6)" fg:x="51" fg:w="32339"/><text x="0.3669%" y="527.50">dyld`start</text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="74.2432%" y="309" width="0.0115%" height="15" fill="rgb(237,174,47)" fg:x="32399" fg:w="5"/><text x="74.4932%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (5 samples, 0.01%)</title><rect x="74.2913%" y="293" width="0.0115%" height="15" fill="rgb(206,201,31)" fg:x="32420" fg:w="5"/><text x="74.5413%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (5 samples, 0.01%)</title><rect x="74.3853%" y="277" width="0.0115%" height="15" fill="rgb(231,57,52)" fg:x="32461" fg:w="5"/><text x="74.6353%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="74.3968%" y="277" width="0.0137%" height="15" fill="rgb(248,177,22)" fg:x="32466" fg:w="6"/><text x="74.6468%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (16 samples, 0.04%)</title><rect x="74.4105%" y="277" width="0.0367%" height="15" fill="rgb(215,211,37)" fg:x="32472" fg:w="16"/><text x="74.6605%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (5 samples, 0.01%)</title><rect x="74.4472%" y="277" width="0.0115%" height="15" fill="rgb(241,128,51)" fg:x="32488" fg:w="5"/><text x="74.6972%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (7 samples, 0.02%)</title><rect x="74.4586%" y="277" width="0.0160%" height="15" fill="rgb(227,165,31)" fg:x="32493" fg:w="7"/><text x="74.7086%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (100 samples, 0.23%)</title><rect x="74.2547%" y="309" width="0.2292%" height="15" fill="rgb(228,167,24)" fg:x="32404" fg:w="100"/><text x="74.5047%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (79 samples, 0.18%)</title><rect x="74.3028%" y="293" width="0.1810%" height="15" fill="rgb(228,143,12)" fg:x="32425" fg:w="79"/><text x="74.5528%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (111 samples, 0.25%)</title><rect x="74.2386%" y="325" width="0.2544%" height="15" fill="rgb(249,149,8)" fg:x="32397" fg:w="111"/><text x="74.4886%" y="335.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::EndSection(rocksdb::ConfigOptions const&amp;, rocksdb::OptionSection, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="74.4953%" y="117" width="0.0115%" height="15" fill="rgb(243,35,44)" fg:x="32509" fg:w="5"/><text x="74.7453%" y="127.50"></text></g><g><title>block_verifier`rocksdb::GetColumnFamilyOptionsFromMap(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="74.4953%" y="101" width="0.0115%" height="15" fill="rgb(246,89,9)" fg:x="32509" fg:w="5"/><text x="74.7453%" y="111.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableCFOptions::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (5 samples, 0.01%)</title><rect x="74.4953%" y="85" width="0.0115%" height="15" fill="rgb(233,213,13)" fg:x="32509" fg:w="5"/><text x="74.7453%" y="95.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (5 samples, 0.01%)</title><rect x="74.4953%" y="69" width="0.0115%" height="15" fill="rgb(233,141,41)" fg:x="32509" fg:w="5"/><text x="74.7453%" y="79.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="74.4953%" y="53" width="0.0115%" height="15" fill="rgb(239,167,4)" fg:x="32509" fg:w="5"/><text x="74.7453%" y="63.50"></text></g><g><title>block_verifier`fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt;::store_modifications_history (8 samples, 0.02%)</title><rect x="74.4930%" y="325" width="0.0183%" height="15" fill="rgb(209,217,16)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="335.50"></text></g><g><title>block_verifier`fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt;::is_migration_in_progress (8 samples, 0.02%)</title><rect x="74.4930%" y="309" width="0.0183%" height="15" fill="rgb(219,88,35)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::_iter_store (8 samples, 0.02%)</title><rect x="74.4930%" y="293" width="0.0183%" height="15" fill="rgb(220,193,23)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="303.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::iterator (8 samples, 0.02%)</title><rect x="74.4930%" y="277" width="0.0183%" height="15" fill="rgb(230,90,52)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="287.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (8 samples, 0.02%)</title><rect x="74.4930%" y="261" width="0.0183%" height="15" fill="rgb(252,106,19)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="271.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (8 samples, 0.02%)</title><rect x="74.4930%" y="245" width="0.0183%" height="15" fill="rgb(206,74,20)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="255.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (8 samples, 0.02%)</title><rect x="74.4930%" y="229" width="0.0183%" height="15" fill="rgb(230,138,44)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.02%)</title><rect x="74.4930%" y="213" width="0.0183%" height="15" fill="rgb(235,182,43)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="223.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (8 samples, 0.02%)</title><rect x="74.4930%" y="197" width="0.0183%" height="15" fill="rgb(242,16,51)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="207.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.02%)</title><rect x="74.4930%" y="181" width="0.0183%" height="15" fill="rgb(248,9,4)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="191.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.02%)</title><rect x="74.4930%" y="165" width="0.0183%" height="15" fill="rgb(210,31,22)" fg:x="32508" fg:w="8"/><text x="74.7430%" y="175.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7 samples, 0.02%)</title><rect x="74.4953%" y="149" width="0.0160%" height="15" fill="rgb(239,54,39)" fg:x="32509" fg:w="7"/><text x="74.7453%" y="159.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7 samples, 0.02%)</title><rect x="74.4953%" y="133" width="0.0160%" height="15" fill="rgb(230,99,41)" fg:x="32509" fg:w="7"/><text x="74.7453%" y="143.50"></text></g><g><title>block_verifier`rocksdb::TableFactory::CreateFromString(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::shared_ptr (5 samples, 0.01%)</title><rect x="74.5320%" y="37" width="0.0115%" height="15" fill="rgb(253,106,12)" fg:x="32525" fg:w="5"/><text x="74.7820%" y="47.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureCustomizableOption(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, rocksdb::OptionTypeInfo const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="74.5320%" y="69" width="0.0137%" height="15" fill="rgb(213,46,41)" fg:x="32525" fg:w="6"/><text x="74.7820%" y="79.50"></text></g><g><title>block_verifier`rocksdb::OptionTypeInfo::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="74.5320%" y="53" width="0.0137%" height="15" fill="rgb(215,133,35)" fg:x="32525" fg:w="6"/><text x="74.7820%" y="63.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.03%)</title><rect x="74.5320%" y="101" width="0.0275%" height="15" fill="rgb(213,28,5)" fg:x="32525" fg:w="12"/><text x="74.7820%" y="111.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureSomeOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, rocksdb::OptionTypeInfo, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, rocksdb::OptionTypeInfo&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.03%)</title><rect x="74.5320%" y="85" width="0.0275%" height="15" fill="rgb(215,77,49)" fg:x="32525" fg:w="12"/><text x="74.7820%" y="95.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::EndSection(rocksdb::ConfigOptions const&amp;, rocksdb::OptionSection, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (13 samples, 0.03%)</title><rect x="74.5320%" y="165" width="0.0298%" height="15" fill="rgb(248,100,22)" fg:x="32525" fg:w="13"/><text x="74.7820%" y="175.50"></text></g><g><title>block_verifier`rocksdb::GetColumnFamilyOptionsFromMap(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (13 samples, 0.03%)</title><rect x="74.5320%" y="149" width="0.0298%" height="15" fill="rgb(208,67,9)" fg:x="32525" fg:w="13"/><text x="74.7820%" y="159.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableCFOptions::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (13 samples, 0.03%)</title><rect x="74.5320%" y="133" width="0.0298%" height="15" fill="rgb(219,133,21)" fg:x="32525" fg:w="13"/><text x="74.7820%" y="143.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (13 samples, 0.03%)</title><rect x="74.5320%" y="117" width="0.0298%" height="15" fill="rgb(246,46,29)" fg:x="32525" fg:w="13"/><text x="74.7820%" y="127.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.04%)</title><rect x="74.5320%" y="181" width="0.0367%" height="15" fill="rgb(246,185,52)" fg:x="32525" fg:w="16"/><text x="74.7820%" y="191.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (24 samples, 0.05%)</title><rect x="74.5205%" y="293" width="0.0550%" height="15" fill="rgb(252,136,11)" fg:x="32520" fg:w="24"/><text x="74.7705%" y="303.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (24 samples, 0.05%)</title><rect x="74.5205%" y="277" width="0.0550%" height="15" fill="rgb(219,138,53)" fg:x="32520" fg:w="24"/><text x="74.7705%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (24 samples, 0.05%)</title><rect x="74.5205%" y="261" width="0.0550%" height="15" fill="rgb(211,51,23)" fg:x="32520" fg:w="24"/><text x="74.7705%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (22 samples, 0.05%)</title><rect x="74.5251%" y="245" width="0.0504%" height="15" fill="rgb(247,221,28)" fg:x="32522" fg:w="22"/><text x="74.7751%" y="255.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (22 samples, 0.05%)</title><rect x="74.5251%" y="229" width="0.0504%" height="15" fill="rgb(251,222,45)" fg:x="32522" fg:w="22"/><text x="74.7751%" y="239.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (22 samples, 0.05%)</title><rect x="74.5251%" y="213" width="0.0504%" height="15" fill="rgb(217,162,53)" fg:x="32522" fg:w="22"/><text x="74.7751%" y="223.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.04%)</title><rect x="74.5320%" y="197" width="0.0435%" height="15" fill="rgb(229,93,14)" fg:x="32525" fg:w="19"/><text x="74.7820%" y="207.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (25 samples, 0.06%)</title><rect x="74.5205%" y="309" width="0.0573%" height="15" fill="rgb(209,67,49)" fg:x="32520" fg:w="25"/><text x="74.7705%" y="319.50"></text></g><g><title>block_verifier`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (9 samples, 0.02%)</title><rect x="74.5778%" y="197" width="0.0206%" height="15" fill="rgb(213,87,29)" fg:x="32545" fg:w="9"/><text x="74.8278%" y="207.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Append (20 samples, 0.05%)</title><rect x="74.6007%" y="181" width="0.0458%" height="15" fill="rgb(205,151,52)" fg:x="32555" fg:w="20"/><text x="74.8507%" y="191.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Flush (20 samples, 0.05%)</title><rect x="74.6007%" y="165" width="0.0458%" height="15" fill="rgb(253,215,39)" fg:x="32555" fg:w="20"/><text x="74.8507%" y="175.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::WriteBuffered (20 samples, 0.05%)</title><rect x="74.6007%" y="149" width="0.0458%" height="15" fill="rgb(221,220,41)" fg:x="32555" fg:w="20"/><text x="74.8507%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`write (20 samples, 0.05%)</title><rect x="74.6007%" y="133" width="0.0458%" height="15" fill="rgb(218,133,21)" fg:x="32555" fg:w="20"/><text x="74.8507%" y="143.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (31 samples, 0.07%)</title><rect x="74.5778%" y="245" width="0.0710%" height="15" fill="rgb(221,193,43)" fg:x="32545" fg:w="31"/><text x="74.8278%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (31 samples, 0.07%)</title><rect x="74.5778%" y="229" width="0.0710%" height="15" fill="rgb(240,128,52)" fg:x="32545" fg:w="31"/><text x="74.8278%" y="239.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (31 samples, 0.07%)</title><rect x="74.5778%" y="213" width="0.0710%" height="15" fill="rgb(253,114,12)" fg:x="32545" fg:w="31"/><text x="74.8278%" y="223.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::EmitPhysicalRecord (21 samples, 0.05%)</title><rect x="74.6007%" y="197" width="0.0481%" height="15" fill="rgb(215,223,47)" fg:x="32555" fg:w="21"/><text x="74.8507%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.03%)</title><rect x="74.7519%" y="133" width="0.0344%" height="15" fill="rgb(248,225,23)" fg:x="32621" fg:w="15"/><text x="75.0019%" y="143.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (57 samples, 0.13%)</title><rect x="74.6649%" y="165" width="0.1306%" height="15" fill="rgb(250,108,0)" fg:x="32583" fg:w="57"/><text x="74.9149%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (29 samples, 0.07%)</title><rect x="74.7290%" y="149" width="0.0665%" height="15" fill="rgb(228,208,7)" fg:x="32611" fg:w="29"/><text x="74.9790%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Allocate (5 samples, 0.01%)</title><rect x="74.7955%" y="165" width="0.0115%" height="15" fill="rgb(244,45,10)" fg:x="32640" fg:w="5"/><text x="75.0455%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (67 samples, 0.15%)</title><rect x="74.6580%" y="181" width="0.1535%" height="15" fill="rgb(207,125,25)" fg:x="32580" fg:w="67"/><text x="74.9080%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteCF (68 samples, 0.16%)</title><rect x="74.6580%" y="213" width="0.1558%" height="15" fill="rgb(210,195,18)" fg:x="32580" fg:w="68"/><text x="74.9080%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (68 samples, 0.16%)</title><rect x="74.6580%" y="197" width="0.1558%" height="15" fill="rgb(249,80,12)" fg:x="32580" fg:w="68"/><text x="74.9080%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.03%)</title><rect x="74.8757%" y="133" width="0.0298%" height="15" fill="rgb(221,65,9)" fg:x="32675" fg:w="13"/><text x="75.1257%" y="143.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (37 samples, 0.08%)</title><rect x="74.8276%" y="165" width="0.0848%" height="15" fill="rgb(235,49,36)" fg:x="32654" fg:w="37"/><text x="75.0776%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (21 samples, 0.05%)</title><rect x="74.8642%" y="149" width="0.0481%" height="15" fill="rgb(225,32,20)" fg:x="32670" fg:w="21"/><text x="75.1142%" y="159.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (43 samples, 0.10%)</title><rect x="74.8230%" y="181" width="0.0985%" height="15" fill="rgb(215,141,46)" fg:x="32652" fg:w="43"/><text x="75.0730%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (61 samples, 0.14%)</title><rect x="74.8138%" y="213" width="0.1398%" height="15" fill="rgb(250,160,47)" fg:x="32648" fg:w="61"/><text x="75.0638%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (61 samples, 0.14%)</title><rect x="74.8138%" y="197" width="0.1398%" height="15" fill="rgb(216,222,40)" fg:x="32648" fg:w="61"/><text x="75.0638%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="74.9215%" y="181" width="0.0321%" height="15" fill="rgb(234,217,39)" fg:x="32695" fg:w="14"/><text x="75.1715%" y="191.50"></text></g><g><title>block_verifier`rocksdb_write (169 samples, 0.39%)</title><rect x="74.5778%" y="293" width="0.3873%" height="15" fill="rgb(207,178,40)" fg:x="32545" fg:w="169"/><text x="74.8278%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (169 samples, 0.39%)</title><rect x="74.5778%" y="277" width="0.3873%" height="15" fill="rgb(221,136,13)" fg:x="32545" fg:w="169"/><text x="74.8278%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (169 samples, 0.39%)</title><rect x="74.5778%" y="261" width="0.3873%" height="15" fill="rgb(249,199,10)" fg:x="32545" fg:w="169"/><text x="74.8278%" y="271.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (138 samples, 0.32%)</title><rect x="74.6488%" y="245" width="0.3162%" height="15" fill="rgb(249,222,13)" fg:x="32576" fg:w="138"/><text x="74.8988%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (136 samples, 0.31%)</title><rect x="74.6534%" y="229" width="0.3116%" height="15" fill="rgb(244,185,38)" fg:x="32578" fg:w="136"/><text x="74.9034%" y="239.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (171 samples, 0.39%)</title><rect x="74.5778%" y="309" width="0.3919%" height="15" fill="rgb(236,202,9)" fg:x="32545" fg:w="171"/><text x="74.8278%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Delete (6 samples, 0.01%)</title><rect x="74.9696%" y="293" width="0.0137%" height="15" fill="rgb(250,229,37)" fg:x="32716" fg:w="6"/><text x="75.2196%" y="303.50"></text></g><g><title>block_verifier`rocksdb_writebatch_delete_cf (7 samples, 0.02%)</title><rect x="74.9696%" y="309" width="0.0160%" height="15" fill="rgb(206,174,23)" fg:x="32716" fg:w="7"/><text x="75.2196%" y="319.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (15 samples, 0.03%)</title><rect x="75.0155%" y="261" width="0.0344%" height="15" fill="rgb(211,33,43)" fg:x="32736" fg:w="15"/><text x="75.2655%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="75.0338%" y="245" width="0.0160%" height="15" fill="rgb(245,58,50)" fg:x="32744" fg:w="7"/><text x="75.2838%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (34 samples, 0.08%)</title><rect x="75.0086%" y="277" width="0.0779%" height="15" fill="rgb(244,68,36)" fg:x="32733" fg:w="34"/><text x="75.2586%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.04%)</title><rect x="75.0498%" y="261" width="0.0367%" height="15" fill="rgb(232,229,15)" fg:x="32751" fg:w="16"/><text x="75.2998%" y="271.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (252 samples, 0.58%)</title><rect x="74.5113%" y="325" width="0.5775%" height="15" fill="rgb(254,30,23)" fg:x="32516" fg:w="252"/><text x="74.7613%" y="335.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (45 samples, 0.10%)</title><rect x="74.9857%" y="309" width="0.1031%" height="15" fill="rgb(235,160,14)" fg:x="32723" fg:w="45"/><text x="75.2357%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (45 samples, 0.10%)</title><rect x="74.9857%" y="293" width="0.1031%" height="15" fill="rgb(212,155,44)" fg:x="32723" fg:w="45"/><text x="75.2357%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.01%)</title><rect x="75.0888%" y="325" width="0.0115%" height="15" fill="rgb(226,2,50)" fg:x="32768" fg:w="5"/><text x="75.3388%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::commit (378 samples, 0.87%)</title><rect x="74.2386%" y="373" width="0.8662%" height="15" fill="rgb(234,177,6)" fg:x="32397" fg:w="378"/><text x="74.4886%" y="383.50"></text></g><g><title>block_verifier`fuel_core::database::_&lt;impl fuel_core_storage::transactional::Modifiable for fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;&gt;::commit_changes (378 samples, 0.87%)</title><rect x="74.2386%" y="357" width="0.8662%" height="15" fill="rgb(217,24,9)" fg:x="32397" fg:w="378"/><text x="74.4886%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (378 samples, 0.87%)</title><rect x="74.2386%" y="341" width="0.8662%" height="15" fill="rgb(220,13,46)" fg:x="32397" fg:w="378"/><text x="74.4886%" y="351.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.02%)</title><rect x="75.1644%" y="341" width="0.0160%" height="15" fill="rgb(239,221,27)" fg:x="32801" fg:w="7"/><text x="75.4144%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="75.1667%" y="325" width="0.0137%" height="15" fill="rgb(222,198,25)" fg:x="32802" fg:w="6"/><text x="75.4167%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="75.1690%" y="309" width="0.0115%" height="15" fill="rgb(211,99,13)" fg:x="32803" fg:w="5"/><text x="75.4190%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.01%)</title><rect x="75.1690%" y="293" width="0.0115%" height="15" fill="rgb(232,111,31)" fg:x="32803" fg:w="5"/><text x="75.4190%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (13 samples, 0.03%)</title><rect x="75.1827%" y="293" width="0.0298%" height="15" fill="rgb(245,82,37)" fg:x="32809" fg:w="13"/><text x="75.4327%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (12 samples, 0.03%)</title><rect x="75.1850%" y="277" width="0.0275%" height="15" fill="rgb(227,149,46)" fg:x="32810" fg:w="12"/><text x="75.4350%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (14 samples, 0.03%)</title><rect x="75.1827%" y="341" width="0.0321%" height="15" fill="rgb(218,36,50)" fg:x="32809" fg:w="14"/><text x="75.4327%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (14 samples, 0.03%)</title><rect x="75.1827%" y="325" width="0.0321%" height="15" fill="rgb(226,80,48)" fg:x="32809" fg:w="14"/><text x="75.4327%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (14 samples, 0.03%)</title><rect x="75.1827%" y="309" width="0.0321%" height="15" fill="rgb(238,224,15)" fg:x="32809" fg:w="14"/><text x="75.4327%" y="319.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (50 samples, 0.11%)</title><rect x="75.1140%" y="357" width="0.1146%" height="15" fill="rgb(241,136,10)" fg:x="32779" fg:w="50"/><text x="75.3640%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (22 samples, 0.05%)</title><rect x="75.2309%" y="341" width="0.0504%" height="15" fill="rgb(208,32,45)" fg:x="32830" fg:w="22"/><text x="75.4809%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (33 samples, 0.08%)</title><rect x="75.2286%" y="357" width="0.0756%" height="15" fill="rgb(207,135,9)" fg:x="32829" fg:w="33"/><text x="75.4786%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="75.2905%" y="341" width="0.0137%" height="15" fill="rgb(206,86,44)" fg:x="32856" fg:w="6"/><text x="75.5405%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="75.3225%" y="277" width="0.0115%" height="15" fill="rgb(245,177,15)" fg:x="32870" fg:w="5"/><text x="75.5725%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.02%)</title><rect x="75.3179%" y="293" width="0.0206%" height="15" fill="rgb(206,64,50)" fg:x="32868" fg:w="9"/><text x="75.5679%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.03%)</title><rect x="75.3157%" y="309" width="0.0252%" height="15" fill="rgb(234,36,40)" fg:x="32867" fg:w="11"/><text x="75.5657%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (16 samples, 0.04%)</title><rect x="75.3111%" y="341" width="0.0367%" height="15" fill="rgb(213,64,8)" fg:x="32865" fg:w="16"/><text x="75.5611%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (15 samples, 0.03%)</title><rect x="75.3134%" y="325" width="0.0344%" height="15" fill="rgb(210,75,36)" fg:x="32866" fg:w="15"/><text x="75.5634%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (17 samples, 0.04%)</title><rect x="75.3111%" y="357" width="0.0390%" height="15" fill="rgb(229,88,21)" fg:x="32865" fg:w="17"/><text x="75.5611%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="75.3615%" y="357" width="0.0137%" height="15" fill="rgb(252,204,47)" fg:x="32887" fg:w="6"/><text x="75.6115%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::store_new_block (126 samples, 0.29%)</title><rect x="75.1048%" y="373" width="0.2887%" height="15" fill="rgb(208,77,27)" fg:x="32775" fg:w="126"/><text x="75.3548%" y="383.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="75.4119%" y="309" width="0.0252%" height="15" fill="rgb(221,76,26)" fg:x="32909" fg:w="11"/><text x="75.6619%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="75.4371%" y="309" width="0.0115%" height="15" fill="rgb(225,139,18)" fg:x="32920" fg:w="5"/><text x="75.6871%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (26 samples, 0.06%)</title><rect x="75.4073%" y="325" width="0.0596%" height="15" fill="rgb(230,137,11)" fg:x="32907" fg:w="26"/><text x="75.6573%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="75.4554%" y="309" width="0.0115%" height="15" fill="rgb(212,28,1)" fg:x="32928" fg:w="5"/><text x="75.7054%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.07%)</title><rect x="75.4050%" y="357" width="0.0687%" height="15" fill="rgb(248,164,17)" fg:x="32906" fg:w="30"/><text x="75.6550%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as core::clone::Clone&gt;::clone (30 samples, 0.07%)</title><rect x="75.4050%" y="341" width="0.0687%" height="15" fill="rgb(222,171,42)" fg:x="32906" fg:w="30"/><text x="75.6550%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_core_executor::ports::TransactionExt&gt;::max_gas (12 samples, 0.03%)</title><rect x="75.4990%" y="325" width="0.0275%" height="15" fill="rgb(243,84,45)" fg:x="32947" fg:w="12"/><text x="75.7490%" y="335.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="75.5265%" y="325" width="0.0183%" height="15" fill="rgb(252,49,23)" fg:x="32959" fg:w="8"/><text x="75.7765%" y="335.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (9 samples, 0.02%)</title><rect x="75.5448%" y="325" width="0.0206%" height="15" fill="rgb(215,19,7)" fg:x="32967" fg:w="9"/><text x="75.7948%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="75.5517%" y="309" width="0.0137%" height="15" fill="rgb(238,81,41)" fg:x="32970" fg:w="6"/><text x="75.8017%" y="319.50"></text></g><g><title>block_verifier`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="75.5654%" y="325" width="0.0137%" height="15" fill="rgb(210,199,37)" fg:x="32976" fg:w="6"/><text x="75.8154%" y="335.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::Bucket::add (7 samples, 0.02%)</title><rect x="75.5792%" y="325" width="0.0160%" height="15" fill="rgb(244,192,49)" fg:x="32982" fg:w="7"/><text x="75.8292%" y="335.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.06%)</title><rect x="75.5952%" y="325" width="0.0642%" height="15" fill="rgb(226,211,11)" fg:x="32989" fg:w="28"/><text x="75.8452%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="75.6273%" y="309" width="0.0321%" height="15" fill="rgb(236,162,54)" fg:x="33003" fg:w="14"/><text x="75.8773%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="75.6594%" y="325" width="0.0115%" height="15" fill="rgb(220,229,9)" fg:x="33017" fg:w="5"/><text x="75.9094%" y="335.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::process (88 samples, 0.20%)</title><rect x="75.4852%" y="341" width="0.2017%" height="15" fill="rgb(250,87,22)" fg:x="32941" fg:w="88"/><text x="75.7352%" y="351.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="75.7167%" y="309" width="0.0115%" height="15" fill="rgb(239,43,17)" fg:x="33042" fg:w="5"/><text x="75.9667%" y="319.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="75.7144%" y="325" width="0.0367%" height="15" fill="rgb(231,177,25)" fg:x="33041" fg:w="16"/><text x="75.9644%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="75.7373%" y="309" width="0.0137%" height="15" fill="rgb(219,179,1)" fg:x="33051" fg:w="6"/><text x="75.9873%" y="319.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::split_equally (48 samples, 0.11%)</title><rect x="75.6869%" y="341" width="0.1100%" height="15" fill="rgb(238,219,53)" fg:x="33029" fg:w="48"/><text x="75.9369%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="75.7648%" y="325" width="0.0321%" height="15" fill="rgb(232,167,36)" fg:x="33063" fg:w="14"/><text x="76.0148%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.03%)</title><rect x="75.8794%" y="309" width="0.0298%" height="15" fill="rgb(244,19,51)" fg:x="33113" fg:w="13"/><text x="76.1294%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="75.8908%" y="293" width="0.0183%" height="15" fill="rgb(224,6,22)" fg:x="33118" fg:w="8"/><text x="76.1408%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="75.8977%" y="277" width="0.0115%" height="15" fill="rgb(224,145,5)" fg:x="33121" fg:w="5"/><text x="76.1477%" y="287.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.02%)</title><rect x="75.9092%" y="309" width="0.0160%" height="15" fill="rgb(234,130,49)" fg:x="33126" fg:w="7"/><text x="76.1592%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt; as fuel_core_storage::transactional::Modifiable&gt;::commit_changes (60 samples, 0.14%)</title><rect x="75.7969%" y="325" width="0.1375%" height="15" fill="rgb(254,6,2)" fg:x="33077" fg:w="60"/><text x="76.0469%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (5 samples, 0.01%)</title><rect x="75.9665%" y="293" width="0.0115%" height="15" fill="rgb(208,96,46)" fg:x="33151" fg:w="5"/><text x="76.2165%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (9 samples, 0.02%)</title><rect x="76.0237%" y="277" width="0.0206%" height="15" fill="rgb(239,3,39)" fg:x="33176" fg:w="9"/><text x="76.2737%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="76.0444%" y="277" width="0.0160%" height="15" fill="rgb(233,210,1)" fg:x="33185" fg:w="7"/><text x="76.2944%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (65 samples, 0.15%)</title><rect x="75.9481%" y="309" width="0.1489%" height="15" fill="rgb(244,137,37)" fg:x="33143" fg:w="65"/><text x="76.1981%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (52 samples, 0.12%)</title><rect x="75.9779%" y="293" width="0.1192%" height="15" fill="rgb(240,136,2)" fg:x="33156" fg:w="52"/><text x="76.2279%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (8 samples, 0.02%)</title><rect x="76.0787%" y="277" width="0.0183%" height="15" fill="rgb(239,18,37)" fg:x="33200" fg:w="8"/><text x="76.3287%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (73 samples, 0.17%)</title><rect x="75.9435%" y="325" width="0.1673%" height="15" fill="rgb(218,185,22)" fg:x="33141" fg:w="73"/><text x="76.1935%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="76.0994%" y="309" width="0.0115%" height="15" fill="rgb(225,218,4)" fg:x="33209" fg:w="5"/><text x="76.3494%" y="319.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::PartialBlockHeader::generate (37 samples, 0.08%)</title><rect x="76.1108%" y="325" width="0.0848%" height="15" fill="rgb(230,182,32)" fg:x="33214" fg:w="37"/><text x="76.3608%" y="335.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::generate_txns_root (37 samples, 0.08%)</title><rect x="76.1108%" y="309" width="0.0848%" height="15" fill="rgb(242,56,43)" fg:x="33214" fg:w="37"/><text x="76.3608%" y="319.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (37 samples, 0.08%)</title><rect x="76.1108%" y="293" width="0.0848%" height="15" fill="rgb(233,99,24)" fg:x="33214" fg:w="37"/><text x="76.3608%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (37 samples, 0.08%)</title><rect x="76.1108%" y="277" width="0.0848%" height="15" fill="rgb(234,209,42)" fg:x="33214" fg:w="37"/><text x="76.3608%" y="287.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results (194 samples, 0.44%)</title><rect x="75.7969%" y="341" width="0.4446%" height="15" fill="rgb(227,7,12)" fg:x="33077" fg:w="194"/><text x="76.0469%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.03%)</title><rect x="76.2139%" y="325" width="0.0275%" height="15" fill="rgb(245,203,43)" fg:x="33259" fg:w="12"/><text x="76.4639%" y="335.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da (348 samples, 0.80%)</title><rect x="75.4761%" y="357" width="0.7975%" height="15" fill="rgb(238,205,33)" fg:x="32937" fg:w="348"/><text x="75.7261%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="76.2414%" y="341" width="0.0321%" height="15" fill="rgb(231,56,7)" fg:x="33271" fg:w="14"/><text x="76.4914%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (8 samples, 0.02%)</title><rect x="76.2758%" y="309" width="0.0183%" height="15" fill="rgb(244,186,29)" fg:x="33286" fg:w="8"/><text x="76.5258%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="76.2804%" y="293" width="0.0137%" height="15" fill="rgb(234,111,31)" fg:x="33288" fg:w="6"/><text x="76.5304%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="76.2827%" y="277" width="0.0115%" height="15" fill="rgb(241,149,10)" fg:x="33289" fg:w="5"/><text x="76.5327%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (6 samples, 0.01%)</title><rect x="76.3079%" y="293" width="0.0137%" height="15" fill="rgb(249,206,44)" fg:x="33300" fg:w="6"/><text x="76.5579%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (7 samples, 0.02%)</title><rect x="76.3583%" y="277" width="0.0160%" height="15" fill="rgb(251,153,30)" fg:x="33322" fg:w="7"/><text x="76.6083%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="76.3743%" y="277" width="0.0160%" height="15" fill="rgb(239,152,38)" fg:x="33329" fg:w="7"/><text x="76.6243%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.02%)</title><rect x="76.3904%" y="277" width="0.0160%" height="15" fill="rgb(249,139,47)" fg:x="33336" fg:w="7"/><text x="76.6404%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (56 samples, 0.13%)</title><rect x="76.2941%" y="309" width="0.1283%" height="15" fill="rgb(244,64,35)" fg:x="33294" fg:w="56"/><text x="76.5441%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.10%)</title><rect x="76.3239%" y="293" width="0.0985%" height="15" fill="rgb(216,46,15)" fg:x="33307" fg:w="43"/><text x="76.5739%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (66 samples, 0.15%)</title><rect x="76.2758%" y="325" width="0.1512%" height="15" fill="rgb(250,74,19)" fg:x="33286" fg:w="66"/><text x="76.5258%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;[fuel_tx::transaction::Transaction]&gt; (73 samples, 0.17%)</title><rect x="76.2735%" y="341" width="0.1673%" height="15" fill="rgb(249,42,33)" fg:x="33285" fg:w="73"/><text x="76.5235%" y="351.50"></text></g><g><title>block_verifier`fuel_core_types::services::executor::_&lt;impl fuel_core_types::services::Uncommitted&lt;fuel_core_types::services::executor::ProductionResult,DatabaseTransaction&gt;&gt;::into_validation_result (74 samples, 0.17%)</title><rect x="76.2735%" y="357" width="0.1696%" height="15" fill="rgb(242,149,17)" fg:x="33285" fg:w="74"/><text x="76.5235%" y="367.50"></text></g><g><title>block_verifier`fuel_core::service::adapters::block_importer::_&lt;impl fuel_core_importer::ports::Validator for fuel_core::service::adapters::ExecutorAdapter&gt;::validate (474 samples, 1.09%)</title><rect x="75.4050%" y="373" width="1.0862%" height="15" fill="rgb(244,29,21)" fg:x="32906" fg:w="474"/><text x="75.6550%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.05%)</title><rect x="76.4431%" y="357" width="0.0481%" height="15" fill="rgb(220,130,37)" fg:x="33359" fg:w="21"/><text x="76.6931%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="76.5187%" y="341" width="0.0252%" height="15" fill="rgb(211,67,2)" fg:x="33392" fg:w="11"/><text x="76.7687%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="76.5302%" y="325" width="0.0137%" height="15" fill="rgb(235,68,52)" fg:x="33397" fg:w="6"/><text x="76.7802%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (8 samples, 0.02%)</title><rect x="76.5439%" y="341" width="0.0183%" height="15" fill="rgb(246,142,3)" fg:x="33403" fg:w="8"/><text x="76.7939%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (9 samples, 0.02%)</title><rect x="76.5645%" y="341" width="0.0206%" height="15" fill="rgb(241,25,7)" fg:x="33412" fg:w="9"/><text x="76.8145%" y="351.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (20 samples, 0.05%)</title><rect x="76.5852%" y="341" width="0.0458%" height="15" fill="rgb(242,119,39)" fg:x="33421" fg:w="20"/><text x="76.8352%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (63 samples, 0.14%)</title><rect x="76.5027%" y="357" width="0.1444%" height="15" fill="rgb(241,98,45)" fg:x="33385" fg:w="63"/><text x="76.7527%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="76.6470%" y="357" width="0.0160%" height="15" fill="rgb(254,28,30)" fg:x="33448" fg:w="7"/><text x="76.8970%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="76.6493%" y="341" width="0.0137%" height="15" fill="rgb(241,142,54)" fg:x="33449" fg:w="6"/><text x="76.8993%" y="351.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (167 samples, 0.38%)</title><rect x="76.6631%" y="357" width="0.3827%" height="15" fill="rgb(222,85,15)" fg:x="33455" fg:w="167"/><text x="76.9131%" y="367.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::script::_&lt;impl fuel_tx::transaction::metadata::Cacheable for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::precompute (247 samples, 0.57%)</title><rect x="76.4912%" y="373" width="0.5660%" height="15" fill="rgb(210,85,47)" fg:x="33380" fg:w="247"/><text x="76.7412%" y="383.50"></text></g><g><title>block_verifier`rayon_core::registry::ThreadBuilder::run (1,235 samples, 2.83%)</title><rect x="74.2341%" y="437" width="2.8300%" height="15" fill="rgb(224,206,25)" fg:x="32395" fg:w="1235"/><text x="74.4841%" y="447.50">bl..</text></g><g><title>block_verifier`rayon_core::registry::WorkerThread::wait_until_cold (1,235 samples, 2.83%)</title><rect x="74.2341%" y="421" width="2.8300%" height="15" fill="rgb(243,201,19)" fg:x="32395" fg:w="1235"/><text x="74.4841%" y="431.50">bl..</text></g><g><title>block_verifier`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,235 samples, 2.83%)</title><rect x="74.2341%" y="405" width="2.8300%" height="15" fill="rgb(236,59,4)" fg:x="32395" fg:w="1235"/><text x="74.4841%" y="415.50">bl..</text></g><g><title>block_verifier`rayon_core::scope::scope_fifo::_{{closure}} (1,234 samples, 2.83%)</title><rect x="74.2363%" y="389" width="2.8277%" height="15" fill="rgb(254,179,45)" fg:x="32396" fg:w="1234"/><text x="74.4863%" y="399.50">bl..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.05%)</title><rect x="77.1603%" y="277" width="0.0481%" height="15" fill="rgb(226,14,10)" fg:x="33672" fg:w="21"/><text x="77.4103%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.04%)</title><rect x="77.1672%" y="261" width="0.0412%" height="15" fill="rgb(244,27,41)" fg:x="33675" fg:w="18"/><text x="77.4172%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.03%)</title><rect x="77.1833%" y="245" width="0.0252%" height="15" fill="rgb(235,35,32)" fg:x="33682" fg:w="11"/><text x="77.4333%" y="255.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (41 samples, 0.09%)</title><rect x="77.1191%" y="293" width="0.0940%" height="15" fill="rgb(218,68,31)" fg:x="33654" fg:w="41"/><text x="77.3691%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (57 samples, 0.13%)</title><rect x="77.1031%" y="309" width="0.1306%" height="15" fill="rgb(207,120,37)" fg:x="33647" fg:w="57"/><text x="77.3531%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (59 samples, 0.14%)</title><rect x="77.1008%" y="357" width="0.1352%" height="15" fill="rgb(227,98,0)" fg:x="33646" fg:w="59"/><text x="77.3508%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (59 samples, 0.14%)</title><rect x="77.1008%" y="341" width="0.1352%" height="15" fill="rgb(207,7,3)" fg:x="33646" fg:w="59"/><text x="77.3508%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (59 samples, 0.14%)</title><rect x="77.1008%" y="325" width="0.1352%" height="15" fill="rgb(206,98,19)" fg:x="33646" fg:w="59"/><text x="77.3508%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="77.2543%" y="325" width="0.0115%" height="15" fill="rgb(217,5,26)" fg:x="33713" fg:w="5"/><text x="77.5043%" y="335.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="77.2405%" y="341" width="0.0321%" height="15" fill="rgb(235,190,38)" fg:x="33707" fg:w="14"/><text x="77.4905%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (5 samples, 0.01%)</title><rect x="77.2726%" y="341" width="0.0115%" height="15" fill="rgb(247,86,24)" fg:x="33721" fg:w="5"/><text x="77.5226%" y="351.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (19 samples, 0.04%)</title><rect x="77.2864%" y="341" width="0.0435%" height="15" fill="rgb(205,101,16)" fg:x="33727" fg:w="19"/><text x="77.5364%" y="351.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.11%)</title><rect x="77.2360%" y="357" width="0.1100%" height="15" fill="rgb(246,168,33)" fg:x="33705" fg:w="48"/><text x="77.4860%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (23 samples, 0.05%)</title><rect x="77.3551%" y="341" width="0.0527%" height="15" fill="rgb(231,114,1)" fg:x="33757" fg:w="23"/><text x="77.6051%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="77.4078%" y="341" width="0.0115%" height="15" fill="rgb(207,184,53)" fg:x="33780" fg:w="5"/><text x="77.6578%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (45 samples, 0.10%)</title><rect x="77.3460%" y="357" width="0.1031%" height="15" fill="rgb(224,95,51)" fg:x="33753" fg:w="45"/><text x="77.5960%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.03%)</title><rect x="77.4193%" y="341" width="0.0298%" height="15" fill="rgb(212,188,45)" fg:x="33785" fg:w="13"/><text x="77.6693%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.04%)</title><rect x="77.5316%" y="261" width="0.0412%" height="15" fill="rgb(223,154,38)" fg:x="33834" fg:w="18"/><text x="77.7816%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.03%)</title><rect x="77.5476%" y="245" width="0.0252%" height="15" fill="rgb(251,22,52)" fg:x="33841" fg:w="11"/><text x="77.7976%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.03%)</title><rect x="77.5751%" y="261" width="0.0252%" height="15" fill="rgb(229,209,22)" fg:x="33853" fg:w="11"/><text x="77.8251%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="77.5843%" y="245" width="0.0160%" height="15" fill="rgb(234,138,34)" fg:x="33857" fg:w="7"/><text x="77.8343%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (44 samples, 0.10%)</title><rect x="77.5201%" y="293" width="0.1008%" height="15" fill="rgb(212,95,11)" fg:x="33829" fg:w="44"/><text x="77.7701%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (42 samples, 0.10%)</title><rect x="77.5247%" y="277" width="0.0962%" height="15" fill="rgb(240,179,47)" fg:x="33831" fg:w="42"/><text x="77.7747%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (51 samples, 0.12%)</title><rect x="77.5178%" y="309" width="0.1169%" height="15" fill="rgb(240,163,11)" fg:x="33828" fg:w="51"/><text x="77.7678%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (55 samples, 0.13%)</title><rect x="77.5109%" y="325" width="0.1260%" height="15" fill="rgb(236,37,12)" fg:x="33825" fg:w="55"/><text x="77.7609%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (59 samples, 0.14%)</title><rect x="77.5041%" y="341" width="0.1352%" height="15" fill="rgb(232,164,16)" fg:x="33822" fg:w="59"/><text x="77.7541%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="77.6393%" y="341" width="0.0115%" height="15" fill="rgb(244,205,15)" fg:x="33881" fg:w="5"/><text x="77.8893%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="77.6507%" y="341" width="0.0137%" height="15" fill="rgb(223,117,47)" fg:x="33886" fg:w="6"/><text x="77.9007%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="77.6645%" y="341" width="0.0137%" height="15" fill="rgb(244,107,35)" fg:x="33892" fg:w="6"/><text x="77.9145%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (99 samples, 0.23%)</title><rect x="77.4537%" y="357" width="0.2269%" height="15" fill="rgb(205,140,8)" fg:x="33800" fg:w="99"/><text x="77.7037%" y="367.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (15 samples, 0.03%)</title><rect x="77.6851%" y="357" width="0.0344%" height="15" fill="rgb(228,84,46)" fg:x="33901" fg:w="15"/><text x="77.9351%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (282 samples, 0.65%)</title><rect x="77.7195%" y="357" width="0.6462%" height="15" fill="rgb(254,188,9)" fg:x="33916" fg:w="282"/><text x="77.9695%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="78.3680%" y="357" width="0.0115%" height="15" fill="rgb(206,112,54)" fg:x="34199" fg:w="5"/><text x="78.6180%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="78.3794%" y="357" width="0.0115%" height="15" fill="rgb(216,84,49)" fg:x="34204" fg:w="5"/><text x="78.6294%" y="367.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results::_{{closure}}::_{{closure}} (582 samples, 1.33%)</title><rect x="77.0641%" y="373" width="1.3337%" height="15" fill="rgb(214,194,35)" fg:x="33630" fg:w="582"/><text x="77.3141%" y="383.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="78.4482%" y="309" width="0.0160%" height="15" fill="rgb(249,28,3)" fg:x="34234" fg:w="7"/><text x="78.6982%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="78.4505%" y="293" width="0.0137%" height="15" fill="rgb(222,56,52)" fg:x="34235" fg:w="6"/><text x="78.7005%" y="303.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="78.4459%" y="325" width="0.0229%" height="15" fill="rgb(245,217,50)" fg:x="34233" fg:w="10"/><text x="78.6959%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_core_executor::ports::TransactionExt&gt;::max_gas (31 samples, 0.07%)</title><rect x="78.4161%" y="341" width="0.0710%" height="15" fill="rgb(213,201,24)" fg:x="34220" fg:w="31"/><text x="78.6661%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="78.4711%" y="325" width="0.0160%" height="15" fill="rgb(248,116,28)" fg:x="34244" fg:w="7"/><text x="78.7211%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="78.4757%" y="309" width="0.0115%" height="15" fill="rgb(219,72,43)" fg:x="34246" fg:w="5"/><text x="78.7257%" y="319.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (8 samples, 0.02%)</title><rect x="78.5490%" y="325" width="0.0183%" height="15" fill="rgb(209,138,14)" fg:x="34278" fg:w="8"/><text x="78.7990%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (10 samples, 0.02%)</title><rect x="78.7071%" y="309" width="0.0229%" height="15" fill="rgb(222,18,33)" fg:x="34347" fg:w="10"/><text x="78.9571%" y="319.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (81 samples, 0.19%)</title><rect x="78.5696%" y="325" width="0.1856%" height="15" fill="rgb(213,199,7)" fg:x="34287" fg:w="81"/><text x="78.8196%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.03%)</title><rect x="78.7300%" y="309" width="0.0252%" height="15" fill="rgb(250,110,10)" fg:x="34357" fg:w="11"/><text x="78.9800%" y="319.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (24 samples, 0.05%)</title><rect x="78.7552%" y="325" width="0.0550%" height="15" fill="rgb(248,123,6)" fg:x="34368" fg:w="24"/><text x="79.0052%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="78.7896%" y="309" width="0.0206%" height="15" fill="rgb(206,91,31)" fg:x="34383" fg:w="9"/><text x="79.0396%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="78.7965%" y="293" width="0.0137%" height="15" fill="rgb(211,154,13)" fg:x="34386" fg:w="6"/><text x="79.0465%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="78.8102%" y="325" width="0.0137%" height="15" fill="rgb(225,148,7)" fg:x="34392" fg:w="6"/><text x="79.0602%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="78.8125%" y="309" width="0.0115%" height="15" fill="rgb(220,160,43)" fg:x="34393" fg:w="5"/><text x="79.0625%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.01%)</title><rect x="78.8125%" y="293" width="0.0115%" height="15" fill="rgb(213,52,39)" fg:x="34393" fg:w="5"/><text x="79.0625%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.01%)</title><rect x="78.8125%" y="277" width="0.0115%" height="15" fill="rgb(243,137,7)" fg:x="34393" fg:w="5"/><text x="79.0625%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (5 samples, 0.01%)</title><rect x="78.8721%" y="277" width="0.0115%" height="15" fill="rgb(230,79,13)" fg:x="34419" fg:w="5"/><text x="79.1221%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::Executable::input_asset_ids (7 samples, 0.02%)</title><rect x="78.8927%" y="261" width="0.0160%" height="15" fill="rgb(247,105,23)" fg:x="34428" fg:w="7"/><text x="79.1427%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="78.8927%" y="245" width="0.0160%" height="15" fill="rgb(223,179,41)" fg:x="34428" fg:w="7"/><text x="79.1427%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="78.8927%" y="229" width="0.0160%" height="15" fill="rgb(218,9,34)" fg:x="34428" fg:w="7"/><text x="79.1427%" y="239.50"></text></g><g><title>block_verifier`core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.04%)</title><rect x="78.8904%" y="277" width="0.0390%" height="15" fill="rgb(222,106,8)" fg:x="34427" fg:w="17"/><text x="79.1404%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="78.9134%" y="261" width="0.0160%" height="15" fill="rgb(211,220,0)" fg:x="34437" fg:w="7"/><text x="79.1634%" y="271.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="78.9340%" y="229" width="0.0115%" height="15" fill="rgb(229,52,16)" fg:x="34446" fg:w="5"/><text x="79.1840%" y="239.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="78.9500%" y="229" width="0.0160%" height="15" fill="rgb(212,155,18)" fg:x="34453" fg:w="7"/><text x="79.2000%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="78.9546%" y="213" width="0.0115%" height="15" fill="rgb(242,21,14)" fg:x="34455" fg:w="5"/><text x="79.2046%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="78.9546%" y="197" width="0.0115%" height="15" fill="rgb(222,19,48)" fg:x="34455" fg:w="5"/><text x="79.2046%" y="207.50"></text></g><g><title>block_verifier`&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="78.9340%" y="245" width="0.0344%" height="15" fill="rgb(232,45,27)" fg:x="34446" fg:w="15"/><text x="79.1840%" y="255.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.05%)</title><rect x="78.9340%" y="261" width="0.0550%" height="15" fill="rgb(249,103,42)" fg:x="34446" fg:w="24"/><text x="79.1840%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="78.9775%" y="245" width="0.0115%" height="15" fill="rgb(246,81,33)" fg:x="34465" fg:w="5"/><text x="79.2275%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::Executable::input_asset_ids_unique (31 samples, 0.07%)</title><rect x="78.9294%" y="277" width="0.0710%" height="15" fill="rgb(252,33,42)" fg:x="34444" fg:w="31"/><text x="79.1794%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (10 samples, 0.02%)</title><rect x="79.0302%" y="261" width="0.0229%" height="15" fill="rgb(209,212,41)" fg:x="34488" fg:w="10"/><text x="79.2802%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="79.0761%" y="213" width="0.0160%" height="15" fill="rgb(207,154,6)" fg:x="34508" fg:w="7"/><text x="79.3261%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.0806%" y="197" width="0.0115%" height="15" fill="rgb(223,64,47)" fg:x="34510" fg:w="5"/><text x="79.3306%" y="207.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.03%)</title><rect x="79.0669%" y="261" width="0.0275%" height="15" fill="rgb(211,161,38)" fg:x="34504" fg:w="12"/><text x="79.3169%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="79.0715%" y="245" width="0.0229%" height="15" fill="rgb(219,138,40)" fg:x="34506" fg:w="10"/><text x="79.3215%" y="255.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (9 samples, 0.02%)</title><rect x="79.0738%" y="229" width="0.0206%" height="15" fill="rgb(241,228,46)" fg:x="34507" fg:w="9"/><text x="79.3238%" y="239.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (48 samples, 0.11%)</title><rect x="79.0004%" y="277" width="0.1100%" height="15" fill="rgb(223,209,38)" fg:x="34475" fg:w="48"/><text x="79.2504%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="79.0967%" y="261" width="0.0137%" height="15" fill="rgb(236,164,45)" fg:x="34517" fg:w="6"/><text x="79.3467%" y="271.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="79.1586%" y="245" width="0.0435%" height="15" fill="rgb(231,15,5)" fg:x="34544" fg:w="19"/><text x="79.4086%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="79.1723%" y="229" width="0.0298%" height="15" fill="rgb(252,35,15)" fg:x="34550" fg:w="13"/><text x="79.4223%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="79.1838%" y="213" width="0.0183%" height="15" fill="rgb(248,181,18)" fg:x="34555" fg:w="8"/><text x="79.4338%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="79.1883%" y="197" width="0.0137%" height="15" fill="rgb(233,39,42)" fg:x="34557" fg:w="6"/><text x="79.4383%" y="207.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (21 samples, 0.05%)</title><rect x="79.2021%" y="245" width="0.0481%" height="15" fill="rgb(238,110,33)" fg:x="34563" fg:w="21"/><text x="79.4521%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (8 samples, 0.02%)</title><rect x="79.2525%" y="229" width="0.0183%" height="15" fill="rgb(233,195,10)" fg:x="34585" fg:w="8"/><text x="79.5025%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="79.2571%" y="213" width="0.0137%" height="15" fill="rgb(254,105,3)" fg:x="34587" fg:w="6"/><text x="79.5071%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="79.2708%" y="229" width="0.0183%" height="15" fill="rgb(221,225,9)" fg:x="34593" fg:w="8"/><text x="79.5208%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="79.2754%" y="213" width="0.0137%" height="15" fill="rgb(224,227,45)" fg:x="34595" fg:w="6"/><text x="79.5254%" y="223.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (17 samples, 0.04%)</title><rect x="79.2525%" y="245" width="0.0390%" height="15" fill="rgb(229,198,43)" fg:x="34585" fg:w="17"/><text x="79.5025%" y="255.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (29 samples, 0.07%)</title><rect x="79.2915%" y="245" width="0.0665%" height="15" fill="rgb(206,209,35)" fg:x="34602" fg:w="29"/><text x="79.5415%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="79.3762%" y="213" width="0.0137%" height="15" fill="rgb(245,195,53)" fg:x="34639" fg:w="6"/><text x="79.6262%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="79.3717%" y="245" width="0.0206%" height="15" fill="rgb(240,92,26)" fg:x="34637" fg:w="9"/><text x="79.6217%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="79.3717%" y="229" width="0.0206%" height="15" fill="rgb(207,40,23)" fg:x="34637" fg:w="9"/><text x="79.6217%" y="239.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (115 samples, 0.26%)</title><rect x="79.1356%" y="261" width="0.2635%" height="15" fill="rgb(223,111,35)" fg:x="34534" fg:w="115"/><text x="79.3856%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.03%)</title><rect x="79.3992%" y="261" width="0.0252%" height="15" fill="rgb(229,147,28)" fg:x="34649" fg:w="11"/><text x="79.6492%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (9 samples, 0.02%)</title><rect x="79.4037%" y="245" width="0.0206%" height="15" fill="rgb(211,29,28)" fg:x="34651" fg:w="9"/><text x="79.6537%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="79.4037%" y="229" width="0.0206%" height="15" fill="rgb(228,72,33)" fg:x="34651" fg:w="9"/><text x="79.6537%" y="239.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (255 samples, 0.58%)</title><rect x="79.4290%" y="261" width="0.5843%" height="15" fill="rgb(205,214,31)" fg:x="34662" fg:w="255"/><text x="79.6790%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (17 samples, 0.04%)</title><rect x="80.0133%" y="261" width="0.0390%" height="15" fill="rgb(224,111,15)" fg:x="34917" fg:w="17"/><text x="80.2633%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (13 samples, 0.03%)</title><rect x="80.1072%" y="245" width="0.0298%" height="15" fill="rgb(253,21,26)" fg:x="34958" fg:w="13"/><text x="80.3572%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="80.1668%" y="229" width="0.0206%" height="15" fill="rgb(245,139,43)" fg:x="34984" fg:w="9"/><text x="80.4168%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.07%)</title><rect x="80.1370%" y="245" width="0.0665%" height="15" fill="rgb(252,170,7)" fg:x="34971" fg:w="29"/><text x="80.3870%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.02%)</title><rect x="80.1874%" y="229" width="0.0160%" height="15" fill="rgb(231,118,14)" fg:x="34993" fg:w="7"/><text x="80.4374%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (67 samples, 0.15%)</title><rect x="80.0614%" y="261" width="0.1535%" height="15" fill="rgb(238,83,0)" fg:x="34938" fg:w="67"/><text x="80.3114%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (5 samples, 0.01%)</title><rect x="80.2035%" y="245" width="0.0115%" height="15" fill="rgb(221,39,39)" fg:x="35000" fg:w="5"/><text x="80.4535%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.2149%" y="261" width="0.0115%" height="15" fill="rgb(222,119,46)" fg:x="35005" fg:w="5"/><text x="80.4649%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.2149%" y="245" width="0.0115%" height="15" fill="rgb(222,165,49)" fg:x="35005" fg:w="5"/><text x="80.4649%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.2149%" y="229" width="0.0115%" height="15" fill="rgb(219,113,52)" fg:x="35005" fg:w="5"/><text x="80.4649%" y="239.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::script::_&lt;impl fuel_tx::transaction::metadata::Cacheable for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::precompute (493 samples, 1.13%)</title><rect x="79.1104%" y="277" width="1.1297%" height="15" fill="rgb(214,7,15)" fg:x="34523" fg:w="493"/><text x="79.3604%" y="287.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.03%)</title><rect x="80.2516%" y="261" width="0.0321%" height="15" fill="rgb(235,32,4)" fg:x="35021" fg:w="14"/><text x="80.5016%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="80.2631%" y="245" width="0.0206%" height="15" fill="rgb(238,90,54)" fg:x="35026" fg:w="9"/><text x="80.5131%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.2699%" y="229" width="0.0137%" height="15" fill="rgb(213,208,19)" fg:x="35029" fg:w="6"/><text x="80.5199%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.2699%" y="213" width="0.0137%" height="15" fill="rgb(233,156,4)" fg:x="35029" fg:w="6"/><text x="80.5199%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.2722%" y="197" width="0.0115%" height="15" fill="rgb(207,194,5)" fg:x="35030" fg:w="5"/><text x="80.5222%" y="207.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::next_duplicate (24 samples, 0.05%)</title><rect x="80.2424%" y="277" width="0.0550%" height="15" fill="rgb(206,111,30)" fg:x="35017" fg:w="24"/><text x="80.4924%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="80.2837%" y="261" width="0.0137%" height="15" fill="rgb(243,70,54)" fg:x="35035" fg:w="6"/><text x="80.5337%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="80.2837%" y="245" width="0.0137%" height="15" fill="rgb(242,28,8)" fg:x="35035" fg:w="6"/><text x="80.5337%" y="255.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (5 samples, 0.01%)</title><rect x="80.2974%" y="277" width="0.0115%" height="15" fill="rgb(219,106,18)" fg:x="35041" fg:w="5"/><text x="80.5474%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.01%)</title><rect x="80.3181%" y="277" width="0.0115%" height="15" fill="rgb(244,222,10)" fg:x="35050" fg:w="5"/><text x="80.5681%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::types::script::_&lt;impl fuel_vm::checked_transaction::IntoChecked for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::into_checked_basic (660 samples, 1.51%)</title><rect x="78.8515%" y="293" width="1.5124%" height="15" fill="rgb(236,179,52)" fg:x="34410" fg:w="660"/><text x="79.1015%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.03%)</title><rect x="80.3387%" y="277" width="0.0252%" height="15" fill="rgb(213,23,39)" fg:x="35059" fg:w="11"/><text x="80.5887%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="80.3501%" y="261" width="0.0137%" height="15" fill="rgb(238,48,10)" fg:x="35064" fg:w="6"/><text x="80.6001%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_vm::checked_transaction::IntoChecked&gt;::into_checked_basic (668 samples, 1.53%)</title><rect x="78.8400%" y="309" width="1.5307%" height="15" fill="rgb(251,196,23)" fg:x="34405" fg:w="668"/><text x="79.0900%" y="319.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::convert_maybe_checked_tx_to_checked_tx (673 samples, 1.54%)</title><rect x="78.8377%" y="325" width="1.5422%" height="15" fill="rgb(250,152,24)" fg:x="34404" fg:w="673"/><text x="79.0877%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (8 samples, 0.02%)</title><rect x="80.4556%" y="309" width="0.0183%" height="15" fill="rgb(209,150,17)" fg:x="35110" fg:w="8"/><text x="80.7056%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.4624%" y="293" width="0.0115%" height="15" fill="rgb(234,202,34)" fg:x="35113" fg:w="5"/><text x="80.7124%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.06%)</title><rect x="80.5174%" y="277" width="0.0642%" height="15" fill="rgb(253,148,53)" fg:x="35137" fg:w="28"/><text x="80.7674%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.05%)</title><rect x="80.5289%" y="261" width="0.0527%" height="15" fill="rgb(218,129,16)" fg:x="35142" fg:w="23"/><text x="80.7789%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.03%)</title><rect x="80.5541%" y="245" width="0.0275%" height="15" fill="rgb(216,85,19)" fg:x="35153" fg:w="12"/><text x="80.8041%" y="255.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.09%)</title><rect x="80.4968%" y="293" width="0.0871%" height="15" fill="rgb(235,228,7)" fg:x="35128" fg:w="38"/><text x="80.7468%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.05%)</title><rect x="80.5862%" y="277" width="0.0504%" height="15" fill="rgb(245,175,0)" fg:x="35167" fg:w="22"/><text x="80.8362%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.05%)</title><rect x="80.5885%" y="261" width="0.0481%" height="15" fill="rgb(208,168,36)" fg:x="35168" fg:w="21"/><text x="80.8385%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.03%)</title><rect x="80.6068%" y="245" width="0.0298%" height="15" fill="rgb(246,171,24)" fg:x="35176" fg:w="13"/><text x="80.8568%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (24 samples, 0.05%)</title><rect x="80.5839%" y="293" width="0.0550%" height="15" fill="rgb(215,142,24)" fg:x="35166" fg:w="24"/><text x="80.8339%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.02%)</title><rect x="80.6412%" y="293" width="0.0160%" height="15" fill="rgb(250,187,7)" fg:x="35191" fg:w="7"/><text x="80.8912%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.6595%" y="293" width="0.0137%" height="15" fill="rgb(228,66,33)" fg:x="35199" fg:w="6"/><text x="80.9095%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.6618%" y="277" width="0.0115%" height="15" fill="rgb(234,215,21)" fg:x="35200" fg:w="5"/><text x="80.9118%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (87 samples, 0.20%)</title><rect x="80.4785%" y="309" width="0.1994%" height="15" fill="rgb(222,191,20)" fg:x="35120" fg:w="87"/><text x="80.7285%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (6 samples, 0.01%)</title><rect x="80.6778%" y="309" width="0.0137%" height="15" fill="rgb(245,79,54)" fg:x="35207" fg:w="6"/><text x="80.9278%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.01%)</title><rect x="80.6962%" y="309" width="0.0115%" height="15" fill="rgb(240,10,37)" fg:x="35215" fg:w="5"/><text x="80.9462%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.05%)</title><rect x="80.7489%" y="277" width="0.0550%" height="15" fill="rgb(214,192,32)" fg:x="35238" fg:w="24"/><text x="80.9989%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (38 samples, 0.09%)</title><rect x="80.7191%" y="293" width="0.0871%" height="15" fill="rgb(209,36,54)" fg:x="35225" fg:w="38"/><text x="80.9691%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (46 samples, 0.11%)</title><rect x="80.7076%" y="309" width="0.1054%" height="15" fill="rgb(220,10,11)" fg:x="35220" fg:w="46"/><text x="80.9576%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="80.8841%" y="245" width="0.0137%" height="15" fill="rgb(221,106,17)" fg:x="35297" fg:w="6"/><text x="81.1341%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.06%)</title><rect x="80.8405%" y="277" width="0.0619%" height="15" fill="rgb(251,142,44)" fg:x="35278" fg:w="27"/><text x="81.0905%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.05%)</title><rect x="80.8566%" y="261" width="0.0458%" height="15" fill="rgb(238,13,15)" fg:x="35285" fg:w="20"/><text x="81.1066%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (38 samples, 0.09%)</title><rect x="80.8222%" y="293" width="0.0871%" height="15" fill="rgb(208,107,27)" fg:x="35270" fg:w="38"/><text x="81.0722%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="80.9414%" y="261" width="0.0137%" height="15" fill="rgb(205,136,37)" fg:x="35322" fg:w="6"/><text x="81.1914%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.04%)</title><rect x="80.9162%" y="293" width="0.0412%" height="15" fill="rgb(250,205,27)" fg:x="35311" fg:w="18"/><text x="81.1662%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.03%)</title><rect x="80.9276%" y="277" width="0.0298%" height="15" fill="rgb(210,80,43)" fg:x="35316" fg:w="13"/><text x="81.1776%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_vm::storage::predicate::PredicateStorage&lt;&amp;fuel_core::graphql_api::database::ReadView&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (63 samples, 0.14%)</title><rect x="80.8153%" y="309" width="0.1444%" height="15" fill="rgb(247,160,36)" fg:x="35267" fg:w="63"/><text x="81.0653%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (16 samples, 0.04%)</title><rect x="81.0261%" y="293" width="0.0367%" height="15" fill="rgb(234,13,49)" fg:x="35359" fg:w="16"/><text x="81.2761%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="81.0284%" y="277" width="0.0344%" height="15" fill="rgb(234,122,0)" fg:x="35360" fg:w="15"/><text x="81.2784%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="81.0330%" y="261" width="0.0298%" height="15" fill="rgb(207,146,38)" fg:x="35362" fg:w="13"/><text x="81.2830%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="81.0468%" y="245" width="0.0160%" height="15" fill="rgb(207,177,25)" fg:x="35368" fg:w="7"/><text x="81.2968%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="81.0880%" y="261" width="0.0183%" height="15" fill="rgb(211,178,42)" fg:x="35386" fg:w="8"/><text x="81.3380%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="81.0949%" y="245" width="0.0115%" height="15" fill="rgb(230,69,54)" fg:x="35389" fg:w="5"/><text x="81.3449%" y="255.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.03%)</title><rect x="81.0811%" y="277" width="0.0275%" height="15" fill="rgb(214,135,41)" fg:x="35383" fg:w="12"/><text x="81.3311%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (6 samples, 0.01%)</title><rect x="81.1132%" y="261" width="0.0137%" height="15" fill="rgb(237,67,25)" fg:x="35397" fg:w="6"/><text x="81.3632%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="81.1109%" y="277" width="0.0183%" height="15" fill="rgb(222,189,50)" fg:x="35396" fg:w="8"/><text x="81.3609%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="81.1293%" y="277" width="0.0137%" height="15" fill="rgb(245,148,34)" fg:x="35404" fg:w="6"/><text x="81.3793%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="81.1316%" y="261" width="0.0115%" height="15" fill="rgb(222,29,6)" fg:x="35405" fg:w="5"/><text x="81.3816%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.1430%" y="277" width="0.0115%" height="15" fill="rgb(221,189,43)" fg:x="35410" fg:w="5"/><text x="81.3930%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.1430%" y="261" width="0.0115%" height="15" fill="rgb(207,36,27)" fg:x="35410" fg:w="5"/><text x="81.3930%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (38 samples, 0.09%)</title><rect x="81.0720%" y="293" width="0.0871%" height="15" fill="rgb(217,90,24)" fg:x="35379" fg:w="38"/><text x="81.3220%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::receipt::Receipt as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="81.1613%" y="277" width="0.0137%" height="15" fill="rgb(224,66,35)" fg:x="35418" fg:w="6"/><text x="81.4113%" y="287.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.06%)</title><rect x="81.1774%" y="261" width="0.0619%" height="15" fill="rgb(221,13,50)" fg:x="35425" fg:w="27"/><text x="81.4274%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.05%)</title><rect x="81.1911%" y="245" width="0.0481%" height="15" fill="rgb(236,68,49)" fg:x="35431" fg:w="21"/><text x="81.4411%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.04%)</title><rect x="81.1980%" y="229" width="0.0412%" height="15" fill="rgb(229,146,28)" fg:x="35434" fg:w="18"/><text x="81.4480%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.03%)</title><rect x="81.2118%" y="213" width="0.0275%" height="15" fill="rgb(225,31,38)" fg:x="35440" fg:w="12"/><text x="81.4618%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="81.2393%" y="261" width="0.0206%" height="15" fill="rgb(250,208,3)" fg:x="35452" fg:w="9"/><text x="81.4893%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="81.2438%" y="245" width="0.0160%" height="15" fill="rgb(246,54,23)" fg:x="35454" fg:w="7"/><text x="81.4938%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.2484%" y="229" width="0.0115%" height="15" fill="rgb(243,76,11)" fg:x="35456" fg:w="5"/><text x="81.4984%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="81.2668%" y="261" width="0.0115%" height="15" fill="rgb(245,21,50)" fg:x="35464" fg:w="5"/><text x="81.5168%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (49 samples, 0.11%)</title><rect x="81.1774%" y="277" width="0.1123%" height="15" fill="rgb(228,9,43)" fg:x="35425" fg:w="49"/><text x="81.4274%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.2782%" y="261" width="0.0115%" height="15" fill="rgb(208,100,47)" fg:x="35469" fg:w="5"/><text x="81.5282%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.2782%" y="245" width="0.0115%" height="15" fill="rgb(232,26,8)" fg:x="35469" fg:w="5"/><text x="81.5282%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="81.2782%" y="229" width="0.0115%" height="15" fill="rgb(216,166,38)" fg:x="35469" fg:w="5"/><text x="81.5282%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="81.2943%" y="277" width="0.0160%" height="15" fill="rgb(251,202,51)" fg:x="35476" fg:w="7"/><text x="81.5443%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="81.2943%" y="261" width="0.0160%" height="15" fill="rgb(254,216,34)" fg:x="35476" fg:w="7"/><text x="81.5443%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_vm::state::StateTransition&lt;Tx&gt; as core::convert::From&lt;fuel_vm::state::StateTransitionRef&lt;Tx&gt;&gt;&gt;::from (67 samples, 0.15%)</title><rect x="81.1591%" y="293" width="0.1535%" height="15" fill="rgb(251,32,27)" fg:x="35417" fg:w="67"/><text x="81.4091%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (6 samples, 0.01%)</title><rect x="81.3218%" y="245" width="0.0137%" height="15" fill="rgb(208,127,28)" fg:x="35488" fg:w="6"/><text x="81.5718%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (6 samples, 0.01%)</title><rect x="81.3630%" y="229" width="0.0137%" height="15" fill="rgb(224,137,22)" fg:x="35506" fg:w="6"/><text x="81.6130%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.03%)</title><rect x="81.3768%" y="229" width="0.0275%" height="15" fill="rgb(254,70,32)" fg:x="35512" fg:w="12"/><text x="81.6268%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.07%)</title><rect x="81.3355%" y="245" width="0.0733%" height="15" fill="rgb(229,75,37)" fg:x="35494" fg:w="32"/><text x="81.5855%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (40 samples, 0.09%)</title><rect x="81.3218%" y="261" width="0.0917%" height="15" fill="rgb(252,64,23)" fg:x="35488" fg:w="40"/><text x="81.5718%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (22 samples, 0.05%)</title><rect x="81.4134%" y="261" width="0.0504%" height="15" fill="rgb(232,162,48)" fg:x="35528" fg:w="22"/><text x="81.6634%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (8 samples, 0.02%)</title><rect x="81.5051%" y="245" width="0.0183%" height="15" fill="rgb(246,160,12)" fg:x="35568" fg:w="8"/><text x="81.7551%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.04%)</title><rect x="81.5257%" y="245" width="0.0412%" height="15" fill="rgb(247,166,0)" fg:x="35577" fg:w="18"/><text x="81.7757%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (44 samples, 0.10%)</title><rect x="81.4684%" y="261" width="0.1008%" height="15" fill="rgb(249,219,21)" fg:x="35552" fg:w="44"/><text x="81.7184%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (114 samples, 0.26%)</title><rect x="81.3218%" y="277" width="0.2612%" height="15" fill="rgb(205,209,3)" fg:x="35488" fg:w="114"/><text x="81.5718%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.03%)</title><rect x="81.6197%" y="261" width="0.0321%" height="15" fill="rgb(243,44,1)" fg:x="35618" fg:w="14"/><text x="81.8697%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.05%)</title><rect x="81.5990%" y="277" width="0.0550%" height="15" fill="rgb(206,159,16)" fg:x="35609" fg:w="24"/><text x="81.8490%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_core_storage::vm_storage::VmStorage&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::key_value_view::KeyValueViewWrapper&lt;fuel_core_storage::column::Column&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (151 samples, 0.35%)</title><rect x="81.3218%" y="293" width="0.3460%" height="15" fill="rgb(244,77,30)" fg:x="35488" fg:w="151"/><text x="81.5718%" y="303.50"></text></g><g><title>block_verifier`core::fmt::Formatter::pad_integral (9 samples, 0.02%)</title><rect x="81.7869%" y="165" width="0.0206%" height="15" fill="rgb(218,69,12)" fg:x="35691" fg:w="9"/><text x="82.0369%" y="175.50"></text></g><g><title>block_verifier`core::fmt::write (26 samples, 0.06%)</title><rect x="81.7571%" y="197" width="0.0596%" height="15" fill="rgb(212,87,7)" fg:x="35678" fg:w="26"/><text x="82.0071%" y="207.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (16 samples, 0.04%)</title><rect x="81.7801%" y="181" width="0.0367%" height="15" fill="rgb(245,114,25)" fg:x="35688" fg:w="16"/><text x="82.0301%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="81.8167%" y="197" width="0.0160%" height="15" fill="rgb(210,61,42)" fg:x="35704" fg:w="7"/><text x="82.0667%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="81.8167%" y="181" width="0.0160%" height="15" fill="rgb(211,52,33)" fg:x="35704" fg:w="7"/><text x="82.0667%" y="191.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (49 samples, 0.11%)</title><rect x="81.7549%" y="213" width="0.1123%" height="15" fill="rgb(234,58,33)" fg:x="35677" fg:w="49"/><text x="82.0049%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.03%)</title><rect x="81.8328%" y="197" width="0.0344%" height="15" fill="rgb(220,115,36)" fg:x="35711" fg:w="15"/><text x="82.0828%" y="207.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (18 samples, 0.04%)</title><rect x="81.8671%" y="213" width="0.0412%" height="15" fill="rgb(243,153,54)" fg:x="35726" fg:w="18"/><text x="82.1171%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="81.9107%" y="213" width="0.0298%" height="15" fill="rgb(251,47,18)" fg:x="35745" fg:w="13"/><text x="82.1607%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="81.9244%" y="197" width="0.0160%" height="15" fill="rgb(242,102,42)" fg:x="35751" fg:w="7"/><text x="82.1744%" y="207.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (88 samples, 0.20%)</title><rect x="81.7503%" y="229" width="0.2017%" height="15" fill="rgb(234,31,38)" fg:x="35675" fg:w="88"/><text x="82.0003%" y="239.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.02%)</title><rect x="82.0642%" y="117" width="0.0183%" height="15" fill="rgb(221,117,51)" fg:x="35812" fg:w="8"/><text x="82.3142%" y="127.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (5 samples, 0.01%)</title><rect x="82.1765%" y="101" width="0.0115%" height="15" fill="rgb(212,20,18)" fg:x="35861" fg:w="5"/><text x="82.4265%" y="111.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.05%)</title><rect x="82.1880%" y="101" width="0.0458%" height="15" fill="rgb(245,133,36)" fg:x="35866" fg:w="20"/><text x="82.4380%" y="111.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (86 samples, 0.20%)</title><rect x="82.0825%" y="117" width="0.1971%" height="15" fill="rgb(212,6,19)" fg:x="35820" fg:w="86"/><text x="82.3325%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (20 samples, 0.05%)</title><rect x="82.2338%" y="101" width="0.0458%" height="15" fill="rgb(218,1,36)" fg:x="35886" fg:w="20"/><text x="82.4838%" y="111.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (112 samples, 0.26%)</title><rect x="82.0253%" y="133" width="0.2567%" height="15" fill="rgb(246,84,54)" fg:x="35795" fg:w="112"/><text x="82.2753%" y="143.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (12 samples, 0.03%)</title><rect x="82.2934%" y="117" width="0.0275%" height="15" fill="rgb(242,110,6)" fg:x="35912" fg:w="12"/><text x="82.5434%" y="127.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (11 samples, 0.03%)</title><rect x="82.2957%" y="101" width="0.0252%" height="15" fill="rgb(214,47,5)" fg:x="35913" fg:w="11"/><text x="82.5457%" y="111.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (9 samples, 0.02%)</title><rect x="82.3002%" y="85" width="0.0206%" height="15" fill="rgb(218,159,25)" fg:x="35915" fg:w="9"/><text x="82.5502%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="82.3002%" y="69" width="0.0206%" height="15" fill="rgb(215,211,28)" fg:x="35915" fg:w="9"/><text x="82.5502%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="82.3048%" y="53" width="0.0160%" height="15" fill="rgb(238,59,32)" fg:x="35917" fg:w="7"/><text x="82.5548%" y="63.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (134 samples, 0.31%)</title><rect x="82.0184%" y="149" width="0.3071%" height="15" fill="rgb(226,82,3)" fg:x="35792" fg:w="134"/><text x="82.2684%" y="159.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (15 samples, 0.03%)</title><rect x="82.2911%" y="133" width="0.0344%" height="15" fill="rgb(240,164,32)" fg:x="35911" fg:w="15"/><text x="82.5411%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (144 samples, 0.33%)</title><rect x="82.0069%" y="165" width="0.3300%" height="15" fill="rgb(232,46,7)" fg:x="35787" fg:w="144"/><text x="82.2569%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="82.3438%" y="165" width="0.0183%" height="15" fill="rgb(229,129,53)" fg:x="35934" fg:w="8"/><text x="82.5938%" y="175.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (175 samples, 0.40%)</title><rect x="81.9657%" y="197" width="0.4010%" height="15" fill="rgb(234,188,29)" fg:x="35769" fg:w="175"/><text x="82.2157%" y="207.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (174 samples, 0.40%)</title><rect x="81.9680%" y="181" width="0.3987%" height="15" fill="rgb(246,141,4)" fg:x="35770" fg:w="174"/><text x="82.2180%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="82.3667%" y="181" width="0.0183%" height="15" fill="rgb(229,23,39)" fg:x="35944" fg:w="8"/><text x="82.6167%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="82.3713%" y="165" width="0.0137%" height="15" fill="rgb(206,12,3)" fg:x="35946" fg:w="6"/><text x="82.6213%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (10 samples, 0.02%)</title><rect x="82.3667%" y="197" width="0.0229%" height="15" fill="rgb(252,226,20)" fg:x="35944" fg:w="10"/><text x="82.6167%" y="207.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (188 samples, 0.43%)</title><rect x="81.9657%" y="213" width="0.4308%" height="15" fill="rgb(216,123,35)" fg:x="35769" fg:w="188"/><text x="82.2157%" y="223.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (9 samples, 0.02%)</title><rect x="82.3965%" y="213" width="0.0206%" height="15" fill="rgb(212,68,40)" fg:x="35957" fg:w="9"/><text x="82.6465%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="82.3988%" y="197" width="0.0183%" height="15" fill="rgb(254,125,32)" fg:x="35958" fg:w="8"/><text x="82.6488%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="82.4056%" y="181" width="0.0115%" height="15" fill="rgb(253,97,22)" fg:x="35961" fg:w="5"/><text x="82.6556%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="82.4194%" y="213" width="0.0160%" height="15" fill="rgb(241,101,14)" fg:x="35967" fg:w="7"/><text x="82.6694%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (217 samples, 0.50%)</title><rect x="81.9519%" y="229" width="0.4973%" height="15" fill="rgb(238,103,29)" fg:x="35763" fg:w="217"/><text x="82.2019%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="82.4561%" y="229" width="0.0183%" height="15" fill="rgb(233,195,47)" fg:x="35983" fg:w="8"/><text x="82.7061%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="82.4584%" y="213" width="0.0160%" height="15" fill="rgb(246,218,30)" fg:x="35984" fg:w="7"/><text x="82.7084%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (337 samples, 0.77%)</title><rect x="81.7067%" y="245" width="0.7722%" height="15" fill="rgb(219,145,47)" fg:x="35656" fg:w="337"/><text x="81.9567%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (5 samples, 0.01%)</title><rect x="82.4790%" y="245" width="0.0115%" height="15" fill="rgb(243,12,26)" fg:x="35993" fg:w="5"/><text x="82.7290%" y="255.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (36 samples, 0.08%)</title><rect x="82.4973%" y="229" width="0.0825%" height="15" fill="rgb(214,87,16)" fg:x="36001" fg:w="36"/><text x="82.7473%" y="239.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (45 samples, 0.10%)</title><rect x="82.4904%" y="245" width="0.1031%" height="15" fill="rgb(208,99,42)" fg:x="35998" fg:w="45"/><text x="82.7404%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="82.5798%" y="229" width="0.0137%" height="15" fill="rgb(253,99,2)" fg:x="36037" fg:w="6"/><text x="82.8298%" y="239.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (26 samples, 0.06%)</title><rect x="82.6027%" y="245" width="0.0596%" height="15" fill="rgb(220,168,23)" fg:x="36047" fg:w="26"/><text x="82.8527%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (428 samples, 0.98%)</title><rect x="81.7067%" y="261" width="0.9808%" height="15" fill="rgb(242,38,24)" fg:x="35656" fg:w="428"/><text x="81.9567%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="82.6669%" y="245" width="0.0206%" height="15" fill="rgb(225,182,9)" fg:x="36075" fg:w="9"/><text x="82.9169%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="82.6715%" y="229" width="0.0160%" height="15" fill="rgb(243,178,37)" fg:x="36077" fg:w="7"/><text x="82.9215%" y="239.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::compute_inputs (444 samples, 1.02%)</title><rect x="81.6724%" y="293" width="1.0174%" height="15" fill="rgb(232,139,19)" fg:x="35641" fg:w="444"/><text x="81.9224%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::get_coin_or_default (435 samples, 1.00%)</title><rect x="81.6930%" y="277" width="0.9968%" height="15" fill="rgb(225,201,24)" fg:x="35650" fg:w="435"/><text x="81.9430%" y="287.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (14 samples, 0.03%)</title><rect x="82.7196%" y="261" width="0.0321%" height="15" fill="rgb(221,47,46)" fg:x="36098" fg:w="14"/><text x="82.9696%" y="271.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (16 samples, 0.04%)</title><rect x="82.7173%" y="277" width="0.0367%" height="15" fill="rgb(249,23,13)" fg:x="36097" fg:w="16"/><text x="82.9673%" y="287.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (26 samples, 0.06%)</title><rect x="82.7058%" y="293" width="0.0596%" height="15" fill="rgb(219,9,5)" fg:x="36092" fg:w="26"/><text x="82.9558%" y="303.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (12 samples, 0.03%)</title><rect x="82.7860%" y="261" width="0.0275%" height="15" fill="rgb(254,171,16)" fg:x="36127" fg:w="12"/><text x="83.0360%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (6 samples, 0.01%)</title><rect x="82.8273%" y="229" width="0.0137%" height="15" fill="rgb(230,171,20)" fg:x="36145" fg:w="6"/><text x="83.0773%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.8296%" y="213" width="0.0115%" height="15" fill="rgb(210,71,41)" fg:x="36146" fg:w="5"/><text x="83.0796%" y="223.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.04%)</title><rect x="82.8135%" y="261" width="0.0367%" height="15" fill="rgb(206,173,20)" fg:x="36139" fg:w="16"/><text x="83.0635%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.03%)</title><rect x="82.8250%" y="245" width="0.0252%" height="15" fill="rgb(233,88,34)" fg:x="36144" fg:w="11"/><text x="83.0750%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (42 samples, 0.10%)</title><rect x="82.7723%" y="277" width="0.0962%" height="15" fill="rgb(223,209,46)" fg:x="36121" fg:w="42"/><text x="83.0223%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="82.8525%" y="261" width="0.0160%" height="15" fill="rgb(250,43,18)" fg:x="36156" fg:w="7"/><text x="83.1025%" y="271.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::into_ready (51 samples, 0.12%)</title><rect x="82.7654%" y="293" width="0.1169%" height="15" fill="rgb(208,13,10)" fg:x="36118" fg:w="51"/><text x="83.0154%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::ExecutableTransaction::update_outputs (10 samples, 0.02%)</title><rect x="82.8823%" y="293" width="0.0229%" height="15" fill="rgb(212,200,36)" fg:x="36169" fg:w="10"/><text x="83.1323%" y="303.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (9 samples, 0.02%)</title><rect x="82.8846%" y="277" width="0.0206%" height="15" fill="rgb(225,90,30)" fg:x="36170" fg:w="9"/><text x="83.1346%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.01%)</title><rect x="82.9121%" y="229" width="0.0115%" height="15" fill="rgb(236,182,39)" fg:x="36182" fg:w="5"/><text x="83.1621%" y="239.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="82.9121%" y="213" width="0.0115%" height="15" fill="rgb(212,144,35)" fg:x="36182" fg:w="5"/><text x="83.1621%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.9121%" y="197" width="0.0115%" height="15" fill="rgb(228,63,44)" fg:x="36182" fg:w="5"/><text x="83.1621%" y="207.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (49 samples, 0.11%)</title><rect x="82.9121%" y="245" width="0.1123%" height="15" fill="rgb(228,109,6)" fg:x="36182" fg:w="49"/><text x="83.1621%" y="255.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (42 samples, 0.10%)</title><rect x="82.9281%" y="229" width="0.0962%" height="15" fill="rgb(238,117,24)" fg:x="36189" fg:w="42"/><text x="83.1781%" y="239.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (59 samples, 0.14%)</title><rect x="82.9052%" y="277" width="0.1352%" height="15" fill="rgb(242,26,26)" fg:x="36179" fg:w="59"/><text x="83.1552%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (58 samples, 0.13%)</title><rect x="82.9075%" y="261" width="0.1329%" height="15" fill="rgb(221,92,48)" fg:x="36180" fg:w="58"/><text x="83.1575%" y="271.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::ret (60 samples, 0.14%)</title><rect x="82.9052%" y="293" width="0.1375%" height="15" fill="rgb(209,209,32)" fg:x="36179" fg:w="60"/><text x="83.1552%" y="303.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (76 samples, 0.17%)</title><rect x="83.0496%" y="277" width="0.1742%" height="15" fill="rgb(221,70,22)" fg:x="36242" fg:w="76"/><text x="83.2996%" y="287.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (75 samples, 0.17%)</title><rect x="83.0519%" y="261" width="0.1719%" height="15" fill="rgb(248,145,5)" fg:x="36243" fg:w="75"/><text x="83.3019%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="83.2237%" y="277" width="0.0137%" height="15" fill="rgb(226,116,26)" fg:x="36318" fg:w="6"/><text x="83.4737%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (87 samples, 0.20%)</title><rect x="83.0496%" y="293" width="0.1994%" height="15" fill="rgb(244,5,17)" fg:x="36242" fg:w="87"/><text x="83.2996%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.01%)</title><rect x="83.2512%" y="293" width="0.0115%" height="15" fill="rgb(252,159,33)" fg:x="36330" fg:w="5"/><text x="83.5012%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="83.2810%" y="293" width="0.0321%" height="15" fill="rgb(206,71,0)" fg:x="36343" fg:w="14"/><text x="83.5310%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="83.2971%" y="277" width="0.0160%" height="15" fill="rgb(233,118,54)" fg:x="36350" fg:w="7"/><text x="83.5471%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.03%)</title><rect x="83.3131%" y="293" width="0.0252%" height="15" fill="rgb(234,83,48)" fg:x="36357" fg:w="11"/><text x="83.5631%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="83.3245%" y="277" width="0.0137%" height="15" fill="rgb(228,3,54)" fg:x="36362" fg:w="6"/><text x="83.5745%" y="287.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::attempt_tx_execution_with_vm (1,043 samples, 2.39%)</title><rect x="80.9620%" y="309" width="2.3901%" height="15" fill="rgb(226,155,13)" fg:x="35331" fg:w="1043"/><text x="81.2120%" y="319.50">bl..</text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="83.3406%" y="293" width="0.0115%" height="15" fill="rgb(241,28,37)" fg:x="36369" fg:w="5"/><text x="83.5906%" y="303.50"></text></g><g><title>block_verifier`core::fmt::Formatter::pad_integral (7 samples, 0.02%)</title><rect x="83.4666%" y="197" width="0.0160%" height="15" fill="rgb(233,93,10)" fg:x="36424" fg:w="7"/><text x="83.7166%" y="207.50"></text></g><g><title>block_verifier`core::fmt::write (18 samples, 0.04%)</title><rect x="83.4460%" y="229" width="0.0412%" height="15" fill="rgb(225,113,19)" fg:x="36415" fg:w="18"/><text x="83.6960%" y="239.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (14 samples, 0.03%)</title><rect x="83.4552%" y="213" width="0.0321%" height="15" fill="rgb(241,2,18)" fg:x="36419" fg:w="14"/><text x="83.7052%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="83.4872%" y="229" width="0.0206%" height="15" fill="rgb(228,207,21)" fg:x="36433" fg:w="9"/><text x="83.7372%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="83.4895%" y="213" width="0.0183%" height="15" fill="rgb(213,211,35)" fg:x="36434" fg:w="8"/><text x="83.7395%" y="223.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (41 samples, 0.09%)</title><rect x="83.4391%" y="245" width="0.0940%" height="15" fill="rgb(209,83,10)" fg:x="36412" fg:w="41"/><text x="83.6891%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.03%)</title><rect x="83.5079%" y="229" width="0.0252%" height="15" fill="rgb(209,164,1)" fg:x="36442" fg:w="11"/><text x="83.7579%" y="239.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (19 samples, 0.04%)</title><rect x="83.5331%" y="245" width="0.0435%" height="15" fill="rgb(213,184,43)" fg:x="36453" fg:w="19"/><text x="83.7831%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="83.5812%" y="229" width="0.0160%" height="15" fill="rgb(231,61,34)" fg:x="36474" fg:w="7"/><text x="83.8312%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="83.5789%" y="245" width="0.0206%" height="15" fill="rgb(235,75,3)" fg:x="36473" fg:w="9"/><text x="83.8289%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (77 samples, 0.18%)</title><rect x="83.4368%" y="261" width="0.1764%" height="15" fill="rgb(220,106,47)" fg:x="36411" fg:w="77"/><text x="83.6868%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="83.6018%" y="245" width="0.0115%" height="15" fill="rgb(210,196,33)" fg:x="36483" fg:w="5"/><text x="83.8518%" y="255.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9 samples, 0.02%)</title><rect x="83.7897%" y="149" width="0.0206%" height="15" fill="rgb(229,154,42)" fg:x="36565" fg:w="9"/><text x="84.0397%" y="159.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (11 samples, 0.03%)</title><rect x="83.9501%" y="133" width="0.0252%" height="15" fill="rgb(228,114,26)" fg:x="36635" fg:w="11"/><text x="84.2001%" y="143.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (9 samples, 0.02%)</title><rect x="83.9822%" y="133" width="0.0206%" height="15" fill="rgb(208,144,1)" fg:x="36649" fg:w="9"/><text x="84.2322%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.05%)</title><rect x="84.0028%" y="133" width="0.0481%" height="15" fill="rgb(239,112,37)" fg:x="36658" fg:w="21"/><text x="84.2528%" y="143.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (187 samples, 0.43%)</title><rect x="83.6545%" y="165" width="0.4285%" height="15" fill="rgb(210,96,50)" fg:x="36506" fg:w="187"/><text x="83.9045%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (119 samples, 0.27%)</title><rect x="83.8104%" y="149" width="0.2727%" height="15" fill="rgb(222,178,2)" fg:x="36574" fg:w="119"/><text x="84.0604%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (14 samples, 0.03%)</title><rect x="84.0510%" y="133" width="0.0321%" height="15" fill="rgb(226,74,18)" fg:x="36679" fg:w="14"/><text x="84.3010%" y="143.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (195 samples, 0.45%)</title><rect x="83.6522%" y="181" width="0.4468%" height="15" fill="rgb(225,67,54)" fg:x="36505" fg:w="195"/><text x="83.9022%" y="191.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (200 samples, 0.46%)</title><rect x="83.6454%" y="197" width="0.4583%" height="15" fill="rgb(251,92,32)" fg:x="36502" fg:w="200"/><text x="83.8954%" y="207.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="84.1105%" y="197" width="0.0137%" height="15" fill="rgb(228,149,22)" fg:x="36705" fg:w="6"/><text x="84.3605%" y="207.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (228 samples, 0.52%)</title><rect x="83.6202%" y="229" width="0.5225%" height="15" fill="rgb(243,54,13)" fg:x="36491" fg:w="228"/><text x="83.8702%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (228 samples, 0.52%)</title><rect x="83.6202%" y="213" width="0.5225%" height="15" fill="rgb(243,180,28)" fg:x="36491" fg:w="228"/><text x="83.8702%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="84.1449%" y="213" width="0.0115%" height="15" fill="rgb(208,167,24)" fg:x="36720" fg:w="5"/><text x="84.3949%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="84.1449%" y="197" width="0.0115%" height="15" fill="rgb(245,73,45)" fg:x="36720" fg:w="5"/><text x="84.3949%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.02%)</title><rect x="84.1426%" y="229" width="0.0160%" height="15" fill="rgb(237,203,48)" fg:x="36719" fg:w="7"/><text x="84.3926%" y="239.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (247 samples, 0.57%)</title><rect x="83.6202%" y="245" width="0.5660%" height="15" fill="rgb(211,197,16)" fg:x="36491" fg:w="247"/><text x="83.8702%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="84.1587%" y="229" width="0.0275%" height="15" fill="rgb(243,99,51)" fg:x="36726" fg:w="12"/><text x="84.4087%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="84.1678%" y="213" width="0.0183%" height="15" fill="rgb(215,123,29)" fg:x="36730" fg:w="8"/><text x="84.4178%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (252 samples, 0.58%)</title><rect x="83.6133%" y="261" width="0.5775%" height="15" fill="rgb(239,186,37)" fg:x="36488" fg:w="252"/><text x="83.8633%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (353 samples, 0.81%)</title><rect x="83.3887%" y="277" width="0.8089%" height="15" fill="rgb(252,136,39)" fg:x="36390" fg:w="353"/><text x="83.6387%" y="287.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (62 samples, 0.14%)</title><rect x="84.2205%" y="261" width="0.1421%" height="15" fill="rgb(223,213,32)" fg:x="36753" fg:w="62"/><text x="84.4705%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="84.3626%" y="261" width="0.0298%" height="15" fill="rgb(233,115,5)" fg:x="36815" fg:w="13"/><text x="84.6126%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.03%)</title><rect x="84.3672%" y="245" width="0.0252%" height="15" fill="rgb(207,226,44)" fg:x="36817" fg:w="11"/><text x="84.6172%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.03%)</title><rect x="84.3672%" y="229" width="0.0252%" height="15" fill="rgb(208,126,0)" fg:x="36817" fg:w="11"/><text x="84.6172%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="84.3809%" y="213" width="0.0115%" height="15" fill="rgb(244,66,21)" fg:x="36823" fg:w="5"/><text x="84.6309%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (24 samples, 0.05%)</title><rect x="84.3924%" y="261" width="0.0550%" height="15" fill="rgb(222,97,12)" fg:x="36828" fg:w="24"/><text x="84.6424%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (114 samples, 0.26%)</title><rect x="84.1976%" y="277" width="0.2612%" height="15" fill="rgb(219,213,19)" fg:x="36743" fg:w="114"/><text x="84.4476%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="84.4474%" y="261" width="0.0115%" height="15" fill="rgb(252,169,30)" fg:x="36852" fg:w="5"/><text x="84.6974%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="84.5734%" y="149" width="0.0137%" height="15" fill="rgb(206,32,51)" fg:x="36907" fg:w="6"/><text x="84.8234%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.04%)</title><rect x="84.5505%" y="181" width="0.0412%" height="15" fill="rgb(250,172,42)" fg:x="36897" fg:w="18"/><text x="84.8005%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.03%)</title><rect x="84.5574%" y="165" width="0.0344%" height="15" fill="rgb(209,34,43)" fg:x="36900" fg:w="15"/><text x="84.8074%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.04%)</title><rect x="84.5918%" y="181" width="0.0412%" height="15" fill="rgb(223,11,35)" fg:x="36915" fg:w="18"/><text x="84.8418%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.04%)</title><rect x="84.5963%" y="165" width="0.0367%" height="15" fill="rgb(251,219,26)" fg:x="36917" fg:w="16"/><text x="84.8463%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.03%)</title><rect x="84.6032%" y="149" width="0.0298%" height="15" fill="rgb(231,119,3)" fg:x="36920" fg:w="13"/><text x="84.8532%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="84.6216%" y="133" width="0.0115%" height="15" fill="rgb(216,97,11)" fg:x="36928" fg:w="5"/><text x="84.8716%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.01%)</title><rect x="84.6330%" y="181" width="0.0137%" height="15" fill="rgb(223,59,9)" fg:x="36933" fg:w="6"/><text x="84.8830%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.01%)</title><rect x="84.6330%" y="165" width="0.0137%" height="15" fill="rgb(233,93,31)" fg:x="36933" fg:w="6"/><text x="84.8830%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (8 samples, 0.02%)</title><rect x="84.6491%" y="181" width="0.0183%" height="15" fill="rgb(239,81,33)" fg:x="36940" fg:w="8"/><text x="84.8991%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (55 samples, 0.13%)</title><rect x="84.5436%" y="197" width="0.1260%" height="15" fill="rgb(213,120,34)" fg:x="36894" fg:w="55"/><text x="84.7936%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (60 samples, 0.14%)</title><rect x="84.5368%" y="213" width="0.1375%" height="15" fill="rgb(243,49,53)" fg:x="36891" fg:w="60"/><text x="84.7868%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (70 samples, 0.16%)</title><rect x="84.5253%" y="229" width="0.1604%" height="15" fill="rgb(247,216,33)" fg:x="36886" fg:w="70"/><text x="84.7753%" y="239.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (74 samples, 0.17%)</title><rect x="84.5184%" y="245" width="0.1696%" height="15" fill="rgb(226,26,14)" fg:x="36883" fg:w="74"/><text x="84.7684%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (79 samples, 0.18%)</title><rect x="84.5093%" y="261" width="0.1810%" height="15" fill="rgb(215,49,53)" fg:x="36879" fg:w="79"/><text x="84.7593%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.03%)</title><rect x="84.6903%" y="261" width="0.0252%" height="15" fill="rgb(245,162,40)" fg:x="36958" fg:w="11"/><text x="84.9403%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="84.6972%" y="245" width="0.0183%" height="15" fill="rgb(229,68,17)" fg:x="36961" fg:w="8"/><text x="84.9472%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="84.6995%" y="229" width="0.0160%" height="15" fill="rgb(213,182,10)" fg:x="36962" fg:w="7"/><text x="84.9495%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.7018%" y="213" width="0.0137%" height="15" fill="rgb(245,125,30)" fg:x="36963" fg:w="6"/><text x="84.9518%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="84.7040%" y="197" width="0.0115%" height="15" fill="rgb(232,202,2)" fg:x="36964" fg:w="5"/><text x="84.9540%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.7224%" y="261" width="0.0137%" height="15" fill="rgb(237,140,51)" fg:x="36972" fg:w="6"/><text x="84.9724%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.7224%" y="245" width="0.0137%" height="15" fill="rgb(236,157,25)" fg:x="36972" fg:w="6"/><text x="84.9724%" y="255.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (120 samples, 0.27%)</title><rect x="84.4634%" y="277" width="0.2750%" height="15" fill="rgb(219,209,0)" fg:x="36859" fg:w="120"/><text x="84.7134%" y="287.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::persist_output_utxos (611 samples, 1.40%)</title><rect x="83.3566%" y="309" width="1.4001%" height="15" fill="rgb(240,116,54)" fg:x="36376" fg:w="611"/><text x="83.6066%" y="319.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::insert_coin (606 samples, 1.39%)</title><rect x="83.3681%" y="293" width="1.3887%" height="15" fill="rgb(216,10,36)" fg:x="36381" fg:w="606"/><text x="83.6181%" y="303.50"></text></g><g><title>block_verifier`core::fmt::write (8 samples, 0.02%)</title><rect x="84.8370%" y="245" width="0.0183%" height="15" fill="rgb(222,72,44)" fg:x="37022" fg:w="8"/><text x="85.0870%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="84.8553%" y="245" width="0.0160%" height="15" fill="rgb(232,159,9)" fg:x="37030" fg:w="7"/><text x="85.1053%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.8576%" y="229" width="0.0137%" height="15" fill="rgb(210,39,32)" fg:x="37031" fg:w="6"/><text x="85.1076%" y="239.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (25 samples, 0.06%)</title><rect x="84.8347%" y="261" width="0.0573%" height="15" fill="rgb(216,194,45)" fg:x="37021" fg:w="25"/><text x="85.0847%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="84.8713%" y="245" width="0.0206%" height="15" fill="rgb(218,18,35)" fg:x="37037" fg:w="9"/><text x="85.1213%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (16 samples, 0.04%)</title><rect x="84.8920%" y="261" width="0.0367%" height="15" fill="rgb(207,83,51)" fg:x="37046" fg:w="16"/><text x="85.1420%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="84.9286%" y="261" width="0.0206%" height="15" fill="rgb(225,63,43)" fg:x="37062" fg:w="9"/><text x="85.1786%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="84.9355%" y="245" width="0.0137%" height="15" fill="rgb(207,57,36)" fg:x="37065" fg:w="6"/><text x="85.1855%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (52 samples, 0.12%)</title><rect x="84.8347%" y="277" width="0.1192%" height="15" fill="rgb(216,99,33)" fg:x="37021" fg:w="52"/><text x="85.0847%" y="287.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (13 samples, 0.03%)</title><rect x="85.0661%" y="165" width="0.0298%" height="15" fill="rgb(225,42,16)" fg:x="37122" fg:w="13"/><text x="85.3161%" y="175.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (7 samples, 0.02%)</title><rect x="85.1669%" y="149" width="0.0160%" height="15" fill="rgb(220,201,45)" fg:x="37166" fg:w="7"/><text x="85.4169%" y="159.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (6 samples, 0.01%)</title><rect x="85.1853%" y="149" width="0.0137%" height="15" fill="rgb(225,33,4)" fg:x="37174" fg:w="6"/><text x="85.4353%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.05%)</title><rect x="85.1990%" y="149" width="0.0481%" height="15" fill="rgb(224,33,50)" fg:x="37180" fg:w="21"/><text x="85.4490%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (125 samples, 0.29%)</title><rect x="85.0019%" y="181" width="0.2864%" height="15" fill="rgb(246,198,51)" fg:x="37094" fg:w="125"/><text x="85.2519%" y="191.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (84 samples, 0.19%)</title><rect x="85.0959%" y="165" width="0.1925%" height="15" fill="rgb(205,22,4)" fg:x="37135" fg:w="84"/><text x="85.3459%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (18 samples, 0.04%)</title><rect x="85.2471%" y="149" width="0.0412%" height="15" fill="rgb(206,3,8)" fg:x="37201" fg:w="18"/><text x="85.4971%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="85.3228%" y="85" width="0.0137%" height="15" fill="rgb(251,23,15)" fg:x="37234" fg:w="6"/><text x="85.5728%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.03%)</title><rect x="85.3113%" y="101" width="0.0275%" height="15" fill="rgb(252,88,28)" fg:x="37229" fg:w="12"/><text x="85.5613%" y="111.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (15 samples, 0.03%)</title><rect x="85.3067%" y="133" width="0.0344%" height="15" fill="rgb(212,127,14)" fg:x="37227" fg:w="15"/><text x="85.5567%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="85.3067%" y="117" width="0.0344%" height="15" fill="rgb(247,145,37)" fg:x="37227" fg:w="15"/><text x="85.5567%" y="127.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (17 samples, 0.04%)</title><rect x="85.3067%" y="149" width="0.0390%" height="15" fill="rgb(209,117,53)" fg:x="37227" fg:w="17"/><text x="85.5567%" y="159.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (22 samples, 0.05%)</title><rect x="85.2976%" y="181" width="0.0504%" height="15" fill="rgb(212,90,42)" fg:x="37223" fg:w="22"/><text x="85.5476%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (19 samples, 0.04%)</title><rect x="85.3044%" y="165" width="0.0435%" height="15" fill="rgb(218,164,37)" fg:x="37226" fg:w="19"/><text x="85.5544%" y="175.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (153 samples, 0.35%)</title><rect x="84.9997%" y="197" width="0.3506%" height="15" fill="rgb(246,65,34)" fg:x="37093" fg:w="153"/><text x="85.2497%" y="207.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (157 samples, 0.36%)</title><rect x="84.9997%" y="213" width="0.3598%" height="15" fill="rgb(231,100,33)" fg:x="37093" fg:w="157"/><text x="85.2497%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="85.3617%" y="213" width="0.0137%" height="15" fill="rgb(228,126,14)" fg:x="37251" fg:w="6"/><text x="85.6117%" y="223.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (182 samples, 0.42%)</title><rect x="84.9630%" y="245" width="0.4171%" height="15" fill="rgb(215,173,21)" fg:x="37077" fg:w="182"/><text x="85.2130%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (179 samples, 0.41%)</title><rect x="84.9699%" y="229" width="0.4102%" height="15" fill="rgb(210,6,40)" fg:x="37080" fg:w="179"/><text x="85.2199%" y="239.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (11 samples, 0.03%)</title><rect x="85.3823%" y="245" width="0.0252%" height="15" fill="rgb(212,48,18)" fg:x="37260" fg:w="11"/><text x="85.6323%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.03%)</title><rect x="85.3823%" y="229" width="0.0252%" height="15" fill="rgb(230,214,11)" fg:x="37260" fg:w="11"/><text x="85.6323%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="85.3846%" y="213" width="0.0229%" height="15" fill="rgb(254,105,39)" fg:x="37261" fg:w="10"/><text x="85.6346%" y="223.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (196 samples, 0.45%)</title><rect x="84.9630%" y="261" width="0.4491%" height="15" fill="rgb(245,158,5)" fg:x="37077" fg:w="196"/><text x="85.2130%" y="271.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (14 samples, 0.03%)</title><rect x="85.4121%" y="261" width="0.0321%" height="15" fill="rgb(249,208,11)" fg:x="37273" fg:w="14"/><text x="85.6621%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="85.4167%" y="245" width="0.0275%" height="15" fill="rgb(210,39,28)" fg:x="37275" fg:w="12"/><text x="85.6667%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="85.4236%" y="229" width="0.0206%" height="15" fill="rgb(211,56,53)" fg:x="37278" fg:w="9"/><text x="85.6736%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="85.4511%" y="261" width="0.0183%" height="15" fill="rgb(226,201,30)" fg:x="37290" fg:w="8"/><text x="85.7011%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="85.4580%" y="245" width="0.0115%" height="15" fill="rgb(239,101,34)" fg:x="37293" fg:w="5"/><text x="85.7080%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (231 samples, 0.53%)</title><rect x="84.9538%" y="277" width="0.5293%" height="15" fill="rgb(226,209,5)" fg:x="37073" fg:w="231"/><text x="85.2038%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.4694%" y="261" width="0.0137%" height="15" fill="rgb(250,105,47)" fg:x="37298" fg:w="6"/><text x="85.7194%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.4717%" y="245" width="0.0115%" height="15" fill="rgb(230,72,3)" fg:x="37299" fg:w="5"/><text x="85.7217%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.01%)</title><rect x="85.4946%" y="277" width="0.0137%" height="15" fill="rgb(232,218,39)" fg:x="37309" fg:w="6"/><text x="85.7446%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (323 samples, 0.74%)</title><rect x="84.7820%" y="293" width="0.7402%" height="15" fill="rgb(248,166,6)" fg:x="36998" fg:w="323"/><text x="85.0320%" y="303.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (22 samples, 0.05%)</title><rect x="85.5588%" y="277" width="0.0504%" height="15" fill="rgb(247,89,20)" fg:x="37337" fg:w="22"/><text x="85.8088%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="85.6092%" y="277" width="0.0183%" height="15" fill="rgb(248,130,54)" fg:x="37359" fg:w="8"/><text x="85.8592%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.6115%" y="261" width="0.0160%" height="15" fill="rgb(234,196,4)" fg:x="37360" fg:w="7"/><text x="85.8615%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.6115%" y="245" width="0.0160%" height="15" fill="rgb(250,143,31)" fg:x="37360" fg:w="7"/><text x="85.8615%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.6298%" y="277" width="0.0160%" height="15" fill="rgb(211,110,34)" fg:x="37368" fg:w="7"/><text x="85.8798%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.6321%" y="261" width="0.0137%" height="15" fill="rgb(215,124,48)" fg:x="37369" fg:w="6"/><text x="85.8821%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::take (59 samples, 0.14%)</title><rect x="85.5290%" y="293" width="0.1352%" height="15" fill="rgb(216,46,13)" fg:x="37324" fg:w="59"/><text x="85.7790%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.02%)</title><rect x="85.6459%" y="277" width="0.0183%" height="15" fill="rgb(205,184,25)" fg:x="37375" fg:w="8"/><text x="85.8959%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (8 samples, 0.02%)</title><rect x="85.6642%" y="213" width="0.0183%" height="15" fill="rgb(228,1,10)" fg:x="37383" fg:w="8"/><text x="85.9142%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.02%)</title><rect x="85.6642%" y="197" width="0.0183%" height="15" fill="rgb(213,116,27)" fg:x="37383" fg:w="8"/><text x="85.9142%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.02%)</title><rect x="85.6642%" y="229" width="0.0229%" height="15" fill="rgb(241,95,50)" fg:x="37383" fg:w="10"/><text x="85.9142%" y="239.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.03%)</title><rect x="85.6642%" y="293" width="0.0252%" height="15" fill="rgb(238,48,32)" fg:x="37383" fg:w="11"/><text x="85.9142%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="85.6642%" y="277" width="0.0252%" height="15" fill="rgb(235,113,49)" fg:x="37383" fg:w="11"/><text x="85.9142%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.03%)</title><rect x="85.6642%" y="261" width="0.0252%" height="15" fill="rgb(205,127,43)" fg:x="37383" fg:w="11"/><text x="85.9142%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.03%)</title><rect x="85.6642%" y="245" width="0.0252%" height="15" fill="rgb(250,162,2)" fg:x="37383" fg:w="11"/><text x="85.9142%" y="255.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (18 samples, 0.04%)</title><rect x="85.6917%" y="293" width="0.0412%" height="15" fill="rgb(220,13,41)" fg:x="37395" fg:w="18"/><text x="85.9417%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="85.7467%" y="293" width="0.0183%" height="15" fill="rgb(249,221,25)" fg:x="37419" fg:w="8"/><text x="85.9967%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="85.7536%" y="277" width="0.0115%" height="15" fill="rgb(215,208,19)" fg:x="37422" fg:w="5"/><text x="86.0036%" y="287.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::spend_input_utxos (441 samples, 1.01%)</title><rect x="84.7568%" y="309" width="1.0106%" height="15" fill="rgb(236,175,2)" fg:x="36987" fg:w="441"/><text x="85.0068%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.01%)</title><rect x="85.7742%" y="293" width="0.0115%" height="15" fill="rgb(241,52,2)" fg:x="37431" fg:w="5"/><text x="86.0242%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="85.7742%" y="277" width="0.0115%" height="15" fill="rgb(248,140,14)" fg:x="37431" fg:w="5"/><text x="86.0242%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.01%)</title><rect x="85.7742%" y="261" width="0.0115%" height="15" fill="rgb(253,22,42)" fg:x="37431" fg:w="5"/><text x="86.0242%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.01%)</title><rect x="85.7742%" y="245" width="0.0115%" height="15" fill="rgb(234,61,47)" fg:x="37431" fg:w="5"/><text x="86.0242%" y="255.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (6 samples, 0.01%)</title><rect x="85.8131%" y="277" width="0.0137%" height="15" fill="rgb(208,226,15)" fg:x="37448" fg:w="6"/><text x="86.0631%" y="287.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="85.8269%" y="277" width="0.0183%" height="15" fill="rgb(217,221,4)" fg:x="37454" fg:w="8"/><text x="86.0769%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="85.8315%" y="261" width="0.0137%" height="15" fill="rgb(212,174,34)" fg:x="37456" fg:w="6"/><text x="86.0815%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="85.8452%" y="277" width="0.0115%" height="15" fill="rgb(253,83,4)" fg:x="37462" fg:w="5"/><text x="86.0952%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (33 samples, 0.08%)</title><rect x="85.7857%" y="293" width="0.0756%" height="15" fill="rgb(250,195,49)" fg:x="37436" fg:w="33"/><text x="86.0357%" y="303.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (6 samples, 0.01%)</title><rect x="85.8613%" y="293" width="0.0137%" height="15" fill="rgb(241,192,25)" fg:x="37469" fg:w="6"/><text x="86.1113%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::update_execution_data (53 samples, 0.12%)</title><rect x="85.7673%" y="309" width="0.1215%" height="15" fill="rgb(208,124,10)" fg:x="37428" fg:w="53"/><text x="86.0173%" y="319.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (7 samples, 0.02%)</title><rect x="85.9461%" y="213" width="0.0160%" height="15" fill="rgb(222,33,0)" fg:x="37506" fg:w="7"/><text x="86.1961%" y="223.50"></text></g><g><title>block_verifier`core::fmt::write (9 samples, 0.02%)</title><rect x="85.9438%" y="229" width="0.0206%" height="15" fill="rgb(234,209,28)" fg:x="37505" fg:w="9"/><text x="86.1938%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.9644%" y="229" width="0.0206%" height="15" fill="rgb(224,11,23)" fg:x="37514" fg:w="9"/><text x="86.2144%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.9667%" y="213" width="0.0183%" height="15" fill="rgb(232,99,1)" fg:x="37515" fg:w="8"/><text x="86.2167%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="85.9713%" y="197" width="0.0137%" height="15" fill="rgb(237,95,45)" fg:x="37517" fg:w="6"/><text x="86.2213%" y="207.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (32 samples, 0.07%)</title><rect x="85.9392%" y="245" width="0.0733%" height="15" fill="rgb(208,109,11)" fg:x="37503" fg:w="32"/><text x="86.1892%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.03%)</title><rect x="85.9850%" y="229" width="0.0275%" height="15" fill="rgb(216,190,48)" fg:x="37523" fg:w="12"/><text x="86.2350%" y="239.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (15 samples, 0.03%)</title><rect x="86.0171%" y="245" width="0.0344%" height="15" fill="rgb(251,171,36)" fg:x="37537" fg:w="15"/><text x="86.2671%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.04%)</title><rect x="86.0538%" y="245" width="0.0367%" height="15" fill="rgb(230,62,22)" fg:x="37553" fg:w="16"/><text x="86.3038%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="86.0698%" y="229" width="0.0206%" height="15" fill="rgb(225,114,35)" fg:x="37560" fg:w="9"/><text x="86.3198%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="86.0904%" y="245" width="0.0137%" height="15" fill="rgb(215,118,42)" fg:x="37569" fg:w="6"/><text x="86.3404%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (73 samples, 0.17%)</title><rect x="85.9392%" y="261" width="0.1673%" height="15" fill="rgb(243,119,21)" fg:x="37503" fg:w="73"/><text x="86.1892%" y="271.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (10 samples, 0.02%)</title><rect x="86.3356%" y="149" width="0.0229%" height="15" fill="rgb(252,177,53)" fg:x="37676" fg:w="10"/><text x="86.5856%" y="159.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (5 samples, 0.01%)</title><rect x="86.5441%" y="133" width="0.0115%" height="15" fill="rgb(237,209,29)" fg:x="37767" fg:w="5"/><text x="86.7941%" y="143.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (14 samples, 0.03%)</title><rect x="86.5556%" y="133" width="0.0321%" height="15" fill="rgb(212,65,23)" fg:x="37772" fg:w="14"/><text x="86.8056%" y="143.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (11 samples, 0.03%)</title><rect x="86.5877%" y="133" width="0.0252%" height="15" fill="rgb(230,222,46)" fg:x="37786" fg:w="11"/><text x="86.8377%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.04%)</title><rect x="86.6129%" y="133" width="0.0367%" height="15" fill="rgb(215,135,32)" fg:x="37797" fg:w="16"/><text x="86.8629%" y="143.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (269 samples, 0.62%)</title><rect x="86.1592%" y="165" width="0.6164%" height="15" fill="rgb(246,101,22)" fg:x="37599" fg:w="269"/><text x="86.4092%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (182 samples, 0.42%)</title><rect x="86.3585%" y="149" width="0.4171%" height="15" fill="rgb(206,107,13)" fg:x="37686" fg:w="182"/><text x="86.6085%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (55 samples, 0.13%)</title><rect x="86.6496%" y="133" width="0.1260%" height="15" fill="rgb(250,100,44)" fg:x="37813" fg:w="55"/><text x="86.8996%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (7 samples, 0.02%)</title><rect x="86.7756%" y="165" width="0.0160%" height="15" fill="rgb(231,147,38)" fg:x="37868" fg:w="7"/><text x="87.0256%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (17 samples, 0.04%)</title><rect x="86.8100%" y="149" width="0.0390%" height="15" fill="rgb(229,8,40)" fg:x="37883" fg:w="17"/><text x="87.0600%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (14 samples, 0.03%)</title><rect x="86.8168%" y="133" width="0.0321%" height="15" fill="rgb(221,135,30)" fg:x="37886" fg:w="14"/><text x="87.0668%" y="143.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (10 samples, 0.02%)</title><rect x="86.8260%" y="117" width="0.0229%" height="15" fill="rgb(249,193,18)" fg:x="37890" fg:w="10"/><text x="87.0760%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="86.8283%" y="101" width="0.0206%" height="15" fill="rgb(209,133,39)" fg:x="37891" fg:w="9"/><text x="87.0783%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="86.8283%" y="85" width="0.0206%" height="15" fill="rgb(232,100,14)" fg:x="37891" fg:w="9"/><text x="87.0783%" y="95.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (303 samples, 0.69%)</title><rect x="86.1569%" y="181" width="0.6943%" height="15" fill="rgb(224,185,1)" fg:x="37598" fg:w="303"/><text x="86.4069%" y="191.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (26 samples, 0.06%)</title><rect x="86.7916%" y="165" width="0.0596%" height="15" fill="rgb(223,139,8)" fg:x="37875" fg:w="26"/><text x="87.0416%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (313 samples, 0.72%)</title><rect x="86.1477%" y="197" width="0.7172%" height="15" fill="rgb(232,213,38)" fg:x="37594" fg:w="313"/><text x="86.3977%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="86.8535%" y="181" width="0.0115%" height="15" fill="rgb(207,94,22)" fg:x="37902" fg:w="5"/><text x="87.1035%" y="191.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (334 samples, 0.77%)</title><rect x="86.1156%" y="213" width="0.7654%" height="15" fill="rgb(219,183,54)" fg:x="37580" fg:w="334"/><text x="86.3656%" y="223.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (335 samples, 0.77%)</title><rect x="86.1156%" y="229" width="0.7677%" height="15" fill="rgb(216,185,54)" fg:x="37580" fg:w="335"/><text x="86.3656%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="86.8833%" y="213" width="0.0321%" height="15" fill="rgb(254,217,39)" fg:x="37915" fg:w="14"/><text x="87.1333%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="86.8856%" y="197" width="0.0298%" height="15" fill="rgb(240,178,23)" fg:x="37916" fg:w="13"/><text x="87.1356%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="86.8925%" y="181" width="0.0229%" height="15" fill="rgb(218,11,47)" fg:x="37919" fg:w="10"/><text x="87.1425%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (16 samples, 0.04%)</title><rect x="86.8833%" y="229" width="0.0367%" height="15" fill="rgb(218,51,51)" fg:x="37915" fg:w="16"/><text x="87.1333%" y="239.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (352 samples, 0.81%)</title><rect x="86.1156%" y="245" width="0.8066%" height="15" fill="rgb(238,126,27)" fg:x="37580" fg:w="352"/><text x="86.3656%" y="255.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (12 samples, 0.03%)</title><rect x="86.9222%" y="245" width="0.0275%" height="15" fill="rgb(249,202,22)" fg:x="37932" fg:w="12"/><text x="87.1722%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.03%)</title><rect x="86.9245%" y="229" width="0.0252%" height="15" fill="rgb(254,195,49)" fg:x="37933" fg:w="11"/><text x="87.1745%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="86.9337%" y="213" width="0.0160%" height="15" fill="rgb(208,123,14)" fg:x="37937" fg:w="7"/><text x="87.1837%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="86.9543%" y="245" width="0.0115%" height="15" fill="rgb(224,200,8)" fg:x="37946" fg:w="5"/><text x="87.2043%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="86.9658%" y="245" width="0.0115%" height="15" fill="rgb(217,61,36)" fg:x="37951" fg:w="5"/><text x="87.2158%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (384 samples, 0.88%)</title><rect x="86.1065%" y="261" width="0.8799%" height="15" fill="rgb(206,35,45)" fg:x="37576" fg:w="384"/><text x="86.3565%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (490 samples, 1.12%)</title><rect x="85.9025%" y="277" width="1.1228%" height="15" fill="rgb(217,65,33)" fg:x="37487" fg:w="490"/><text x="86.1525%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="87.0025%" y="261" width="0.0229%" height="15" fill="rgb(222,158,48)" fg:x="37967" fg:w="10"/><text x="87.2525%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="87.0070%" y="245" width="0.0183%" height="15" fill="rgb(254,2,54)" fg:x="37969" fg:w="8"/><text x="87.2570%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (6 samples, 0.01%)</title><rect x="87.0254%" y="277" width="0.0137%" height="15" fill="rgb(250,143,38)" fg:x="37977" fg:w="6"/><text x="87.2754%" y="287.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (106 samples, 0.24%)</title><rect x="87.0506%" y="261" width="0.2429%" height="15" fill="rgb(248,25,0)" fg:x="37988" fg:w="106"/><text x="87.3006%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (148 samples, 0.34%)</title><rect x="87.0391%" y="277" width="0.3391%" height="15" fill="rgb(206,152,27)" fg:x="37983" fg:w="148"/><text x="87.2891%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (37 samples, 0.08%)</title><rect x="87.2935%" y="261" width="0.0848%" height="15" fill="rgb(240,77,30)" fg:x="38094" fg:w="37"/><text x="87.5435%" y="271.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (22 samples, 0.05%)</title><rect x="87.3897%" y="277" width="0.0504%" height="15" fill="rgb(231,5,3)" fg:x="38136" fg:w="22"/><text x="87.6397%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="87.4493%" y="277" width="0.0206%" height="15" fill="rgb(207,226,32)" fg:x="38162" fg:w="9"/><text x="87.6993%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="87.4585%" y="261" width="0.0115%" height="15" fill="rgb(222,207,47)" fg:x="38166" fg:w="5"/><text x="87.7085%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (687 samples, 1.57%)</title><rect x="85.9002%" y="293" width="1.5743%" height="15" fill="rgb(229,115,45)" fg:x="37486" fg:w="687"/><text x="86.1502%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::verify_inputs_exist_and_values_match (693 samples, 1.59%)</title><rect x="85.8888%" y="309" width="1.5880%" height="15" fill="rgb(224,191,6)" fg:x="37481" fg:w="693"/><text x="86.1388%" y="319.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="87.4837%" y="293" width="0.0183%" height="15" fill="rgb(230,227,24)" fg:x="38177" fg:w="8"/><text x="87.7337%" y="303.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="87.4883%" y="277" width="0.0137%" height="15" fill="rgb(228,80,19)" fg:x="38179" fg:w="6"/><text x="87.7383%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (12 samples, 0.03%)</title><rect x="87.4791%" y="309" width="0.0275%" height="15" fill="rgb(247,229,0)" fg:x="38175" fg:w="12"/><text x="87.7291%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="87.5158%" y="261" width="0.0115%" height="15" fill="rgb(237,194,15)" fg:x="38191" fg:w="5"/><text x="87.7658%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="87.5158%" y="277" width="0.0137%" height="15" fill="rgb(219,203,20)" fg:x="38191" fg:w="6"/><text x="87.7658%" y="287.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (30 samples, 0.07%)</title><rect x="87.5135%" y="293" width="0.0687%" height="15" fill="rgb(234,128,8)" fg:x="38190" fg:w="30"/><text x="87.7635%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (23 samples, 0.05%)</title><rect x="87.5295%" y="277" width="0.0527%" height="15" fill="rgb(248,202,8)" fg:x="38197" fg:w="23"/><text x="87.7795%" y="287.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (22 samples, 0.05%)</title><rect x="87.5822%" y="293" width="0.0504%" height="15" fill="rgb(206,104,37)" fg:x="38220" fg:w="22"/><text x="87.8322%" y="303.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (60 samples, 0.14%)</title><rect x="87.5066%" y="309" width="0.1375%" height="15" fill="rgb(223,8,27)" fg:x="38187" fg:w="60"/><text x="87.7566%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (14 samples, 0.03%)</title><rect x="87.6830%" y="277" width="0.0321%" height="15" fill="rgb(216,217,28)" fg:x="38264" fg:w="14"/><text x="87.9330%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (18 samples, 0.04%)</title><rect x="87.6762%" y="293" width="0.0412%" height="15" fill="rgb(249,199,1)" fg:x="38261" fg:w="18"/><text x="87.9262%" y="303.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (34 samples, 0.08%)</title><rect x="87.6464%" y="309" width="0.0779%" height="15" fill="rgb(240,85,17)" fg:x="38248" fg:w="34"/><text x="87.8964%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_odd_multiples_table (26 samples, 0.06%)</title><rect x="88.1918%" y="229" width="0.0596%" height="15" fill="rgb(206,108,45)" fg:x="38486" fg:w="26"/><text x="88.4418%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (12 samples, 0.03%)</title><rect x="88.2238%" y="213" width="0.0275%" height="15" fill="rgb(245,210,41)" fg:x="38500" fg:w="12"/><text x="88.4738%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_wnaf (70 samples, 0.16%)</title><rect x="88.2513%" y="229" width="0.1604%" height="15" fill="rgb(206,13,37)" fg:x="38512" fg:w="70"/><text x="88.5013%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_mul (299 samples, 0.69%)</title><rect x="88.4117%" y="229" width="0.6852%" height="15" fill="rgb(250,61,18)" fg:x="38582" fg:w="299"/><text x="88.6617%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (195 samples, 0.45%)</title><rect x="89.0969%" y="229" width="0.4468%" height="15" fill="rgb(235,172,48)" fg:x="38881" fg:w="195"/><text x="89.3469%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (1,373 samples, 3.15%)</title><rect x="89.5438%" y="229" width="3.1463%" height="15" fill="rgb(249,201,17)" fg:x="39076" fg:w="1373"/><text x="89.7938%" y="239.50">blo..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul (7 samples, 0.02%)</title><rect x="92.6992%" y="213" width="0.0160%" height="15" fill="rgb(219,208,6)" fg:x="40453" fg:w="7"/><text x="92.9492%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_split_lambda (11 samples, 0.03%)</title><rect x="92.6969%" y="229" width="0.0252%" height="15" fill="rgb(248,31,23)" fg:x="40452" fg:w="11"/><text x="92.9469%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult (2,154 samples, 4.94%)</title><rect x="87.7930%" y="245" width="4.9360%" height="15" fill="rgb(245,15,42)" fg:x="38312" fg:w="2154"/><text x="88.0430%" y="255.50">block_..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_table_get_ge_storage (15 samples, 0.03%)</title><rect x="92.7290%" y="245" width="0.0344%" height="15" fill="rgb(222,217,39)" fg:x="40466" fg:w="15"/><text x="92.9790%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_sqrt (526 samples, 1.21%)</title><rect x="92.7634%" y="245" width="1.2053%" height="15" fill="rgb(210,219,27)" fg:x="40481" fg:w="526"/><text x="93.0134%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (18 samples, 0.04%)</title><rect x="93.9847%" y="213" width="0.0412%" height="15" fill="rgb(252,166,36)" fg:x="41014" fg:w="18"/><text x="94.2347%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_gej_var (139 samples, 0.32%)</title><rect x="93.9687%" y="245" width="0.3185%" height="15" fill="rgb(245,132,34)" fg:x="41007" fg:w="139"/><text x="94.2187%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_inv_var (135 samples, 0.31%)</title><rect x="93.9779%" y="229" width="0.3094%" height="15" fill="rgb(236,54,3)" fg:x="41011" fg:w="135"/><text x="94.2279%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (114 samples, 0.26%)</title><rect x="94.0260%" y="213" width="0.2612%" height="15" fill="rgb(241,173,43)" fg:x="41032" fg:w="114"/><text x="94.2760%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_table_set_globalz (88 samples, 0.20%)</title><rect x="94.2918%" y="245" width="0.2017%" height="15" fill="rgb(215,190,9)" fg:x="41148" fg:w="88"/><text x="94.5418%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (1,046 samples, 2.40%)</title><rect x="94.4935%" y="245" width="2.3969%" height="15" fill="rgb(242,101,16)" fg:x="41236" fg:w="1046"/><text x="94.7435%" y="255.50">bl..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_zinv_var (526 samples, 1.21%)</title><rect x="96.8904%" y="245" width="1.2053%" height="15" fill="rgb(223,190,21)" fg:x="42282" fg:w="526"/><text x="97.1404%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (28 samples, 0.06%)</title><rect x="98.0957%" y="245" width="0.0642%" height="15" fill="rgb(215,228,25)" fg:x="42808" fg:w="28"/><text x="98.3457%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (27 samples, 0.06%)</title><rect x="98.1599%" y="245" width="0.0619%" height="15" fill="rgb(225,36,22)" fg:x="42836" fg:w="27"/><text x="98.4099%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (135 samples, 0.31%)</title><rect x="98.2218%" y="245" width="0.3094%" height="15" fill="rgb(251,106,46)" fg:x="42863" fg:w="135"/><text x="98.4718%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecdsa_recover (4,699 samples, 10.77%)</title><rect x="87.7793%" y="261" width="10.7679%" height="15" fill="rgb(208,90,1)" fg:x="38306" fg:w="4699"/><text x="88.0293%" y="271.50">block_verifier`r..</text></g><g><title>block_verifier`fuel_crypto::secp256::signature::Signature::recover (4,718 samples, 10.81%)</title><rect x="87.7541%" y="277" width="10.8114%" height="15" fill="rgb(243,10,4)" fg:x="38295" fg:w="4718"/><text x="88.0041%" y="287.50">block_verifier`f..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_set_b32 (6 samples, 0.01%)</title><rect x="98.5518%" y="261" width="0.0137%" height="15" fill="rgb(212,137,27)" fg:x="43007" fg:w="6"/><text x="98.8018%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.02%)</title><rect x="98.5724%" y="245" width="0.0229%" height="15" fill="rgb(231,220,49)" fg:x="43016" fg:w="10"/><text x="98.8224%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="98.5724%" y="229" width="0.0229%" height="15" fill="rgb(237,96,20)" fg:x="43016" fg:w="10"/><text x="98.8224%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="98.5724%" y="213" width="0.0229%" height="15" fill="rgb(239,229,30)" fg:x="43016" fg:w="10"/><text x="98.8224%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="98.5747%" y="197" width="0.0206%" height="15" fill="rgb(219,65,33)" fg:x="43017" fg:w="9"/><text x="98.8247%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="98.5770%" y="181" width="0.0183%" height="15" fill="rgb(243,134,7)" fg:x="43018" fg:w="8"/><text x="98.8270%" y="191.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (26 samples, 0.06%)</title><rect x="98.5953%" y="245" width="0.0596%" height="15" fill="rgb(216,177,54)" fg:x="43026" fg:w="26"/><text x="98.8453%" y="255.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (39 samples, 0.09%)</title><rect x="98.5678%" y="261" width="0.0894%" height="15" fill="rgb(211,160,20)" fg:x="43014" fg:w="39"/><text x="98.8178%" y="271.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (26 samples, 0.06%)</title><rect x="98.6572%" y="261" width="0.0596%" height="15" fill="rgb(239,85,39)" fg:x="43053" fg:w="26"/><text x="98.9072%" y="271.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (72 samples, 0.16%)</title><rect x="98.5655%" y="277" width="0.1650%" height="15" fill="rgb(232,125,22)" fg:x="43013" fg:w="72"/><text x="98.8155%" y="287.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (44 samples, 0.10%)</title><rect x="98.7305%" y="277" width="0.1008%" height="15" fill="rgb(244,57,34)" fg:x="43085" fg:w="44"/><text x="98.9805%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::_&lt;impl fuel_tx::transaction::types::input::Input&gt;::check_signature (4,882 samples, 11.19%)</title><rect x="87.7289%" y="293" width="11.1872%" height="15" fill="rgb(214,203,32)" fg:x="38284" fg:w="4882"/><text x="87.9789%" y="303.50">block_verifier`f..</text></g><g><title>libsystem_platform.dylib`_platform_memset (35 samples, 0.08%)</title><rect x="98.8359%" y="277" width="0.0802%" height="15" fill="rgb(207,58,43)" fg:x="43131" fg:w="35"/><text x="99.0859%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (9 samples, 0.02%)</title><rect x="98.9161%" y="293" width="0.0206%" height="15" fill="rgb(215,193,15)" fg:x="43166" fg:w="9"/><text x="99.1661%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="98.9207%" y="277" width="0.0160%" height="15" fill="rgb(232,15,44)" fg:x="43168" fg:w="7"/><text x="99.1707%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.9230%" y="261" width="0.0137%" height="15" fill="rgb(212,3,48)" fg:x="43169" fg:w="6"/><text x="99.1730%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="98.9367%" y="293" width="0.0137%" height="15" fill="rgb(218,128,7)" fg:x="43175" fg:w="6"/><text x="99.1867%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::check_signatures (4,900 samples, 11.23%)</title><rect x="87.7243%" y="309" width="11.2285%" height="15" fill="rgb(226,216,39)" fg:x="38282" fg:w="4900"/><text x="87.9743%" y="319.50">block_verifier`fu..</text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="98.9757%" y="245" width="0.0137%" height="15" fill="rgb(243,47,51)" fg:x="43192" fg:w="6"/><text x="99.2257%" y="255.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (56 samples, 0.13%)</title><rect x="99.0032%" y="229" width="0.1283%" height="15" fill="rgb(241,183,40)" fg:x="43204" fg:w="56"/><text x="99.2532%" y="239.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (64 samples, 0.15%)</title><rect x="98.9894%" y="245" width="0.1467%" height="15" fill="rgb(231,217,32)" fg:x="43198" fg:w="64"/><text x="99.2394%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="99.1384%" y="245" width="0.0115%" height="15" fill="rgb(229,61,38)" fg:x="43263" fg:w="5"/><text x="99.3884%" y="255.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (84 samples, 0.19%)</title><rect x="98.9642%" y="277" width="0.1925%" height="15" fill="rgb(225,210,5)" fg:x="43187" fg:w="84"/><text x="99.2142%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (83 samples, 0.19%)</title><rect x="98.9665%" y="261" width="0.1902%" height="15" fill="rgb(231,79,45)" fg:x="43188" fg:w="83"/><text x="99.2165%" y="271.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::instruction::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::instruction_inner (90 samples, 0.21%)</title><rect x="98.9528%" y="309" width="0.2062%" height="15" fill="rgb(224,100,7)" fg:x="43182" fg:w="90"/><text x="99.2028%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::ret (85 samples, 0.19%)</title><rect x="98.9642%" y="293" width="0.1948%" height="15" fill="rgb(241,198,18)" fg:x="43187" fg:w="85"/><text x="99.2142%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="99.1819%" y="229" width="0.0137%" height="15" fill="rgb(252,97,53)" fg:x="43282" fg:w="6"/><text x="99.4319%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="99.1819%" y="213" width="0.0137%" height="15" fill="rgb(220,88,7)" fg:x="43282" fg:w="6"/><text x="99.4319%" y="223.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (7 samples, 0.02%)</title><rect x="99.1819%" y="245" width="0.0160%" height="15" fill="rgb(213,176,14)" fg:x="43282" fg:w="7"/><text x="99.4319%" y="255.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="99.1773%" y="277" width="0.0229%" height="15" fill="rgb(246,73,7)" fg:x="43280" fg:w="10"/><text x="99.4273%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="99.1819%" y="261" width="0.0183%" height="15" fill="rgb(245,64,36)" fg:x="43282" fg:w="8"/><text x="99.4319%" y="271.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (21 samples, 0.05%)</title><rect x="99.1613%" y="293" width="0.0481%" height="15" fill="rgb(245,80,10)" fg:x="43273" fg:w="21"/><text x="99.4113%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::main::predicates::finalize_check_predicate (33 samples, 0.08%)</title><rect x="99.1590%" y="309" width="0.0756%" height="15" fill="rgb(232,107,50)" fg:x="43272" fg:w="33"/><text x="99.4090%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_free (12 samples, 0.03%)</title><rect x="99.2369%" y="309" width="0.0275%" height="15" fill="rgb(253,3,0)" fg:x="43306" fg:w="12"/><text x="99.4869%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.03%)</title><rect x="99.2805%" y="309" width="0.0252%" height="15" fill="rgb(212,99,53)" fg:x="43325" fg:w="11"/><text x="99.5305%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="99.2896%" y="293" width="0.0160%" height="15" fill="rgb(249,111,54)" fg:x="43329" fg:w="7"/><text x="99.5396%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="99.3171%" y="277" width="0.0160%" height="15" fill="rgb(249,55,30)" fg:x="43341" fg:w="7"/><text x="99.5671%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="99.3080%" y="309" width="0.0275%" height="15" fill="rgb(237,47,42)" fg:x="43337" fg:w="12"/><text x="99.5580%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.03%)</title><rect x="99.3103%" y="293" width="0.0252%" height="15" fill="rgb(211,20,18)" fg:x="43338" fg:w="11"/><text x="99.5603%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="99.3400%" y="309" width="0.0298%" height="15" fill="rgb(231,203,46)" fg:x="43351" fg:w="13"/><text x="99.5900%" y="319.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_chargeable_transaction (8,327 samples, 19.08%)</title><rect x="80.3799%" y="325" width="19.0816%" height="15" fill="rgb(237,142,3)" fg:x="35077" fg:w="8327"/><text x="80.6299%" y="335.50">block_verifier`fuel_core_execu..</text></g><g><title>libsystem_platform.dylib`_platform_memset (40 samples, 0.09%)</title><rect x="99.3698%" y="309" width="0.0917%" height="15" fill="rgb(241,107,1)" fg:x="43364" fg:w="40"/><text x="99.6198%" y="319.50"></text></g><g><title>block_verifier`core::fmt::write (7 samples, 0.02%)</title><rect x="99.4890%" y="261" width="0.0160%" height="15" fill="rgb(229,83,13)" fg:x="43416" fg:w="7"/><text x="99.7390%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="99.5050%" y="261" width="0.0160%" height="15" fill="rgb(241,91,40)" fg:x="43423" fg:w="7"/><text x="99.7550%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="99.5073%" y="245" width="0.0137%" height="15" fill="rgb(225,3,45)" fg:x="43424" fg:w="6"/><text x="99.7573%" y="255.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (18 samples, 0.04%)</title><rect x="99.4821%" y="277" width="0.0412%" height="15" fill="rgb(244,223,14)" fg:x="43413" fg:w="18"/><text x="99.7321%" y="287.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (5 samples, 0.01%)</title><rect x="99.5234%" y="277" width="0.0115%" height="15" fill="rgb(224,124,37)" fg:x="43431" fg:w="5"/><text x="99.7734%" y="287.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (33 samples, 0.08%)</title><rect x="99.4798%" y="293" width="0.0756%" height="15" fill="rgb(251,171,30)" fg:x="43412" fg:w="33"/><text x="99.7298%" y="303.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="99.5738%" y="245" width="0.0206%" height="15" fill="rgb(236,46,54)" fg:x="43453" fg:w="9"/><text x="99.8238%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (18 samples, 0.04%)</title><rect x="99.5577%" y="261" width="0.0412%" height="15" fill="rgb(245,213,5)" fg:x="43446" fg:w="18"/><text x="99.8077%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (20 samples, 0.05%)</title><rect x="99.5554%" y="277" width="0.0458%" height="15" fill="rgb(230,144,27)" fg:x="43445" fg:w="20"/><text x="99.8054%" y="287.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (11 samples, 0.03%)</title><rect x="99.6013%" y="277" width="0.0252%" height="15" fill="rgb(220,86,6)" fg:x="43465" fg:w="11"/><text x="99.8513%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.03%)</title><rect x="99.6013%" y="261" width="0.0252%" height="15" fill="rgb(240,20,13)" fg:x="43465" fg:w="11"/><text x="99.8513%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="99.6059%" y="245" width="0.0206%" height="15" fill="rgb(217,89,34)" fg:x="43467" fg:w="9"/><text x="99.8559%" y="255.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (37 samples, 0.08%)</title><rect x="99.5554%" y="293" width="0.0848%" height="15" fill="rgb(229,13,5)" fg:x="43445" fg:w="37"/><text x="99.8054%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="99.6265%" y="277" width="0.0137%" height="15" fill="rgb(244,67,35)" fg:x="43476" fg:w="6"/><text x="99.8765%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="99.6288%" y="261" width="0.0115%" height="15" fill="rgb(221,40,2)" fg:x="43477" fg:w="5"/><text x="99.8788%" y="271.50"></text></g><g><title>block_verifier`fuel_core_storage::kv_store::KeyValueInspect::exists (79 samples, 0.18%)</title><rect x="99.4661%" y="325" width="0.1810%" height="15" fill="rgb(237,157,21)" fg:x="43406" fg:w="79"/><text x="99.7161%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::size_of_value (79 samples, 0.18%)</title><rect x="99.4661%" y="309" width="0.1810%" height="15" fill="rgb(222,94,11)" fg:x="43406" fg:w="79"/><text x="99.7161%" y="319.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (33 samples, 0.08%)</title><rect x="99.6471%" y="325" width="0.0756%" height="15" fill="rgb(249,113,6)" fg:x="43485" fg:w="33"/><text x="99.8971%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (32 samples, 0.07%)</title><rect x="99.7479%" y="325" width="0.0733%" height="15" fill="rgb(238,137,36)" fg:x="43529" fg:w="32"/><text x="99.9979%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="99.8213%" y="325" width="0.0160%" height="15" fill="rgb(210,102,26)" fg:x="43561" fg:w="7"/><text x="100.0713%" y="335.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_transaction_and_commit (9,333 samples, 21.39%)</title><rect x="78.5032%" y="341" width="21.3868%" height="15" fill="rgb(218,30,30)" fg:x="34258" fg:w="9333"/><text x="78.7532%" y="351.50">block_verifier`fuel_core_executor:..</text></g><g><title>libsystem_platform.dylib`_platform_memset (23 samples, 0.05%)</title><rect x="99.8373%" y="325" width="0.0527%" height="15" fill="rgb(214,67,26)" fg:x="43568" fg:w="23"/><text x="100.0873%" y="335.50"></text></g><g><title>block_verifier`fuel_core_upgradable_executor::executor::Executor&lt;S,R&gt;::dry_run (9,399 samples, 21.54%)</title><rect x="78.4092%" y="357" width="21.5381%" height="15" fill="rgb(251,9,53)" fg:x="34217" fg:w="9399"/><text x="78.6592%" y="367.50">block_verifier`fuel_core_upgradabl..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.03%)</title><rect x="99.9129%" y="341" width="0.0344%" height="15" fill="rgb(228,204,25)" fg:x="43601" fg:w="15"/><text x="100.1629%" y="351.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da::_{{closure}}::_{{closure}} (9,419 samples, 21.58%)</title><rect x="78.3978%" y="373" width="21.5839%" height="15" fill="rgb(207,153,8)" fg:x="34212" fg:w="9419"/><text x="78.6478%" y="383.50">block_verifier`fuel_core_parallel_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.03%)</title><rect x="99.9473%" y="357" width="0.0344%" height="15" fill="rgb(242,9,16)" fg:x="43616" fg:w="15"/><text x="100.1973%" y="367.50"></text></g><g><title>block_verifier`std::sys::pal::unix::thread::Thread::new::thread_start (11,238 samples, 25.75%)</title><rect x="74.2341%" y="485" width="25.7522%" height="15" fill="rgb(217,211,10)" fg:x="32395" fg:w="11238"/><text x="74.4841%" y="495.50">block_verifier`std::sys::pal::unix::threa..</text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (11,238 samples, 25.75%)</title><rect x="74.2341%" y="469" width="25.7522%" height="15" fill="rgb(219,228,52)" fg:x="32395" fg:w="11238"/><text x="74.4841%" y="479.50">block_verifier`core::ops::function::FnOnc..</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (11,238 samples, 25.75%)</title><rect x="74.2341%" y="453" width="25.7522%" height="15" fill="rgb(231,92,29)" fg:x="32395" fg:w="11238"/><text x="74.4841%" y="463.50">block_verifier`std::sys::backtrace::__rus..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10,003 samples, 22.92%)</title><rect x="77.0641%" y="437" width="22.9222%" height="15" fill="rgb(232,8,23)" fg:x="33630" fg:w="10003"/><text x="77.3141%" y="447.50">block_verifier`tokio::runtime::task:..</text></g><g><title>block_verifier`tokio::runtime::scheduler::multi_thread::worker::run (10,003 samples, 22.92%)</title><rect x="77.0641%" y="421" width="22.9222%" height="15" fill="rgb(216,211,34)" fg:x="33630" fg:w="10003"/><text x="77.3141%" y="431.50">block_verifier`tokio::runtime::sched..</text></g><g><title>block_verifier`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (10,003 samples, 22.92%)</title><rect x="77.0641%" y="405" width="22.9222%" height="15" fill="rgb(236,151,0)" fg:x="33630" fg:w="10003"/><text x="77.3141%" y="415.50">block_verifier`tokio::runtime::sched..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10,003 samples, 22.92%)</title><rect x="77.0641%" y="389" width="22.9222%" height="15" fill="rgb(209,168,3)" fg:x="33630" fg:w="10003"/><text x="77.3141%" y="399.50">block_verifier`tokio::runtime::task:..</text></g><g><title>all (43,639 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(208,129,28)" fg:x="0" fg:w="43639"/><text x="0.2500%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (11,245 samples, 25.77%)</title><rect x="74.2318%" y="517" width="25.7682%" height="15" fill="rgb(229,78,22)" fg:x="32394" fg:w="11245"/><text x="74.4818%" y="527.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (11,244 samples, 25.77%)</title><rect x="74.2341%" y="501" width="25.7659%" height="15" fill="rgb(228,187,13)" fg:x="32395" fg:w="11244"/><text x="74.4841%" y="511.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>