<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="565.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="565.00"> </text><svg id="frames" x="10" width="1180" total_samples="44673"><g><title>block_verifier`serde::de::SeqAccess::next_element (18 samples, 0.04%)</title><rect x="0.0067%" y="469" width="0.0403%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="18"/><text x="0.2567%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`read (18 samples, 0.04%)</title><rect x="0.0067%" y="453" width="0.0403%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="18"/><text x="0.2567%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`read (219 samples, 0.49%)</title><rect x="0.0470%" y="469" width="0.4902%" height="15" fill="rgb(221,193,54)" fg:x="21" fg:w="219"/><text x="0.2970%" y="479.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (241 samples, 0.54%)</title><rect x="0.0000%" y="485" width="0.5395%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="241"/><text x="0.2500%" y="495.50"></text></g><g><title>block_verifier`block_verifier::main (1,314 samples, 2.94%)</title><rect x="0.0000%" y="517" width="2.9414%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1314"/><text x="0.2500%" y="527.50">bl..</text></g><g><title>block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserialize for fuel_core_types::blockchain::block::BlockV1&lt;TransactionRepresentation&gt;&gt;::deserialize::__Visitor&lt;TransactionRepresentation&gt; as serde::de::Visitor&gt;::visit_seq (1,314 samples, 2.94%)</title><rect x="0.0000%" y="501" width="2.9414%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1314"/><text x="0.2500%" y="511.50">bl..</text></g><g><title>libsystem_kernel.dylib`read (1,072 samples, 2.40%)</title><rect x="0.5417%" y="485" width="2.3997%" height="15" fill="rgb(207,160,47)" fg:x="242" fg:w="1072"/><text x="0.7917%" y="495.50">li..</text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (64 samples, 0.14%)</title><rect x="2.9548%" y="405" width="0.1433%" height="15" fill="rgb(228,23,34)" fg:x="1320" fg:w="64"/><text x="3.2048%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="3.1003%" y="405" width="0.0112%" height="15" fill="rgb(218,30,26)" fg:x="1385" fg:w="5"/><text x="3.3503%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="3.1003%" y="389" width="0.0112%" height="15" fill="rgb(220,122,19)" fg:x="1385" fg:w="5"/><text x="3.3503%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (96 samples, 0.21%)</title><rect x="2.9459%" y="421" width="0.2149%" height="15" fill="rgb(250,228,42)" fg:x="1316" fg:w="96"/><text x="3.1959%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.05%)</title><rect x="3.1115%" y="405" width="0.0492%" height="15" fill="rgb(240,193,28)" fg:x="1390" fg:w="22"/><text x="3.3615%" y="415.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="3.1630%" y="389" width="0.0112%" height="15" fill="rgb(216,20,37)" fg:x="1413" fg:w="5"/><text x="3.4130%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (22 samples, 0.05%)</title><rect x="3.1630%" y="405" width="0.0492%" height="15" fill="rgb(206,188,39)" fg:x="1413" fg:w="22"/><text x="3.4130%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="3.1988%" y="389" width="0.0134%" height="15" fill="rgb(217,207,13)" fg:x="1429" fg:w="6"/><text x="3.4488%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (11 samples, 0.02%)</title><rect x="3.2122%" y="405" width="0.0246%" height="15" fill="rgb(231,73,38)" fg:x="1435" fg:w="11"/><text x="3.4622%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.02%)</title><rect x="3.2212%" y="389" width="0.0157%" height="15" fill="rgb(225,20,46)" fg:x="1439" fg:w="7"/><text x="3.4712%" y="399.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="3.2436%" y="373" width="0.0134%" height="15" fill="rgb(210,31,41)" fg:x="1449" fg:w="6"/><text x="3.4936%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="3.2458%" y="357" width="0.0112%" height="15" fill="rgb(221,200,47)" fg:x="1450" fg:w="5"/><text x="3.4958%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="3.2458%" y="341" width="0.0112%" height="15" fill="rgb(226,26,5)" fg:x="1450" fg:w="5"/><text x="3.4958%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.02%)</title><rect x="3.2413%" y="389" width="0.0201%" height="15" fill="rgb(249,33,26)" fg:x="1448" fg:w="9"/><text x="3.4913%" y="399.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (10 samples, 0.02%)</title><rect x="3.2413%" y="405" width="0.0224%" height="15" fill="rgb(235,183,28)" fg:x="1448" fg:w="10"/><text x="3.4913%" y="415.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::indexation::process_balances_update (51 samples, 0.11%)</title><rect x="3.1630%" y="421" width="0.1142%" height="15" fill="rgb(221,5,38)" fg:x="1413" fg:w="51"/><text x="3.4130%" y="431.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::off_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core::graphql_api::storage::coins::OwnedCoins,fuel_core_storage::tables::Coins&gt;&gt;::process (153 samples, 0.34%)</title><rect x="2.9436%" y="437" width="0.3425%" height="15" fill="rgb(247,18,42)" fg:x="1315" fg:w="153"/><text x="3.1936%" y="447.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (13 samples, 0.03%)</title><rect x="3.3062%" y="373" width="0.0291%" height="15" fill="rgb(241,131,45)" fg:x="1477" fg:w="13"/><text x="3.5562%" y="383.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (9 samples, 0.02%)</title><rect x="3.3152%" y="357" width="0.0201%" height="15" fill="rgb(249,31,29)" fg:x="1481" fg:w="9"/><text x="3.5652%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="3.3242%" y="341" width="0.0112%" height="15" fill="rgb(225,111,53)" fg:x="1485" fg:w="5"/><text x="3.5742%" y="351.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (178 samples, 0.40%)</title><rect x="2.9414%" y="517" width="0.3985%" height="15" fill="rgb(238,160,17)" fg:x="1314" fg:w="178"/><text x="3.1914%" y="527.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (178 samples, 0.40%)</title><rect x="2.9414%" y="501" width="0.3985%" height="15" fill="rgb(214,148,48)" fg:x="1314" fg:w="178"/><text x="3.1914%" y="511.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (178 samples, 0.40%)</title><rect x="2.9414%" y="485" width="0.3985%" height="15" fill="rgb(232,36,49)" fg:x="1314" fg:w="178"/><text x="3.1914%" y="495.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain (178 samples, 0.40%)</title><rect x="2.9414%" y="469" width="0.3985%" height="15" fill="rgb(209,103,24)" fg:x="1314" fg:w="178"/><text x="3.1914%" y="479.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain::_{{closure}} (178 samples, 0.40%)</title><rect x="2.9414%" y="453" width="0.3985%" height="15" fill="rgb(229,88,8)" fg:x="1314" fg:w="178"/><text x="3.1914%" y="463.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (24 samples, 0.05%)</title><rect x="3.2861%" y="437" width="0.0537%" height="15" fill="rgb(213,181,19)" fg:x="1468" fg:w="24"/><text x="3.5361%" y="447.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (24 samples, 0.05%)</title><rect x="3.2861%" y="421" width="0.0537%" height="15" fill="rgb(254,191,54)" fg:x="1468" fg:w="24"/><text x="3.5361%" y="431.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (24 samples, 0.05%)</title><rect x="3.2861%" y="405" width="0.0537%" height="15" fill="rgb(241,83,37)" fg:x="1468" fg:w="24"/><text x="3.5361%" y="415.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (16 samples, 0.04%)</title><rect x="3.3040%" y="389" width="0.0358%" height="15" fill="rgb(233,36,39)" fg:x="1476" fg:w="16"/><text x="3.5540%" y="399.50"></text></g><g><title>block_verifier`DYLD-STUB$$read (15 samples, 0.03%)</title><rect x="3.3421%" y="437" width="0.0336%" height="15" fill="rgb(226,3,54)" fg:x="1493" fg:w="15"/><text x="3.5921%" y="447.50"></text></g><g><title>block_verifier`DYLD-STUB$$read (16 samples, 0.04%)</title><rect x="3.4965%" y="405" width="0.0358%" height="15" fill="rgb(245,192,40)" fg:x="1562" fg:w="16"/><text x="3.7465%" y="415.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (19 samples, 0.04%)</title><rect x="3.6666%" y="389" width="0.0425%" height="15" fill="rgb(238,167,29)" fg:x="1638" fg:w="19"/><text x="3.9166%" y="399.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (5 samples, 0.01%)</title><rect x="3.7159%" y="373" width="0.0112%" height="15" fill="rgb(232,182,51)" fg:x="1660" fg:w="5"/><text x="3.9659%" y="383.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (285 samples, 0.64%)</title><rect x="3.7137%" y="389" width="0.6380%" height="15" fill="rgb(231,60,39)" fg:x="1659" fg:w="285"/><text x="3.9637%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`read (278 samples, 0.62%)</title><rect x="3.7293%" y="373" width="0.6223%" height="15" fill="rgb(208,69,12)" fg:x="1666" fg:w="278"/><text x="3.9793%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`read (3,421 samples, 7.66%)</title><rect x="4.3516%" y="389" width="7.6579%" height="15" fill="rgb(235,93,37)" fg:x="1944" fg:w="3421"/><text x="4.6016%" y="399.50">libsystem_..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.01%)</title><rect x="12.0207%" y="357" width="0.0112%" height="15" fill="rgb(213,116,39)" fg:x="5370" fg:w="5"/><text x="12.2707%" y="367.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (3,798 samples, 8.50%)</title><rect x="3.5346%" y="405" width="8.5018%" height="15" fill="rgb(222,207,29)" fg:x="1579" fg:w="3798"/><text x="3.7846%" y="415.50">block_verifi..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="12.0140%" y="389" width="0.0224%" height="15" fill="rgb(206,96,30)" fg:x="5367" fg:w="10"/><text x="12.2640%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="12.0162%" y="373" width="0.0201%" height="15" fill="rgb(218,138,4)" fg:x="5368" fg:w="9"/><text x="12.2662%" y="383.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (10 samples, 0.02%)</title><rect x="12.0364%" y="405" width="0.0224%" height="15" fill="rgb(250,191,14)" fg:x="5377" fg:w="10"/><text x="12.2864%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`read (17,040 samples, 38.14%)</title><rect x="12.0587%" y="405" width="38.1438%" height="15" fill="rgb(239,60,40)" fg:x="5387" fg:w="17040"/><text x="12.3087%" y="415.50">libsystem_kernel.dylib`read</text></g><g><title>block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserialize for fuel_core_types::blockchain::block::BlockV1&lt;TransactionRepresentation&gt;&gt;::deserialize::__Visitor&lt;TransactionRepresentation&gt; as serde::de::Visitor&gt;::visit_seq (20,873 samples, 46.72%)</title><rect x="3.4808%" y="421" width="46.7240%" height="15" fill="rgb(206,27,48)" fg:x="1555" fg:w="20873"/><text x="3.7308%" y="431.50">block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deser..</text></g><g><title>block_verifier`core::ops::function::Fn::call (10 samples, 0.02%)</title><rect x="50.2160%" y="357" width="0.0224%" height="15" fill="rgb(225,35,8)" fg:x="22433" fg:w="10"/><text x="50.4660%" y="367.50"></text></g><g><title>block_verifier`rocksdb_open (10 samples, 0.02%)</title><rect x="50.2160%" y="341" width="0.0224%" height="15" fill="rgb(250,213,24)" fg:x="22433" fg:w="10"/><text x="50.4660%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DB::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (10 samples, 0.02%)</title><rect x="50.2160%" y="325" width="0.0224%" height="15" fill="rgb(247,123,22)" fg:x="22433" fg:w="10"/><text x="50.4660%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Open(rocksdb::DBOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyDescriptor, std::__1::allocator&lt;rocksdb::ColumnFamilyDescriptor&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator (9 samples, 0.02%)</title><rect x="50.2183%" y="309" width="0.0201%" height="15" fill="rgb(231,138,38)" fg:x="22434" fg:w="9"/><text x="50.4683%" y="319.50"></text></g><g><title>block_verifier`fuel_core::combined_database::CombinedDatabase::temp_database_with_state_rewind_policy (12 samples, 0.03%)</title><rect x="50.2160%" y="389" width="0.0269%" height="15" fill="rgb(231,145,46)" fg:x="22433" fg:w="12"/><text x="50.4660%" y="399.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::open_with (12 samples, 0.03%)</title><rect x="50.2160%" y="373" width="0.0269%" height="15" fill="rgb(251,118,11)" fg:x="22433" fg:w="12"/><text x="50.4660%" y="383.50"></text></g><g><title>block_verifier`fuel_core::combined_database::CombinedDatabase::from_config (13 samples, 0.03%)</title><rect x="50.2160%" y="405" width="0.0291%" height="15" fill="rgb(217,147,25)" fg:x="22433" fg:w="13"/><text x="50.4660%" y="415.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntry (5 samples, 0.01%)</title><rect x="50.2765%" y="293" width="0.0112%" height="15" fill="rgb(247,81,37)" fg:x="22460" fg:w="5"/><text x="50.5265%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBIter::Next (12 samples, 0.03%)</title><rect x="50.2765%" y="309" width="0.0269%" height="15" fill="rgb(209,12,38)" fg:x="22460" fg:w="12"/><text x="50.5265%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db_key_iterator::RocksDBKeyIterator&lt;D,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="50.2765%" y="325" width="0.0425%" height="15" fill="rgb(227,1,9)" fg:x="22460" fg:w="19"/><text x="50.5265%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="50.3056%" y="309" width="0.0134%" height="15" fill="rgb(248,47,43)" fg:x="22473" fg:w="6"/><text x="50.5556%" y="319.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.06%)</title><rect x="50.2742%" y="341" width="0.0582%" height="15" fill="rgb(221,10,30)" fg:x="22459" fg:w="26"/><text x="50.5242%" y="351.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (5 samples, 0.01%)</title><rect x="50.3324%" y="341" width="0.0112%" height="15" fill="rgb(210,229,1)" fg:x="22485" fg:w="5"/><text x="50.5824%" y="351.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.08%)</title><rect x="50.2742%" y="357" width="0.0783%" height="15" fill="rgb(222,148,37)" fg:x="22459" fg:w="35"/><text x="50.5242%" y="367.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::coin::_&lt;impl fuel_core_chain_config::genesis::GenesisCommitment for fuel_core_types::entities::coins::coin::Coin&gt;::root (53 samples, 0.12%)</title><rect x="50.3548%" y="357" width="0.1186%" height="15" fill="rgb(234,67,33)" fg:x="22495" fg:w="53"/><text x="50.6048%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (44 samples, 0.10%)</title><rect x="50.3749%" y="341" width="0.0985%" height="15" fill="rgb(247,98,35)" fg:x="22504" fg:w="44"/><text x="50.6249%" y="351.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (121 samples, 0.27%)</title><rect x="50.4891%" y="341" width="0.2709%" height="15" fill="rgb(247,138,52)" fg:x="22555" fg:w="121"/><text x="50.7391%" y="351.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (129 samples, 0.29%)</title><rect x="50.4734%" y="357" width="0.2888%" height="15" fill="rgb(213,79,30)" fg:x="22548" fg:w="129"/><text x="50.7234%" y="367.50"></text></g><g><title>block_verifier`fuel_core::database::genesis_progress::_&lt;impl fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::GenesisStage&gt;&gt;&gt;::genesis_coins_root (243 samples, 0.54%)</title><rect x="50.2720%" y="373" width="0.5440%" height="15" fill="rgb(246,177,23)" fg:x="22458" fg:w="243"/><text x="50.5220%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (24 samples, 0.05%)</title><rect x="50.7622%" y="357" width="0.0537%" height="15" fill="rgb(230,62,27)" fg:x="22677" fg:w="24"/><text x="51.0122%" y="367.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::override_chain_config_if_needed (8 samples, 0.02%)</title><rect x="50.8361%" y="373" width="0.0179%" height="15" fill="rgb(216,154,8)" fg:x="22710" fg:w="8"/><text x="51.0861%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (8 samples, 0.02%)</title><rect x="50.8361%" y="357" width="0.0179%" height="15" fill="rgb(244,35,45)" fg:x="22710" fg:w="8"/><text x="51.0861%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (6 samples, 0.01%)</title><rect x="50.8697%" y="309" width="0.0134%" height="15" fill="rgb(251,115,12)" fg:x="22725" fg:w="6"/><text x="51.1197%" y="319.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::indexation::process_balances_update (6 samples, 0.01%)</title><rect x="50.8831%" y="309" width="0.0134%" height="15" fill="rgb(240,54,50)" fg:x="22731" fg:w="6"/><text x="51.1331%" y="319.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::off_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core::graphql_api::storage::coins::OwnedCoins,fuel_core_storage::tables::Coins&gt;&gt;::process (14 samples, 0.03%)</title><rect x="50.8674%" y="325" width="0.0313%" height="15" fill="rgb(233,84,52)" fg:x="22724" fg:w="14"/><text x="51.1174%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="50.9659%" y="245" width="0.0134%" height="15" fill="rgb(207,117,47)" fg:x="22768" fg:w="6"/><text x="51.2159%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (36 samples, 0.08%)</title><rect x="50.9055%" y="277" width="0.0806%" height="15" fill="rgb(249,43,39)" fg:x="22741" fg:w="36"/><text x="51.1555%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.06%)</title><rect x="50.9256%" y="261" width="0.0604%" height="15" fill="rgb(209,38,44)" fg:x="22750" fg:w="27"/><text x="51.1756%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (41 samples, 0.09%)</title><rect x="50.8988%" y="293" width="0.0918%" height="15" fill="rgb(236,212,23)" fg:x="22738" fg:w="41"/><text x="51.1488%" y="303.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (7 samples, 0.02%)</title><rect x="51.0040%" y="133" width="0.0157%" height="15" fill="rgb(242,79,21)" fg:x="22785" fg:w="7"/><text x="51.2540%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (5 samples, 0.01%)</title><rect x="51.0084%" y="117" width="0.0112%" height="15" fill="rgb(211,96,35)" fg:x="22787" fg:w="5"/><text x="51.2584%" y="127.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (10 samples, 0.02%)</title><rect x="50.9995%" y="149" width="0.0224%" height="15" fill="rgb(253,215,40)" fg:x="22783" fg:w="10"/><text x="51.2495%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (15 samples, 0.03%)</title><rect x="50.9928%" y="181" width="0.0336%" height="15" fill="rgb(211,81,21)" fg:x="22780" fg:w="15"/><text x="51.2428%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (14 samples, 0.03%)</title><rect x="50.9950%" y="165" width="0.0313%" height="15" fill="rgb(208,190,38)" fg:x="22781" fg:w="14"/><text x="51.2450%" y="175.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain::_{{closure}} (73 samples, 0.16%)</title><rect x="50.8674%" y="341" width="0.1634%" height="15" fill="rgb(235,213,38)" fg:x="22724" fg:w="73"/><text x="51.1174%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (59 samples, 0.13%)</title><rect x="50.8988%" y="325" width="0.1321%" height="15" fill="rgb(237,122,38)" fg:x="22738" fg:w="59"/><text x="51.1488%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (59 samples, 0.13%)</title><rect x="50.8988%" y="309" width="0.1321%" height="15" fill="rgb(244,218,35)" fg:x="22738" fg:w="59"/><text x="51.1488%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (18 samples, 0.04%)</title><rect x="50.9905%" y="293" width="0.0403%" height="15" fill="rgb(240,68,47)" fg:x="22779" fg:w="18"/><text x="51.2405%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (18 samples, 0.04%)</title><rect x="50.9905%" y="277" width="0.0403%" height="15" fill="rgb(210,16,53)" fg:x="22779" fg:w="18"/><text x="51.2405%" y="287.50"></text></g><g><title>block_verifier`rocksdb_write (18 samples, 0.04%)</title><rect x="50.9905%" y="261" width="0.0403%" height="15" fill="rgb(235,124,12)" fg:x="22779" fg:w="18"/><text x="51.2405%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (18 samples, 0.04%)</title><rect x="50.9905%" y="245" width="0.0403%" height="15" fill="rgb(224,169,11)" fg:x="22779" fg:w="18"/><text x="51.2405%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (18 samples, 0.04%)</title><rect x="50.9905%" y="229" width="0.0403%" height="15" fill="rgb(250,166,2)" fg:x="22779" fg:w="18"/><text x="51.2405%" y="239.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (17 samples, 0.04%)</title><rect x="50.9928%" y="213" width="0.0381%" height="15" fill="rgb(242,216,29)" fg:x="22780" fg:w="17"/><text x="51.2428%" y="223.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (17 samples, 0.04%)</title><rect x="50.9928%" y="197" width="0.0381%" height="15" fill="rgb(230,116,27)" fg:x="22780" fg:w="17"/><text x="51.2428%" y="207.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="51.0308%" y="325" width="0.0134%" height="15" fill="rgb(228,99,48)" fg:x="22797" fg:w="6"/><text x="51.2808%" y="335.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain (85 samples, 0.19%)</title><rect x="50.8629%" y="357" width="0.1903%" height="15" fill="rgb(253,11,6)" fg:x="22722" fg:w="85"/><text x="51.1129%" y="367.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (10 samples, 0.02%)</title><rect x="51.0308%" y="341" width="0.0224%" height="15" fill="rgb(247,143,39)" fg:x="22797" fg:w="10"/><text x="51.2808%" y="351.50"></text></g><g><title>block_verifier`core::fmt::write (12 samples, 0.03%)</title><rect x="51.0689%" y="277" width="0.0269%" height="15" fill="rgb(236,97,10)" fg:x="22814" fg:w="12"/><text x="51.3189%" y="287.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (10 samples, 0.02%)</title><rect x="51.0734%" y="261" width="0.0224%" height="15" fill="rgb(233,208,19)" fg:x="22816" fg:w="10"/><text x="51.3234%" y="271.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (20 samples, 0.04%)</title><rect x="51.0644%" y="293" width="0.0448%" height="15" fill="rgb(216,164,2)" fg:x="22812" fg:w="20"/><text x="51.3144%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="51.0957%" y="277" width="0.0134%" height="15" fill="rgb(220,129,5)" fg:x="22826" fg:w="6"/><text x="51.3457%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="51.1248%" y="293" width="0.0112%" height="15" fill="rgb(242,17,10)" fg:x="22839" fg:w="5"/><text x="51.3748%" y="303.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (34 samples, 0.08%)</title><rect x="51.0622%" y="309" width="0.0761%" height="15" fill="rgb(242,107,0)" fg:x="22811" fg:w="34"/><text x="51.3122%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.04%)</title><rect x="51.1427%" y="277" width="0.0425%" height="15" fill="rgb(251,28,31)" fg:x="22847" fg:w="19"/><text x="51.3927%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (19 samples, 0.04%)</title><rect x="51.1427%" y="261" width="0.0425%" height="15" fill="rgb(233,223,10)" fg:x="22847" fg:w="19"/><text x="51.3927%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="51.1718%" y="245" width="0.0134%" height="15" fill="rgb(215,21,27)" fg:x="22860" fg:w="6"/><text x="51.4218%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="51.1853%" y="261" width="0.0112%" height="15" fill="rgb(232,23,21)" fg:x="22866" fg:w="5"/><text x="51.4353%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="51.1853%" y="245" width="0.0112%" height="15" fill="rgb(244,5,23)" fg:x="22866" fg:w="5"/><text x="51.4353%" y="255.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.01%)</title><rect x="51.1853%" y="277" width="0.0134%" height="15" fill="rgb(226,81,46)" fg:x="22866" fg:w="6"/><text x="51.4353%" y="287.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (28 samples, 0.06%)</title><rect x="51.1405%" y="293" width="0.0627%" height="15" fill="rgb(247,70,30)" fg:x="22846" fg:w="28"/><text x="51.3905%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (31 samples, 0.07%)</title><rect x="51.1383%" y="309" width="0.0694%" height="15" fill="rgb(212,68,19)" fg:x="22845" fg:w="31"/><text x="51.3883%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (70 samples, 0.16%)</title><rect x="51.0577%" y="325" width="0.1567%" height="15" fill="rgb(240,187,13)" fg:x="22809" fg:w="70"/><text x="51.3077%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.01%)</title><rect x="51.3465%" y="309" width="0.0134%" height="15" fill="rgb(223,113,26)" fg:x="22938" fg:w="6"/><text x="51.5965%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (69 samples, 0.15%)</title><rect x="51.2144%" y="325" width="0.1545%" height="15" fill="rgb(206,192,2)" fg:x="22879" fg:w="69"/><text x="51.4644%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="51.4114%" y="229" width="0.0157%" height="15" fill="rgb(241,108,4)" fg:x="22967" fg:w="7"/><text x="51.6614%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="51.4270%" y="229" width="0.0291%" height="15" fill="rgb(247,173,49)" fg:x="22974" fg:w="13"/><text x="51.6770%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="51.4382%" y="213" width="0.0179%" height="15" fill="rgb(224,114,35)" fg:x="22979" fg:w="8"/><text x="51.6882%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (30 samples, 0.07%)</title><rect x="51.4091%" y="245" width="0.0672%" height="15" fill="rgb(245,159,27)" fg:x="22966" fg:w="30"/><text x="51.6591%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (6 samples, 0.01%)</title><rect x="51.4629%" y="229" width="0.0134%" height="15" fill="rgb(245,172,44)" fg:x="22990" fg:w="6"/><text x="51.7129%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (35 samples, 0.08%)</title><rect x="51.4024%" y="261" width="0.0783%" height="15" fill="rgb(236,23,11)" fg:x="22963" fg:w="35"/><text x="51.6524%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (42 samples, 0.09%)</title><rect x="51.4002%" y="293" width="0.0940%" height="15" fill="rgb(205,117,38)" fg:x="22962" fg:w="42"/><text x="51.6502%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (41 samples, 0.09%)</title><rect x="51.4024%" y="277" width="0.0918%" height="15" fill="rgb(237,72,25)" fg:x="22963" fg:w="41"/><text x="51.6524%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="51.4830%" y="261" width="0.0112%" height="15" fill="rgb(244,70,9)" fg:x="22999" fg:w="5"/><text x="51.7330%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="51.4830%" y="245" width="0.0112%" height="15" fill="rgb(217,125,39)" fg:x="22999" fg:w="5"/><text x="51.7330%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (46 samples, 0.10%)</title><rect x="51.3935%" y="309" width="0.1030%" height="15" fill="rgb(235,36,10)" fg:x="22959" fg:w="46"/><text x="51.6435%" y="319.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (61 samples, 0.14%)</title><rect x="51.3823%" y="325" width="0.1365%" height="15" fill="rgb(251,123,47)" fg:x="22954" fg:w="61"/><text x="51.6323%" y="335.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::on_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core_storage::tables::Coins,fuel_core_storage::tables::Coins&gt;&gt;::process (215 samples, 0.48%)</title><rect x="51.0532%" y="341" width="0.4813%" height="15" fill="rgb(221,13,13)" fg:x="22807" fg:w="215"/><text x="51.3032%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="51.5904%" y="261" width="0.0201%" height="15" fill="rgb(238,131,9)" fg:x="23047" fg:w="9"/><text x="51.8404%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.02%)</title><rect x="51.6106%" y="261" width="0.0157%" height="15" fill="rgb(211,50,8)" fg:x="23056" fg:w="7"/><text x="51.8606%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (39 samples, 0.09%)</title><rect x="51.5434%" y="293" width="0.0873%" height="15" fill="rgb(245,182,24)" fg:x="23026" fg:w="39"/><text x="51.7934%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.07%)</title><rect x="51.5591%" y="277" width="0.0716%" height="15" fill="rgb(242,14,37)" fg:x="23033" fg:w="32"/><text x="51.8091%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (44 samples, 0.10%)</title><rect x="51.5345%" y="309" width="0.0985%" height="15" fill="rgb(246,228,12)" fg:x="23022" fg:w="44"/><text x="51.7845%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Append (6 samples, 0.01%)</title><rect x="51.6375%" y="165" width="0.0134%" height="15" fill="rgb(213,55,15)" fg:x="23068" fg:w="6"/><text x="51.8875%" y="175.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Flush (6 samples, 0.01%)</title><rect x="51.6375%" y="149" width="0.0134%" height="15" fill="rgb(209,9,3)" fg:x="23068" fg:w="6"/><text x="51.8875%" y="159.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::WriteBuffered (6 samples, 0.01%)</title><rect x="51.6375%" y="133" width="0.0134%" height="15" fill="rgb(230,59,30)" fg:x="23068" fg:w="6"/><text x="51.8875%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`write (6 samples, 0.01%)</title><rect x="51.6375%" y="117" width="0.0134%" height="15" fill="rgb(209,121,21)" fg:x="23068" fg:w="6"/><text x="51.8875%" y="127.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (9 samples, 0.02%)</title><rect x="51.6330%" y="229" width="0.0201%" height="15" fill="rgb(220,109,13)" fg:x="23066" fg:w="9"/><text x="51.8830%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (9 samples, 0.02%)</title><rect x="51.6330%" y="213" width="0.0201%" height="15" fill="rgb(232,18,1)" fg:x="23066" fg:w="9"/><text x="51.8830%" y="223.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (9 samples, 0.02%)</title><rect x="51.6330%" y="197" width="0.0201%" height="15" fill="rgb(215,41,42)" fg:x="23066" fg:w="9"/><text x="51.8830%" y="207.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::EmitPhysicalRecord (7 samples, 0.02%)</title><rect x="51.6375%" y="181" width="0.0157%" height="15" fill="rgb(224,123,36)" fg:x="23068" fg:w="7"/><text x="51.8875%" y="191.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (9 samples, 0.02%)</title><rect x="51.6621%" y="165" width="0.0201%" height="15" fill="rgb(240,125,3)" fg:x="23079" fg:w="9"/><text x="51.9121%" y="175.50"></text></g><g><title>block_verifier`rocksdb_write (26 samples, 0.06%)</title><rect x="51.6330%" y="277" width="0.0582%" height="15" fill="rgb(205,98,50)" fg:x="23066" fg:w="26"/><text x="51.8830%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (26 samples, 0.06%)</title><rect x="51.6330%" y="261" width="0.0582%" height="15" fill="rgb(205,185,37)" fg:x="23066" fg:w="26"/><text x="51.8830%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (26 samples, 0.06%)</title><rect x="51.6330%" y="245" width="0.0582%" height="15" fill="rgb(238,207,15)" fg:x="23066" fg:w="26"/><text x="51.8830%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (17 samples, 0.04%)</title><rect x="51.6531%" y="229" width="0.0381%" height="15" fill="rgb(213,199,42)" fg:x="23075" fg:w="17"/><text x="51.9031%" y="239.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (16 samples, 0.04%)</title><rect x="51.6554%" y="213" width="0.0358%" height="15" fill="rgb(235,201,11)" fg:x="23076" fg:w="16"/><text x="51.9054%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (16 samples, 0.04%)</title><rect x="51.6554%" y="197" width="0.0358%" height="15" fill="rgb(207,46,11)" fg:x="23076" fg:w="16"/><text x="51.9054%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (16 samples, 0.04%)</title><rect x="51.6554%" y="181" width="0.0358%" height="15" fill="rgb(241,35,35)" fg:x="23076" fg:w="16"/><text x="51.9054%" y="191.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (27 samples, 0.06%)</title><rect x="51.6330%" y="293" width="0.0604%" height="15" fill="rgb(243,32,47)" fg:x="23066" fg:w="27"/><text x="51.8830%" y="303.50"></text></g><g><title>block_verifier`rocksdb::EncodeVarint32 (5 samples, 0.01%)</title><rect x="51.6957%" y="261" width="0.0112%" height="15" fill="rgb(247,202,23)" fg:x="23094" fg:w="5"/><text x="51.9457%" y="271.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (9 samples, 0.02%)</title><rect x="51.7136%" y="245" width="0.0201%" height="15" fill="rgb(219,102,11)" fg:x="23102" fg:w="9"/><text x="51.9636%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="51.7225%" y="229" width="0.0112%" height="15" fill="rgb(243,110,44)" fg:x="23106" fg:w="5"/><text x="51.9725%" y="239.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (48 samples, 0.11%)</title><rect x="51.6330%" y="309" width="0.1074%" height="15" fill="rgb(222,74,54)" fg:x="23066" fg:w="48"/><text x="51.8830%" y="319.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (21 samples, 0.05%)</title><rect x="51.6934%" y="293" width="0.0470%" height="15" fill="rgb(216,99,12)" fg:x="23093" fg:w="21"/><text x="51.9434%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (21 samples, 0.05%)</title><rect x="51.6934%" y="277" width="0.0470%" height="15" fill="rgb(226,22,26)" fg:x="23093" fg:w="21"/><text x="51.9434%" y="287.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (14 samples, 0.03%)</title><rect x="51.7091%" y="261" width="0.0313%" height="15" fill="rgb(217,163,10)" fg:x="23100" fg:w="14"/><text x="51.9591%" y="271.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_on_chain::_{{closure}} (310 samples, 0.69%)</title><rect x="51.0532%" y="357" width="0.6939%" height="15" fill="rgb(213,25,53)" fg:x="22807" fg:w="310"/><text x="51.3032%" y="367.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (95 samples, 0.21%)</title><rect x="51.5345%" y="341" width="0.2127%" height="15" fill="rgb(252,105,26)" fg:x="23022" fg:w="95"/><text x="51.7845%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (95 samples, 0.21%)</title><rect x="51.5345%" y="325" width="0.2127%" height="15" fill="rgb(220,39,43)" fg:x="23022" fg:w="95"/><text x="51.7845%" y="335.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="51.7471%" y="341" width="0.0112%" height="15" fill="rgb(229,68,48)" fg:x="23117" fg:w="5"/><text x="51.9971%" y="351.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (409 samples, 0.92%)</title><rect x="50.8562%" y="373" width="0.9155%" height="15" fill="rgb(252,8,32)" fg:x="22719" fg:w="409"/><text x="51.1062%" y="383.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (11 samples, 0.02%)</title><rect x="51.7471%" y="357" width="0.0246%" height="15" fill="rgb(223,20,43)" fg:x="23117" fg:w="11"/><text x="51.9971%" y="367.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (690 samples, 1.54%)</title><rect x="50.2630%" y="389" width="1.5446%" height="15" fill="rgb(229,81,49)" fg:x="22454" fg:w="690"/><text x="50.5130%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (16 samples, 0.04%)</title><rect x="51.7718%" y="373" width="0.0358%" height="15" fill="rgb(236,28,36)" fg:x="23128" fg:w="16"/><text x="52.0218%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core::service::config::Config as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="51.8076%" y="373" width="0.0157%" height="15" fill="rgb(249,185,26)" fg:x="23144" fg:w="7"/><text x="52.0576%" y="383.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (712 samples, 1.59%)</title><rect x="50.2451%" y="405" width="1.5938%" height="15" fill="rgb(249,174,33)" fg:x="22446" fg:w="712"/><text x="50.4951%" y="415.50"></text></g><g><title>block_verifier`fuel_core::service::sub_services::init_sub_services (14 samples, 0.03%)</title><rect x="51.8076%" y="389" width="0.0313%" height="15" fill="rgb(233,201,37)" fg:x="23144" fg:w="14"/><text x="52.0576%" y="399.50"></text></g><g><title>block_verifier`block_verifier::main::_{{closure}} (730 samples, 1.63%)</title><rect x="50.2071%" y="421" width="1.6341%" height="15" fill="rgb(221,78,26)" fg:x="22429" fg:w="730"/><text x="50.4571%" y="431.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (5 samples, 0.01%)</title><rect x="51.8412%" y="165" width="0.0112%" height="15" fill="rgb(250,127,30)" fg:x="23159" fg:w="5"/><text x="52.0912%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__unlinkat (5 samples, 0.01%)</title><rect x="51.8412%" y="149" width="0.0112%" height="15" fill="rgb(230,49,44)" fg:x="23159" fg:w="5"/><text x="52.0912%" y="159.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.01%)</title><rect x="51.8412%" y="245" width="0.0134%" height="15" fill="rgb(229,67,23)" fg:x="23159" fg:w="6"/><text x="52.0912%" y="255.50"></text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.01%)</title><rect x="51.8412%" y="229" width="0.0134%" height="15" fill="rgb(249,83,47)" fg:x="23159" fg:w="6"/><text x="52.0912%" y="239.50"></text></g><g><title>block_verifier`&lt;tempfile::dir::TempDir as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="51.8412%" y="213" width="0.0134%" height="15" fill="rgb(215,43,3)" fg:x="23159" fg:w="6"/><text x="52.0912%" y="223.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all (6 samples, 0.01%)</title><rect x="51.8412%" y="197" width="0.0134%" height="15" fill="rgb(238,154,13)" fg:x="23159" fg:w="6"/><text x="52.0912%" y="207.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (6 samples, 0.01%)</title><rect x="51.8412%" y="181" width="0.0134%" height="15" fill="rgb(219,56,2)" fg:x="23159" fg:w="6"/><text x="52.0912%" y="191.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$tracing..instrument..Instrumented$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$+ (10 samples, 0.02%)</title><rect x="51.8412%" y="341" width="0.0224%" height="15" fill="rgb(233,0,4)" fg:x="23159" fg:w="10"/><text x="52.0912%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_desc+ (10 samples, 0.02%)</title><rect x="51.8412%" y="325" width="0.0224%" height="15" fill="rgb(235,30,7)" fg:x="23159" fg:w="10"/><text x="52.0912%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$fuel_core_services..service..run$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$+ (10 samples, 0.02%)</title><rect x="51.8412%" y="309" width="0.0224%" height="15" fill="rgb(250,79,13)" fg:x="23159" fg:w="10"/><text x="52.0912%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_gas_price_service::v0::service::GasPriceServiceV0&lt;fuel_core_gas_price_service::common::l2_block_source::FuelL2BlockSource&lt;fuel_core::service::adapters::ConsensusParametersProvider&gt;,fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase&gt;&gt;&gt;&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="51.8412%" y="293" width="0.0224%" height="15" fill="rgb(211,146,34)" fg:x="23159" fg:w="10"/><text x="52.0912%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::service::adapters::consensus_parameters_provider::SharedState&gt; (10 samples, 0.02%)</title><rect x="51.8412%" y="277" width="0.0224%" height="15" fill="rgb(228,22,38)" fg:x="23159" fg:w="10"/><text x="52.0912%" y="287.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.02%)</title><rect x="51.8412%" y="261" width="0.0224%" height="15" fill="rgb(235,168,5)" fg:x="23159" fg:w="10"/><text x="52.0912%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (5 samples, 0.01%)</title><rect x="51.8792%" y="165" width="0.0112%" height="15" fill="rgb(221,155,16)" fg:x="23176" fg:w="5"/><text x="52.1292%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="51.8792%" y="149" width="0.0112%" height="15" fill="rgb(215,215,53)" fg:x="23176" fg:w="5"/><text x="52.1292%" y="159.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (23 samples, 0.05%)</title><rect x="51.8792%" y="181" width="0.0515%" height="15" fill="rgb(223,4,10)" fg:x="23176" fg:w="23"/><text x="52.1292%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.04%)</title><rect x="51.8926%" y="165" width="0.0381%" height="15" fill="rgb(234,103,6)" fg:x="23182" fg:w="17"/><text x="52.1426%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.04%)</title><rect x="51.8949%" y="149" width="0.0358%" height="15" fill="rgb(227,97,0)" fg:x="23183" fg:w="16"/><text x="52.1449%" y="159.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fuel_tx::transaction::Transaction&gt;&gt; (24 samples, 0.05%)</title><rect x="51.8792%" y="197" width="0.0537%" height="15" fill="rgb(234,150,53)" fg:x="23176" fg:w="24"/><text x="52.1292%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (15 samples, 0.03%)</title><rect x="51.9643%" y="149" width="0.0336%" height="15" fill="rgb(228,201,54)" fg:x="23214" fg:w="15"/><text x="52.2143%" y="159.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_types::services::block_importer::ImportResult&gt; (56 samples, 0.13%)</title><rect x="51.8747%" y="213" width="0.1254%" height="15" fill="rgb(222,22,37)" fg:x="23174" fg:w="56"/><text x="52.1247%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.07%)</title><rect x="51.9329%" y="197" width="0.0672%" height="15" fill="rgb(237,53,32)" fg:x="23200" fg:w="30"/><text x="52.1829%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.06%)</title><rect x="51.9397%" y="181" width="0.0604%" height="15" fill="rgb(233,25,53)" fg:x="23203" fg:w="27"/><text x="52.1897%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (17 samples, 0.04%)</title><rect x="51.9620%" y="165" width="0.0381%" height="15" fill="rgb(210,40,34)" fg:x="23213" fg:w="17"/><text x="52.2120%" y="175.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (63 samples, 0.14%)</title><rect x="51.8635%" y="341" width="0.1410%" height="15" fill="rgb(241,220,44)" fg:x="23169" fg:w="63"/><text x="52.1135%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt; (63 samples, 0.14%)</title><rect x="51.8635%" y="325" width="0.1410%" height="15" fill="rgb(235,28,35)" fg:x="23169" fg:w="63"/><text x="52.1135%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;fuel_core_services::service::run&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (63 samples, 0.14%)</title><rect x="51.8635%" y="309" width="0.1410%" height="15" fill="rgb(210,56,17)" fg:x="23169" fg:w="63"/><text x="52.1135%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::graphql_api::worker_service::Task&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt; (63 samples, 0.14%)</title><rect x="51.8635%" y="293" width="0.1410%" height="15" fill="rgb(224,130,29)" fg:x="23169" fg:w="63"/><text x="52.1135%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::stream::filter_map::FilterMap&lt;tokio_stream::wrappers::broadcast::BroadcastStream&lt;fuel_core_importer::ImporterResult&gt;,futures_util::future::ready::Ready&lt;core::option::Option&lt;fuel_core_importer::ImporterResult&gt;&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;&gt; (58 samples, 0.13%)</title><rect x="51.8747%" y="277" width="0.1298%" height="15" fill="rgb(235,212,8)" fg:x="23174" fg:w="58"/><text x="52.1247%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::sync::broadcast::Receiver&lt;fuel_core_importer::ImporterResult&gt;&gt; (58 samples, 0.13%)</title><rect x="51.8747%" y="261" width="0.1298%" height="15" fill="rgb(223,33,50)" fg:x="23174" fg:w="58"/><text x="52.1247%" y="271.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (58 samples, 0.13%)</title><rect x="51.8747%" y="245" width="0.1298%" height="15" fill="rgb(219,149,13)" fg:x="23174" fg:w="58"/><text x="52.1247%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_importer::importer::Awaiter&gt; (58 samples, 0.13%)</title><rect x="51.8747%" y="229" width="0.1298%" height="15" fill="rgb(250,156,29)" fg:x="23174" fg:w="58"/><text x="52.1247%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (75 samples, 0.17%)</title><rect x="51.8412%" y="421" width="0.1679%" height="15" fill="rgb(216,193,19)" fg:x="23159" fg:w="75"/><text x="52.0912%" y="431.50"></text></g><g><title>block_verifier`&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (75 samples, 0.17%)</title><rect x="51.8412%" y="405" width="0.1679%" height="15" fill="rgb(216,135,14)" fg:x="23159" fg:w="75"/><text x="52.0912%" y="415.50"></text></g><g><title>block_verifier`tokio::runtime::scheduler::current_thread::shutdown2 (75 samples, 0.17%)</title><rect x="51.8412%" y="389" width="0.1679%" height="15" fill="rgb(241,47,5)" fg:x="23159" fg:w="75"/><text x="52.0912%" y="399.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::shutdown (75 samples, 0.17%)</title><rect x="51.8412%" y="373" width="0.1679%" height="15" fill="rgb(233,42,35)" fg:x="23159" fg:w="75"/><text x="52.0912%" y="383.50"></text></g><g><title>block_verifier`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (75 samples, 0.17%)</title><rect x="51.8412%" y="357" width="0.1679%" height="15" fill="rgb(231,13,6)" fg:x="23159" fg:w="75"/><text x="52.0912%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;TxPool,BlockImporter,OnChain,OffChain&gt; as fuel_core_services::service::RunnableService&gt;::into_task::_{{closure}} (6 samples, 0.01%)</title><rect x="52.0180%" y="373" width="0.0134%" height="15" fill="rgb(207,181,40)" fg:x="23238" fg:w="6"/><text x="52.2680%" y="383.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (11 samples, 0.02%)</title><rect x="52.0180%" y="421" width="0.0246%" height="15" fill="rgb(254,173,49)" fg:x="23238" fg:w="11"/><text x="52.2680%" y="431.50"></text></g><g><title>block_verifier`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="52.0180%" y="405" width="0.0246%" height="15" fill="rgb(221,1,38)" fg:x="23238" fg:w="11"/><text x="52.2680%" y="415.50"></text></g><g><title>block_verifier`fuel_core_services::service::initialize_loop::_{{closure}} (11 samples, 0.02%)</title><rect x="52.0180%" y="389" width="0.0246%" height="15" fill="rgb(206,124,46)" fg:x="23238" fg:w="11"/><text x="52.2680%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`read (373 samples, 0.83%)</title><rect x="52.0426%" y="421" width="0.8350%" height="15" fill="rgb(249,21,11)" fg:x="23249" fg:w="373"/><text x="52.2926%" y="431.50"></text></g><g><title>block_verifier`block_verifier::main (22,125 samples, 49.53%)</title><rect x="3.3756%" y="437" width="49.5266%" height="15" fill="rgb(222,201,40)" fg:x="1508" fg:w="22125"/><text x="3.6256%" y="447.50">block_verifier`block_verifier::main</text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="52.8776%" y="421" width="0.0246%" height="15" fill="rgb(235,61,29)" fg:x="23622" fg:w="11"/><text x="53.1276%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`read (9,566 samples, 21.41%)</title><rect x="52.9044%" y="437" width="21.4134%" height="15" fill="rgb(219,207,3)" fg:x="23634" fg:w="9566"/><text x="53.1544%" y="447.50">libsystem_kernel.dylib`read</text></g><g><title>block_verifier`std::rt::lang_start::_{{closure}} (31,711 samples, 70.98%)</title><rect x="3.3421%" y="469" width="70.9847%" height="15" fill="rgb(222,56,46)" fg:x="1493" fg:w="31711"/><text x="3.5921%" y="479.50">block_verifier`std::rt::lang_start::_{{closure}}</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (31,711 samples, 70.98%)</title><rect x="3.3421%" y="453" width="70.9847%" height="15" fill="rgb(239,76,54)" fg:x="1493" fg:w="31711"/><text x="3.5921%" y="463.50">block_verifier`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>block_verifier`main (31,712 samples, 70.99%)</title><rect x="3.3421%" y="501" width="70.9869%" height="15" fill="rgb(231,124,27)" fg:x="1493" fg:w="31712"/><text x="3.5921%" y="511.50">block_verifier`main</text></g><g><title>block_verifier`std::rt::lang_start_internal (31,712 samples, 70.99%)</title><rect x="3.3421%" y="485" width="70.9869%" height="15" fill="rgb(249,195,6)" fg:x="1493" fg:w="31712"/><text x="3.5921%" y="495.50">block_verifier`std::rt::lang_start_internal</text></g><g><title>dyld`start (31,714 samples, 70.99%)</title><rect x="3.3421%" y="517" width="70.9914%" height="15" fill="rgb(237,174,47)" fg:x="1493" fg:w="31714"/><text x="3.5921%" y="527.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__exit (10 samples, 0.02%)</title><rect x="74.3335%" y="517" width="0.0224%" height="15" fill="rgb(206,201,31)" fg:x="33207" fg:w="10"/><text x="74.5835%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="74.3671%" y="309" width="0.0112%" height="15" fill="rgb(231,57,52)" fg:x="33222" fg:w="5"/><text x="74.6171%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (5 samples, 0.01%)</title><rect x="74.4991%" y="277" width="0.0112%" height="15" fill="rgb(248,177,22)" fg:x="33281" fg:w="5"/><text x="74.7491%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="74.5103%" y="277" width="0.0112%" height="15" fill="rgb(215,211,37)" fg:x="33286" fg:w="5"/><text x="74.7603%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (24 samples, 0.05%)</title><rect x="74.5215%" y="277" width="0.0537%" height="15" fill="rgb(241,128,51)" fg:x="33291" fg:w="24"/><text x="74.7715%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (7 samples, 0.02%)</title><rect x="74.5797%" y="277" width="0.0157%" height="15" fill="rgb(227,165,31)" fg:x="33317" fg:w="7"/><text x="74.8297%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (84 samples, 0.19%)</title><rect x="74.4186%" y="293" width="0.1880%" height="15" fill="rgb(228,167,24)" fg:x="33245" fg:w="84"/><text x="74.6686%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (5 samples, 0.01%)</title><rect x="74.5954%" y="277" width="0.0112%" height="15" fill="rgb(228,143,12)" fg:x="33324" fg:w="5"/><text x="74.8454%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (103 samples, 0.23%)</title><rect x="74.3783%" y="309" width="0.2306%" height="15" fill="rgb(249,149,8)" fg:x="33227" fg:w="103"/><text x="74.6283%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (117 samples, 0.26%)</title><rect x="74.3648%" y="325" width="0.2619%" height="15" fill="rgb(243,35,44)" fg:x="33221" fg:w="117"/><text x="74.6148%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.02%)</title><rect x="74.6111%" y="309" width="0.0157%" height="15" fill="rgb(246,89,9)" fg:x="33331" fg:w="7"/><text x="74.8611%" y="319.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureCustomizableOption(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, rocksdb::OptionTypeInfo const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="74.6491%" y="69" width="0.0112%" height="15" fill="rgb(233,213,13)" fg:x="33348" fg:w="5"/><text x="74.8991%" y="79.50"></text></g><g><title>block_verifier`rocksdb::OptionTypeInfo::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="74.6491%" y="53" width="0.0112%" height="15" fill="rgb(233,141,41)" fg:x="33348" fg:w="5"/><text x="74.8991%" y="63.50"></text></g><g><title>block_verifier`rocksdb::TableFactory::CreateFromString(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::shared_ptr (5 samples, 0.01%)</title><rect x="74.6491%" y="37" width="0.0112%" height="15" fill="rgb(239,167,4)" fg:x="33348" fg:w="5"/><text x="74.8991%" y="47.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.02%)</title><rect x="74.6491%" y="101" width="0.0179%" height="15" fill="rgb(209,217,16)" fg:x="33348" fg:w="8"/><text x="74.8991%" y="111.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureSomeOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, rocksdb::OptionTypeInfo, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, rocksdb::OptionTypeInfo&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.02%)</title><rect x="74.6491%" y="85" width="0.0179%" height="15" fill="rgb(219,88,35)" fg:x="33348" fg:w="8"/><text x="74.8991%" y="95.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::EndSection(rocksdb::ConfigOptions const&amp;, rocksdb::OptionSection, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.03%)</title><rect x="74.6469%" y="165" width="0.0269%" height="15" fill="rgb(220,193,23)" fg:x="33347" fg:w="12"/><text x="74.8969%" y="175.50"></text></g><g><title>block_verifier`rocksdb::GetColumnFamilyOptionsFromMap(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="74.6491%" y="149" width="0.0246%" height="15" fill="rgb(230,90,52)" fg:x="33348" fg:w="11"/><text x="74.8991%" y="159.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableCFOptions::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (11 samples, 0.02%)</title><rect x="74.6491%" y="133" width="0.0246%" height="15" fill="rgb(252,106,19)" fg:x="33348" fg:w="11"/><text x="74.8991%" y="143.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (11 samples, 0.02%)</title><rect x="74.6491%" y="117" width="0.0246%" height="15" fill="rgb(206,74,20)" fg:x="33348" fg:w="11"/><text x="74.8991%" y="127.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.04%)</title><rect x="74.6469%" y="181" width="0.0358%" height="15" fill="rgb(230,138,44)" fg:x="33347" fg:w="16"/><text x="74.8969%" y="191.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (21 samples, 0.05%)</title><rect x="74.6379%" y="309" width="0.0470%" height="15" fill="rgb(235,182,43)" fg:x="33343" fg:w="21"/><text x="74.8879%" y="319.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (21 samples, 0.05%)</title><rect x="74.6379%" y="293" width="0.0470%" height="15" fill="rgb(242,16,51)" fg:x="33343" fg:w="21"/><text x="74.8879%" y="303.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (21 samples, 0.05%)</title><rect x="74.6379%" y="277" width="0.0470%" height="15" fill="rgb(248,9,4)" fg:x="33343" fg:w="21"/><text x="74.8879%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (21 samples, 0.05%)</title><rect x="74.6379%" y="261" width="0.0470%" height="15" fill="rgb(210,31,22)" fg:x="33343" fg:w="21"/><text x="74.8879%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (20 samples, 0.04%)</title><rect x="74.6402%" y="245" width="0.0448%" height="15" fill="rgb(239,54,39)" fg:x="33344" fg:w="20"/><text x="74.8902%" y="255.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.04%)</title><rect x="74.6424%" y="229" width="0.0425%" height="15" fill="rgb(230,99,41)" fg:x="33345" fg:w="19"/><text x="74.8924%" y="239.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.04%)</title><rect x="74.6424%" y="213" width="0.0425%" height="15" fill="rgb(253,106,12)" fg:x="33345" fg:w="19"/><text x="74.8924%" y="223.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (18 samples, 0.04%)</title><rect x="74.6446%" y="197" width="0.0403%" height="15" fill="rgb(213,46,41)" fg:x="33346" fg:w="18"/><text x="74.8946%" y="207.50"></text></g><g><title>block_verifier`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (8 samples, 0.02%)</title><rect x="74.6849%" y="197" width="0.0179%" height="15" fill="rgb(215,133,35)" fg:x="33364" fg:w="8"/><text x="74.9349%" y="207.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Append (21 samples, 0.05%)</title><rect x="74.7051%" y="181" width="0.0470%" height="15" fill="rgb(213,28,5)" fg:x="33373" fg:w="21"/><text x="74.9551%" y="191.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Flush (21 samples, 0.05%)</title><rect x="74.7051%" y="165" width="0.0470%" height="15" fill="rgb(215,77,49)" fg:x="33373" fg:w="21"/><text x="74.9551%" y="175.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::WriteBuffered (21 samples, 0.05%)</title><rect x="74.7051%" y="149" width="0.0470%" height="15" fill="rgb(248,100,22)" fg:x="33373" fg:w="21"/><text x="74.9551%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`write (21 samples, 0.05%)</title><rect x="74.7051%" y="133" width="0.0470%" height="15" fill="rgb(208,67,9)" fg:x="33373" fg:w="21"/><text x="74.9551%" y="143.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (34 samples, 0.08%)</title><rect x="74.6849%" y="245" width="0.0761%" height="15" fill="rgb(219,133,21)" fg:x="33364" fg:w="34"/><text x="74.9349%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (34 samples, 0.08%)</title><rect x="74.6849%" y="229" width="0.0761%" height="15" fill="rgb(246,46,29)" fg:x="33364" fg:w="34"/><text x="74.9349%" y="239.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (34 samples, 0.08%)</title><rect x="74.6849%" y="213" width="0.0761%" height="15" fill="rgb(246,185,52)" fg:x="33364" fg:w="34"/><text x="74.9349%" y="223.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::EmitPhysicalRecord (25 samples, 0.06%)</title><rect x="74.7051%" y="197" width="0.0560%" height="15" fill="rgb(252,136,11)" fg:x="33373" fg:w="25"/><text x="74.9551%" y="207.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (6 samples, 0.01%)</title><rect x="74.8260%" y="133" width="0.0134%" height="15" fill="rgb(219,138,53)" fg:x="33427" fg:w="6"/><text x="75.0760%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (27 samples, 0.06%)</title><rect x="74.8439%" y="133" width="0.0604%" height="15" fill="rgb(211,51,23)" fg:x="33435" fg:w="27"/><text x="75.0939%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (44 samples, 0.10%)</title><rect x="74.8103%" y="149" width="0.0985%" height="15" fill="rgb(247,221,28)" fg:x="33420" fg:w="44"/><text x="75.0603%" y="159.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (59 samples, 0.13%)</title><rect x="74.7789%" y="165" width="0.1321%" height="15" fill="rgb(251,222,45)" fg:x="33406" fg:w="59"/><text x="75.0289%" y="175.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Allocate (6 samples, 0.01%)</title><rect x="74.9110%" y="165" width="0.0134%" height="15" fill="rgb(217,162,53)" fg:x="33465" fg:w="6"/><text x="75.1610%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (67 samples, 0.15%)</title><rect x="74.7767%" y="181" width="0.1500%" height="15" fill="rgb(229,93,14)" fg:x="33405" fg:w="67"/><text x="75.0267%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteCF (74 samples, 0.17%)</title><rect x="74.7700%" y="213" width="0.1656%" height="15" fill="rgb(209,67,49)" fg:x="33402" fg:w="74"/><text x="75.0200%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (73 samples, 0.16%)</title><rect x="74.7722%" y="197" width="0.1634%" height="15" fill="rgb(213,87,29)" fg:x="33403" fg:w="73"/><text x="75.0222%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="74.9938%" y="133" width="0.0224%" height="15" fill="rgb(205,151,52)" fg:x="33502" fg:w="10"/><text x="75.2438%" y="143.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (33 samples, 0.07%)</title><rect x="74.9580%" y="165" width="0.0739%" height="15" fill="rgb(253,215,39)" fg:x="33486" fg:w="33"/><text x="75.2080%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (22 samples, 0.05%)</title><rect x="74.9827%" y="149" width="0.0492%" height="15" fill="rgb(221,220,41)" fg:x="33497" fg:w="22"/><text x="75.2327%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.02%)</title><rect x="75.0162%" y="133" width="0.0157%" height="15" fill="rgb(218,133,21)" fg:x="33512" fg:w="7"/><text x="75.2662%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (38 samples, 0.09%)</title><rect x="74.9536%" y="181" width="0.0851%" height="15" fill="rgb(221,193,43)" fg:x="33484" fg:w="38"/><text x="75.2036%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (55 samples, 0.12%)</title><rect x="74.9356%" y="213" width="0.1231%" height="15" fill="rgb(240,128,52)" fg:x="33476" fg:w="55"/><text x="75.1856%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (55 samples, 0.12%)</title><rect x="74.9356%" y="197" width="0.1231%" height="15" fill="rgb(253,114,12)" fg:x="33476" fg:w="55"/><text x="75.1856%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="75.0386%" y="181" width="0.0201%" height="15" fill="rgb(215,223,47)" fg:x="33522" fg:w="9"/><text x="75.2886%" y="191.50"></text></g><g><title>block_verifier`rocksdb_write (172 samples, 0.39%)</title><rect x="74.6849%" y="293" width="0.3850%" height="15" fill="rgb(248,225,23)" fg:x="33364" fg:w="172"/><text x="74.9349%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (172 samples, 0.39%)</title><rect x="74.6849%" y="277" width="0.3850%" height="15" fill="rgb(250,108,0)" fg:x="33364" fg:w="172"/><text x="74.9349%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (172 samples, 0.39%)</title><rect x="74.6849%" y="261" width="0.3850%" height="15" fill="rgb(228,208,7)" fg:x="33364" fg:w="172"/><text x="74.9349%" y="271.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (138 samples, 0.31%)</title><rect x="74.7610%" y="245" width="0.3089%" height="15" fill="rgb(244,45,10)" fg:x="33398" fg:w="138"/><text x="75.0110%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (137 samples, 0.31%)</title><rect x="74.7633%" y="229" width="0.3067%" height="15" fill="rgb(207,125,25)" fg:x="33399" fg:w="137"/><text x="75.0133%" y="239.50"></text></g><g><title>block_verifier`rocksdb::ReadRecordFromWriteBatch (5 samples, 0.01%)</title><rect x="75.0588%" y="213" width="0.0112%" height="15" fill="rgb(210,195,18)" fg:x="33531" fg:w="5"/><text x="75.3088%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (173 samples, 0.39%)</title><rect x="74.6849%" y="309" width="0.3873%" height="15" fill="rgb(249,80,12)" fg:x="33364" fg:w="173"/><text x="74.9349%" y="319.50"></text></g><g><title>block_verifier`rocksdb_writebatch_delete_cf (5 samples, 0.01%)</title><rect x="75.0722%" y="309" width="0.0112%" height="15" fill="rgb(221,65,9)" fg:x="33537" fg:w="5"/><text x="75.3222%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Delete (5 samples, 0.01%)</title><rect x="75.0722%" y="293" width="0.0112%" height="15" fill="rgb(235,49,36)" fg:x="33537" fg:w="5"/><text x="75.3222%" y="303.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (30 samples, 0.07%)</title><rect x="75.1147%" y="261" width="0.0672%" height="15" fill="rgb(225,32,20)" fg:x="33556" fg:w="30"/><text x="75.3647%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="75.1528%" y="245" width="0.0291%" height="15" fill="rgb(215,141,46)" fg:x="33573" fg:w="13"/><text x="75.4028%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (50 samples, 0.11%)</title><rect x="75.1035%" y="277" width="0.1119%" height="15" fill="rgb(250,160,47)" fg:x="33551" fg:w="50"/><text x="75.3535%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.03%)</title><rect x="75.1819%" y="261" width="0.0336%" height="15" fill="rgb(216,222,40)" fg:x="33586" fg:w="15"/><text x="75.4319%" y="271.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (264 samples, 0.59%)</title><rect x="74.6334%" y="325" width="0.5910%" height="15" fill="rgb(234,217,39)" fg:x="33341" fg:w="264"/><text x="74.8834%" y="335.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (63 samples, 0.14%)</title><rect x="75.0834%" y="309" width="0.1410%" height="15" fill="rgb(207,178,40)" fg:x="33542" fg:w="63"/><text x="75.3334%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (62 samples, 0.14%)</title><rect x="75.0856%" y="293" width="0.1388%" height="15" fill="rgb(221,136,13)" fg:x="33543" fg:w="62"/><text x="75.3356%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (12 samples, 0.03%)</title><rect x="75.2244%" y="325" width="0.0269%" height="15" fill="rgb(249,199,10)" fg:x="33605" fg:w="12"/><text x="75.4744%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::commit (402 samples, 0.90%)</title><rect x="74.3604%" y="373" width="0.8999%" height="15" fill="rgb(249,222,13)" fg:x="33219" fg:w="402"/><text x="74.6104%" y="383.50"></text></g><g><title>block_verifier`fuel_core::database::_&lt;impl fuel_core_storage::transactional::Modifiable for fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;&gt;::commit_changes (402 samples, 0.90%)</title><rect x="74.3604%" y="357" width="0.8999%" height="15" fill="rgb(244,185,38)" fg:x="33219" fg:w="402"/><text x="74.6104%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (402 samples, 0.90%)</title><rect x="74.3604%" y="341" width="0.8999%" height="15" fill="rgb(236,202,9)" fg:x="33219" fg:w="402"/><text x="74.6104%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (7 samples, 0.02%)</title><rect x="75.3319%" y="261" width="0.0157%" height="15" fill="rgb(250,229,37)" fg:x="33653" fg:w="7"/><text x="75.5819%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9 samples, 0.02%)</title><rect x="75.3319%" y="277" width="0.0201%" height="15" fill="rgb(206,174,23)" fg:x="33653" fg:w="9"/><text x="75.5819%" y="287.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.02%)</title><rect x="75.3319%" y="341" width="0.0224%" height="15" fill="rgb(211,33,43)" fg:x="33653" fg:w="10"/><text x="75.5819%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.02%)</title><rect x="75.3319%" y="325" width="0.0224%" height="15" fill="rgb(245,58,50)" fg:x="33653" fg:w="10"/><text x="75.5819%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="75.3319%" y="309" width="0.0224%" height="15" fill="rgb(244,68,36)" fg:x="33653" fg:w="10"/><text x="75.5819%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (10 samples, 0.02%)</title><rect x="75.3319%" y="293" width="0.0224%" height="15" fill="rgb(232,229,15)" fg:x="33653" fg:w="10"/><text x="75.5819%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (7 samples, 0.02%)</title><rect x="75.3654%" y="277" width="0.0157%" height="15" fill="rgb(254,30,23)" fg:x="33668" fg:w="7"/><text x="75.6154%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (8 samples, 0.02%)</title><rect x="75.3654%" y="293" width="0.0179%" height="15" fill="rgb(235,160,14)" fg:x="33668" fg:w="8"/><text x="75.6154%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.03%)</title><rect x="75.3587%" y="341" width="0.0291%" height="15" fill="rgb(212,155,44)" fg:x="33665" fg:w="13"/><text x="75.6087%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (12 samples, 0.03%)</title><rect x="75.3610%" y="325" width="0.0269%" height="15" fill="rgb(226,2,50)" fg:x="33666" fg:w="12"/><text x="75.6110%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (12 samples, 0.03%)</title><rect x="75.3610%" y="309" width="0.0269%" height="15" fill="rgb(234,177,6)" fg:x="33666" fg:w="12"/><text x="75.6110%" y="319.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (51 samples, 0.11%)</title><rect x="75.2781%" y="357" width="0.1142%" height="15" fill="rgb(217,24,9)" fg:x="33629" fg:w="51"/><text x="75.5281%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (30 samples, 0.07%)</title><rect x="75.3968%" y="341" width="0.0672%" height="15" fill="rgb(220,13,46)" fg:x="33682" fg:w="30"/><text x="75.6468%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (36 samples, 0.08%)</title><rect x="75.3945%" y="357" width="0.0806%" height="15" fill="rgb(239,221,27)" fg:x="33681" fg:w="36"/><text x="75.6445%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="75.4841%" y="277" width="0.0179%" height="15" fill="rgb(222,198,25)" fg:x="33721" fg:w="8"/><text x="75.7341%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="75.4886%" y="261" width="0.0134%" height="15" fill="rgb(211,99,13)" fg:x="33723" fg:w="6"/><text x="75.7386%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (14 samples, 0.03%)</title><rect x="75.4796%" y="293" width="0.0313%" height="15" fill="rgb(232,111,31)" fg:x="33719" fg:w="14"/><text x="75.7296%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (15 samples, 0.03%)</title><rect x="75.4796%" y="309" width="0.0336%" height="15" fill="rgb(245,82,37)" fg:x="33719" fg:w="15"/><text x="75.7296%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (16 samples, 0.04%)</title><rect x="75.4796%" y="325" width="0.0358%" height="15" fill="rgb(227,149,46)" fg:x="33719" fg:w="16"/><text x="75.7296%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (19 samples, 0.04%)</title><rect x="75.4751%" y="357" width="0.0425%" height="15" fill="rgb(218,36,50)" fg:x="33717" fg:w="19"/><text x="75.7251%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (18 samples, 0.04%)</title><rect x="75.4774%" y="341" width="0.0403%" height="15" fill="rgb(226,80,48)" fg:x="33718" fg:w="18"/><text x="75.7274%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="75.5177%" y="357" width="0.0112%" height="15" fill="rgb(238,224,15)" fg:x="33736" fg:w="5"/><text x="75.7677%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="75.5311%" y="357" width="0.0112%" height="15" fill="rgb(241,136,10)" fg:x="33742" fg:w="5"/><text x="75.7811%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::store_new_block (134 samples, 0.30%)</title><rect x="75.2602%" y="373" width="0.3000%" height="15" fill="rgb(208,32,45)" fg:x="33621" fg:w="134"/><text x="75.5102%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="75.5490%" y="357" width="0.0112%" height="15" fill="rgb(207,135,9)" fg:x="33750" fg:w="5"/><text x="75.7990%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="75.6027%" y="293" width="0.0112%" height="15" fill="rgb(206,86,44)" fg:x="33774" fg:w="5"/><text x="75.8527%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="75.5781%" y="309" width="0.0381%" height="15" fill="rgb(245,177,15)" fg:x="33763" fg:w="17"/><text x="75.8281%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="75.5759%" y="325" width="0.0448%" height="15" fill="rgb(206,64,50)" fg:x="33762" fg:w="20"/><text x="75.8259%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.05%)</title><rect x="75.5691%" y="357" width="0.0537%" height="15" fill="rgb(234,36,40)" fg:x="33759" fg:w="24"/><text x="75.8191%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="75.5759%" y="341" width="0.0470%" height="15" fill="rgb(213,64,8)" fg:x="33762" fg:w="21"/><text x="75.8259%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="75.6542%" y="277" width="0.0179%" height="15" fill="rgb(210,75,36)" fg:x="33797" fg:w="8"/><text x="75.9042%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="75.6564%" y="261" width="0.0157%" height="15" fill="rgb(229,88,21)" fg:x="33798" fg:w="7"/><text x="75.9064%" y="271.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="75.6385%" y="293" width="0.0358%" height="15" fill="rgb(252,204,47)" fg:x="33790" fg:w="16"/><text x="75.8885%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="75.6385%" y="309" width="0.0470%" height="15" fill="rgb(208,77,27)" fg:x="33790" fg:w="21"/><text x="75.8885%" y="319.50"></text></g><g><title>block_verifier`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.05%)</title><rect x="75.6341%" y="341" width="0.0537%" height="15" fill="rgb(221,76,26)" fg:x="33788" fg:w="24"/><text x="75.8841%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="75.6363%" y="325" width="0.0515%" height="15" fill="rgb(225,139,18)" fg:x="33789" fg:w="23"/><text x="75.8863%" y="335.50"></text></g><g><title>block_verifier`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="75.6878%" y="341" width="0.0112%" height="15" fill="rgb(230,137,11)" fg:x="33812" fg:w="5"/><text x="75.9378%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (5 samples, 0.01%)</title><rect x="75.6990%" y="309" width="0.0112%" height="15" fill="rgb(212,28,1)" fg:x="33817" fg:w="5"/><text x="75.9490%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="75.6990%" y="293" width="0.0112%" height="15" fill="rgb(248,164,17)" fg:x="33817" fg:w="5"/><text x="75.9490%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (8 samples, 0.02%)</title><rect x="75.7370%" y="277" width="0.0179%" height="15" fill="rgb(222,171,42)" fg:x="33834" fg:w="8"/><text x="75.9870%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="75.7549%" y="277" width="0.0134%" height="15" fill="rgb(243,84,45)" fg:x="33842" fg:w="6"/><text x="76.0049%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (6 samples, 0.01%)</title><rect x="75.7728%" y="277" width="0.0134%" height="15" fill="rgb(252,49,23)" fg:x="33850" fg:w="6"/><text x="76.0228%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (37 samples, 0.08%)</title><rect x="75.7124%" y="309" width="0.0828%" height="15" fill="rgb(215,19,7)" fg:x="33823" fg:w="37"/><text x="75.9624%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.06%)</title><rect x="75.7303%" y="293" width="0.0649%" height="15" fill="rgb(238,81,41)" fg:x="33831" fg:w="29"/><text x="75.9803%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (45 samples, 0.10%)</title><rect x="75.6990%" y="325" width="0.1007%" height="15" fill="rgb(210,199,37)" fg:x="33817" fg:w="45"/><text x="75.9490%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fuel_core_executor::ports::MaybeCheckedTransaction&gt;&gt; (47 samples, 0.11%)</title><rect x="75.6990%" y="341" width="0.1052%" height="15" fill="rgb(244,192,49)" fg:x="33817" fg:w="47"/><text x="75.9490%" y="351.50"></text></g><g><title>block_verifier`core::hash::BuildHasher::hash_one (11 samples, 0.02%)</title><rect x="75.8579%" y="325" width="0.0246%" height="15" fill="rgb(226,211,11)" fg:x="33888" fg:w="11"/><text x="76.1079%" y="335.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::Bucket::add (9 samples, 0.02%)</title><rect x="75.8825%" y="325" width="0.0201%" height="15" fill="rgb(236,162,54)" fg:x="33899" fg:w="9"/><text x="76.1325%" y="335.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="75.8915%" y="309" width="0.0112%" height="15" fill="rgb(220,229,9)" fg:x="33903" fg:w="5"/><text x="76.1415%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="75.9139%" y="309" width="0.0112%" height="15" fill="rgb(250,87,22)" fg:x="33913" fg:w="5"/><text x="76.1639%" y="319.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23 samples, 0.05%)</title><rect x="75.9027%" y="325" width="0.0515%" height="15" fill="rgb(239,43,17)" fg:x="33908" fg:w="23"/><text x="76.1527%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="75.9251%" y="309" width="0.0291%" height="15" fill="rgb(231,177,25)" fg:x="33918" fg:w="13"/><text x="76.1751%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="75.9542%" y="325" width="0.0112%" height="15" fill="rgb(219,179,1)" fg:x="33931" fg:w="5"/><text x="76.2042%" y="335.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::process (74 samples, 0.17%)</title><rect x="75.8064%" y="341" width="0.1656%" height="15" fill="rgb(238,219,53)" fg:x="33865" fg:w="74"/><text x="76.0564%" y="351.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="75.9967%" y="309" width="0.0201%" height="15" fill="rgb(232,167,36)" fg:x="33950" fg:w="9"/><text x="76.2467%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (5 samples, 0.01%)</title><rect x="76.0168%" y="229" width="0.0112%" height="15" fill="rgb(244,19,51)" fg:x="33959" fg:w="5"/><text x="76.2668%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.01%)</title><rect x="76.0168%" y="213" width="0.0112%" height="15" fill="rgb(224,6,22)" fg:x="33959" fg:w="5"/><text x="76.2668%" y="223.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="76.0168%" y="309" width="0.0134%" height="15" fill="rgb(224,145,5)" fg:x="33959" fg:w="6"/><text x="76.2668%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="76.0168%" y="293" width="0.0134%" height="15" fill="rgb(234,130,49)" fg:x="33959" fg:w="6"/><text x="76.2668%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.01%)</title><rect x="76.0168%" y="277" width="0.0134%" height="15" fill="rgb(254,6,2)" fg:x="33959" fg:w="6"/><text x="76.2668%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.01%)</title><rect x="76.0168%" y="261" width="0.0134%" height="15" fill="rgb(208,96,46)" fg:x="33959" fg:w="6"/><text x="76.2668%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.01%)</title><rect x="76.0168%" y="245" width="0.0134%" height="15" fill="rgb(239,3,39)" fg:x="33959" fg:w="6"/><text x="76.2668%" y="255.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.04%)</title><rect x="75.9944%" y="325" width="0.0448%" height="15" fill="rgb(233,210,1)" fg:x="33949" fg:w="20"/><text x="76.2444%" y="335.50"></text></g><g><title>block_verifier`core::slice::sort::stable::driftsort_main (6 samples, 0.01%)</title><rect x="76.0459%" y="325" width="0.0134%" height="15" fill="rgb(244,137,37)" fg:x="33972" fg:w="6"/><text x="76.2959%" y="335.50"></text></g><g><title>block_verifier`core::slice::sort::stable::quicksort::quicksort (6 samples, 0.01%)</title><rect x="76.0459%" y="309" width="0.0134%" height="15" fill="rgb(240,136,2)" fg:x="33972" fg:w="6"/><text x="76.2959%" y="319.50"></text></g><g><title>block_verifier`core::slice::sort::stable::quicksort::quicksort (5 samples, 0.01%)</title><rect x="76.0482%" y="293" width="0.0112%" height="15" fill="rgb(239,18,37)" fg:x="33973" fg:w="5"/><text x="76.2982%" y="303.50"></text></g><g><title>block_verifier`core::slice::sort::stable::quicksort::quicksort (5 samples, 0.01%)</title><rect x="76.0482%" y="277" width="0.0112%" height="15" fill="rgb(218,185,22)" fg:x="33973" fg:w="5"/><text x="76.2982%" y="287.50"></text></g><g><title>block_verifier`core::slice::sort::stable::quicksort::quicksort (5 samples, 0.01%)</title><rect x="76.0482%" y="261" width="0.0112%" height="15" fill="rgb(225,218,4)" fg:x="33973" fg:w="5"/><text x="76.2982%" y="271.50"></text></g><g><title>block_verifier`core::slice::sort::stable::quicksort::quicksort (5 samples, 0.01%)</title><rect x="76.0482%" y="245" width="0.0112%" height="15" fill="rgb(230,182,32)" fg:x="33973" fg:w="5"/><text x="76.2982%" y="255.50"></text></g><g><title>block_verifier`core::slice::sort::stable::quicksort::quicksort (5 samples, 0.01%)</title><rect x="76.0482%" y="229" width="0.0112%" height="15" fill="rgb(242,56,43)" fg:x="33973" fg:w="5"/><text x="76.2982%" y="239.50"></text></g><g><title>block_verifier`core::slice::sort::stable::quicksort::quicksort (5 samples, 0.01%)</title><rect x="76.0482%" y="213" width="0.0112%" height="15" fill="rgb(233,99,24)" fg:x="33973" fg:w="5"/><text x="76.2982%" y="223.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::split_equally (57 samples, 0.13%)</title><rect x="75.9721%" y="341" width="0.1276%" height="15" fill="rgb(234,209,42)" fg:x="33939" fg:w="57"/><text x="76.2221%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.04%)</title><rect x="76.0616%" y="325" width="0.0381%" height="15" fill="rgb(227,7,12)" fg:x="33979" fg:w="17"/><text x="76.3116%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="76.1959%" y="293" width="0.0157%" height="15" fill="rgb(245,203,43)" fg:x="34039" fg:w="7"/><text x="76.4459%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="76.1959%" y="277" width="0.0157%" height="15" fill="rgb(238,205,33)" fg:x="34039" fg:w="7"/><text x="76.4459%" y="287.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="76.1914%" y="309" width="0.0224%" height="15" fill="rgb(231,56,7)" fg:x="34037" fg:w="10"/><text x="76.4414%" y="319.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.01%)</title><rect x="76.2138%" y="309" width="0.0134%" height="15" fill="rgb(244,186,29)" fg:x="34047" fg:w="6"/><text x="76.4638%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt; as fuel_core_storage::transactional::Modifiable&gt;::commit_changes (61 samples, 0.14%)</title><rect x="76.0997%" y="325" width="0.1365%" height="15" fill="rgb(234,111,31)" fg:x="33996" fg:w="61"/><text x="76.3497%" y="335.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (6 samples, 0.01%)</title><rect x="76.2384%" y="325" width="0.0134%" height="15" fill="rgb(241,149,10)" fg:x="34058" fg:w="6"/><text x="76.4884%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="76.3884%" y="277" width="0.0201%" height="15" fill="rgb(249,206,44)" fg:x="34125" fg:w="9"/><text x="76.6384%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (74 samples, 0.17%)</title><rect x="76.2675%" y="309" width="0.1656%" height="15" fill="rgb(251,153,30)" fg:x="34071" fg:w="74"/><text x="76.5175%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (56 samples, 0.13%)</title><rect x="76.3078%" y="293" width="0.1254%" height="15" fill="rgb(239,152,38)" fg:x="34089" fg:w="56"/><text x="76.5578%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (5 samples, 0.01%)</title><rect x="76.4220%" y="277" width="0.0112%" height="15" fill="rgb(249,139,47)" fg:x="34140" fg:w="5"/><text x="76.6720%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (86 samples, 0.19%)</title><rect x="76.2541%" y="325" width="0.1925%" height="15" fill="rgb(244,64,35)" fg:x="34065" fg:w="86"/><text x="76.5041%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (34 samples, 0.08%)</title><rect x="76.4511%" y="277" width="0.0761%" height="15" fill="rgb(216,46,15)" fg:x="34153" fg:w="34"/><text x="76.7011%" y="287.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (35 samples, 0.08%)</title><rect x="76.4511%" y="293" width="0.0783%" height="15" fill="rgb(250,74,19)" fg:x="34153" fg:w="35"/><text x="76.7011%" y="303.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::PartialBlockHeader::generate (38 samples, 0.09%)</title><rect x="76.4466%" y="325" width="0.0851%" height="15" fill="rgb(249,42,33)" fg:x="34151" fg:w="38"/><text x="76.6966%" y="335.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::generate_txns_root (38 samples, 0.09%)</title><rect x="76.4466%" y="309" width="0.0851%" height="15" fill="rgb(242,149,17)" fg:x="34151" fg:w="38"/><text x="76.6966%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (5 samples, 0.01%)</title><rect x="76.5406%" y="325" width="0.0112%" height="15" fill="rgb(244,29,21)" fg:x="34193" fg:w="5"/><text x="76.7906%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.01%)</title><rect x="76.5406%" y="309" width="0.0112%" height="15" fill="rgb(220,130,37)" fg:x="34193" fg:w="5"/><text x="76.7906%" y="319.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results (215 samples, 0.48%)</title><rect x="76.0997%" y="341" width="0.4813%" height="15" fill="rgb(211,67,2)" fg:x="33996" fg:w="215"/><text x="76.3497%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.03%)</title><rect x="76.5518%" y="325" width="0.0291%" height="15" fill="rgb(235,68,52)" fg:x="34198" fg:w="13"/><text x="76.8018%" y="335.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da (441 samples, 0.99%)</title><rect x="75.6296%" y="357" width="0.9872%" height="15" fill="rgb(246,142,3)" fg:x="33786" fg:w="441"/><text x="75.8796%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="76.5876%" y="341" width="0.0291%" height="15" fill="rgb(241,25,7)" fg:x="34214" fg:w="13"/><text x="76.8376%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="76.6458%" y="277" width="0.0157%" height="15" fill="rgb(242,119,39)" fg:x="34240" fg:w="7"/><text x="76.8958%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="76.6369%" y="293" width="0.0269%" height="15" fill="rgb(241,98,45)" fg:x="34236" fg:w="12"/><text x="76.8869%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (13 samples, 0.03%)</title><rect x="76.6369%" y="309" width="0.0291%" height="15" fill="rgb(254,28,30)" fg:x="34236" fg:w="13"/><text x="76.8869%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (7 samples, 0.02%)</title><rect x="76.7421%" y="277" width="0.0157%" height="15" fill="rgb(241,142,54)" fg:x="34283" fg:w="7"/><text x="76.9921%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.02%)</title><rect x="76.7645%" y="277" width="0.0157%" height="15" fill="rgb(222,85,15)" fg:x="34293" fg:w="7"/><text x="77.0145%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (54 samples, 0.12%)</title><rect x="76.6682%" y="309" width="0.1209%" height="15" fill="rgb(210,85,47)" fg:x="34250" fg:w="54"/><text x="76.9182%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.10%)</title><rect x="76.6929%" y="293" width="0.0963%" height="15" fill="rgb(224,206,25)" fg:x="34261" fg:w="43"/><text x="76.9429%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (80 samples, 0.18%)</title><rect x="76.6190%" y="325" width="0.1791%" height="15" fill="rgb(243,201,19)" fg:x="34228" fg:w="80"/><text x="76.8690%" y="335.50"></text></g><g><title>block_verifier`fuel_core_types::services::executor::_&lt;impl fuel_core_types::services::Uncommitted&lt;fuel_core_types::services::executor::ProductionResult,DatabaseTransaction&gt;&gt;::into_validation_result (89 samples, 0.20%)</title><rect x="76.6167%" y="357" width="0.1992%" height="15" fill="rgb(236,59,4)" fg:x="34227" fg:w="89"/><text x="76.8667%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;[fuel_tx::transaction::Transaction]&gt; (89 samples, 0.20%)</title><rect x="76.6167%" y="341" width="0.1992%" height="15" fill="rgb(254,179,45)" fg:x="34227" fg:w="89"/><text x="76.8667%" y="351.50"></text></g><g><title>block_verifier`fuel_core::service::adapters::block_importer::_&lt;impl fuel_core_importer::ports::Validator for fuel_core::service::adapters::ExecutorAdapter&gt;::validate (591 samples, 1.32%)</title><rect x="75.5691%" y="373" width="1.3229%" height="15" fill="rgb(226,14,10)" fg:x="33759" fg:w="591"/><text x="75.8191%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (34 samples, 0.08%)</title><rect x="76.8160%" y="357" width="0.0761%" height="15" fill="rgb(244,27,41)" fg:x="34316" fg:w="34"/><text x="77.0660%" y="367.50"></text></g><g><title>block_verifier`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,137 samples, 2.55%)</title><rect x="74.3559%" y="405" width="2.5452%" height="15" fill="rgb(235,35,32)" fg:x="33217" fg:w="1137"/><text x="74.6059%" y="415.50">bl..</text></g><g><title>block_verifier`rayon_core::scope::scope_fifo::_{{closure}} (1,137 samples, 2.55%)</title><rect x="74.3559%" y="389" width="2.5452%" height="15" fill="rgb(218,68,31)" fg:x="33217" fg:w="1137"/><text x="74.6059%" y="399.50">bl..</text></g><g><title>block_verifier`rayon_core::registry::ThreadBuilder::run (1,138 samples, 2.55%)</title><rect x="74.3559%" y="437" width="2.5474%" height="15" fill="rgb(207,120,37)" fg:x="33217" fg:w="1138"/><text x="74.6059%" y="447.50">bl..</text></g><g><title>block_verifier`rayon_core::registry::WorkerThread::wait_until_cold (1,138 samples, 2.55%)</title><rect x="74.3559%" y="421" width="2.5474%" height="15" fill="rgb(227,98,0)" fg:x="33217" fg:w="1138"/><text x="74.6059%" y="431.50">bl..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (6 samples, 0.01%)</title><rect x="77.0174%" y="245" width="0.0134%" height="15" fill="rgb(207,7,3)" fg:x="34406" fg:w="6"/><text x="77.2674%" y="255.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (61 samples, 0.14%)</title><rect x="76.9346%" y="293" width="0.1365%" height="15" fill="rgb(206,98,19)" fg:x="34369" fg:w="61"/><text x="77.1846%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.08%)</title><rect x="76.9906%" y="277" width="0.0806%" height="15" fill="rgb(217,5,26)" fg:x="34394" fg:w="36"/><text x="77.2406%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.07%)</title><rect x="77.0018%" y="261" width="0.0694%" height="15" fill="rgb(235,190,38)" fg:x="34399" fg:w="31"/><text x="77.2518%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.04%)</title><rect x="77.0309%" y="245" width="0.0403%" height="15" fill="rgb(247,86,24)" fg:x="34412" fg:w="18"/><text x="77.2809%" y="255.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (67 samples, 0.15%)</title><rect x="76.9346%" y="309" width="0.1500%" height="15" fill="rgb(205,101,16)" fg:x="34369" fg:w="67"/><text x="77.1846%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (71 samples, 0.16%)</title><rect x="76.9324%" y="357" width="0.1589%" height="15" fill="rgb(246,168,33)" fg:x="34368" fg:w="71"/><text x="77.1824%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (71 samples, 0.16%)</title><rect x="76.9324%" y="341" width="0.1589%" height="15" fill="rgb(231,114,1)" fg:x="34368" fg:w="71"/><text x="77.1824%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (71 samples, 0.16%)</title><rect x="76.9324%" y="325" width="0.1589%" height="15" fill="rgb(207,184,53)" fg:x="34368" fg:w="71"/><text x="77.1824%" y="335.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.04%)</title><rect x="77.1003%" y="341" width="0.0448%" height="15" fill="rgb(224,95,51)" fg:x="34443" fg:w="20"/><text x="77.3503%" y="351.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (16 samples, 0.04%)</title><rect x="77.1540%" y="341" width="0.0358%" height="15" fill="rgb(212,188,45)" fg:x="34467" fg:w="16"/><text x="77.4040%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="77.1943%" y="341" width="0.0112%" height="15" fill="rgb(223,154,38)" fg:x="34485" fg:w="5"/><text x="77.4443%" y="351.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.12%)</title><rect x="77.0913%" y="357" width="0.1164%" height="15" fill="rgb(251,22,52)" fg:x="34439" fg:w="52"/><text x="77.3413%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="77.2458%" y="325" width="0.0179%" height="15" fill="rgb(229,209,22)" fg:x="34508" fg:w="8"/><text x="77.4958%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (20 samples, 0.04%)</title><rect x="77.2211%" y="341" width="0.0448%" height="15" fill="rgb(234,138,34)" fg:x="34497" fg:w="20"/><text x="77.4711%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="77.2704%" y="341" width="0.0112%" height="15" fill="rgb(212,95,11)" fg:x="34519" fg:w="5"/><text x="77.5204%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (44 samples, 0.10%)</title><rect x="77.2077%" y="357" width="0.0985%" height="15" fill="rgb(240,179,47)" fg:x="34491" fg:w="44"/><text x="77.4577%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.02%)</title><rect x="77.2816%" y="341" width="0.0246%" height="15" fill="rgb(240,163,11)" fg:x="34524" fg:w="11"/><text x="77.5316%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.03%)</title><rect x="77.4181%" y="261" width="0.0336%" height="15" fill="rgb(236,37,12)" fg:x="34585" fg:w="15"/><text x="77.6681%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="77.4293%" y="245" width="0.0224%" height="15" fill="rgb(232,164,16)" fg:x="34590" fg:w="10"/><text x="77.6793%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="77.4383%" y="229" width="0.0134%" height="15" fill="rgb(244,205,15)" fg:x="34594" fg:w="6"/><text x="77.6883%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="77.4539%" y="261" width="0.0336%" height="15" fill="rgb(223,117,47)" fg:x="34601" fg:w="15"/><text x="77.7039%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.03%)</title><rect x="77.4539%" y="245" width="0.0336%" height="15" fill="rgb(244,107,35)" fg:x="34601" fg:w="15"/><text x="77.7039%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="77.4696%" y="229" width="0.0179%" height="15" fill="rgb(205,140,8)" fg:x="34608" fg:w="8"/><text x="77.7196%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (6 samples, 0.01%)</title><rect x="77.4942%" y="261" width="0.0134%" height="15" fill="rgb(228,84,46)" fg:x="34619" fg:w="6"/><text x="77.7442%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (58 samples, 0.13%)</title><rect x="77.3823%" y="293" width="0.1298%" height="15" fill="rgb(254,188,9)" fg:x="34569" fg:w="58"/><text x="77.6323%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (51 samples, 0.11%)</title><rect x="77.3980%" y="277" width="0.1142%" height="15" fill="rgb(206,112,54)" fg:x="34576" fg:w="51"/><text x="77.6480%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (71 samples, 0.16%)</title><rect x="77.3644%" y="341" width="0.1589%" height="15" fill="rgb(216,84,49)" fg:x="34561" fg:w="71"/><text x="77.6144%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (66 samples, 0.15%)</title><rect x="77.3756%" y="325" width="0.1477%" height="15" fill="rgb(214,194,35)" fg:x="34566" fg:w="66"/><text x="77.6256%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (65 samples, 0.15%)</title><rect x="77.3778%" y="309" width="0.1455%" height="15" fill="rgb(249,28,3)" fg:x="34567" fg:w="65"/><text x="77.6278%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="77.5345%" y="341" width="0.0134%" height="15" fill="rgb(222,56,52)" fg:x="34637" fg:w="6"/><text x="77.7845%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="77.5368%" y="325" width="0.0112%" height="15" fill="rgb(245,217,50)" fg:x="34638" fg:w="5"/><text x="77.7868%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (109 samples, 0.24%)</title><rect x="77.3152%" y="357" width="0.2440%" height="15" fill="rgb(213,201,24)" fg:x="34539" fg:w="109"/><text x="77.5652%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="77.5480%" y="341" width="0.0112%" height="15" fill="rgb(248,116,28)" fg:x="34643" fg:w="5"/><text x="77.7980%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="77.5480%" y="325" width="0.0112%" height="15" fill="rgb(219,72,43)" fg:x="34643" fg:w="5"/><text x="77.7980%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (5 samples, 0.01%)</title><rect x="77.5726%" y="325" width="0.0112%" height="15" fill="rgb(209,138,14)" fg:x="34654" fg:w="5"/><text x="77.8226%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (8 samples, 0.02%)</title><rect x="77.5703%" y="341" width="0.0179%" height="15" fill="rgb(222,18,33)" fg:x="34653" fg:w="8"/><text x="77.8203%" y="351.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (15 samples, 0.03%)</title><rect x="77.5592%" y="357" width="0.0336%" height="15" fill="rgb(213,199,7)" fg:x="34648" fg:w="15"/><text x="77.8092%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (296 samples, 0.66%)</title><rect x="77.5927%" y="357" width="0.6626%" height="15" fill="rgb(250,110,10)" fg:x="34663" fg:w="296"/><text x="77.8427%" y="367.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results::_{{closure}}::_{{closure}} (619 samples, 1.39%)</title><rect x="76.9033%" y="373" width="1.3856%" height="15" fill="rgb(248,123,6)" fg:x="34355" fg:w="619"/><text x="77.1533%" y="383.50"></text></g><g><title>block_verifier`core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="78.3449%" y="325" width="0.0201%" height="15" fill="rgb(206,91,31)" fg:x="34999" fg:w="9"/><text x="78.5949%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="78.3538%" y="309" width="0.0112%" height="15" fill="rgb(211,154,13)" fg:x="35003" fg:w="5"/><text x="78.6038%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="78.3695%" y="277" width="0.0112%" height="15" fill="rgb(225,148,7)" fg:x="35010" fg:w="5"/><text x="78.6195%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="78.3695%" y="261" width="0.0112%" height="15" fill="rgb(220,160,43)" fg:x="35010" fg:w="5"/><text x="78.6195%" y="271.50"></text></g><g><title>block_verifier`&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="78.3650%" y="293" width="0.0179%" height="15" fill="rgb(213,52,39)" fg:x="35008" fg:w="8"/><text x="78.6150%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.04%)</title><rect x="78.3650%" y="309" width="0.0358%" height="15" fill="rgb(243,137,7)" fg:x="35008" fg:w="16"/><text x="78.6150%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::Executable::input_asset_ids_unique (18 samples, 0.04%)</title><rect x="78.3650%" y="325" width="0.0403%" height="15" fill="rgb(230,79,13)" fg:x="35008" fg:w="18"/><text x="78.6150%" y="335.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (9 samples, 0.02%)</title><rect x="78.4254%" y="309" width="0.0201%" height="15" fill="rgb(247,105,23)" fg:x="35035" fg:w="9"/><text x="78.6754%" y="319.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="78.4456%" y="309" width="0.0179%" height="15" fill="rgb(223,179,41)" fg:x="35044" fg:w="8"/><text x="78.6956%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="78.4456%" y="293" width="0.0179%" height="15" fill="rgb(218,9,34)" fg:x="35044" fg:w="8"/><text x="78.6956%" y="303.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (7 samples, 0.02%)</title><rect x="78.4478%" y="277" width="0.0157%" height="15" fill="rgb(222,106,8)" fg:x="35045" fg:w="7"/><text x="78.6978%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (28 samples, 0.06%)</title><rect x="78.4053%" y="325" width="0.0627%" height="15" fill="rgb(211,220,0)" fg:x="35026" fg:w="28"/><text x="78.6553%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="78.5016%" y="293" width="0.0246%" height="15" fill="rgb(229,52,16)" fg:x="35069" fg:w="11"/><text x="78.7516%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (11 samples, 0.02%)</title><rect x="78.5262%" y="293" width="0.0246%" height="15" fill="rgb(212,155,18)" fg:x="35080" fg:w="11"/><text x="78.7762%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (18 samples, 0.04%)</title><rect x="78.5508%" y="293" width="0.0403%" height="15" fill="rgb(242,21,14)" fg:x="35091" fg:w="18"/><text x="78.8008%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="78.5687%" y="277" width="0.0224%" height="15" fill="rgb(222,19,48)" fg:x="35099" fg:w="10"/><text x="78.8187%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="78.5754%" y="261" width="0.0157%" height="15" fill="rgb(232,45,27)" fg:x="35102" fg:w="7"/><text x="78.8254%" y="271.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (21 samples, 0.05%)</title><rect x="78.5911%" y="293" width="0.0470%" height="15" fill="rgb(249,103,42)" fg:x="35109" fg:w="21"/><text x="78.8411%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="78.6515%" y="293" width="0.0157%" height="15" fill="rgb(246,81,33)" fg:x="35136" fg:w="7"/><text x="78.9015%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="78.6515%" y="277" width="0.0157%" height="15" fill="rgb(252,33,42)" fg:x="35136" fg:w="7"/><text x="78.9015%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (87 samples, 0.19%)</title><rect x="78.4769%" y="309" width="0.1947%" height="15" fill="rgb(209,212,41)" fg:x="35058" fg:w="87"/><text x="78.7269%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.02%)</title><rect x="78.6762%" y="309" width="0.0179%" height="15" fill="rgb(207,154,6)" fg:x="35147" fg:w="8"/><text x="78.9262%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="78.6829%" y="293" width="0.0112%" height="15" fill="rgb(223,64,47)" fg:x="35150" fg:w="5"/><text x="78.9329%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (237 samples, 0.53%)</title><rect x="78.6985%" y="309" width="0.5305%" height="15" fill="rgb(211,161,38)" fg:x="35157" fg:w="237"/><text x="78.9485%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::script::_&lt;impl fuel_tx::transaction::metadata::Cacheable for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::precompute (344 samples, 0.77%)</title><rect x="78.4680%" y="325" width="0.7700%" height="15" fill="rgb(219,138,40)" fg:x="35054" fg:w="344"/><text x="78.7180%" y="335.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.03%)</title><rect x="79.2514%" y="309" width="0.0291%" height="15" fill="rgb(241,228,46)" fg:x="35404" fg:w="13"/><text x="79.5014%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::next_duplicate (23 samples, 0.05%)</title><rect x="79.2380%" y="325" width="0.0515%" height="15" fill="rgb(223,209,38)" fg:x="35398" fg:w="23"/><text x="79.4880%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="79.3052%" y="325" width="0.0112%" height="15" fill="rgb(236,164,45)" fg:x="35428" fg:w="5"/><text x="79.5552%" y="335.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::types::script::_&lt;impl fuel_vm::checked_transaction::IntoChecked for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::into_checked_basic (450 samples, 1.01%)</title><rect x="78.3113%" y="341" width="1.0073%" height="15" fill="rgb(231,15,5)" fg:x="34984" fg:w="450"/><text x="78.5613%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_vm::checked_transaction::IntoChecked&gt;::into_checked_basic (455 samples, 1.02%)</title><rect x="78.3023%" y="357" width="1.0185%" height="15" fill="rgb(252,35,15)" fg:x="34980" fg:w="455"/><text x="78.5523%" y="367.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (5 samples, 0.01%)</title><rect x="79.3723%" y="325" width="0.0112%" height="15" fill="rgb(248,181,18)" fg:x="35458" fg:w="5"/><text x="79.6223%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (14 samples, 0.03%)</title><rect x="79.5402%" y="309" width="0.0313%" height="15" fill="rgb(233,39,42)" fg:x="35533" fg:w="14"/><text x="79.7902%" y="319.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (93 samples, 0.21%)</title><rect x="79.3880%" y="325" width="0.2082%" height="15" fill="rgb(238,110,33)" fg:x="35465" fg:w="93"/><text x="79.6380%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="79.5738%" y="309" width="0.0224%" height="15" fill="rgb(233,195,10)" fg:x="35548" fg:w="10"/><text x="79.8238%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.04%)</title><rect x="79.6163%" y="309" width="0.0358%" height="15" fill="rgb(254,105,3)" fg:x="35567" fg:w="16"/><text x="79.8663%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="79.6275%" y="293" width="0.0246%" height="15" fill="rgb(221,225,9)" fg:x="35572" fg:w="11"/><text x="79.8775%" y="303.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (26 samples, 0.06%)</title><rect x="79.5962%" y="325" width="0.0582%" height="15" fill="rgb(224,227,45)" fg:x="35558" fg:w="26"/><text x="79.8462%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="79.7439%" y="293" width="0.0112%" height="15" fill="rgb(229,198,43)" fg:x="35624" fg:w="5"/><text x="79.9939%" y="303.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="79.7439%" y="277" width="0.0112%" height="15" fill="rgb(206,209,35)" fg:x="35624" fg:w="5"/><text x="79.9939%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.7439%" y="261" width="0.0112%" height="15" fill="rgb(245,195,53)" fg:x="35624" fg:w="5"/><text x="79.9939%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.7439%" y="245" width="0.0112%" height="15" fill="rgb(240,92,26)" fg:x="35624" fg:w="5"/><text x="79.9939%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (11 samples, 0.02%)</title><rect x="79.7417%" y="309" width="0.0246%" height="15" fill="rgb(207,40,23)" fg:x="35623" fg:w="11"/><text x="79.9917%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.08%)</title><rect x="79.7864%" y="293" width="0.0806%" height="15" fill="rgb(223,111,35)" fg:x="35643" fg:w="36"/><text x="80.0364%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.06%)</title><rect x="79.8066%" y="277" width="0.0604%" height="15" fill="rgb(229,147,28)" fg:x="35652" fg:w="27"/><text x="80.0566%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.05%)</title><rect x="79.8133%" y="261" width="0.0537%" height="15" fill="rgb(211,29,28)" fg:x="35655" fg:w="24"/><text x="80.0633%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.04%)</title><rect x="79.8290%" y="245" width="0.0381%" height="15" fill="rgb(228,72,33)" fg:x="35662" fg:w="17"/><text x="80.0790%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="79.8514%" y="229" width="0.0157%" height="15" fill="rgb(205,214,31)" fg:x="35672" fg:w="7"/><text x="80.1014%" y="239.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (34 samples, 0.08%)</title><rect x="79.8670%" y="293" width="0.0761%" height="15" fill="rgb(224,111,15)" fg:x="35679" fg:w="34"/><text x="80.1170%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.07%)</title><rect x="79.8693%" y="277" width="0.0739%" height="15" fill="rgb(253,21,26)" fg:x="35680" fg:w="33"/><text x="80.1193%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.05%)</title><rect x="79.8894%" y="261" width="0.0537%" height="15" fill="rgb(245,139,43)" fg:x="35689" fg:w="24"/><text x="80.1394%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.04%)</title><rect x="79.9073%" y="245" width="0.0358%" height="15" fill="rgb(252,170,7)" fg:x="35697" fg:w="16"/><text x="80.1573%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="79.9431%" y="293" width="0.0134%" height="15" fill="rgb(231,118,14)" fg:x="35713" fg:w="6"/><text x="80.1931%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="79.9566%" y="293" width="0.0224%" height="15" fill="rgb(238,83,0)" fg:x="35719" fg:w="10"/><text x="80.2066%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="79.9588%" y="277" width="0.0201%" height="15" fill="rgb(221,39,39)" fg:x="35720" fg:w="9"/><text x="80.2088%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (93 samples, 0.21%)</title><rect x="79.7753%" y="309" width="0.2082%" height="15" fill="rgb(222,119,46)" fg:x="35638" fg:w="93"/><text x="80.0253%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="79.9902%" y="293" width="0.0112%" height="15" fill="rgb(222,165,49)" fg:x="35734" fg:w="5"/><text x="80.2402%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.9902%" y="277" width="0.0112%" height="15" fill="rgb(219,113,52)" fg:x="35734" fg:w="5"/><text x="80.2402%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="79.9879%" y="309" width="0.0157%" height="15" fill="rgb(214,7,15)" fg:x="35733" fg:w="7"/><text x="80.2379%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="80.0797%" y="261" width="0.0157%" height="15" fill="rgb(235,32,4)" fg:x="35774" fg:w="7"/><text x="80.3297%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (34 samples, 0.08%)</title><rect x="80.0327%" y="293" width="0.0761%" height="15" fill="rgb(238,90,54)" fg:x="35753" fg:w="34"/><text x="80.2827%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.06%)</title><rect x="80.0484%" y="277" width="0.0604%" height="15" fill="rgb(213,208,19)" fg:x="35760" fg:w="27"/><text x="80.2984%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.01%)</title><rect x="80.0954%" y="261" width="0.0134%" height="15" fill="rgb(233,156,4)" fg:x="35781" fg:w="6"/><text x="80.3454%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (50 samples, 0.11%)</title><rect x="80.0125%" y="309" width="0.1119%" height="15" fill="rgb(207,194,5)" fg:x="35744" fg:w="50"/><text x="80.2625%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.01%)</title><rect x="80.1110%" y="293" width="0.0134%" height="15" fill="rgb(206,111,30)" fg:x="35788" fg:w="6"/><text x="80.3610%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="80.1871%" y="245" width="0.0112%" height="15" fill="rgb(243,70,54)" fg:x="35822" fg:w="5"/><text x="80.4371%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.06%)</title><rect x="80.1468%" y="277" width="0.0560%" height="15" fill="rgb(242,28,8)" fg:x="35804" fg:w="25"/><text x="80.3968%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.04%)</title><rect x="80.1670%" y="261" width="0.0358%" height="15" fill="rgb(219,106,18)" fg:x="35813" fg:w="16"/><text x="80.4170%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (39 samples, 0.09%)</title><rect x="80.1289%" y="293" width="0.0873%" height="15" fill="rgb(244,222,10)" fg:x="35796" fg:w="39"/><text x="80.3789%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="80.2050%" y="277" width="0.0112%" height="15" fill="rgb(236,179,52)" fg:x="35830" fg:w="5"/><text x="80.4550%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.03%)</title><rect x="80.2252%" y="293" width="0.0336%" height="15" fill="rgb(213,23,39)" fg:x="35839" fg:w="15"/><text x="80.4752%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="80.2341%" y="277" width="0.0246%" height="15" fill="rgb(238,48,10)" fg:x="35843" fg:w="11"/><text x="80.4841%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_vm::storage::predicate::PredicateStorage&lt;&amp;fuel_core::graphql_api::database::ReadView&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (60 samples, 0.13%)</title><rect x="80.1267%" y="309" width="0.1343%" height="15" fill="rgb(251,196,23)" fg:x="35795" fg:w="60"/><text x="80.3767%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="80.3595%" y="277" width="0.0291%" height="15" fill="rgb(250,152,24)" fg:x="35899" fg:w="13"/><text x="80.6095%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="80.3595%" y="261" width="0.0291%" height="15" fill="rgb(209,150,17)" fg:x="35899" fg:w="13"/><text x="80.6095%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="80.3729%" y="245" width="0.0157%" height="15" fill="rgb(234,202,34)" fg:x="35905" fg:w="7"/><text x="80.6229%" y="255.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19 samples, 0.04%)</title><rect x="80.3483%" y="293" width="0.0425%" height="15" fill="rgb(253,148,53)" fg:x="35894" fg:w="19"/><text x="80.5983%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="80.4020%" y="261" width="0.0134%" height="15" fill="rgb(218,129,16)" fg:x="35918" fg:w="6"/><text x="80.6520%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="80.4043%" y="245" width="0.0112%" height="15" fill="rgb(216,85,19)" fg:x="35919" fg:w="5"/><text x="80.6543%" y="255.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.02%)</title><rect x="80.3998%" y="277" width="0.0179%" height="15" fill="rgb(235,228,7)" fg:x="35917" fg:w="8"/><text x="80.6498%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="80.4177%" y="277" width="0.0157%" height="15" fill="rgb(245,175,0)" fg:x="35925" fg:w="7"/><text x="80.6677%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (5 samples, 0.01%)</title><rect x="80.4222%" y="261" width="0.0112%" height="15" fill="rgb(208,168,36)" fg:x="35927" fg:w="5"/><text x="80.6722%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="80.4378%" y="277" width="0.0134%" height="15" fill="rgb(246,171,24)" fg:x="35934" fg:w="6"/><text x="80.6878%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.4513%" y="277" width="0.0157%" height="15" fill="rgb(215,142,24)" fg:x="35940" fg:w="7"/><text x="80.7013%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.4513%" y="261" width="0.0157%" height="15" fill="rgb(250,187,7)" fg:x="35940" fg:w="7"/><text x="80.7013%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (34 samples, 0.08%)</title><rect x="80.3953%" y="293" width="0.0761%" height="15" fill="rgb(228,66,33)" fg:x="35915" fg:w="34"/><text x="80.6453%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="80.4871%" y="261" width="0.0515%" height="15" fill="rgb(234,215,21)" fg:x="35956" fg:w="23"/><text x="80.7371%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.04%)</title><rect x="80.4960%" y="245" width="0.0425%" height="15" fill="rgb(222,191,20)" fg:x="35960" fg:w="19"/><text x="80.7460%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.04%)</title><rect x="80.5005%" y="229" width="0.0381%" height="15" fill="rgb(245,79,54)" fg:x="35962" fg:w="17"/><text x="80.7505%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.03%)</title><rect x="80.5117%" y="213" width="0.0269%" height="15" fill="rgb(240,10,37)" fg:x="35967" fg:w="12"/><text x="80.7617%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="80.5386%" y="261" width="0.0269%" height="15" fill="rgb(214,192,32)" fg:x="35979" fg:w="12"/><text x="80.7886%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="80.5408%" y="245" width="0.0246%" height="15" fill="rgb(209,36,54)" fg:x="35980" fg:w="11"/><text x="80.7908%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="80.5408%" y="229" width="0.0246%" height="15" fill="rgb(220,10,11)" fg:x="35980" fg:w="11"/><text x="80.7908%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="80.5498%" y="213" width="0.0157%" height="15" fill="rgb(221,106,17)" fg:x="35984" fg:w="7"/><text x="80.7998%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (48 samples, 0.11%)</title><rect x="80.4804%" y="277" width="0.1074%" height="15" fill="rgb(251,142,44)" fg:x="35953" fg:w="48"/><text x="80.7304%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.5766%" y="261" width="0.0112%" height="15" fill="rgb(238,13,15)" fg:x="35996" fg:w="5"/><text x="80.8266%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_vm::state::StateTransition&lt;Tx&gt; as core::convert::From&lt;fuel_vm::state::StateTransitionRef&lt;Tx&gt;&gt;&gt;::from (59 samples, 0.13%)</title><rect x="80.4714%" y="293" width="0.1321%" height="15" fill="rgb(208,107,27)" fg:x="35949" fg:w="59"/><text x="80.7214%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="80.6169%" y="277" width="0.0134%" height="15" fill="rgb(205,136,37)" fg:x="36014" fg:w="6"/><text x="80.8669%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="80.6192%" y="261" width="0.0112%" height="15" fill="rgb(250,205,27)" fg:x="36015" fg:w="5"/><text x="80.8692%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (7 samples, 0.02%)</title><rect x="80.6169%" y="293" width="0.0157%" height="15" fill="rgb(210,80,43)" fg:x="36014" fg:w="7"/><text x="80.8669%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (5 samples, 0.01%)</title><rect x="80.6416%" y="245" width="0.0112%" height="15" fill="rgb(247,160,36)" fg:x="36025" fg:w="5"/><text x="80.8916%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.03%)</title><rect x="80.6774%" y="229" width="0.0269%" height="15" fill="rgb(234,13,49)" fg:x="36041" fg:w="12"/><text x="80.9274%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (29 samples, 0.06%)</title><rect x="80.6416%" y="261" width="0.0649%" height="15" fill="rgb(234,122,0)" fg:x="36025" fg:w="29"/><text x="80.8916%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.05%)</title><rect x="80.6527%" y="245" width="0.0537%" height="15" fill="rgb(207,146,38)" fg:x="36030" fg:w="24"/><text x="80.9027%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (25 samples, 0.06%)</title><rect x="80.7065%" y="261" width="0.0560%" height="15" fill="rgb(207,177,25)" fg:x="36054" fg:w="25"/><text x="80.9565%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (16 samples, 0.04%)</title><rect x="80.8229%" y="245" width="0.0358%" height="15" fill="rgb(211,178,42)" fg:x="36106" fg:w="16"/><text x="81.0729%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.04%)</title><rect x="80.9102%" y="229" width="0.0381%" height="15" fill="rgb(230,69,54)" fg:x="36145" fg:w="17"/><text x="81.1602%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.11%)</title><rect x="80.8632%" y="245" width="0.1074%" height="15" fill="rgb(214,135,41)" fg:x="36124" fg:w="48"/><text x="81.1132%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.02%)</title><rect x="80.9482%" y="229" width="0.0224%" height="15" fill="rgb(237,67,25)" fg:x="36162" fg:w="10"/><text x="81.1982%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (97 samples, 0.22%)</title><rect x="80.7714%" y="261" width="0.2171%" height="15" fill="rgb(222,189,50)" fg:x="36083" fg:w="97"/><text x="81.0214%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (8 samples, 0.02%)</title><rect x="80.9706%" y="245" width="0.0179%" height="15" fill="rgb(245,148,34)" fg:x="36172" fg:w="8"/><text x="81.2206%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (165 samples, 0.37%)</title><rect x="80.6371%" y="277" width="0.3694%" height="15" fill="rgb(222,29,6)" fg:x="36023" fg:w="165"/><text x="80.8871%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (8 samples, 0.02%)</title><rect x="81.0064%" y="277" width="0.0179%" height="15" fill="rgb(221,189,43)" fg:x="36188" fg:w="8"/><text x="81.2564%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.01%)</title><rect x="81.0243%" y="277" width="0.0112%" height="15" fill="rgb(207,36,27)" fg:x="36196" fg:w="5"/><text x="81.2743%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.01%)</title><rect x="81.0355%" y="277" width="0.0134%" height="15" fill="rgb(217,90,24)" fg:x="36201" fg:w="6"/><text x="81.2855%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="81.1183%" y="245" width="0.0201%" height="15" fill="rgb(224,66,35)" fg:x="36238" fg:w="9"/><text x="81.3683%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.06%)</title><rect x="81.0892%" y="261" width="0.0560%" height="15" fill="rgb(221,13,50)" fg:x="36225" fg:w="25"/><text x="81.3392%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (47 samples, 0.11%)</title><rect x="81.0512%" y="277" width="0.1052%" height="15" fill="rgb(236,68,49)" fg:x="36208" fg:w="47"/><text x="81.3012%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_core_storage::vm_storage::VmStorage&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::key_value_view::KeyValueViewWrapper&lt;fuel_core_storage::column::Column&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (235 samples, 0.53%)</title><rect x="80.6326%" y="293" width="0.5260%" height="15" fill="rgb(229,146,28)" fg:x="36021" fg:w="235"/><text x="80.8826%" y="303.50"></text></g><g><title>block_verifier`core::fmt::write (11 samples, 0.02%)</title><rect x="81.2303%" y="197" width="0.0246%" height="15" fill="rgb(225,31,38)" fg:x="36288" fg:w="11"/><text x="81.4803%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="81.2683%" y="165" width="0.0224%" height="15" fill="rgb(250,208,3)" fg:x="36305" fg:w="10"/><text x="81.5183%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.04%)</title><rect x="81.2549%" y="197" width="0.0381%" height="15" fill="rgb(246,54,23)" fg:x="36299" fg:w="17"/><text x="81.5049%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.04%)</title><rect x="81.2571%" y="181" width="0.0358%" height="15" fill="rgb(243,76,11)" fg:x="36300" fg:w="16"/><text x="81.5071%" y="191.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (39 samples, 0.09%)</title><rect x="81.2168%" y="213" width="0.0873%" height="15" fill="rgb(245,21,50)" fg:x="36282" fg:w="39"/><text x="81.4668%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.2930%" y="197" width="0.0112%" height="15" fill="rgb(228,9,43)" fg:x="36316" fg:w="5"/><text x="81.5430%" y="207.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (20 samples, 0.04%)</title><rect x="81.3041%" y="213" width="0.0448%" height="15" fill="rgb(208,100,47)" fg:x="36321" fg:w="20"/><text x="81.5541%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="81.3556%" y="213" width="0.0246%" height="15" fill="rgb(232,26,8)" fg:x="36344" fg:w="11"/><text x="81.6056%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="81.3668%" y="197" width="0.0134%" height="15" fill="rgb(216,166,38)" fg:x="36349" fg:w="6"/><text x="81.6168%" y="207.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (77 samples, 0.17%)</title><rect x="81.2146%" y="229" width="0.1724%" height="15" fill="rgb(251,202,51)" fg:x="36281" fg:w="77"/><text x="81.4646%" y="239.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (5 samples, 0.01%)</title><rect x="81.4183%" y="165" width="0.0112%" height="15" fill="rgb(254,216,34)" fg:x="36372" fg:w="5"/><text x="81.6683%" y="175.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (10 samples, 0.02%)</title><rect x="81.5325%" y="117" width="0.0224%" height="15" fill="rgb(251,32,27)" fg:x="36423" fg:w="10"/><text x="81.7825%" y="127.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (6 samples, 0.01%)</title><rect x="81.6354%" y="101" width="0.0134%" height="15" fill="rgb(208,127,28)" fg:x="36469" fg:w="6"/><text x="81.8854%" y="111.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (6 samples, 0.01%)</title><rect x="81.6489%" y="101" width="0.0134%" height="15" fill="rgb(224,137,22)" fg:x="36475" fg:w="6"/><text x="81.8989%" y="111.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.05%)</title><rect x="81.6690%" y="101" width="0.0470%" height="15" fill="rgb(254,70,32)" fg:x="36484" fg:w="21"/><text x="81.9190%" y="111.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (138 samples, 0.31%)</title><rect x="81.4586%" y="133" width="0.3089%" height="15" fill="rgb(229,75,37)" fg:x="36390" fg:w="138"/><text x="81.7086%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (95 samples, 0.21%)</title><rect x="81.5549%" y="117" width="0.2127%" height="15" fill="rgb(252,64,23)" fg:x="36433" fg:w="95"/><text x="81.8049%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (23 samples, 0.05%)</title><rect x="81.7160%" y="101" width="0.0515%" height="15" fill="rgb(232,162,48)" fg:x="36505" fg:w="23"/><text x="81.9660%" y="111.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (15 samples, 0.03%)</title><rect x="81.7944%" y="101" width="0.0336%" height="15" fill="rgb(246,160,12)" fg:x="36540" fg:w="15"/><text x="82.0444%" y="111.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (13 samples, 0.03%)</title><rect x="81.7988%" y="85" width="0.0291%" height="15" fill="rgb(247,166,0)" fg:x="36542" fg:w="13"/><text x="82.0488%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="81.7988%" y="69" width="0.0291%" height="15" fill="rgb(249,219,21)" fg:x="36542" fg:w="13"/><text x="82.0488%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="81.8078%" y="53" width="0.0201%" height="15" fill="rgb(205,209,3)" fg:x="36546" fg:w="9"/><text x="82.0578%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="81.8145%" y="37" width="0.0134%" height="15" fill="rgb(243,44,1)" fg:x="36549" fg:w="6"/><text x="82.0645%" y="47.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (20 samples, 0.04%)</title><rect x="81.7877%" y="117" width="0.0448%" height="15" fill="rgb(206,159,16)" fg:x="36537" fg:w="20"/><text x="82.0377%" y="127.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (172 samples, 0.39%)</title><rect x="81.4541%" y="149" width="0.3850%" height="15" fill="rgb(244,77,30)" fg:x="36388" fg:w="172"/><text x="81.7041%" y="159.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (26 samples, 0.06%)</title><rect x="81.7809%" y="133" width="0.0582%" height="15" fill="rgb(218,69,12)" fg:x="36534" fg:w="26"/><text x="82.0309%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (179 samples, 0.40%)</title><rect x="81.4429%" y="165" width="0.4007%" height="15" fill="rgb(212,87,7)" fg:x="36383" fg:w="179"/><text x="81.6929%" y="175.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (205 samples, 0.46%)</title><rect x="81.4026%" y="197" width="0.4589%" height="15" fill="rgb(245,114,25)" fg:x="36365" fg:w="205"/><text x="81.6526%" y="207.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (204 samples, 0.46%)</title><rect x="81.4049%" y="181" width="0.4567%" height="15" fill="rgb(210,61,42)" fg:x="36366" fg:w="204"/><text x="81.6549%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.8638%" y="181" width="0.0112%" height="15" fill="rgb(211,52,33)" fg:x="36571" fg:w="5"/><text x="82.1138%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.01%)</title><rect x="81.8638%" y="197" width="0.0134%" height="15" fill="rgb(234,58,33)" fg:x="36571" fg:w="6"/><text x="82.1138%" y="207.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (215 samples, 0.48%)</title><rect x="81.4004%" y="213" width="0.4813%" height="15" fill="rgb(220,115,36)" fg:x="36364" fg:w="215"/><text x="81.6504%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="81.8839%" y="197" width="0.0201%" height="15" fill="rgb(243,153,54)" fg:x="36580" fg:w="9"/><text x="82.1339%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="81.8929%" y="181" width="0.0112%" height="15" fill="rgb(251,47,18)" fg:x="36584" fg:w="5"/><text x="82.1429%" y="191.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (11 samples, 0.02%)</title><rect x="81.8817%" y="213" width="0.0246%" height="15" fill="rgb(242,102,42)" fg:x="36579" fg:w="11"/><text x="82.1317%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="81.9130%" y="213" width="0.0157%" height="15" fill="rgb(234,31,38)" fg:x="36593" fg:w="7"/><text x="82.1630%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="81.9287%" y="213" width="0.0134%" height="15" fill="rgb(221,117,51)" fg:x="36600" fg:w="6"/><text x="82.1787%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.9309%" y="197" width="0.0112%" height="15" fill="rgb(212,20,18)" fg:x="36601" fg:w="5"/><text x="82.1809%" y="207.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (249 samples, 0.56%)</title><rect x="81.3870%" y="229" width="0.5574%" height="15" fill="rgb(245,133,36)" fg:x="36358" fg:w="249"/><text x="81.6370%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.01%)</title><rect x="81.9511%" y="229" width="0.0134%" height="15" fill="rgb(212,6,19)" fg:x="36610" fg:w="6"/><text x="82.2011%" y="239.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (371 samples, 0.83%)</title><rect x="81.1788%" y="245" width="0.8305%" height="15" fill="rgb(218,1,36)" fg:x="36265" fg:w="371"/><text x="81.4288%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.04%)</title><rect x="81.9735%" y="229" width="0.0358%" height="15" fill="rgb(246,84,54)" fg:x="36620" fg:w="16"/><text x="82.2235%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="81.9846%" y="213" width="0.0246%" height="15" fill="rgb(242,110,6)" fg:x="36625" fg:w="11"/><text x="82.2346%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (5 samples, 0.01%)</title><rect x="82.0093%" y="245" width="0.0112%" height="15" fill="rgb(214,47,5)" fg:x="36636" fg:w="5"/><text x="82.2593%" y="255.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (44 samples, 0.10%)</title><rect x="82.0249%" y="229" width="0.0985%" height="15" fill="rgb(218,159,25)" fg:x="36643" fg:w="44"/><text x="82.2749%" y="239.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (62 samples, 0.14%)</title><rect x="82.0205%" y="245" width="0.1388%" height="15" fill="rgb(215,211,28)" fg:x="36641" fg:w="62"/><text x="82.2705%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (16 samples, 0.04%)</title><rect x="82.1234%" y="229" width="0.0358%" height="15" fill="rgb(238,59,32)" fg:x="36687" fg:w="16"/><text x="82.3734%" y="239.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (24 samples, 0.05%)</title><rect x="82.1615%" y="245" width="0.0537%" height="15" fill="rgb(226,82,3)" fg:x="36704" fg:w="24"/><text x="82.4115%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="82.2264%" y="245" width="0.0313%" height="15" fill="rgb(240,164,32)" fg:x="36733" fg:w="14"/><text x="82.4764%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="82.2398%" y="229" width="0.0179%" height="15" fill="rgb(232,46,7)" fg:x="36739" fg:w="8"/><text x="82.4898%" y="239.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (486 samples, 1.09%)</title><rect x="81.1743%" y="261" width="1.0879%" height="15" fill="rgb(229,129,53)" fg:x="36263" fg:w="486"/><text x="81.4243%" y="271.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::compute_inputs (494 samples, 1.11%)</title><rect x="81.1609%" y="293" width="1.1058%" height="15" fill="rgb(234,188,29)" fg:x="36257" fg:w="494"/><text x="81.4109%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::get_coin_or_default (493 samples, 1.10%)</title><rect x="81.1631%" y="277" width="1.1036%" height="15" fill="rgb(246,141,4)" fg:x="36258" fg:w="493"/><text x="81.4131%" y="287.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (15 samples, 0.03%)</title><rect x="82.2756%" y="261" width="0.0336%" height="15" fill="rgb(229,23,39)" fg:x="36755" fg:w="15"/><text x="82.5256%" y="271.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (17 samples, 0.04%)</title><rect x="82.2756%" y="277" width="0.0381%" height="15" fill="rgb(206,12,3)" fg:x="36755" fg:w="17"/><text x="82.5256%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="82.3159%" y="277" width="0.0201%" height="15" fill="rgb(252,226,20)" fg:x="36773" fg:w="9"/><text x="82.5659%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="82.3159%" y="261" width="0.0201%" height="15" fill="rgb(216,123,35)" fg:x="36773" fg:w="9"/><text x="82.5659%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="82.3249%" y="245" width="0.0112%" height="15" fill="rgb(212,68,40)" fg:x="36777" fg:w="5"/><text x="82.5749%" y="255.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (30 samples, 0.07%)</title><rect x="82.2712%" y="293" width="0.0672%" height="15" fill="rgb(254,125,32)" fg:x="36753" fg:w="30"/><text x="82.5212%" y="303.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (8 samples, 0.02%)</title><rect x="82.3853%" y="261" width="0.0179%" height="15" fill="rgb(253,97,22)" fg:x="36804" fg:w="8"/><text x="82.6353%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (9 samples, 0.02%)</title><rect x="82.4144%" y="229" width="0.0201%" height="15" fill="rgb(241,101,14)" fg:x="36817" fg:w="9"/><text x="82.6644%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="82.4211%" y="213" width="0.0134%" height="15" fill="rgb(238,103,29)" fg:x="36820" fg:w="6"/><text x="82.6711%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.4234%" y="197" width="0.0112%" height="15" fill="rgb(233,195,47)" fg:x="36821" fg:w="5"/><text x="82.6734%" y="207.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.04%)</title><rect x="82.4032%" y="261" width="0.0358%" height="15" fill="rgb(246,218,30)" fg:x="36812" fg:w="16"/><text x="82.6532%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="82.4077%" y="245" width="0.0313%" height="15" fill="rgb(219,145,47)" fg:x="36814" fg:w="14"/><text x="82.6577%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (43 samples, 0.10%)</title><rect x="82.3495%" y="277" width="0.0963%" height="15" fill="rgb(243,12,26)" fg:x="36788" fg:w="43"/><text x="82.5995%" y="287.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (5 samples, 0.01%)</title><rect x="82.4458%" y="277" width="0.0112%" height="15" fill="rgb(214,87,16)" fg:x="36831" fg:w="5"/><text x="82.6958%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::into_ready (56 samples, 0.13%)</title><rect x="82.3383%" y="293" width="0.1254%" height="15" fill="rgb(208,99,42)" fg:x="36783" fg:w="56"/><text x="82.5883%" y="303.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (7 samples, 0.02%)</title><rect x="82.4816%" y="261" width="0.0157%" height="15" fill="rgb(253,99,2)" fg:x="36847" fg:w="7"/><text x="82.7316%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="82.4973%" y="245" width="0.0112%" height="15" fill="rgb(220,168,23)" fg:x="36854" fg:w="5"/><text x="82.7473%" y="255.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.01%)</title><rect x="82.4973%" y="261" width="0.0134%" height="15" fill="rgb(242,38,24)" fg:x="36854" fg:w="6"/><text x="82.7473%" y="271.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (20 samples, 0.04%)</title><rect x="82.4704%" y="277" width="0.0448%" height="15" fill="rgb(225,182,9)" fg:x="36842" fg:w="20"/><text x="82.7204%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::ExecutableTransaction::update_outputs (24 samples, 0.05%)</title><rect x="82.4637%" y="293" width="0.0537%" height="15" fill="rgb(243,178,37)" fg:x="36839" fg:w="24"/><text x="82.7137%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="82.5487%" y="229" width="0.0112%" height="15" fill="rgb(232,139,19)" fg:x="36877" fg:w="5"/><text x="82.7987%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.5487%" y="213" width="0.0112%" height="15" fill="rgb(225,201,24)" fg:x="36877" fg:w="5"/><text x="82.7987%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.5487%" y="197" width="0.0112%" height="15" fill="rgb(221,47,46)" fg:x="36877" fg:w="5"/><text x="82.7987%" y="207.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.02%)</title><rect x="82.5420%" y="245" width="0.0201%" height="15" fill="rgb(249,23,13)" fg:x="36874" fg:w="9"/><text x="82.7920%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="82.5622%" y="229" width="0.0134%" height="15" fill="rgb(219,9,5)" fg:x="36883" fg:w="6"/><text x="82.8122%" y="239.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="82.5644%" y="213" width="0.0112%" height="15" fill="rgb(254,171,16)" fg:x="36884" fg:w="5"/><text x="82.8144%" y="223.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (40 samples, 0.09%)</title><rect x="82.5778%" y="229" width="0.0895%" height="15" fill="rgb(230,171,20)" fg:x="36890" fg:w="40"/><text x="82.8278%" y="239.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (48 samples, 0.11%)</title><rect x="82.5622%" y="245" width="0.1074%" height="15" fill="rgb(210,71,41)" fg:x="36883" fg:w="48"/><text x="82.8122%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="82.6719%" y="245" width="0.0179%" height="15" fill="rgb(206,173,20)" fg:x="36932" fg:w="8"/><text x="82.9219%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="82.6898%" y="245" width="0.0224%" height="15" fill="rgb(233,88,34)" fg:x="36940" fg:w="10"/><text x="82.9398%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="82.6920%" y="229" width="0.0201%" height="15" fill="rgb(223,209,46)" fg:x="36941" fg:w="9"/><text x="82.9420%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="82.7010%" y="213" width="0.0112%" height="15" fill="rgb(250,43,18)" fg:x="36945" fg:w="5"/><text x="82.9510%" y="223.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (83 samples, 0.19%)</title><rect x="82.5286%" y="261" width="0.1858%" height="15" fill="rgb(208,13,10)" fg:x="36868" fg:w="83"/><text x="82.7786%" y="271.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::ret (89 samples, 0.20%)</title><rect x="82.5174%" y="293" width="0.1992%" height="15" fill="rgb(212,200,36)" fg:x="36863" fg:w="89"/><text x="82.7674%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (86 samples, 0.19%)</title><rect x="82.5241%" y="277" width="0.1925%" height="15" fill="rgb(225,90,30)" fg:x="36866" fg:w="86"/><text x="82.7741%" y="287.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (69 samples, 0.15%)</title><rect x="82.7390%" y="277" width="0.1545%" height="15" fill="rgb(236,182,39)" fg:x="36962" fg:w="69"/><text x="82.9890%" y="287.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (66 samples, 0.15%)</title><rect x="82.7457%" y="261" width="0.1477%" height="15" fill="rgb(212,144,35)" fg:x="36965" fg:w="66"/><text x="82.9957%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="82.8935%" y="277" width="0.0179%" height="15" fill="rgb(228,63,44)" fg:x="37031" fg:w="8"/><text x="83.1435%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="82.8957%" y="261" width="0.0157%" height="15" fill="rgb(228,109,6)" fg:x="37032" fg:w="7"/><text x="83.1457%" y="271.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (81 samples, 0.18%)</title><rect x="82.7345%" y="293" width="0.1813%" height="15" fill="rgb(238,117,24)" fg:x="36960" fg:w="81"/><text x="82.9845%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (6 samples, 0.01%)</title><rect x="82.9248%" y="293" width="0.0134%" height="15" fill="rgb(242,26,26)" fg:x="37045" fg:w="6"/><text x="83.1748%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.02%)</title><rect x="83.0032%" y="261" width="0.0224%" height="15" fill="rgb(221,92,48)" fg:x="37080" fg:w="10"/><text x="83.2532%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.05%)</title><rect x="82.9763%" y="277" width="0.0537%" height="15" fill="rgb(209,209,32)" fg:x="37068" fg:w="24"/><text x="83.2263%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (41 samples, 0.09%)</title><rect x="82.9450%" y="293" width="0.0918%" height="15" fill="rgb(221,70,22)" fg:x="37054" fg:w="41"/><text x="83.1950%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="83.0457%" y="277" width="0.0201%" height="15" fill="rgb(248,145,5)" fg:x="37099" fg:w="9"/><text x="83.2957%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="83.0546%" y="261" width="0.0112%" height="15" fill="rgb(226,116,26)" fg:x="37103" fg:w="5"/><text x="83.3046%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="83.0390%" y="293" width="0.0291%" height="15" fill="rgb(244,5,17)" fg:x="37096" fg:w="13"/><text x="83.2890%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::attempt_tx_execution_with_vm (1,257 samples, 2.81%)</title><rect x="80.2655%" y="309" width="2.8138%" height="15" fill="rgb(252,159,33)" fg:x="35857" fg:w="1257"/><text x="80.5155%" y="319.50">bl..</text></g><g><title>block_verifier`core::fmt::write (15 samples, 0.03%)</title><rect x="83.1621%" y="229" width="0.0336%" height="15" fill="rgb(206,71,0)" fg:x="37151" fg:w="15"/><text x="83.4121%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="83.1957%" y="229" width="0.0224%" height="15" fill="rgb(233,118,54)" fg:x="37166" fg:w="10"/><text x="83.4457%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="83.1979%" y="213" width="0.0201%" height="15" fill="rgb(234,83,48)" fg:x="37167" fg:w="9"/><text x="83.4479%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="83.2001%" y="197" width="0.0179%" height="15" fill="rgb(228,3,54)" fg:x="37168" fg:w="8"/><text x="83.4501%" y="207.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (32 samples, 0.07%)</title><rect x="83.1576%" y="245" width="0.0716%" height="15" fill="rgb(226,155,13)" fg:x="37149" fg:w="32"/><text x="83.4076%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="83.2181%" y="229" width="0.0112%" height="15" fill="rgb(241,28,37)" fg:x="37176" fg:w="5"/><text x="83.4681%" y="239.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (12 samples, 0.03%)</title><rect x="83.2292%" y="245" width="0.0269%" height="15" fill="rgb(233,93,10)" fg:x="37181" fg:w="12"/><text x="83.4792%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="83.2583%" y="245" width="0.0313%" height="15" fill="rgb(225,113,19)" fg:x="37194" fg:w="14"/><text x="83.5083%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (64 samples, 0.14%)</title><rect x="83.1554%" y="261" width="0.1433%" height="15" fill="rgb(241,2,18)" fg:x="37148" fg:w="64"/><text x="83.4054%" y="271.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (7 samples, 0.02%)</title><rect x="83.5113%" y="149" width="0.0157%" height="15" fill="rgb(228,207,21)" fg:x="37307" fg:w="7"/><text x="83.7613%" y="159.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9 samples, 0.02%)</title><rect x="83.6657%" y="133" width="0.0201%" height="15" fill="rgb(213,211,35)" fg:x="37376" fg:w="9"/><text x="83.9157%" y="143.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (12 samples, 0.03%)</title><rect x="83.6859%" y="133" width="0.0269%" height="15" fill="rgb(209,83,10)" fg:x="37385" fg:w="12"/><text x="83.9359%" y="143.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (7 samples, 0.02%)</title><rect x="83.7128%" y="133" width="0.0157%" height="15" fill="rgb(209,164,1)" fg:x="37397" fg:w="7"/><text x="83.9628%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.05%)</title><rect x="83.7284%" y="133" width="0.0470%" height="15" fill="rgb(213,184,43)" fg:x="37404" fg:w="21"/><text x="83.9784%" y="143.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (206 samples, 0.46%)</title><rect x="83.3546%" y="165" width="0.4611%" height="15" fill="rgb(231,61,34)" fg:x="37237" fg:w="206"/><text x="83.6046%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (129 samples, 0.29%)</title><rect x="83.5270%" y="149" width="0.2888%" height="15" fill="rgb(235,75,3)" fg:x="37314" fg:w="129"/><text x="83.7770%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (18 samples, 0.04%)</title><rect x="83.7754%" y="133" width="0.0403%" height="15" fill="rgb(220,106,47)" fg:x="37425" fg:w="18"/><text x="84.0254%" y="143.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (211 samples, 0.47%)</title><rect x="83.3501%" y="181" width="0.4723%" height="15" fill="rgb(210,196,33)" fg:x="37235" fg:w="211"/><text x="83.6001%" y="191.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (217 samples, 0.49%)</title><rect x="83.3434%" y="197" width="0.4858%" height="15" fill="rgb(229,154,42)" fg:x="37232" fg:w="217"/><text x="83.5934%" y="207.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (14 samples, 0.03%)</title><rect x="83.8314%" y="197" width="0.0313%" height="15" fill="rgb(228,114,26)" fg:x="37450" fg:w="14"/><text x="84.0814%" y="207.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (257 samples, 0.58%)</title><rect x="83.3031%" y="213" width="0.5753%" height="15" fill="rgb(208,144,1)" fg:x="37214" fg:w="257"/><text x="83.5531%" y="223.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (259 samples, 0.58%)</title><rect x="83.3031%" y="229" width="0.5798%" height="15" fill="rgb(239,112,37)" fg:x="37214" fg:w="259"/><text x="83.5531%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="83.8829%" y="213" width="0.0269%" height="15" fill="rgb(210,96,50)" fg:x="37473" fg:w="12"/><text x="84.1329%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="83.8896%" y="197" width="0.0201%" height="15" fill="rgb(222,178,2)" fg:x="37476" fg:w="9"/><text x="84.1396%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="83.8986%" y="181" width="0.0112%" height="15" fill="rgb(226,74,18)" fg:x="37480" fg:w="5"/><text x="84.1486%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (14 samples, 0.03%)</title><rect x="83.8829%" y="229" width="0.0313%" height="15" fill="rgb(225,67,54)" fg:x="37473" fg:w="14"/><text x="84.1329%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="83.9187%" y="229" width="0.0201%" height="15" fill="rgb(251,92,32)" fg:x="37489" fg:w="9"/><text x="84.1687%" y="239.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (288 samples, 0.64%)</title><rect x="83.2986%" y="245" width="0.6447%" height="15" fill="rgb(228,149,22)" fg:x="37212" fg:w="288"/><text x="83.5486%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (290 samples, 0.65%)</title><rect x="83.2986%" y="261" width="0.6492%" height="15" fill="rgb(243,54,13)" fg:x="37212" fg:w="290"/><text x="83.5486%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (380 samples, 0.85%)</title><rect x="83.1173%" y="277" width="0.8506%" height="15" fill="rgb(243,180,28)" fg:x="37131" fg:w="380"/><text x="83.3673%" y="287.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (60 samples, 0.13%)</title><rect x="83.9903%" y="261" width="0.1343%" height="15" fill="rgb(208,167,24)" fg:x="37521" fg:w="60"/><text x="84.2403%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="84.1246%" y="261" width="0.0201%" height="15" fill="rgb(245,73,45)" fg:x="37581" fg:w="9"/><text x="84.3746%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.1314%" y="245" width="0.0134%" height="15" fill="rgb(237,203,48)" fg:x="37584" fg:w="6"/><text x="84.3814%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="84.1336%" y="229" width="0.0112%" height="15" fill="rgb(211,197,16)" fg:x="37585" fg:w="5"/><text x="84.3836%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (23 samples, 0.05%)</title><rect x="84.1448%" y="261" width="0.0515%" height="15" fill="rgb(243,99,51)" fg:x="37590" fg:w="23"/><text x="84.3948%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (103 samples, 0.23%)</title><rect x="83.9679%" y="277" width="0.2306%" height="15" fill="rgb(215,123,29)" fg:x="37511" fg:w="103"/><text x="84.2179%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.04%)</title><rect x="84.3239%" y="181" width="0.0381%" height="15" fill="rgb(239,186,37)" fg:x="37670" fg:w="17"/><text x="84.5739%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.03%)</title><rect x="84.3351%" y="165" width="0.0269%" height="15" fill="rgb(252,136,39)" fg:x="37675" fg:w="12"/><text x="84.5851%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="84.3619%" y="181" width="0.0291%" height="15" fill="rgb(223,213,32)" fg:x="37687" fg:w="13"/><text x="84.6119%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="84.3664%" y="165" width="0.0246%" height="15" fill="rgb(233,115,5)" fg:x="37689" fg:w="11"/><text x="84.6164%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="84.3776%" y="149" width="0.0134%" height="15" fill="rgb(207,226,44)" fg:x="37694" fg:w="6"/><text x="84.6276%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="84.3910%" y="181" width="0.0112%" height="15" fill="rgb(208,126,0)" fg:x="37700" fg:w="5"/><text x="84.6410%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="84.3910%" y="165" width="0.0112%" height="15" fill="rgb(244,66,21)" fg:x="37700" fg:w="5"/><text x="84.6410%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (55 samples, 0.12%)</title><rect x="84.3104%" y="197" width="0.1231%" height="15" fill="rgb(222,97,12)" fg:x="37664" fg:w="55"/><text x="84.5604%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (13 samples, 0.03%)</title><rect x="84.4045%" y="181" width="0.0291%" height="15" fill="rgb(219,213,19)" fg:x="37706" fg:w="13"/><text x="84.6545%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (64 samples, 0.14%)</title><rect x="84.2992%" y="213" width="0.1433%" height="15" fill="rgb(252,169,30)" fg:x="37659" fg:w="64"/><text x="84.5492%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (72 samples, 0.16%)</title><rect x="84.2880%" y="229" width="0.1612%" height="15" fill="rgb(206,32,51)" fg:x="37654" fg:w="72"/><text x="84.5380%" y="239.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (79 samples, 0.18%)</title><rect x="84.2769%" y="245" width="0.1768%" height="15" fill="rgb(250,172,42)" fg:x="37649" fg:w="79"/><text x="84.5269%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (84 samples, 0.19%)</title><rect x="84.2679%" y="261" width="0.1880%" height="15" fill="rgb(209,34,43)" fg:x="37645" fg:w="84"/><text x="84.5179%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="84.4627%" y="245" width="0.0179%" height="15" fill="rgb(223,11,35)" fg:x="37732" fg:w="8"/><text x="84.7127%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="84.4627%" y="229" width="0.0179%" height="15" fill="rgb(251,219,26)" fg:x="37732" fg:w="8"/><text x="84.7127%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="84.4649%" y="213" width="0.0157%" height="15" fill="rgb(231,119,3)" fg:x="37733" fg:w="7"/><text x="84.7149%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="84.4694%" y="197" width="0.0112%" height="15" fill="rgb(216,97,11)" fg:x="37735" fg:w="5"/><text x="84.7194%" y="207.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.03%)</title><rect x="84.4559%" y="261" width="0.0313%" height="15" fill="rgb(223,59,9)" fg:x="37729" fg:w="14"/><text x="84.7059%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="84.4985%" y="261" width="0.0179%" height="15" fill="rgb(233,93,31)" fg:x="37748" fg:w="8"/><text x="84.7485%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="84.5164%" y="261" width="0.0313%" height="15" fill="rgb(239,81,33)" fg:x="37756" fg:w="14"/><text x="84.7664%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="84.5186%" y="245" width="0.0291%" height="15" fill="rgb(213,120,34)" fg:x="37757" fg:w="13"/><text x="84.7686%" y="255.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (153 samples, 0.34%)</title><rect x="84.2097%" y="277" width="0.3425%" height="15" fill="rgb(243,49,53)" fg:x="37619" fg:w="153"/><text x="84.4597%" y="287.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::insert_coin (664 samples, 1.49%)</title><rect x="83.0882%" y="293" width="1.4864%" height="15" fill="rgb(247,216,33)" fg:x="37118" fg:w="664"/><text x="83.3382%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::persist_output_utxos (668 samples, 1.50%)</title><rect x="83.0815%" y="309" width="1.4953%" height="15" fill="rgb(226,26,14)" fg:x="37115" fg:w="668"/><text x="83.3315%" y="319.50"></text></g><g><title>block_verifier`core::fmt::write (14 samples, 0.03%)</title><rect x="84.6708%" y="245" width="0.0313%" height="15" fill="rgb(215,49,53)" fg:x="37825" fg:w="14"/><text x="84.9208%" y="255.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (6 samples, 0.01%)</title><rect x="84.6887%" y="229" width="0.0134%" height="15" fill="rgb(245,162,40)" fg:x="37833" fg:w="6"/><text x="84.9387%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="84.7022%" y="245" width="0.0157%" height="15" fill="rgb(229,68,17)" fg:x="37839" fg:w="7"/><text x="84.9522%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="84.7066%" y="229" width="0.0112%" height="15" fill="rgb(213,182,10)" fg:x="37841" fg:w="5"/><text x="84.9566%" y="239.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (31 samples, 0.07%)</title><rect x="84.6619%" y="261" width="0.0694%" height="15" fill="rgb(245,125,30)" fg:x="37821" fg:w="31"/><text x="84.9119%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.7178%" y="245" width="0.0134%" height="15" fill="rgb(232,202,2)" fg:x="37846" fg:w="6"/><text x="84.9678%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (16 samples, 0.04%)</title><rect x="84.7335%" y="261" width="0.0358%" height="15" fill="rgb(237,140,51)" fg:x="37853" fg:w="16"/><text x="84.9835%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="84.7693%" y="261" width="0.0246%" height="15" fill="rgb(236,157,25)" fg:x="37869" fg:w="11"/><text x="85.0193%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="84.7783%" y="245" width="0.0157%" height="15" fill="rgb(219,209,0)" fg:x="37873" fg:w="7"/><text x="85.0283%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (62 samples, 0.14%)</title><rect x="84.6596%" y="277" width="0.1388%" height="15" fill="rgb(240,116,54)" fg:x="37820" fg:w="62"/><text x="84.9096%" y="287.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (7 samples, 0.02%)</title><rect x="84.9103%" y="165" width="0.0157%" height="15" fill="rgb(216,10,36)" fg:x="37932" fg:w="7"/><text x="85.1603%" y="175.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (9 samples, 0.02%)</title><rect x="85.0133%" y="149" width="0.0201%" height="15" fill="rgb(222,72,44)" fg:x="37978" fg:w="9"/><text x="85.2633%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (23 samples, 0.05%)</title><rect x="85.0335%" y="149" width="0.0515%" height="15" fill="rgb(232,159,9)" fg:x="37987" fg:w="23"/><text x="85.2835%" y="159.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (91 samples, 0.20%)</title><rect x="84.9260%" y="165" width="0.2037%" height="15" fill="rgb(210,39,32)" fg:x="37939" fg:w="91"/><text x="85.1760%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (20 samples, 0.04%)</title><rect x="85.0850%" y="149" width="0.0448%" height="15" fill="rgb(216,194,45)" fg:x="38010" fg:w="20"/><text x="85.3350%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (129 samples, 0.29%)</title><rect x="84.8432%" y="181" width="0.2888%" height="15" fill="rgb(218,18,35)" fg:x="37902" fg:w="129"/><text x="85.0932%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (10 samples, 0.02%)</title><rect x="85.1499%" y="133" width="0.0224%" height="15" fill="rgb(207,83,51)" fg:x="38039" fg:w="10"/><text x="85.3999%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="85.1499%" y="117" width="0.0224%" height="15" fill="rgb(225,63,43)" fg:x="38039" fg:w="10"/><text x="85.3999%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="85.1499%" y="101" width="0.0224%" height="15" fill="rgb(207,57,36)" fg:x="38039" fg:w="10"/><text x="85.3999%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="85.1588%" y="85" width="0.0134%" height="15" fill="rgb(216,99,33)" fg:x="38043" fg:w="6"/><text x="85.4088%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="85.1611%" y="69" width="0.0112%" height="15" fill="rgb(225,42,16)" fg:x="38044" fg:w="5"/><text x="85.4111%" y="79.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (18 samples, 0.04%)</title><rect x="85.1387%" y="181" width="0.0403%" height="15" fill="rgb(220,201,45)" fg:x="38034" fg:w="18"/><text x="85.3887%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (17 samples, 0.04%)</title><rect x="85.1409%" y="165" width="0.0381%" height="15" fill="rgb(225,33,4)" fg:x="38035" fg:w="17"/><text x="85.3909%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (15 samples, 0.03%)</title><rect x="85.1454%" y="149" width="0.0336%" height="15" fill="rgb(224,33,50)" fg:x="38037" fg:w="15"/><text x="85.3954%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (151 samples, 0.34%)</title><rect x="84.8432%" y="197" width="0.3380%" height="15" fill="rgb(246,198,51)" fg:x="37902" fg:w="151"/><text x="85.0932%" y="207.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (159 samples, 0.36%)</title><rect x="84.8365%" y="213" width="0.3559%" height="15" fill="rgb(205,22,4)" fg:x="37899" fg:w="159"/><text x="85.0865%" y="223.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (180 samples, 0.40%)</title><rect x="84.8119%" y="245" width="0.4029%" height="15" fill="rgb(206,3,8)" fg:x="37888" fg:w="180"/><text x="85.0619%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (179 samples, 0.40%)</title><rect x="84.8141%" y="229" width="0.4007%" height="15" fill="rgb(251,23,15)" fg:x="37889" fg:w="179"/><text x="85.0641%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="85.1969%" y="213" width="0.0179%" height="15" fill="rgb(252,88,28)" fg:x="38060" fg:w="8"/><text x="85.4469%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="85.2148%" y="229" width="0.0246%" height="15" fill="rgb(212,127,14)" fg:x="38068" fg:w="11"/><text x="85.4648%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="85.2148%" y="213" width="0.0246%" height="15" fill="rgb(247,145,37)" fg:x="38068" fg:w="11"/><text x="85.4648%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="85.2237%" y="197" width="0.0157%" height="15" fill="rgb(209,117,53)" fg:x="38072" fg:w="7"/><text x="85.4737%" y="207.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (193 samples, 0.43%)</title><rect x="84.8119%" y="261" width="0.4320%" height="15" fill="rgb(212,90,42)" fg:x="37888" fg:w="193"/><text x="85.0619%" y="271.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (13 samples, 0.03%)</title><rect x="85.2148%" y="245" width="0.0291%" height="15" fill="rgb(218,164,37)" fg:x="38068" fg:w="13"/><text x="85.4648%" y="255.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (10 samples, 0.02%)</title><rect x="85.2439%" y="261" width="0.0224%" height="15" fill="rgb(246,65,34)" fg:x="38081" fg:w="10"/><text x="85.4939%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="85.2461%" y="245" width="0.0201%" height="15" fill="rgb(231,100,33)" fg:x="38082" fg:w="9"/><text x="85.4961%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="85.2528%" y="229" width="0.0134%" height="15" fill="rgb(228,126,14)" fg:x="38085" fg:w="6"/><text x="85.5028%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="85.2707%" y="261" width="0.0201%" height="15" fill="rgb(215,173,21)" fg:x="38093" fg:w="9"/><text x="85.5207%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="85.2752%" y="245" width="0.0157%" height="15" fill="rgb(210,6,40)" fg:x="38095" fg:w="7"/><text x="85.5252%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (226 samples, 0.51%)</title><rect x="84.7984%" y="277" width="0.5059%" height="15" fill="rgb(212,48,18)" fg:x="37882" fg:w="226"/><text x="85.0484%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.2909%" y="261" width="0.0134%" height="15" fill="rgb(230,214,11)" fg:x="38102" fg:w="6"/><text x="85.5409%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.2909%" y="245" width="0.0134%" height="15" fill="rgb(254,105,39)" fg:x="38102" fg:w="6"/><text x="85.5409%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.3267%" y="277" width="0.0179%" height="15" fill="rgb(245,158,5)" fg:x="38118" fg:w="8"/><text x="85.5767%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.3334%" y="261" width="0.0112%" height="15" fill="rgb(249,208,11)" fg:x="38121" fg:w="5"/><text x="85.5834%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (335 samples, 0.75%)</title><rect x="84.5970%" y="293" width="0.7499%" height="15" fill="rgb(210,39,28)" fg:x="37792" fg:w="335"/><text x="84.8470%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (6 samples, 0.01%)</title><rect x="85.3469%" y="293" width="0.0134%" height="15" fill="rgb(211,56,53)" fg:x="38127" fg:w="6"/><text x="85.5969%" y="303.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (18 samples, 0.04%)</title><rect x="85.4051%" y="277" width="0.0403%" height="15" fill="rgb(226,201,30)" fg:x="38153" fg:w="18"/><text x="85.6551%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="85.4453%" y="277" width="0.0112%" height="15" fill="rgb(239,101,34)" fg:x="38171" fg:w="5"/><text x="85.6953%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.4610%" y="277" width="0.0134%" height="15" fill="rgb(226,209,5)" fg:x="38178" fg:w="6"/><text x="85.7110%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.4633%" y="261" width="0.0112%" height="15" fill="rgb(250,105,47)" fg:x="38179" fg:w="5"/><text x="85.7133%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::take (57 samples, 0.13%)</title><rect x="85.3603%" y="293" width="0.1276%" height="15" fill="rgb(230,72,3)" fg:x="38133" fg:w="57"/><text x="85.6103%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="85.4744%" y="277" width="0.0134%" height="15" fill="rgb(232,218,39)" fg:x="38184" fg:w="6"/><text x="85.7244%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (13 samples, 0.03%)</title><rect x="85.4924%" y="213" width="0.0291%" height="15" fill="rgb(248,166,6)" fg:x="38192" fg:w="13"/><text x="85.7424%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (13 samples, 0.03%)</title><rect x="85.4924%" y="197" width="0.0291%" height="15" fill="rgb(247,89,20)" fg:x="38192" fg:w="13"/><text x="85.7424%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.03%)</title><rect x="85.4924%" y="229" width="0.0336%" height="15" fill="rgb(248,130,54)" fg:x="38192" fg:w="15"/><text x="85.7424%" y="239.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (18 samples, 0.04%)</title><rect x="85.4924%" y="293" width="0.0403%" height="15" fill="rgb(234,196,4)" fg:x="38192" fg:w="18"/><text x="85.7424%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (18 samples, 0.04%)</title><rect x="85.4924%" y="277" width="0.0403%" height="15" fill="rgb(250,143,31)" fg:x="38192" fg:w="18"/><text x="85.7424%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (18 samples, 0.04%)</title><rect x="85.4924%" y="261" width="0.0403%" height="15" fill="rgb(211,110,34)" fg:x="38192" fg:w="18"/><text x="85.7424%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (18 samples, 0.04%)</title><rect x="85.4924%" y="245" width="0.0403%" height="15" fill="rgb(215,124,48)" fg:x="38192" fg:w="18"/><text x="85.7424%" y="255.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (24 samples, 0.05%)</title><rect x="85.5371%" y="293" width="0.0537%" height="15" fill="rgb(216,46,13)" fg:x="38212" fg:w="24"/><text x="85.7871%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="85.5976%" y="293" width="0.0224%" height="15" fill="rgb(205,184,25)" fg:x="38239" fg:w="10"/><text x="85.8476%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="85.6065%" y="277" width="0.0134%" height="15" fill="rgb(228,1,10)" fg:x="38243" fg:w="6"/><text x="85.8565%" y="287.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::spend_input_utxos (472 samples, 1.06%)</title><rect x="84.5768%" y="309" width="1.0566%" height="15" fill="rgb(213,116,27)" fg:x="37783" fg:w="472"/><text x="84.8268%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (8 samples, 0.02%)</title><rect x="85.6714%" y="277" width="0.0179%" height="15" fill="rgb(241,95,50)" fg:x="38272" fg:w="8"/><text x="85.9214%" y="287.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (7 samples, 0.02%)</title><rect x="85.6893%" y="277" width="0.0157%" height="15" fill="rgb(238,48,32)" fg:x="38280" fg:w="7"/><text x="85.9393%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (5 samples, 0.01%)</title><rect x="85.7140%" y="245" width="0.0112%" height="15" fill="rgb(235,113,49)" fg:x="38291" fg:w="5"/><text x="85.9640%" y="255.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.02%)</title><rect x="85.7050%" y="277" width="0.0246%" height="15" fill="rgb(205,127,43)" fg:x="38287" fg:w="11"/><text x="85.9550%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="85.7095%" y="261" width="0.0201%" height="15" fill="rgb(250,162,2)" fg:x="38289" fg:w="9"/><text x="85.9595%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="85.7319%" y="277" width="0.0134%" height="15" fill="rgb(220,13,41)" fg:x="38299" fg:w="6"/><text x="85.9819%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (38 samples, 0.09%)</title><rect x="85.6625%" y="293" width="0.0851%" height="15" fill="rgb(249,221,25)" fg:x="38268" fg:w="38"/><text x="85.9125%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::update_execution_data (56 samples, 0.13%)</title><rect x="85.6334%" y="309" width="0.1254%" height="15" fill="rgb(215,208,19)" fg:x="38255" fg:w="56"/><text x="85.8834%" y="319.50"></text></g><g><title>block_verifier`core::fmt::write (10 samples, 0.02%)</title><rect x="85.8416%" y="229" width="0.0224%" height="15" fill="rgb(236,175,2)" fg:x="38348" fg:w="10"/><text x="86.0916%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="85.8639%" y="229" width="0.0336%" height="15" fill="rgb(241,52,2)" fg:x="38358" fg:w="15"/><text x="86.1139%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="85.8684%" y="213" width="0.0291%" height="15" fill="rgb(248,140,14)" fg:x="38360" fg:w="13"/><text x="86.1184%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="85.8774%" y="197" width="0.0201%" height="15" fill="rgb(253,22,42)" fg:x="38364" fg:w="9"/><text x="86.1274%" y="207.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (34 samples, 0.08%)</title><rect x="85.8348%" y="245" width="0.0761%" height="15" fill="rgb(234,61,47)" fg:x="38345" fg:w="34"/><text x="86.0848%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.8975%" y="229" width="0.0134%" height="15" fill="rgb(208,226,15)" fg:x="38373" fg:w="6"/><text x="86.1475%" y="239.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (15 samples, 0.03%)</title><rect x="85.9132%" y="245" width="0.0336%" height="15" fill="rgb(217,221,4)" fg:x="38380" fg:w="15"/><text x="86.1632%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="85.9490%" y="245" width="0.0246%" height="15" fill="rgb(212,174,34)" fg:x="38396" fg:w="11"/><text x="86.1990%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="85.9557%" y="229" width="0.0179%" height="15" fill="rgb(253,83,4)" fg:x="38399" fg:w="8"/><text x="86.2057%" y="239.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (72 samples, 0.16%)</title><rect x="85.8259%" y="261" width="0.1612%" height="15" fill="rgb(250,195,49)" fg:x="38341" fg:w="72"/><text x="86.0759%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="85.9759%" y="245" width="0.0112%" height="15" fill="rgb(241,192,25)" fg:x="38408" fg:w="5"/><text x="86.2259%" y="255.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (10 samples, 0.02%)</title><rect x="86.2825%" y="149" width="0.0224%" height="15" fill="rgb(208,124,10)" fg:x="38545" fg:w="10"/><text x="86.5325%" y="159.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (11 samples, 0.02%)</title><rect x="86.5556%" y="133" width="0.0246%" height="15" fill="rgb(222,33,0)" fg:x="38667" fg:w="11"/><text x="86.8056%" y="143.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (11 samples, 0.02%)</title><rect x="86.5803%" y="133" width="0.0246%" height="15" fill="rgb(234,209,28)" fg:x="38678" fg:w="11"/><text x="86.8303%" y="143.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (7 samples, 0.02%)</title><rect x="86.6049%" y="133" width="0.0157%" height="15" fill="rgb(224,11,23)" fg:x="38689" fg:w="7"/><text x="86.8549%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.04%)</title><rect x="86.6206%" y="133" width="0.0448%" height="15" fill="rgb(232,99,1)" fg:x="38696" fg:w="20"/><text x="86.8706%" y="143.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (337 samples, 0.75%)</title><rect x="86.0363%" y="165" width="0.7544%" height="15" fill="rgb(237,95,45)" fg:x="38435" fg:w="337"/><text x="86.2863%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (217 samples, 0.49%)</title><rect x="86.3049%" y="149" width="0.4858%" height="15" fill="rgb(208,109,11)" fg:x="38555" fg:w="217"/><text x="86.5549%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (56 samples, 0.13%)</title><rect x="86.6653%" y="133" width="0.1254%" height="15" fill="rgb(216,190,48)" fg:x="38716" fg:w="56"/><text x="86.9153%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (5 samples, 0.01%)</title><rect x="86.7907%" y="165" width="0.0112%" height="15" fill="rgb(251,171,36)" fg:x="38772" fg:w="5"/><text x="87.0407%" y="175.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (355 samples, 0.79%)</title><rect x="86.0318%" y="181" width="0.7947%" height="15" fill="rgb(230,62,22)" fg:x="38433" fg:w="355"/><text x="86.2818%" y="191.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (11 samples, 0.02%)</title><rect x="86.8019%" y="165" width="0.0246%" height="15" fill="rgb(225,114,35)" fg:x="38777" fg:w="11"/><text x="87.0519%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (9 samples, 0.02%)</title><rect x="86.8063%" y="149" width="0.0201%" height="15" fill="rgb(215,118,42)" fg:x="38779" fg:w="9"/><text x="87.0563%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (7 samples, 0.02%)</title><rect x="86.8108%" y="133" width="0.0157%" height="15" fill="rgb(243,119,21)" fg:x="38781" fg:w="7"/><text x="87.0608%" y="143.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.02%)</title><rect x="86.8108%" y="117" width="0.0157%" height="15" fill="rgb(252,177,53)" fg:x="38781" fg:w="7"/><text x="87.0608%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="86.8108%" y="101" width="0.0157%" height="15" fill="rgb(237,209,29)" fg:x="38781" fg:w="7"/><text x="87.0608%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="86.8131%" y="85" width="0.0134%" height="15" fill="rgb(212,65,23)" fg:x="38782" fg:w="6"/><text x="87.0631%" y="95.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (360 samples, 0.81%)</title><rect x="86.0296%" y="197" width="0.8059%" height="15" fill="rgb(230,222,46)" fg:x="38432" fg:w="360"/><text x="86.2796%" y="207.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (381 samples, 0.85%)</title><rect x="85.9938%" y="229" width="0.8529%" height="15" fill="rgb(215,135,32)" fg:x="38416" fg:w="381"/><text x="86.2438%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (377 samples, 0.84%)</title><rect x="86.0027%" y="213" width="0.8439%" height="15" fill="rgb(246,101,22)" fg:x="38420" fg:w="377"/><text x="86.2527%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.04%)</title><rect x="86.8466%" y="213" width="0.0403%" height="15" fill="rgb(206,107,13)" fg:x="38797" fg:w="18"/><text x="87.0966%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="86.8578%" y="197" width="0.0291%" height="15" fill="rgb(250,100,44)" fg:x="38802" fg:w="13"/><text x="87.1078%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="86.8690%" y="181" width="0.0179%" height="15" fill="rgb(231,147,38)" fg:x="38807" fg:w="8"/><text x="87.1190%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (19 samples, 0.04%)</title><rect x="86.8466%" y="229" width="0.0425%" height="15" fill="rgb(229,8,40)" fg:x="38797" fg:w="19"/><text x="87.0966%" y="239.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (402 samples, 0.90%)</title><rect x="85.9938%" y="245" width="0.8999%" height="15" fill="rgb(221,135,30)" fg:x="38416" fg:w="402"/><text x="86.2438%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="86.8936%" y="229" width="0.0224%" height="15" fill="rgb(249,193,18)" fg:x="38818" fg:w="10"/><text x="87.1436%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="86.9026%" y="213" width="0.0134%" height="15" fill="rgb(209,133,39)" fg:x="38822" fg:w="6"/><text x="87.1526%" y="223.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (11 samples, 0.02%)</title><rect x="86.8936%" y="245" width="0.0246%" height="15" fill="rgb(232,100,14)" fg:x="38818" fg:w="11"/><text x="87.1436%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="86.9183%" y="245" width="0.0201%" height="15" fill="rgb(224,185,1)" fg:x="38829" fg:w="9"/><text x="87.1683%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="86.9227%" y="229" width="0.0157%" height="15" fill="rgb(223,139,8)" fg:x="38831" fg:w="7"/><text x="87.1727%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="86.9384%" y="245" width="0.0179%" height="15" fill="rgb(232,213,38)" fg:x="38838" fg:w="8"/><text x="87.1884%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="86.9384%" y="229" width="0.0179%" height="15" fill="rgb(207,94,22)" fg:x="38838" fg:w="8"/><text x="87.1884%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="86.9429%" y="213" width="0.0134%" height="15" fill="rgb(219,183,54)" fg:x="38840" fg:w="6"/><text x="87.1929%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (436 samples, 0.98%)</title><rect x="85.9871%" y="261" width="0.9760%" height="15" fill="rgb(216,185,54)" fg:x="38413" fg:w="436"/><text x="86.2371%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="86.9832%" y="261" width="0.0201%" height="15" fill="rgb(254,217,39)" fg:x="38858" fg:w="9"/><text x="87.2332%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="86.9832%" y="245" width="0.0201%" height="15" fill="rgb(240,178,23)" fg:x="38858" fg:w="9"/><text x="87.2332%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (551 samples, 1.23%)</title><rect x="85.7789%" y="277" width="1.2334%" height="15" fill="rgb(218,11,47)" fg:x="38320" fg:w="551"/><text x="86.0289%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (5 samples, 0.01%)</title><rect x="87.0123%" y="277" width="0.0112%" height="15" fill="rgb(218,51,51)" fg:x="38871" fg:w="5"/><text x="87.2623%" y="287.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (107 samples, 0.24%)</title><rect x="87.0257%" y="261" width="0.2395%" height="15" fill="rgb(238,126,27)" fg:x="38877" fg:w="107"/><text x="87.2757%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (163 samples, 0.36%)</title><rect x="87.0235%" y="277" width="0.3649%" height="15" fill="rgb(249,202,22)" fg:x="38876" fg:w="163"/><text x="87.2735%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (55 samples, 0.12%)</title><rect x="87.2652%" y="261" width="0.1231%" height="15" fill="rgb(254,195,49)" fg:x="38984" fg:w="55"/><text x="87.5152%" y="271.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (21 samples, 0.05%)</title><rect x="87.3951%" y="277" width="0.0470%" height="15" fill="rgb(208,123,14)" fg:x="39042" fg:w="21"/><text x="87.6451%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="87.4466%" y="277" width="0.0179%" height="15" fill="rgb(224,200,8)" fg:x="39065" fg:w="8"/><text x="87.6966%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="87.4510%" y="261" width="0.0134%" height="15" fill="rgb(217,61,36)" fg:x="39067" fg:w="6"/><text x="87.7010%" y="271.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::verify_inputs_exist_and_values_match (763 samples, 1.71%)</title><rect x="85.7587%" y="309" width="1.7080%" height="15" fill="rgb(206,35,45)" fg:x="38311" fg:w="763"/><text x="86.0087%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (755 samples, 1.69%)</title><rect x="85.7766%" y="293" width="1.6901%" height="15" fill="rgb(217,65,33)" fg:x="38319" fg:w="755"/><text x="86.0266%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (5 samples, 0.01%)</title><rect x="87.4712%" y="293" width="0.0112%" height="15" fill="rgb(222,158,48)" fg:x="39076" fg:w="5"/><text x="87.7212%" y="303.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (6 samples, 0.01%)</title><rect x="87.4824%" y="293" width="0.0134%" height="15" fill="rgb(254,2,54)" fg:x="39081" fg:w="6"/><text x="87.7324%" y="303.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="87.5003%" y="277" width="0.0134%" height="15" fill="rgb(250,143,38)" fg:x="39089" fg:w="6"/><text x="87.7503%" y="287.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="87.4958%" y="293" width="0.0224%" height="15" fill="rgb(248,25,0)" fg:x="39087" fg:w="10"/><text x="87.7458%" y="303.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (27 samples, 0.06%)</title><rect x="87.4689%" y="309" width="0.0604%" height="15" fill="rgb(206,152,27)" fg:x="39075" fg:w="27"/><text x="87.7189%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="87.5361%" y="261" width="0.0224%" height="15" fill="rgb(240,77,30)" fg:x="39105" fg:w="10"/><text x="87.7861%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="87.5383%" y="245" width="0.0201%" height="15" fill="rgb(231,5,3)" fg:x="39106" fg:w="9"/><text x="87.7883%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="87.5383%" y="229" width="0.0201%" height="15" fill="rgb(207,226,32)" fg:x="39106" fg:w="9"/><text x="87.7883%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="87.5450%" y="213" width="0.0134%" height="15" fill="rgb(222,207,47)" fg:x="39109" fg:w="6"/><text x="87.7950%" y="223.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.03%)</title><rect x="87.5361%" y="277" width="0.0269%" height="15" fill="rgb(229,115,45)" fg:x="39105" fg:w="12"/><text x="87.7861%" y="287.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (43 samples, 0.10%)</title><rect x="87.5361%" y="293" width="0.0963%" height="15" fill="rgb(224,191,6)" fg:x="39105" fg:w="43"/><text x="87.7861%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (31 samples, 0.07%)</title><rect x="87.5630%" y="277" width="0.0694%" height="15" fill="rgb(230,227,24)" fg:x="39117" fg:w="31"/><text x="87.8130%" y="287.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (28 samples, 0.06%)</title><rect x="87.6346%" y="293" width="0.0627%" height="15" fill="rgb(228,80,19)" fg:x="39149" fg:w="28"/><text x="87.8846%" y="303.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (77 samples, 0.17%)</title><rect x="87.5294%" y="309" width="0.1724%" height="15" fill="rgb(247,229,0)" fg:x="39102" fg:w="77"/><text x="87.7794%" y="319.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (5 samples, 0.01%)</title><rect x="87.7017%" y="309" width="0.0112%" height="15" fill="rgb(237,194,15)" fg:x="39179" fg:w="5"/><text x="87.9517%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (14 samples, 0.03%)</title><rect x="87.7286%" y="277" width="0.0313%" height="15" fill="rgb(219,203,20)" fg:x="39191" fg:w="14"/><text x="87.9786%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (16 samples, 0.04%)</title><rect x="87.7264%" y="293" width="0.0358%" height="15" fill="rgb(234,128,8)" fg:x="39190" fg:w="16"/><text x="87.9764%" y="303.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (35 samples, 0.08%)</title><rect x="87.7129%" y="309" width="0.0783%" height="15" fill="rgb(248,202,8)" fg:x="39184" fg:w="35"/><text x="87.9629%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="87.7667%" y="293" width="0.0246%" height="15" fill="rgb(206,104,37)" fg:x="39208" fg:w="11"/><text x="88.0167%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="87.7689%" y="277" width="0.0224%" height="15" fill="rgb(223,8,27)" fg:x="39209" fg:w="10"/><text x="88.0189%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="87.7801%" y="261" width="0.0112%" height="15" fill="rgb(216,217,28)" fg:x="39214" fg:w="5"/><text x="88.0301%" y="271.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ec_pubkey_serialize (5 samples, 0.01%)</title><rect x="87.8181%" y="261" width="0.0112%" height="15" fill="rgb(249,199,1)" fg:x="39231" fg:w="5"/><text x="88.0681%" y="271.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_odd_multiples_table (41 samples, 0.09%)</title><rect x="88.2121%" y="229" width="0.0918%" height="15" fill="rgb(240,85,17)" fg:x="39407" fg:w="41"/><text x="88.4621%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (16 samples, 0.04%)</title><rect x="88.2681%" y="213" width="0.0358%" height="15" fill="rgb(206,108,45)" fg:x="39432" fg:w="16"/><text x="88.5181%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_wnaf (72 samples, 0.16%)</title><rect x="88.3039%" y="229" width="0.1612%" height="15" fill="rgb(245,210,41)" fg:x="39448" fg:w="72"/><text x="88.5539%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_mul (336 samples, 0.75%)</title><rect x="88.4651%" y="229" width="0.7521%" height="15" fill="rgb(206,13,37)" fg:x="39520" fg:w="336"/><text x="88.7151%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (166 samples, 0.37%)</title><rect x="89.2172%" y="229" width="0.3716%" height="15" fill="rgb(250,61,18)" fg:x="39856" fg:w="166"/><text x="89.4672%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (1,411 samples, 3.16%)</title><rect x="89.5888%" y="229" width="3.1585%" height="15" fill="rgb(235,172,48)" fg:x="40022" fg:w="1411"/><text x="89.8388%" y="239.50">blo..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul (5 samples, 0.01%)</title><rect x="92.7563%" y="213" width="0.0112%" height="15" fill="rgb(249,201,17)" fg:x="41437" fg:w="5"/><text x="93.0063%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_split_lambda (9 samples, 0.02%)</title><rect x="92.7563%" y="229" width="0.0201%" height="15" fill="rgb(219,208,6)" fg:x="41437" fg:w="9"/><text x="93.0063%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult (2,201 samples, 4.93%)</title><rect x="87.8540%" y="245" width="4.9269%" height="15" fill="rgb(248,31,23)" fg:x="39247" fg:w="2201"/><text x="88.1040%" y="255.50">block_..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_table_get_ge_storage (15 samples, 0.03%)</title><rect x="92.7809%" y="245" width="0.0336%" height="15" fill="rgb(245,15,42)" fg:x="41448" fg:w="15"/><text x="93.0309%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_sqrt (496 samples, 1.11%)</title><rect x="92.8145%" y="245" width="1.1103%" height="15" fill="rgb(222,217,39)" fg:x="41463" fg:w="496"/><text x="93.0645%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (21 samples, 0.05%)</title><rect x="93.9628%" y="213" width="0.0470%" height="15" fill="rgb(210,219,27)" fg:x="41976" fg:w="21"/><text x="94.2128%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_gej_var (164 samples, 0.37%)</title><rect x="93.9247%" y="245" width="0.3671%" height="15" fill="rgb(252,166,36)" fg:x="41959" fg:w="164"/><text x="94.1747%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_inv_var (154 samples, 0.34%)</title><rect x="93.9471%" y="229" width="0.3447%" height="15" fill="rgb(245,132,34)" fg:x="41969" fg:w="154"/><text x="94.1971%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (126 samples, 0.28%)</title><rect x="94.0098%" y="213" width="0.2820%" height="15" fill="rgb(236,54,3)" fg:x="41997" fg:w="126"/><text x="94.2598%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_xo_var (8 samples, 0.02%)</title><rect x="94.2919%" y="245" width="0.0179%" height="15" fill="rgb(241,173,43)" fg:x="42123" fg:w="8"/><text x="94.5419%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_table_set_globalz (87 samples, 0.19%)</title><rect x="94.3098%" y="245" width="0.1947%" height="15" fill="rgb(215,190,9)" fg:x="42131" fg:w="87"/><text x="94.5598%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (1,034 samples, 2.31%)</title><rect x="94.5045%" y="245" width="2.3146%" height="15" fill="rgb(242,101,16)" fg:x="42218" fg:w="1034"/><text x="94.7545%" y="255.50">b..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_zinv_var (532 samples, 1.19%)</title><rect x="96.8191%" y="245" width="1.1909%" height="15" fill="rgb(223,190,21)" fg:x="43252" fg:w="532"/><text x="97.0691%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (27 samples, 0.06%)</title><rect x="98.0100%" y="245" width="0.0604%" height="15" fill="rgb(215,228,25)" fg:x="43784" fg:w="27"/><text x="98.2600%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (23 samples, 0.05%)</title><rect x="98.0749%" y="245" width="0.0515%" height="15" fill="rgb(225,36,22)" fg:x="43813" fg:w="23"/><text x="98.3249%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (126 samples, 0.28%)</title><rect x="98.1264%" y="245" width="0.2820%" height="15" fill="rgb(251,106,46)" fg:x="43836" fg:w="126"/><text x="98.3764%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul (9 samples, 0.02%)</title><rect x="98.4084%" y="245" width="0.0201%" height="15" fill="rgb(208,90,1)" fg:x="43962" fg:w="9"/><text x="98.6584%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecdsa_recover (4,737 samples, 10.60%)</title><rect x="87.8293%" y="261" width="10.6037%" height="15" fill="rgb(243,10,4)" fg:x="39236" fg:w="4737"/><text x="88.0793%" y="271.50">block_verifier`..</text></g><g><title>block_verifier`fuel_crypto::secp256::signature::Signature::recover (4,751 samples, 10.64%)</title><rect x="87.8070%" y="277" width="10.6351%" height="15" fill="rgb(212,137,27)" fg:x="39226" fg:w="4751"/><text x="88.0570%" y="287.50">block_verifier`f..</text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (14 samples, 0.03%)</title><rect x="98.4487%" y="229" width="0.0313%" height="15" fill="rgb(231,220,49)" fg:x="43980" fg:w="14"/><text x="98.6987%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="98.4532%" y="213" width="0.0269%" height="15" fill="rgb(237,96,20)" fg:x="43982" fg:w="12"/><text x="98.7032%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="98.4554%" y="197" width="0.0246%" height="15" fill="rgb(239,229,30)" fg:x="43983" fg:w="11"/><text x="98.7054%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="98.4554%" y="181" width="0.0246%" height="15" fill="rgb(219,65,33)" fg:x="43983" fg:w="11"/><text x="98.7054%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="98.4644%" y="165" width="0.0157%" height="15" fill="rgb(243,134,7)" fg:x="43987" fg:w="7"/><text x="98.7144%" y="175.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16 samples, 0.04%)</title><rect x="98.4487%" y="245" width="0.0358%" height="15" fill="rgb(216,177,54)" fg:x="43980" fg:w="16"/><text x="98.6987%" y="255.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (23 samples, 0.05%)</title><rect x="98.4868%" y="245" width="0.0515%" height="15" fill="rgb(211,160,20)" fg:x="43997" fg:w="23"/><text x="98.7368%" y="255.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (41 samples, 0.09%)</title><rect x="98.4487%" y="261" width="0.0918%" height="15" fill="rgb(239,85,39)" fg:x="43980" fg:w="41"/><text x="98.6987%" y="271.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (30 samples, 0.07%)</title><rect x="98.5405%" y="261" width="0.0672%" height="15" fill="rgb(232,125,22)" fg:x="44021" fg:w="30"/><text x="98.7905%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="98.6121%" y="261" width="0.0224%" height="15" fill="rgb(244,57,34)" fg:x="44053" fg:w="10"/><text x="98.8621%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="98.6166%" y="245" width="0.0179%" height="15" fill="rgb(214,203,32)" fg:x="44055" fg:w="8"/><text x="98.8666%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (87 samples, 0.19%)</title><rect x="98.4420%" y="277" width="0.1947%" height="15" fill="rgb(207,58,43)" fg:x="43977" fg:w="87"/><text x="98.6920%" y="287.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (48 samples, 0.11%)</title><rect x="98.6368%" y="277" width="0.1074%" height="15" fill="rgb(215,193,15)" fg:x="44064" fg:w="48"/><text x="98.8868%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::_&lt;impl fuel_tx::transaction::types::input::Input&gt;::check_signature (4,910 samples, 10.99%)</title><rect x="87.7958%" y="293" width="10.9910%" height="15" fill="rgb(232,15,44)" fg:x="39221" fg:w="4910"/><text x="88.0458%" y="303.50">block_verifier`f..</text></g><g><title>libsystem_platform.dylib`_platform_memset (17 samples, 0.04%)</title><rect x="98.7487%" y="277" width="0.0381%" height="15" fill="rgb(212,3,48)" fg:x="44114" fg:w="17"/><text x="98.9987%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (11 samples, 0.02%)</title><rect x="98.7867%" y="293" width="0.0246%" height="15" fill="rgb(218,128,7)" fg:x="44131" fg:w="11"/><text x="99.0367%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="98.7867%" y="277" width="0.0246%" height="15" fill="rgb(226,216,39)" fg:x="44131" fg:w="11"/><text x="99.0367%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="98.7935%" y="261" width="0.0179%" height="15" fill="rgb(243,47,51)" fg:x="44134" fg:w="8"/><text x="99.0435%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="98.8002%" y="245" width="0.0112%" height="15" fill="rgb(241,183,40)" fg:x="44137" fg:w="5"/><text x="99.0502%" y="255.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::check_signatures (4,936 samples, 11.05%)</title><rect x="87.7913%" y="309" width="11.0492%" height="15" fill="rgb(231,217,32)" fg:x="39219" fg:w="4936"/><text x="88.0413%" y="319.50">block_verifier`f..</text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="98.8158%" y="293" width="0.0246%" height="15" fill="rgb(229,61,38)" fg:x="44144" fg:w="11"/><text x="99.0658%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="98.8226%" y="277" width="0.0179%" height="15" fill="rgb(225,210,5)" fg:x="44147" fg:w="8"/><text x="99.0726%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="98.8606%" y="245" width="0.0134%" height="15" fill="rgb(231,79,45)" fg:x="44164" fg:w="6"/><text x="99.1106%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.02%)</title><rect x="98.8740%" y="229" width="0.0179%" height="15" fill="rgb(224,100,7)" fg:x="44170" fg:w="8"/><text x="99.1240%" y="239.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (59 samples, 0.13%)</title><rect x="98.8987%" y="229" width="0.1321%" height="15" fill="rgb(241,198,18)" fg:x="44181" fg:w="59"/><text x="99.1487%" y="239.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (72 samples, 0.16%)</title><rect x="98.8740%" y="245" width="0.1612%" height="15" fill="rgb(252,97,53)" fg:x="44170" fg:w="72"/><text x="99.1240%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="99.0352%" y="245" width="0.0179%" height="15" fill="rgb(220,88,7)" fg:x="44242" fg:w="8"/><text x="99.2852%" y="255.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (97 samples, 0.22%)</title><rect x="98.8472%" y="261" width="0.2171%" height="15" fill="rgb(213,176,14)" fg:x="44158" fg:w="97"/><text x="99.0972%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="99.0531%" y="245" width="0.0112%" height="15" fill="rgb(246,73,7)" fg:x="44250" fg:w="5"/><text x="99.3031%" y="255.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::instruction::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::instruction_inner (101 samples, 0.23%)</title><rect x="98.8405%" y="309" width="0.2261%" height="15" fill="rgb(245,64,36)" fg:x="44155" fg:w="101"/><text x="99.0905%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::ret (99 samples, 0.22%)</title><rect x="98.8449%" y="293" width="0.2216%" height="15" fill="rgb(245,80,10)" fg:x="44157" fg:w="99"/><text x="99.0949%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (98 samples, 0.22%)</title><rect x="98.8472%" y="277" width="0.2194%" height="15" fill="rgb(232,107,50)" fg:x="44158" fg:w="98"/><text x="99.0972%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (15 samples, 0.03%)</title><rect x="99.0710%" y="293" width="0.0336%" height="15" fill="rgb(253,3,0)" fg:x="44258" fg:w="15"/><text x="99.3210%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="99.0912%" y="277" width="0.0134%" height="15" fill="rgb(212,99,53)" fg:x="44267" fg:w="6"/><text x="99.3412%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::main::predicates::finalize_check_predicate (24 samples, 0.05%)</title><rect x="99.0666%" y="309" width="0.0537%" height="15" fill="rgb(249,111,54)" fg:x="44256" fg:w="24"/><text x="99.3166%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_free (6 samples, 0.01%)</title><rect x="99.1270%" y="309" width="0.0134%" height="15" fill="rgb(249,55,30)" fg:x="44283" fg:w="6"/><text x="99.3770%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="99.1561%" y="309" width="0.0269%" height="15" fill="rgb(237,47,42)" fg:x="44296" fg:w="12"/><text x="99.4061%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="99.1673%" y="293" width="0.0157%" height="15" fill="rgb(211,20,18)" fg:x="44301" fg:w="7"/><text x="99.4173%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="99.1830%" y="309" width="0.0246%" height="15" fill="rgb(231,203,46)" fg:x="44308" fg:w="11"/><text x="99.4330%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="99.1964%" y="293" width="0.0112%" height="15" fill="rgb(237,142,3)" fg:x="44314" fg:w="5"/><text x="99.4464%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="99.2076%" y="309" width="0.0201%" height="15" fill="rgb(241,107,1)" fg:x="44319" fg:w="9"/><text x="99.4576%" y="319.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_chargeable_transaction (8,794 samples, 19.69%)</title><rect x="79.6790%" y="325" width="19.6853%" height="15" fill="rgb(229,83,13)" fg:x="35595" fg:w="8794"/><text x="79.9290%" y="335.50">block_verifier`fuel_core_execut..</text></g><g><title>libsystem_platform.dylib`_platform_memset (61 samples, 0.14%)</title><rect x="99.2277%" y="309" width="0.1365%" height="15" fill="rgb(241,91,40)" fg:x="44328" fg:w="61"/><text x="99.4777%" y="319.50"></text></g><g><title>block_verifier`core::fmt::write (8 samples, 0.02%)</title><rect x="99.3934%" y="261" width="0.0179%" height="15" fill="rgb(225,3,45)" fg:x="44402" fg:w="8"/><text x="99.6434%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="99.4113%" y="261" width="0.0246%" height="15" fill="rgb(244,223,14)" fg:x="44410" fg:w="11"/><text x="99.6613%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="99.4135%" y="245" width="0.0224%" height="15" fill="rgb(224,124,37)" fg:x="44411" fg:w="10"/><text x="99.6635%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="99.4247%" y="229" width="0.0112%" height="15" fill="rgb(251,171,30)" fg:x="44416" fg:w="5"/><text x="99.6747%" y="239.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (29 samples, 0.06%)</title><rect x="99.3911%" y="277" width="0.0649%" height="15" fill="rgb(236,46,54)" fg:x="44401" fg:w="29"/><text x="99.6411%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="99.4359%" y="261" width="0.0201%" height="15" fill="rgb(245,213,5)" fg:x="44421" fg:w="9"/><text x="99.6859%" y="271.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (9 samples, 0.02%)</title><rect x="99.4560%" y="277" width="0.0201%" height="15" fill="rgb(230,144,27)" fg:x="44430" fg:w="9"/><text x="99.7060%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="99.4784%" y="277" width="0.0157%" height="15" fill="rgb(220,86,6)" fg:x="44440" fg:w="7"/><text x="99.7284%" y="287.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (49 samples, 0.11%)</title><rect x="99.3911%" y="293" width="0.1097%" height="15" fill="rgb(240,20,13)" fg:x="44401" fg:w="49"/><text x="99.6411%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (13 samples, 0.03%)</title><rect x="99.5075%" y="261" width="0.0291%" height="15" fill="rgb(217,89,34)" fg:x="44453" fg:w="13"/><text x="99.7575%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (15 samples, 0.03%)</title><rect x="99.5053%" y="277" width="0.0336%" height="15" fill="rgb(229,13,5)" fg:x="44452" fg:w="15"/><text x="99.7553%" y="287.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.02%)</title><rect x="99.5389%" y="277" width="0.0157%" height="15" fill="rgb(244,67,35)" fg:x="44467" fg:w="7"/><text x="99.7889%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="99.5389%" y="261" width="0.0157%" height="15" fill="rgb(221,40,2)" fg:x="44467" fg:w="7"/><text x="99.7889%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="99.5433%" y="245" width="0.0112%" height="15" fill="rgb(237,157,21)" fg:x="44469" fg:w="5"/><text x="99.7933%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="99.5568%" y="277" width="0.0134%" height="15" fill="rgb(222,94,11)" fg:x="44475" fg:w="6"/><text x="99.8068%" y="287.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (31 samples, 0.07%)</title><rect x="99.5031%" y="293" width="0.0694%" height="15" fill="rgb(249,113,6)" fg:x="44451" fg:w="31"/><text x="99.7531%" y="303.50"></text></g><g><title>block_verifier`fuel_core_storage::kv_store::KeyValueInspect::exists (94 samples, 0.21%)</title><rect x="99.3665%" y="325" width="0.2104%" height="15" fill="rgb(238,137,36)" fg:x="44390" fg:w="94"/><text x="99.6165%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::size_of_value (94 samples, 0.21%)</title><rect x="99.3665%" y="309" width="0.2104%" height="15" fill="rgb(210,102,26)" fg:x="44390" fg:w="94"/><text x="99.6165%" y="319.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (35 samples, 0.08%)</title><rect x="99.5769%" y="325" width="0.0783%" height="15" fill="rgb(218,30,30)" fg:x="44484" fg:w="35"/><text x="99.8269%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="99.6709%" y="325" width="0.0179%" height="15" fill="rgb(214,67,26)" fg:x="44526" fg:w="8"/><text x="99.9209%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (38 samples, 0.09%)</title><rect x="99.6911%" y="325" width="0.0851%" height="15" fill="rgb(251,9,53)" fg:x="44535" fg:w="38"/><text x="99.9411%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="99.7762%" y="325" width="0.0269%" height="15" fill="rgb(228,204,25)" fg:x="44573" fg:w="12"/><text x="100.0262%" y="335.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_transaction_and_commit (9,169 samples, 20.52%)</title><rect x="79.3388%" y="341" width="20.5247%" height="15" fill="rgb(207,153,8)" fg:x="35443" fg:w="9169"/><text x="79.5888%" y="351.50">block_verifier`fuel_core_executo..</text></g><g><title>libsystem_platform.dylib`_platform_memset (27 samples, 0.06%)</title><rect x="99.8030%" y="325" width="0.0604%" height="15" fill="rgb(242,9,16)" fg:x="44585" fg:w="27"/><text x="100.0530%" y="335.50"></text></g><g><title>block_verifier`fuel_core_upgradable_executor::executor::Executor&lt;S,R&gt;::dry_run (9,191 samples, 20.57%)</title><rect x="79.3231%" y="357" width="20.5739%" height="15" fill="rgb(217,211,10)" fg:x="35436" fg:w="9191"/><text x="79.5731%" y="367.50">block_verifier`fuel_core_upgrada..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="99.8746%" y="341" width="0.0224%" height="15" fill="rgb(219,228,52)" fg:x="44617" fg:w="10"/><text x="100.1246%" y="351.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da::_{{closure}}::_{{closure}} (9,680 samples, 21.67%)</title><rect x="78.2889%" y="373" width="21.6686%" height="15" fill="rgb(231,92,29)" fg:x="34974" fg:w="9680"/><text x="78.5389%" y="383.50">block_verifier`fuel_core_parallel_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.06%)</title><rect x="99.8970%" y="357" width="0.0604%" height="15" fill="rgb(232,8,23)" fg:x="44627" fg:w="27"/><text x="100.1470%" y="367.50"></text></g><g><title>block_verifier`std::sys::pal::unix::thread::Thread::new::thread_start (11,449 samples, 25.63%)</title><rect x="74.3559%" y="485" width="25.6285%" height="15" fill="rgb(216,211,34)" fg:x="33217" fg:w="11449"/><text x="74.6059%" y="495.50">block_verifier`std::sys::pal::unix::threa..</text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (11,449 samples, 25.63%)</title><rect x="74.3559%" y="469" width="25.6285%" height="15" fill="rgb(236,151,0)" fg:x="33217" fg:w="11449"/><text x="74.6059%" y="479.50">block_verifier`core::ops::function::FnOnc..</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (11,449 samples, 25.63%)</title><rect x="74.3559%" y="453" width="25.6285%" height="15" fill="rgb(209,168,3)" fg:x="33217" fg:w="11449"/><text x="74.6059%" y="463.50">block_verifier`std::sys::backtrace::__rus..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10,311 samples, 23.08%)</title><rect x="76.9033%" y="437" width="23.0811%" height="15" fill="rgb(208,129,28)" fg:x="34355" fg:w="10311"/><text x="77.1533%" y="447.50">block_verifier`tokio::runtime::task::..</text></g><g><title>block_verifier`tokio::runtime::scheduler::multi_thread::worker::run (10,311 samples, 23.08%)</title><rect x="76.9033%" y="421" width="23.0811%" height="15" fill="rgb(229,78,22)" fg:x="34355" fg:w="10311"/><text x="77.1533%" y="431.50">block_verifier`tokio::runtime::schedu..</text></g><g><title>block_verifier`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (10,311 samples, 23.08%)</title><rect x="76.9033%" y="405" width="23.0811%" height="15" fill="rgb(228,187,13)" fg:x="34355" fg:w="10311"/><text x="77.1533%" y="415.50">block_verifier`tokio::runtime::schedu..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10,311 samples, 23.08%)</title><rect x="76.9033%" y="389" width="23.0811%" height="15" fill="rgb(240,119,24)" fg:x="34355" fg:w="10311"/><text x="77.1533%" y="399.50">block_verifier`tokio::runtime::task::..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="99.9575%" y="373" width="0.0269%" height="15" fill="rgb(209,194,42)" fg:x="44654" fg:w="12"/><text x="100.2075%" y="383.50"></text></g><g><title>all (44,673 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(247,200,46)" fg:x="0" fg:w="44673"/><text x="0.2500%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (11,456 samples, 25.64%)</title><rect x="74.3559%" y="517" width="25.6441%" height="15" fill="rgb(218,76,16)" fg:x="33217" fg:w="11456"/><text x="74.6059%" y="527.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (11,456 samples, 25.64%)</title><rect x="74.3559%" y="501" width="25.6441%" height="15" fill="rgb(225,21,48)" fg:x="33217" fg:w="11456"/><text x="74.6059%" y="511.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>