<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="43467"><g><title>block_verifier`core::fmt::write (5 samples, 0.01%)</title><rect x="0.0161%" y="469" width="0.0115%" height="15" fill="rgb(227,0,7)" fg:x="7" fg:w="5"/><text x="0.2661%" y="479.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (10 samples, 0.02%)</title><rect x="0.0138%" y="485" width="0.0230%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="10"/><text x="0.2638%" y="495.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (16 samples, 0.04%)</title><rect x="0.0115%" y="501" width="0.0368%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="16"/><text x="0.2615%" y="511.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="0.0529%" y="469" width="0.0207%" height="15" fill="rgb(248,212,6)" fg:x="23" fg:w="9"/><text x="0.3029%" y="479.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (9 samples, 0.02%)</title><rect x="0.0529%" y="453" width="0.0207%" height="15" fill="rgb(208,68,35)" fg:x="23" fg:w="9"/><text x="0.3029%" y="463.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (17 samples, 0.04%)</title><rect x="0.0483%" y="485" width="0.0391%" height="15" fill="rgb(232,128,0)" fg:x="21" fg:w="17"/><text x="0.2983%" y="495.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (18 samples, 0.04%)</title><rect x="0.0483%" y="501" width="0.0414%" height="15" fill="rgb(207,160,47)" fg:x="21" fg:w="18"/><text x="0.2983%" y="511.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (39 samples, 0.09%)</title><rect x="0.0023%" y="517" width="0.0897%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="39"/><text x="0.2523%" y="527.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (53 samples, 0.12%)</title><rect x="0.0920%" y="517" width="0.1219%" height="15" fill="rgb(218,30,26)" fg:x="40" fg:w="53"/><text x="0.3420%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="0.2554%" y="421" width="0.0138%" height="15" fill="rgb(220,122,19)" fg:x="111" fg:w="6"/><text x="0.5054%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="0.2577%" y="405" width="0.0115%" height="15" fill="rgb(250,228,42)" fg:x="112" fg:w="5"/><text x="0.5077%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="0.2738%" y="421" width="0.0161%" height="15" fill="rgb(240,193,28)" fg:x="119" fg:w="7"/><text x="0.5238%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="0.2761%" y="405" width="0.0138%" height="15" fill="rgb(216,20,37)" fg:x="120" fg:w="6"/><text x="0.5261%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (24 samples, 0.06%)</title><rect x="0.2485%" y="453" width="0.0552%" height="15" fill="rgb(206,188,39)" fg:x="108" fg:w="24"/><text x="0.4985%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (21 samples, 0.05%)</title><rect x="0.2554%" y="437" width="0.0483%" height="15" fill="rgb(217,207,13)" fg:x="111" fg:w="21"/><text x="0.5054%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (27 samples, 0.06%)</title><rect x="0.2462%" y="469" width="0.0621%" height="15" fill="rgb(231,73,38)" fg:x="107" fg:w="27"/><text x="0.4962%" y="479.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (28 samples, 0.06%)</title><rect x="0.2462%" y="485" width="0.0644%" height="15" fill="rgb(225,20,46)" fg:x="107" fg:w="28"/><text x="0.4962%" y="495.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (32 samples, 0.07%)</title><rect x="0.2393%" y="501" width="0.0736%" height="15" fill="rgb(210,31,41)" fg:x="104" fg:w="32"/><text x="0.4893%" y="511.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (47 samples, 0.11%)</title><rect x="0.2209%" y="517" width="0.1081%" height="15" fill="rgb(221,200,47)" fg:x="96" fg:w="47"/><text x="0.4709%" y="527.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::on_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core_storage::tables::Coins,fuel_core_storage::tables::Coins&gt;&gt;::process (151 samples, 0.35%)</title><rect x="0.0000%" y="533" width="0.3474%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="151"/><text x="0.2500%" y="543.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (10 samples, 0.02%)</title><rect x="0.3658%" y="437" width="0.0230%" height="15" fill="rgb(249,33,26)" fg:x="159" fg:w="10"/><text x="0.6158%" y="447.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (15 samples, 0.03%)</title><rect x="0.3612%" y="453" width="0.0345%" height="15" fill="rgb(235,183,28)" fg:x="157" fg:w="15"/><text x="0.6112%" y="463.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (173 samples, 0.40%)</title><rect x="0.0000%" y="597" width="0.3980%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="173"/><text x="0.2500%" y="607.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (173 samples, 0.40%)</title><rect x="0.0000%" y="581" width="0.3980%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="173"/><text x="0.2500%" y="591.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (173 samples, 0.40%)</title><rect x="0.0000%" y="565" width="0.3980%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="173"/><text x="0.2500%" y="575.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_on_chain::_{{closure}} (173 samples, 0.40%)</title><rect x="0.0000%" y="549" width="0.3980%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="173"/><text x="0.2500%" y="559.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (22 samples, 0.05%)</title><rect x="0.3474%" y="533" width="0.0506%" height="15" fill="rgb(225,111,53)" fg:x="151" fg:w="22"/><text x="0.5974%" y="543.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (22 samples, 0.05%)</title><rect x="0.3474%" y="517" width="0.0506%" height="15" fill="rgb(238,160,17)" fg:x="151" fg:w="22"/><text x="0.5974%" y="527.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (22 samples, 0.05%)</title><rect x="0.3474%" y="501" width="0.0506%" height="15" fill="rgb(214,148,48)" fg:x="151" fg:w="22"/><text x="0.5974%" y="511.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (19 samples, 0.04%)</title><rect x="0.3543%" y="485" width="0.0437%" height="15" fill="rgb(232,36,49)" fg:x="154" fg:w="19"/><text x="0.6043%" y="495.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (19 samples, 0.04%)</title><rect x="0.3543%" y="469" width="0.0437%" height="15" fill="rgb(209,103,24)" fg:x="154" fg:w="19"/><text x="0.6043%" y="479.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (6 samples, 0.01%)</title><rect x="0.4141%" y="501" width="0.0138%" height="15" fill="rgb(229,88,8)" fg:x="180" fg:w="6"/><text x="0.6641%" y="511.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (37 samples, 0.09%)</title><rect x="0.4279%" y="501" width="0.0851%" height="15" fill="rgb(213,181,19)" fg:x="186" fg:w="37"/><text x="0.6779%" y="511.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="0.5015%" y="485" width="0.0115%" height="15" fill="rgb(254,191,54)" fg:x="218" fg:w="5"/><text x="0.7515%" y="495.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (52 samples, 0.12%)</title><rect x="0.4095%" y="517" width="0.1196%" height="15" fill="rgb(241,83,37)" fg:x="178" fg:w="52"/><text x="0.6595%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.02%)</title><rect x="0.5130%" y="501" width="0.0161%" height="15" fill="rgb(233,36,39)" fg:x="223" fg:w="7"/><text x="0.7630%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="0.5360%" y="469" width="0.0207%" height="15" fill="rgb(226,3,54)" fg:x="233" fg:w="9"/><text x="0.7860%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="0.5429%" y="453" width="0.0138%" height="15" fill="rgb(245,192,40)" fg:x="236" fg:w="6"/><text x="0.7929%" y="463.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (11 samples, 0.03%)</title><rect x="0.5337%" y="485" width="0.0253%" height="15" fill="rgb(238,167,29)" fg:x="232" fg:w="11"/><text x="0.7837%" y="495.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (14 samples, 0.03%)</title><rect x="0.5337%" y="501" width="0.0322%" height="15" fill="rgb(232,182,51)" fg:x="232" fg:w="14"/><text x="0.7837%" y="511.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (6 samples, 0.01%)</title><rect x="0.5659%" y="485" width="0.0138%" height="15" fill="rgb(231,60,39)" fg:x="246" fg:w="6"/><text x="0.8159%" y="495.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (8 samples, 0.02%)</title><rect x="0.5659%" y="501" width="0.0184%" height="15" fill="rgb(208,69,12)" fg:x="246" fg:w="8"/><text x="0.8159%" y="511.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (9 samples, 0.02%)</title><rect x="0.5867%" y="501" width="0.0207%" height="15" fill="rgb(235,93,37)" fg:x="255" fg:w="9"/><text x="0.8367%" y="511.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::indexation::process_balances_update (38 samples, 0.09%)</title><rect x="0.5291%" y="517" width="0.0874%" height="15" fill="rgb(213,116,39)" fg:x="230" fg:w="38"/><text x="0.7791%" y="527.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::off_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core::graphql_api::storage::coins::OwnedCoins,fuel_core_storage::tables::Coins&gt;&gt;::process (100 samples, 0.23%)</title><rect x="0.4003%" y="533" width="0.2301%" height="15" fill="rgb(222,207,29)" fg:x="174" fg:w="100"/><text x="0.6503%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="0.6189%" y="517" width="0.0115%" height="15" fill="rgb(206,96,30)" fg:x="269" fg:w="5"/><text x="0.8689%" y="527.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (14 samples, 0.03%)</title><rect x="0.6442%" y="453" width="0.0322%" height="15" fill="rgb(218,138,4)" fg:x="280" fg:w="14"/><text x="0.8942%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="0.6580%" y="437" width="0.0184%" height="15" fill="rgb(250,191,14)" fg:x="286" fg:w="8"/><text x="0.9080%" y="447.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (22 samples, 0.05%)</title><rect x="0.6304%" y="533" width="0.0506%" height="15" fill="rgb(239,60,40)" fg:x="274" fg:w="22"/><text x="0.8804%" y="543.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (22 samples, 0.05%)</title><rect x="0.6304%" y="517" width="0.0506%" height="15" fill="rgb(206,27,48)" fg:x="274" fg:w="22"/><text x="0.8804%" y="527.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (22 samples, 0.05%)</title><rect x="0.6304%" y="501" width="0.0506%" height="15" fill="rgb(225,35,8)" fg:x="274" fg:w="22"/><text x="0.8804%" y="511.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (17 samples, 0.04%)</title><rect x="0.6419%" y="485" width="0.0391%" height="15" fill="rgb(250,213,24)" fg:x="279" fg:w="17"/><text x="0.8919%" y="495.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (17 samples, 0.04%)</title><rect x="0.6419%" y="469" width="0.0391%" height="15" fill="rgb(247,123,22)" fg:x="279" fg:w="17"/><text x="0.8919%" y="479.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (124 samples, 0.29%)</title><rect x="0.3980%" y="597" width="0.2853%" height="15" fill="rgb(231,138,38)" fg:x="173" fg:w="124"/><text x="0.6480%" y="607.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (124 samples, 0.29%)</title><rect x="0.3980%" y="581" width="0.2853%" height="15" fill="rgb(231,145,46)" fg:x="173" fg:w="124"/><text x="0.6480%" y="591.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain (124 samples, 0.29%)</title><rect x="0.3980%" y="565" width="0.2853%" height="15" fill="rgb(251,118,11)" fg:x="173" fg:w="124"/><text x="0.6480%" y="575.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain::_{{closure}} (124 samples, 0.29%)</title><rect x="0.3980%" y="549" width="0.2853%" height="15" fill="rgb(217,147,25)" fg:x="173" fg:w="124"/><text x="0.6480%" y="559.50"></text></g><g><title>block_verifier`DYLD-STUB$$read (7 samples, 0.02%)</title><rect x="0.6856%" y="517" width="0.0161%" height="15" fill="rgb(247,81,37)" fg:x="298" fg:w="7"/><text x="0.9356%" y="527.50"></text></g><g><title>block_verifier`DYLD-STUB$$read (27 samples, 0.06%)</title><rect x="0.7868%" y="485" width="0.0621%" height="15" fill="rgb(209,12,38)" fg:x="342" fg:w="27"/><text x="1.0368%" y="495.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (17 samples, 0.04%)</title><rect x="0.9962%" y="469" width="0.0391%" height="15" fill="rgb(227,1,9)" fg:x="433" fg:w="17"/><text x="1.2462%" y="479.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (8 samples, 0.02%)</title><rect x="1.0422%" y="453" width="0.0184%" height="15" fill="rgb(248,47,43)" fg:x="453" fg:w="8"/><text x="1.2922%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`read (282 samples, 0.65%)</title><rect x="1.0606%" y="453" width="0.6488%" height="15" fill="rgb(221,10,30)" fg:x="461" fg:w="282"/><text x="1.3106%" y="463.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (291 samples, 0.67%)</title><rect x="1.0422%" y="469" width="0.6695%" height="15" fill="rgb(210,229,1)" fg:x="453" fg:w="291"/><text x="1.2922%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`read (3,654 samples, 8.41%)</title><rect x="1.7162%" y="469" width="8.4064%" height="15" fill="rgb(222,148,37)" fg:x="746" fg:w="3654"/><text x="1.9662%" y="479.50">libsystem_ke..</text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (4,037 samples, 9.29%)</title><rect x="0.8512%" y="485" width="9.2875%" height="15" fill="rgb(234,67,33)" fg:x="370" fg:w="4037"/><text x="1.1012%" y="495.50">block_verifie..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="10.1226%" y="469" width="0.0161%" height="15" fill="rgb(247,98,35)" fg:x="4400" fg:w="7"/><text x="10.3726%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="10.1249%" y="453" width="0.0138%" height="15" fill="rgb(247,138,52)" fg:x="4401" fg:w="6"/><text x="10.3749%" y="463.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (8 samples, 0.02%)</title><rect x="10.1387%" y="485" width="0.0184%" height="15" fill="rgb(213,79,30)" fg:x="4407" fg:w="8"/><text x="10.3887%" y="495.50"></text></g><g><title>block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserialize for fuel_core_types::blockchain::block::BlockV1&lt;TransactionRepresentation&gt;&gt;::deserialize::__Visitor&lt;TransactionRepresentation&gt; as serde::de::Visitor&gt;::visit_seq (21,931 samples, 50.45%)</title><rect x="0.7799%" y="501" width="50.4544%" height="15" fill="rgb(246,177,23)" fg:x="339" fg:w="21931"/><text x="1.0299%" y="511.50">block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserialize..</text></g><g><title>libsystem_kernel.dylib`read (17,855 samples, 41.08%)</title><rect x="10.1571%" y="485" width="41.0771%" height="15" fill="rgb(230,62,27)" fg:x="4415" fg:w="17855"/><text x="10.4071%" y="495.50">libsystem_kernel.dylib`read</text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::open_with (11 samples, 0.03%)</title><rect x="51.2550%" y="453" width="0.0253%" height="15" fill="rgb(216,154,8)" fg:x="22279" fg:w="11"/><text x="51.5050%" y="463.50"></text></g><g><title>block_verifier`core::ops::function::Fn::call (11 samples, 0.03%)</title><rect x="51.2550%" y="437" width="0.0253%" height="15" fill="rgb(244,35,45)" fg:x="22279" fg:w="11"/><text x="51.5050%" y="447.50"></text></g><g><title>block_verifier`rocksdb_open (11 samples, 0.03%)</title><rect x="51.2550%" y="421" width="0.0253%" height="15" fill="rgb(251,115,12)" fg:x="22279" fg:w="11"/><text x="51.5050%" y="431.50"></text></g><g><title>block_verifier`rocksdb::DB::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.03%)</title><rect x="51.2550%" y="405" width="0.0253%" height="15" fill="rgb(240,54,50)" fg:x="22279" fg:w="11"/><text x="51.5050%" y="415.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Open(rocksdb::DBOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyDescriptor, std::__1::allocator&lt;rocksdb::ColumnFamilyDescriptor&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator (11 samples, 0.03%)</title><rect x="51.2550%" y="389" width="0.0253%" height="15" fill="rgb(233,84,52)" fg:x="22279" fg:w="11"/><text x="51.5050%" y="399.50"></text></g><g><title>block_verifier`fuel_core::combined_database::CombinedDatabase::from_config (12 samples, 0.03%)</title><rect x="51.2550%" y="485" width="0.0276%" height="15" fill="rgb(207,117,47)" fg:x="22279" fg:w="12"/><text x="51.5050%" y="495.50"></text></g><g><title>block_verifier`fuel_core::combined_database::CombinedDatabase::temp_database_with_state_rewind_policy (12 samples, 0.03%)</title><rect x="51.2550%" y="469" width="0.0276%" height="15" fill="rgb(249,43,39)" fg:x="22279" fg:w="12"/><text x="51.5050%" y="479.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntryInternal (6 samples, 0.01%)</title><rect x="51.3286%" y="357" width="0.0138%" height="15" fill="rgb(209,38,44)" fg:x="22311" fg:w="6"/><text x="51.5786%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntry (7 samples, 0.02%)</title><rect x="51.3286%" y="373" width="0.0161%" height="15" fill="rgb(236,212,23)" fg:x="22311" fg:w="7"/><text x="51.5786%" y="383.50"></text></g><g><title>block_verifier`rocksdb::DBIter::Next (13 samples, 0.03%)</title><rect x="51.3240%" y="389" width="0.0299%" height="15" fill="rgb(242,79,21)" fg:x="22309" fg:w="13"/><text x="51.5740%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db_key_iterator::RocksDBKeyIterator&lt;D,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.05%)</title><rect x="51.3217%" y="405" width="0.0460%" height="15" fill="rgb(211,96,35)" fg:x="22308" fg:w="20"/><text x="51.5717%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="51.3539%" y="389" width="0.0138%" height="15" fill="rgb(253,215,40)" fg:x="22322" fg:w="6"/><text x="51.6039%" y="399.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.06%)</title><rect x="51.3217%" y="421" width="0.0552%" height="15" fill="rgb(211,81,21)" fg:x="22308" fg:w="24"/><text x="51.5717%" y="431.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.09%)</title><rect x="51.3171%" y="437" width="0.0874%" height="15" fill="rgb(208,190,38)" fg:x="22306" fg:w="38"/><text x="51.5671%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="51.3907%" y="421" width="0.0138%" height="15" fill="rgb(235,213,38)" fg:x="22338" fg:w="6"/><text x="51.6407%" y="431.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::coin::_&lt;impl fuel_core_chain_config::genesis::GenesisCommitment for fuel_core_types::entities::coins::coin::Coin&gt;::root (32 samples, 0.07%)</title><rect x="51.4068%" y="437" width="0.0736%" height="15" fill="rgb(237,122,38)" fg:x="22345" fg:w="32"/><text x="51.6568%" y="447.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (25 samples, 0.06%)</title><rect x="51.4229%" y="421" width="0.0575%" height="15" fill="rgb(244,218,35)" fg:x="22352" fg:w="25"/><text x="51.6729%" y="431.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (118 samples, 0.27%)</title><rect x="51.4827%" y="437" width="0.2715%" height="15" fill="rgb(240,68,47)" fg:x="22378" fg:w="118"/><text x="51.7327%" y="447.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (106 samples, 0.24%)</title><rect x="51.5103%" y="421" width="0.2439%" height="15" fill="rgb(210,16,53)" fg:x="22390" fg:w="106"/><text x="51.7603%" y="431.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (44 samples, 0.10%)</title><rect x="51.7542%" y="437" width="0.1012%" height="15" fill="rgb(235,124,12)" fg:x="22496" fg:w="44"/><text x="52.0042%" y="447.50"></text></g><g><title>block_verifier`fuel_core::database::genesis_progress::_&lt;impl fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::GenesisStage&gt;&gt;&gt;::genesis_coins_root (238 samples, 0.55%)</title><rect x="51.3102%" y="453" width="0.5475%" height="15" fill="rgb(224,169,11)" fg:x="22303" fg:w="238"/><text x="51.5602%" y="463.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::override_chain_config_if_needed (8 samples, 0.02%)</title><rect x="51.8807%" y="453" width="0.0184%" height="15" fill="rgb(250,166,2)" fg:x="22551" fg:w="8"/><text x="52.1307%" y="463.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (8 samples, 0.02%)</title><rect x="51.8807%" y="437" width="0.0184%" height="15" fill="rgb(242,216,29)" fg:x="22551" fg:w="8"/><text x="52.1307%" y="447.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.01%)</title><rect x="51.9106%" y="373" width="0.0138%" height="15" fill="rgb(230,116,27)" fg:x="22564" fg:w="6"/><text x="52.1606%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (11 samples, 0.03%)</title><rect x="51.9106%" y="389" width="0.0253%" height="15" fill="rgb(228,99,48)" fg:x="22564" fg:w="11"/><text x="52.1606%" y="399.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::indexation::process_balances_update (11 samples, 0.03%)</title><rect x="51.9360%" y="389" width="0.0253%" height="15" fill="rgb(253,11,6)" fg:x="22575" fg:w="11"/><text x="52.1860%" y="399.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::off_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core::graphql_api::storage::coins::OwnedCoins,fuel_core_storage::tables::Coins&gt;&gt;::process (23 samples, 0.05%)</title><rect x="51.9106%" y="405" width="0.0529%" height="15" fill="rgb(247,143,39)" fg:x="22564" fg:w="23"/><text x="52.1606%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.07%)</title><rect x="51.9636%" y="357" width="0.0736%" height="15" fill="rgb(236,97,10)" fg:x="22587" fg:w="32"/><text x="52.2136%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.05%)</title><rect x="51.9889%" y="341" width="0.0483%" height="15" fill="rgb(233,208,19)" fg:x="22598" fg:w="21"/><text x="52.2389%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (33 samples, 0.08%)</title><rect x="51.9636%" y="373" width="0.0759%" height="15" fill="rgb(216,164,2)" fg:x="22587" fg:w="33"/><text x="52.2136%" y="383.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (6 samples, 0.01%)</title><rect x="52.0602%" y="213" width="0.0138%" height="15" fill="rgb(220,129,5)" fg:x="22629" fg:w="6"/><text x="52.3102%" y="223.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (8 samples, 0.02%)</title><rect x="52.0579%" y="229" width="0.0184%" height="15" fill="rgb(242,17,10)" fg:x="22628" fg:w="8"/><text x="52.3079%" y="239.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (19 samples, 0.04%)</title><rect x="52.0395%" y="373" width="0.0437%" height="15" fill="rgb(242,107,0)" fg:x="22620" fg:w="19"/><text x="52.2895%" y="383.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (19 samples, 0.04%)</title><rect x="52.0395%" y="357" width="0.0437%" height="15" fill="rgb(251,28,31)" fg:x="22620" fg:w="19"/><text x="52.2895%" y="367.50"></text></g><g><title>block_verifier`rocksdb_write (19 samples, 0.04%)</title><rect x="52.0395%" y="341" width="0.0437%" height="15" fill="rgb(233,223,10)" fg:x="22620" fg:w="19"/><text x="52.2895%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (19 samples, 0.04%)</title><rect x="52.0395%" y="325" width="0.0437%" height="15" fill="rgb(215,21,27)" fg:x="22620" fg:w="19"/><text x="52.2895%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (19 samples, 0.04%)</title><rect x="52.0395%" y="309" width="0.0437%" height="15" fill="rgb(232,23,21)" fg:x="22620" fg:w="19"/><text x="52.2895%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (18 samples, 0.04%)</title><rect x="52.0418%" y="293" width="0.0414%" height="15" fill="rgb(244,5,23)" fg:x="22621" fg:w="18"/><text x="52.2918%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (16 samples, 0.04%)</title><rect x="52.0464%" y="277" width="0.0368%" height="15" fill="rgb(226,81,46)" fg:x="22623" fg:w="16"/><text x="52.2964%" y="287.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (16 samples, 0.04%)</title><rect x="52.0464%" y="261" width="0.0368%" height="15" fill="rgb(247,70,30)" fg:x="22623" fg:w="16"/><text x="52.2964%" y="271.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (14 samples, 0.03%)</title><rect x="52.0510%" y="245" width="0.0322%" height="15" fill="rgb(212,68,19)" fg:x="22625" fg:w="14"/><text x="52.3010%" y="255.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (54 samples, 0.12%)</title><rect x="51.9636%" y="405" width="0.1242%" height="15" fill="rgb(240,187,13)" fg:x="22587" fg:w="54"/><text x="52.2136%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (54 samples, 0.12%)</title><rect x="51.9636%" y="389" width="0.1242%" height="15" fill="rgb(223,113,26)" fg:x="22587" fg:w="54"/><text x="52.2136%" y="399.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain::_{{closure}} (78 samples, 0.18%)</title><rect x="51.9106%" y="421" width="0.1794%" height="15" fill="rgb(206,192,2)" fg:x="22564" fg:w="78"/><text x="52.1606%" y="431.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain (88 samples, 0.20%)</title><rect x="51.9060%" y="437" width="0.2025%" height="15" fill="rgb(241,108,4)" fg:x="22562" fg:w="88"/><text x="52.1560%" y="447.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (8 samples, 0.02%)</title><rect x="52.0901%" y="421" width="0.0184%" height="15" fill="rgb(247,173,49)" fg:x="22642" fg:w="8"/><text x="52.3401%" y="431.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (5 samples, 0.01%)</title><rect x="52.1085%" y="389" width="0.0115%" height="15" fill="rgb(224,114,35)" fg:x="22650" fg:w="5"/><text x="52.3585%" y="399.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (8 samples, 0.02%)</title><rect x="52.1200%" y="373" width="0.0184%" height="15" fill="rgb(245,159,27)" fg:x="22655" fg:w="8"/><text x="52.3700%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (14 samples, 0.03%)</title><rect x="52.1085%" y="405" width="0.0322%" height="15" fill="rgb(245,172,44)" fg:x="22650" fg:w="14"/><text x="52.3585%" y="415.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (9 samples, 0.02%)</title><rect x="52.1200%" y="389" width="0.0207%" height="15" fill="rgb(236,23,11)" fg:x="22655" fg:w="9"/><text x="52.3700%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (9 samples, 0.02%)</title><rect x="52.1407%" y="405" width="0.0207%" height="15" fill="rgb(205,117,38)" fg:x="22664" fg:w="9"/><text x="52.3907%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (10 samples, 0.02%)</title><rect x="52.1706%" y="341" width="0.0230%" height="15" fill="rgb(237,72,25)" fg:x="22677" fg:w="10"/><text x="52.4206%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.02%)</title><rect x="52.1729%" y="325" width="0.0207%" height="15" fill="rgb(244,70,9)" fg:x="22678" fg:w="9"/><text x="52.4229%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.03%)</title><rect x="52.1683%" y="389" width="0.0276%" height="15" fill="rgb(217,125,39)" fg:x="22676" fg:w="12"/><text x="52.4183%" y="399.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (12 samples, 0.03%)</title><rect x="52.1683%" y="373" width="0.0276%" height="15" fill="rgb(235,36,10)" fg:x="22676" fg:w="12"/><text x="52.4183%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (12 samples, 0.03%)</title><rect x="52.1683%" y="357" width="0.0276%" height="15" fill="rgb(251,123,47)" fg:x="22676" fg:w="12"/><text x="52.4183%" y="367.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (20 samples, 0.05%)</title><rect x="52.1614%" y="405" width="0.0460%" height="15" fill="rgb(221,13,13)" fg:x="22673" fg:w="20"/><text x="52.4114%" y="415.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::on_chain::_&lt;impl fuel_core::service::genesis::importer::import_task::ImportTable for fuel_core::service::genesis::importer::Handler&lt;fuel_core_storage::tables::Coins,fuel_core_storage::tables::Coins&gt;&gt;::process (47 samples, 0.11%)</title><rect x="52.1085%" y="421" width="0.1081%" height="15" fill="rgb(238,131,9)" fg:x="22650" fg:w="47"/><text x="52.3585%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.07%)</title><rect x="52.2189%" y="373" width="0.0736%" height="15" fill="rgb(211,50,8)" fg:x="22698" fg:w="32"/><text x="52.4689%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.07%)</title><rect x="52.2258%" y="357" width="0.0667%" height="15" fill="rgb(245,182,24)" fg:x="22701" fg:w="29"/><text x="52.4758%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (34 samples, 0.08%)</title><rect x="52.2166%" y="389" width="0.0782%" height="15" fill="rgb(242,14,37)" fg:x="22697" fg:w="34"/><text x="52.4666%" y="399.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (7 samples, 0.02%)</title><rect x="52.3132%" y="245" width="0.0161%" height="15" fill="rgb(246,228,12)" fg:x="22739" fg:w="7"/><text x="52.5632%" y="255.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (15 samples, 0.03%)</title><rect x="52.3040%" y="277" width="0.0345%" height="15" fill="rgb(213,55,15)" fg:x="22735" fg:w="15"/><text x="52.5540%" y="287.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (14 samples, 0.03%)</title><rect x="52.3063%" y="261" width="0.0322%" height="15" fill="rgb(209,9,3)" fg:x="22736" fg:w="14"/><text x="52.5563%" y="271.50"></text></g><g><title>block_verifier`rocksdb_write (20 samples, 0.05%)</title><rect x="52.2948%" y="357" width="0.0460%" height="15" fill="rgb(230,59,30)" fg:x="22731" fg:w="20"/><text x="52.5448%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (20 samples, 0.05%)</title><rect x="52.2948%" y="341" width="0.0460%" height="15" fill="rgb(209,121,21)" fg:x="22731" fg:w="20"/><text x="52.5448%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (20 samples, 0.05%)</title><rect x="52.2948%" y="325" width="0.0460%" height="15" fill="rgb(220,109,13)" fg:x="22731" fg:w="20"/><text x="52.5448%" y="335.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (17 samples, 0.04%)</title><rect x="52.3017%" y="309" width="0.0391%" height="15" fill="rgb(232,18,1)" fg:x="22734" fg:w="17"/><text x="52.5517%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (16 samples, 0.04%)</title><rect x="52.3040%" y="293" width="0.0368%" height="15" fill="rgb(215,41,42)" fg:x="22735" fg:w="16"/><text x="52.5540%" y="303.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (21 samples, 0.05%)</title><rect x="52.2948%" y="389" width="0.0483%" height="15" fill="rgb(224,123,36)" fg:x="22731" fg:w="21"/><text x="52.5448%" y="399.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (21 samples, 0.05%)</title><rect x="52.2948%" y="373" width="0.0483%" height="15" fill="rgb(240,125,3)" fg:x="22731" fg:w="21"/><text x="52.5448%" y="383.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_on_chain::_{{closure}} (104 samples, 0.24%)</title><rect x="52.1085%" y="437" width="0.2393%" height="15" fill="rgb(205,98,50)" fg:x="22650" fg:w="104"/><text x="52.3585%" y="447.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (57 samples, 0.13%)</title><rect x="52.2166%" y="421" width="0.1311%" height="15" fill="rgb(205,185,37)" fg:x="22697" fg:w="57"/><text x="52.4666%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (57 samples, 0.13%)</title><rect x="52.2166%" y="405" width="0.1311%" height="15" fill="rgb(238,207,15)" fg:x="22697" fg:w="57"/><text x="52.4666%" y="415.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="52.3478%" y="421" width="0.0115%" height="15" fill="rgb(213,199,42)" fg:x="22754" fg:w="5"/><text x="52.5978%" y="431.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (205 samples, 0.47%)</title><rect x="51.8991%" y="453" width="0.4716%" height="15" fill="rgb(235,201,11)" fg:x="22559" fg:w="205"/><text x="52.1491%" y="463.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (10 samples, 0.02%)</title><rect x="52.3478%" y="437" width="0.0230%" height="15" fill="rgb(207,46,11)" fg:x="22754" fg:w="10"/><text x="52.5978%" y="447.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (15 samples, 0.03%)</title><rect x="52.3708%" y="453" width="0.0345%" height="15" fill="rgb(241,35,35)" fg:x="22764" fg:w="15"/><text x="52.6208%" y="463.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (480 samples, 1.10%)</title><rect x="51.3033%" y="469" width="1.1043%" height="15" fill="rgb(243,32,47)" fg:x="22300" fg:w="480"/><text x="51.5533%" y="479.50"></text></g><g><title>block_verifier`&lt;fuel_core::service::config::Config as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="52.4076%" y="453" width="0.0138%" height="15" fill="rgb(247,202,23)" fg:x="22780" fg:w="6"/><text x="52.6576%" y="463.50"></text></g><g><title>block_verifier`block_verifier::main::_{{closure}} (520 samples, 1.20%)</title><rect x="51.2435%" y="501" width="1.1963%" height="15" fill="rgb(219,102,11)" fg:x="22274" fg:w="520"/><text x="51.4935%" y="511.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (503 samples, 1.16%)</title><rect x="51.2826%" y="485" width="1.1572%" height="15" fill="rgb(243,110,44)" fg:x="22291" fg:w="503"/><text x="51.5326%" y="495.50"></text></g><g><title>block_verifier`fuel_core::service::sub_services::init_sub_services (14 samples, 0.03%)</title><rect x="52.4076%" y="469" width="0.0322%" height="15" fill="rgb(222,74,54)" fg:x="22780" fg:w="14"/><text x="52.6576%" y="479.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (5 samples, 0.01%)</title><rect x="52.4421%" y="245" width="0.0115%" height="15" fill="rgb(216,99,12)" fg:x="22795" fg:w="5"/><text x="52.6921%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__unlinkat (5 samples, 0.01%)</title><rect x="52.4421%" y="229" width="0.0115%" height="15" fill="rgb(226,22,26)" fg:x="22795" fg:w="5"/><text x="52.6921%" y="239.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.01%)</title><rect x="52.4421%" y="325" width="0.0138%" height="15" fill="rgb(217,163,10)" fg:x="22795" fg:w="6"/><text x="52.6921%" y="335.50"></text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.01%)</title><rect x="52.4421%" y="309" width="0.0138%" height="15" fill="rgb(213,25,53)" fg:x="22795" fg:w="6"/><text x="52.6921%" y="319.50"></text></g><g><title>block_verifier`&lt;tempfile::dir::TempDir as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="52.4421%" y="293" width="0.0138%" height="15" fill="rgb(252,105,26)" fg:x="22795" fg:w="6"/><text x="52.6921%" y="303.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all (6 samples, 0.01%)</title><rect x="52.4421%" y="277" width="0.0138%" height="15" fill="rgb(220,39,43)" fg:x="22795" fg:w="6"/><text x="52.6921%" y="287.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (6 samples, 0.01%)</title><rect x="52.4421%" y="261" width="0.0138%" height="15" fill="rgb(229,68,48)" fg:x="22795" fg:w="6"/><text x="52.6921%" y="271.50"></text></g><g><title>block_verifier`rocksdb::VersionSet::~VersionSet (6 samples, 0.01%)</title><rect x="52.4559%" y="213" width="0.0138%" height="15" fill="rgb(252,8,32)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="223.50"></text></g><g><title>block_verifier`rocksdb::VersionSet::~VersionSet (6 samples, 0.01%)</title><rect x="52.4559%" y="197" width="0.0138%" height="15" fill="rgb(223,20,43)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="207.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilySet::~ColumnFamilySet (6 samples, 0.01%)</title><rect x="52.4559%" y="181" width="0.0138%" height="15" fill="rgb(229,81,49)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="191.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::UnrefAndTryDelete (6 samples, 0.01%)</title><rect x="52.4559%" y="165" width="0.0138%" height="15" fill="rgb(236,28,36)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="175.50"></text></g><g><title>block_verifier`rocksdb::SuperVersion::Cleanup (6 samples, 0.01%)</title><rect x="52.4559%" y="149" width="0.0138%" height="15" fill="rgb(249,185,26)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="159.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::UnrefAndTryDelete (6 samples, 0.01%)</title><rect x="52.4559%" y="133" width="0.0138%" height="15" fill="rgb(249,174,33)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="143.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::~ColumnFamilyData (6 samples, 0.01%)</title><rect x="52.4559%" y="117" width="0.0138%" height="15" fill="rgb(233,201,37)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="127.50"></text></g><g><title>block_verifier`rocksdb::MemTable::~MemTable (6 samples, 0.01%)</title><rect x="52.4559%" y="101" width="0.0138%" height="15" fill="rgb(221,78,26)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="111.50"></text></g><g><title>block_verifier`rocksdb::Arena::~Arena (6 samples, 0.01%)</title><rect x="52.4559%" y="85" width="0.0138%" height="15" fill="rgb(250,127,30)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="95.50"></text></g><g><title>block_verifier`std::__1::deque&lt;std::__1::unique_ptr&lt;char [], std::__1::default_delete&lt;char []&gt;&gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;char [], std::__1::default_delete&lt;char []&gt;&gt;&gt;&gt;::~deque[abi:ue170006] (6 samples, 0.01%)</title><rect x="52.4559%" y="69" width="0.0138%" height="15" fill="rgb(230,49,44)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (6 samples, 0.01%)</title><rect x="52.4559%" y="53" width="0.0138%" height="15" fill="rgb(229,67,23)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`madvise (6 samples, 0.01%)</title><rect x="52.4559%" y="37" width="0.0138%" height="15" fill="rgb(249,83,47)" fg:x="22801" fg:w="6"/><text x="52.7059%" y="47.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$tracing..instrument..Instrumented$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$q (14 samples, 0.03%)</title><rect x="52.4398%" y="421" width="0.0322%" height="15" fill="rgb(215,43,3)" fg:x="22794" fg:w="14"/><text x="52.6898%" y="431.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_descq (14 samples, 0.03%)</title><rect x="52.4398%" y="405" width="0.0322%" height="15" fill="rgb(238,154,13)" fg:x="22794" fg:w="14"/><text x="52.6898%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$fuel_core_services..service..run$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$q (14 samples, 0.03%)</title><rect x="52.4398%" y="389" width="0.0322%" height="15" fill="rgb(219,56,2)" fg:x="22794" fg:w="14"/><text x="52.6898%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_gas_price_service::v0::service::GasPriceServiceV0&lt;fuel_core_gas_price_service::common::l2_block_source::FuelL2BlockSource&lt;fuel_core::service::adapters::ConsensusParametersProvider&gt;,fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase&gt;&gt;&gt;&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="52.4398%" y="373" width="0.0322%" height="15" fill="rgb(233,0,4)" fg:x="22794" fg:w="14"/><text x="52.6898%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::service::adapters::consensus_parameters_provider::SharedState&gt; (13 samples, 0.03%)</title><rect x="52.4421%" y="357" width="0.0299%" height="15" fill="rgb(235,30,7)" fg:x="22795" fg:w="13"/><text x="52.6921%" y="367.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (13 samples, 0.03%)</title><rect x="52.4421%" y="341" width="0.0299%" height="15" fill="rgb(250,79,13)" fg:x="22795" fg:w="13"/><text x="52.6921%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::state::rocks_db::RocksDb&lt;fuel_core::state::historical_rocksdb::description::Historical&lt;fuel_core::database::database_description::relayer::Relayer&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="52.4559%" y="325" width="0.0161%" height="15" fill="rgb(211,146,34)" fg:x="22801" fg:w="7"/><text x="52.7059%" y="335.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.02%)</title><rect x="52.4559%" y="309" width="0.0161%" height="15" fill="rgb(228,22,38)" fg:x="22801" fg:w="7"/><text x="52.7059%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,rocksdb::db::DBWithThreadModeInner&gt;&gt; (7 samples, 0.02%)</title><rect x="52.4559%" y="293" width="0.0161%" height="15" fill="rgb(235,168,5)" fg:x="22801" fg:w="7"/><text x="52.7059%" y="303.50"></text></g><g><title>block_verifier`rocksdb_close (7 samples, 0.02%)</title><rect x="52.4559%" y="277" width="0.0161%" height="15" fill="rgb(221,155,16)" fg:x="22801" fg:w="7"/><text x="52.7059%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::~DBImpl (7 samples, 0.02%)</title><rect x="52.4559%" y="261" width="0.0161%" height="15" fill="rgb(215,215,53)" fg:x="22801" fg:w="7"/><text x="52.7059%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::~DBImpl (7 samples, 0.02%)</title><rect x="52.4559%" y="245" width="0.0161%" height="15" fill="rgb(223,4,10)" fg:x="22801" fg:w="7"/><text x="52.7059%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CloseHelper (7 samples, 0.02%)</title><rect x="52.4559%" y="229" width="0.0161%" height="15" fill="rgb(234,103,6)" fg:x="22801" fg:w="7"/><text x="52.7059%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.03%)</title><rect x="52.5019%" y="245" width="0.0345%" height="15" fill="rgb(227,97,0)" fg:x="22821" fg:w="15"/><text x="52.7519%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="52.5180%" y="229" width="0.0184%" height="15" fill="rgb(234,150,53)" fg:x="22828" fg:w="8"/><text x="52.7680%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (20 samples, 0.05%)</title><rect x="52.4927%" y="261" width="0.0460%" height="15" fill="rgb(228,201,54)" fg:x="22817" fg:w="20"/><text x="52.7427%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fuel_tx::transaction::Transaction&gt;&gt; (22 samples, 0.05%)</title><rect x="52.4927%" y="277" width="0.0506%" height="15" fill="rgb(222,22,37)" fg:x="22817" fg:w="22"/><text x="52.7427%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.05%)</title><rect x="52.5456%" y="277" width="0.0460%" height="15" fill="rgb(237,53,32)" fg:x="22840" fg:w="20"/><text x="52.7956%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.04%)</title><rect x="52.5525%" y="261" width="0.0391%" height="15" fill="rgb(233,25,53)" fg:x="22843" fg:w="17"/><text x="52.8025%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (8 samples, 0.02%)</title><rect x="52.5732%" y="245" width="0.0184%" height="15" fill="rgb(210,40,34)" fg:x="22852" fg:w="8"/><text x="52.8232%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.02%)</title><rect x="52.5732%" y="229" width="0.0184%" height="15" fill="rgb(241,220,44)" fg:x="22852" fg:w="8"/><text x="52.8232%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_types::services::block_importer::ImportResult&gt; (47 samples, 0.11%)</title><rect x="52.4858%" y="293" width="0.1081%" height="15" fill="rgb(235,28,35)" fg:x="22814" fg:w="47"/><text x="52.7358%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (55 samples, 0.13%)</title><rect x="52.4720%" y="421" width="0.1265%" height="15" fill="rgb(210,56,17)" fg:x="22808" fg:w="55"/><text x="52.7220%" y="431.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt; (55 samples, 0.13%)</title><rect x="52.4720%" y="405" width="0.1265%" height="15" fill="rgb(224,130,29)" fg:x="22808" fg:w="55"/><text x="52.7220%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;fuel_core_services::service::run&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (55 samples, 0.13%)</title><rect x="52.4720%" y="389" width="0.1265%" height="15" fill="rgb(235,212,8)" fg:x="22808" fg:w="55"/><text x="52.7220%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::graphql_api::worker_service::Task&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt; (55 samples, 0.13%)</title><rect x="52.4720%" y="373" width="0.1265%" height="15" fill="rgb(223,33,50)" fg:x="22808" fg:w="55"/><text x="52.7220%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::stream::filter_map::FilterMap&lt;tokio_stream::wrappers::broadcast::BroadcastStream&lt;fuel_core_importer::ImporterResult&gt;,futures_util::future::ready::Ready&lt;core::option::Option&lt;fuel_core_importer::ImporterResult&gt;&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;&gt; (50 samples, 0.12%)</title><rect x="52.4835%" y="357" width="0.1150%" height="15" fill="rgb(219,149,13)" fg:x="22813" fg:w="50"/><text x="52.7335%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::sync::broadcast::Receiver&lt;fuel_core_importer::ImporterResult&gt;&gt; (49 samples, 0.11%)</title><rect x="52.4858%" y="341" width="0.1127%" height="15" fill="rgb(250,156,29)" fg:x="22814" fg:w="49"/><text x="52.7358%" y="351.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (49 samples, 0.11%)</title><rect x="52.4858%" y="325" width="0.1127%" height="15" fill="rgb(216,193,19)" fg:x="22814" fg:w="49"/><text x="52.7358%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_importer::importer::Awaiter&gt; (49 samples, 0.11%)</title><rect x="52.4858%" y="309" width="0.1127%" height="15" fill="rgb(216,135,14)" fg:x="22814" fg:w="49"/><text x="52.7358%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (71 samples, 0.16%)</title><rect x="52.4398%" y="501" width="0.1633%" height="15" fill="rgb(241,47,5)" fg:x="22794" fg:w="71"/><text x="52.6898%" y="511.50"></text></g><g><title>block_verifier`&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (71 samples, 0.16%)</title><rect x="52.4398%" y="485" width="0.1633%" height="15" fill="rgb(233,42,35)" fg:x="22794" fg:w="71"/><text x="52.6898%" y="495.50"></text></g><g><title>block_verifier`tokio::runtime::scheduler::current_thread::shutdown2 (71 samples, 0.16%)</title><rect x="52.4398%" y="469" width="0.1633%" height="15" fill="rgb(231,13,6)" fg:x="22794" fg:w="71"/><text x="52.6898%" y="479.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::shutdown (71 samples, 0.16%)</title><rect x="52.4398%" y="453" width="0.1633%" height="15" fill="rgb(207,181,40)" fg:x="22794" fg:w="71"/><text x="52.6898%" y="463.50"></text></g><g><title>block_verifier`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (71 samples, 0.16%)</title><rect x="52.4398%" y="437" width="0.1633%" height="15" fill="rgb(254,173,49)" fg:x="22794" fg:w="71"/><text x="52.6898%" y="447.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (5 samples, 0.01%)</title><rect x="52.6031%" y="501" width="0.0115%" height="15" fill="rgb(221,1,38)" fg:x="22865" fg:w="5"/><text x="52.8531%" y="511.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (6 samples, 0.01%)</title><rect x="52.6146%" y="501" width="0.0138%" height="15" fill="rgb(206,124,46)" fg:x="22870" fg:w="6"/><text x="52.8646%" y="511.50"></text></g><g><title>block_verifier`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="52.6146%" y="485" width="0.0138%" height="15" fill="rgb(249,21,11)" fg:x="22870" fg:w="6"/><text x="52.8646%" y="495.50"></text></g><g><title>block_verifier`fuel_core_services::service::initialize_loop::_{{closure}} (6 samples, 0.01%)</title><rect x="52.6146%" y="469" width="0.0138%" height="15" fill="rgb(222,201,40)" fg:x="22870" fg:w="6"/><text x="52.8646%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`read (383 samples, 0.88%)</title><rect x="52.6284%" y="501" width="0.8811%" height="15" fill="rgb(235,61,29)" fg:x="22876" fg:w="383"/><text x="52.8784%" y="511.50"></text></g><g><title>block_verifier`block_verifier::main (22,967 samples, 52.84%)</title><rect x="0.7017%" y="517" width="52.8378%" height="15" fill="rgb(219,207,3)" fg:x="305" fg:w="22967"/><text x="0.9517%" y="527.50">block_verifier`block_verifier::main</text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="53.5096%" y="501" width="0.0299%" height="15" fill="rgb(222,56,46)" fg:x="23259" fg:w="13"/><text x="53.7596%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`read (9,260 samples, 21.30%)</title><rect x="53.5441%" y="517" width="21.3035%" height="15" fill="rgb(239,76,54)" fg:x="23274" fg:w="9260"/><text x="53.7941%" y="527.50">libsystem_kernel.dylib`read</text></g><g><title>block_verifier`main (32,241 samples, 74.17%)</title><rect x="0.6833%" y="581" width="74.1735%" height="15" fill="rgb(231,124,27)" fg:x="297" fg:w="32241"/><text x="0.9333%" y="591.50">block_verifier`main</text></g><g><title>block_verifier`std::rt::lang_start_internal (32,241 samples, 74.17%)</title><rect x="0.6833%" y="565" width="74.1735%" height="15" fill="rgb(249,195,6)" fg:x="297" fg:w="32241"/><text x="0.9333%" y="575.50">block_verifier`std::rt::lang_start_internal</text></g><g><title>block_verifier`std::rt::lang_start::_{{closure}} (32,241 samples, 74.17%)</title><rect x="0.6833%" y="549" width="74.1735%" height="15" fill="rgb(237,174,47)" fg:x="297" fg:w="32241"/><text x="0.9333%" y="559.50">block_verifier`std::rt::lang_start::_{{closure}}</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (32,240 samples, 74.17%)</title><rect x="0.6856%" y="533" width="74.1712%" height="15" fill="rgb(206,201,31)" fg:x="298" fg:w="32240"/><text x="0.9356%" y="543.50">block_verifier`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>dyld`start (32,243 samples, 74.18%)</title><rect x="0.6833%" y="597" width="74.1781%" height="15" fill="rgb(231,57,52)" fg:x="297" fg:w="32243"/><text x="0.9333%" y="607.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__exit (5 samples, 0.01%)</title><rect x="74.8614%" y="597" width="0.0115%" height="15" fill="rgb(248,177,22)" fg:x="32540" fg:w="5"/><text x="75.1114%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (5 samples, 0.01%)</title><rect x="74.9281%" y="373" width="0.0115%" height="15" fill="rgb(215,211,37)" fg:x="32569" fg:w="5"/><text x="75.1781%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (9 samples, 0.02%)</title><rect x="75.0155%" y="357" width="0.0207%" height="15" fill="rgb(241,128,51)" fg:x="32607" fg:w="9"/><text x="75.2655%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.03%)</title><rect x="75.0454%" y="357" width="0.0322%" height="15" fill="rgb(227,165,31)" fg:x="32620" fg:w="14"/><text x="75.2954%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (6 samples, 0.01%)</title><rect x="75.0776%" y="357" width="0.0138%" height="15" fill="rgb(228,167,24)" fg:x="32634" fg:w="6"/><text x="75.3276%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (98 samples, 0.23%)</title><rect x="74.9005%" y="389" width="0.2255%" height="15" fill="rgb(228,143,12)" fg:x="32557" fg:w="98"/><text x="75.1505%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (81 samples, 0.19%)</title><rect x="74.9396%" y="373" width="0.1863%" height="15" fill="rgb(249,149,8)" fg:x="32574" fg:w="81"/><text x="75.1896%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (11 samples, 0.03%)</title><rect x="75.1007%" y="357" width="0.0253%" height="15" fill="rgb(243,35,44)" fg:x="32644" fg:w="11"/><text x="75.3507%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.02%)</title><rect x="75.1076%" y="341" width="0.0184%" height="15" fill="rgb(246,89,9)" fg:x="32647" fg:w="8"/><text x="75.3576%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (107 samples, 0.25%)</title><rect x="74.8890%" y="405" width="0.2462%" height="15" fill="rgb(233,213,13)" fg:x="32552" fg:w="107"/><text x="75.1390%" y="415.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (7 samples, 0.02%)</title><rect x="75.1536%" y="197" width="0.0161%" height="15" fill="rgb(233,141,41)" fg:x="32667" fg:w="7"/><text x="75.4036%" y="207.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7 samples, 0.02%)</title><rect x="75.1536%" y="181" width="0.0161%" height="15" fill="rgb(239,167,4)" fg:x="32667" fg:w="7"/><text x="75.4036%" y="191.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::EndSection(rocksdb::ConfigOptions const&amp;, rocksdb::OptionSection, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (10 samples, 0.02%)</title><rect x="75.1490%" y="245" width="0.0230%" height="15" fill="rgb(209,217,16)" fg:x="32665" fg:w="10"/><text x="75.3990%" y="255.50"></text></g><g><title>block_verifier`rocksdb::GetColumnFamilyOptionsFromMap(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.02%)</title><rect x="75.1536%" y="229" width="0.0184%" height="15" fill="rgb(219,88,35)" fg:x="32667" fg:w="8"/><text x="75.4036%" y="239.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableCFOptions::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (8 samples, 0.02%)</title><rect x="75.1536%" y="213" width="0.0184%" height="15" fill="rgb(220,193,23)" fg:x="32667" fg:w="8"/><text x="75.4036%" y="223.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.03%)</title><rect x="75.1490%" y="261" width="0.0276%" height="15" fill="rgb(230,90,52)" fg:x="32665" fg:w="12"/><text x="75.3990%" y="271.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (17 samples, 0.04%)</title><rect x="75.1444%" y="389" width="0.0391%" height="15" fill="rgb(252,106,19)" fg:x="32663" fg:w="17"/><text x="75.3944%" y="399.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (17 samples, 0.04%)</title><rect x="75.1444%" y="373" width="0.0391%" height="15" fill="rgb(206,74,20)" fg:x="32663" fg:w="17"/><text x="75.3944%" y="383.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (17 samples, 0.04%)</title><rect x="75.1444%" y="357" width="0.0391%" height="15" fill="rgb(230,138,44)" fg:x="32663" fg:w="17"/><text x="75.3944%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (17 samples, 0.04%)</title><rect x="75.1444%" y="341" width="0.0391%" height="15" fill="rgb(235,182,43)" fg:x="32663" fg:w="17"/><text x="75.3944%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (17 samples, 0.04%)</title><rect x="75.1444%" y="325" width="0.0391%" height="15" fill="rgb(242,16,51)" fg:x="32663" fg:w="17"/><text x="75.3944%" y="335.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.04%)</title><rect x="75.1467%" y="309" width="0.0368%" height="15" fill="rgb(248,9,4)" fg:x="32664" fg:w="16"/><text x="75.3967%" y="319.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.04%)</title><rect x="75.1467%" y="293" width="0.0368%" height="15" fill="rgb(210,31,22)" fg:x="32664" fg:w="16"/><text x="75.3967%" y="303.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (15 samples, 0.03%)</title><rect x="75.1490%" y="277" width="0.0345%" height="15" fill="rgb(239,54,39)" fg:x="32665" fg:w="15"/><text x="75.3990%" y="287.50"></text></g><g><title>block_verifier`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (8 samples, 0.02%)</title><rect x="75.1858%" y="277" width="0.0184%" height="15" fill="rgb(230,99,41)" fg:x="32681" fg:w="8"/><text x="75.4358%" y="287.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Append (20 samples, 0.05%)</title><rect x="75.2042%" y="261" width="0.0460%" height="15" fill="rgb(253,106,12)" fg:x="32689" fg:w="20"/><text x="75.4542%" y="271.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Flush (20 samples, 0.05%)</title><rect x="75.2042%" y="245" width="0.0460%" height="15" fill="rgb(213,46,41)" fg:x="32689" fg:w="20"/><text x="75.4542%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::WriteBuffered (20 samples, 0.05%)</title><rect x="75.2042%" y="229" width="0.0460%" height="15" fill="rgb(215,133,35)" fg:x="32689" fg:w="20"/><text x="75.4542%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`write (20 samples, 0.05%)</title><rect x="75.2042%" y="213" width="0.0460%" height="15" fill="rgb(213,28,5)" fg:x="32689" fg:w="20"/><text x="75.4542%" y="223.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (31 samples, 0.07%)</title><rect x="75.1858%" y="325" width="0.0713%" height="15" fill="rgb(215,77,49)" fg:x="32681" fg:w="31"/><text x="75.4358%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (31 samples, 0.07%)</title><rect x="75.1858%" y="309" width="0.0713%" height="15" fill="rgb(248,100,22)" fg:x="32681" fg:w="31"/><text x="75.4358%" y="319.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (31 samples, 0.07%)</title><rect x="75.1858%" y="293" width="0.0713%" height="15" fill="rgb(208,67,9)" fg:x="32681" fg:w="31"/><text x="75.4358%" y="303.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::EmitPhysicalRecord (23 samples, 0.05%)</title><rect x="75.2042%" y="277" width="0.0529%" height="15" fill="rgb(219,133,21)" fg:x="32689" fg:w="23"/><text x="75.4542%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.05%)</title><rect x="75.3399%" y="213" width="0.0483%" height="15" fill="rgb(246,46,29)" fg:x="32748" fg:w="21"/><text x="75.5899%" y="223.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (50 samples, 0.12%)</title><rect x="75.2824%" y="245" width="0.1150%" height="15" fill="rgb(246,185,52)" fg:x="32723" fg:w="50"/><text x="75.5324%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (34 samples, 0.08%)</title><rect x="75.3192%" y="229" width="0.0782%" height="15" fill="rgb(252,136,11)" fg:x="32739" fg:w="34"/><text x="75.5692%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (53 samples, 0.12%)</title><rect x="75.2801%" y="261" width="0.1219%" height="15" fill="rgb(219,138,53)" fg:x="32722" fg:w="53"/><text x="75.5301%" y="271.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteCF (61 samples, 0.14%)</title><rect x="75.2640%" y="293" width="0.1403%" height="15" fill="rgb(211,51,23)" fg:x="32715" fg:w="61"/><text x="75.5140%" y="303.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (58 samples, 0.13%)</title><rect x="75.2709%" y="277" width="0.1334%" height="15" fill="rgb(247,221,28)" fg:x="32718" fg:w="58"/><text x="75.5209%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.03%)</title><rect x="75.4618%" y="213" width="0.0253%" height="15" fill="rgb(251,222,45)" fg:x="32801" fg:w="11"/><text x="75.7118%" y="223.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (21 samples, 0.05%)</title><rect x="75.4480%" y="229" width="0.0483%" height="15" fill="rgb(217,162,53)" fg:x="32795" fg:w="21"/><text x="75.6980%" y="239.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (32 samples, 0.07%)</title><rect x="75.4273%" y="245" width="0.0736%" height="15" fill="rgb(229,93,14)" fg:x="32786" fg:w="32"/><text x="75.6773%" y="255.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Allocate (13 samples, 0.03%)</title><rect x="75.5033%" y="245" width="0.0299%" height="15" fill="rgb(209,67,49)" fg:x="32819" fg:w="13"/><text x="75.7533%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (53 samples, 0.12%)</title><rect x="75.4227%" y="261" width="0.1219%" height="15" fill="rgb(213,87,29)" fg:x="32784" fg:w="53"/><text x="75.6727%" y="271.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (5 samples, 0.01%)</title><rect x="75.5332%" y="245" width="0.0115%" height="15" fill="rgb(205,151,52)" fg:x="32832" fg:w="5"/><text x="75.7832%" y="255.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (68 samples, 0.16%)</title><rect x="75.4043%" y="293" width="0.1564%" height="15" fill="rgb(253,215,39)" fg:x="32776" fg:w="68"/><text x="75.6543%" y="303.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (67 samples, 0.15%)</title><rect x="75.4066%" y="277" width="0.1541%" height="15" fill="rgb(221,220,41)" fg:x="32777" fg:w="67"/><text x="75.6566%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="75.5447%" y="261" width="0.0161%" height="15" fill="rgb(218,133,21)" fg:x="32837" fg:w="7"/><text x="75.7947%" y="271.50"></text></g><g><title>block_verifier`rocksdb_write (169 samples, 0.39%)</title><rect x="75.1858%" y="373" width="0.3888%" height="15" fill="rgb(221,193,43)" fg:x="32681" fg:w="169"/><text x="75.4358%" y="383.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (169 samples, 0.39%)</title><rect x="75.1858%" y="357" width="0.3888%" height="15" fill="rgb(240,128,52)" fg:x="32681" fg:w="169"/><text x="75.4358%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (169 samples, 0.39%)</title><rect x="75.1858%" y="341" width="0.3888%" height="15" fill="rgb(253,114,12)" fg:x="32681" fg:w="169"/><text x="75.4358%" y="351.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (138 samples, 0.32%)</title><rect x="75.2571%" y="325" width="0.3175%" height="15" fill="rgb(215,223,47)" fg:x="32712" fg:w="138"/><text x="75.5071%" y="335.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (135 samples, 0.31%)</title><rect x="75.2640%" y="309" width="0.3106%" height="15" fill="rgb(248,225,23)" fg:x="32715" fg:w="135"/><text x="75.5140%" y="319.50"></text></g><g><title>block_verifier`rocksdb::ReadRecordFromWriteBatch (5 samples, 0.01%)</title><rect x="75.5631%" y="293" width="0.0115%" height="15" fill="rgb(250,108,0)" fg:x="32845" fg:w="5"/><text x="75.8131%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (170 samples, 0.39%)</title><rect x="75.1858%" y="389" width="0.3911%" height="15" fill="rgb(228,208,7)" fg:x="32681" fg:w="170"/><text x="75.4358%" y="399.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (10 samples, 0.02%)</title><rect x="75.5792%" y="341" width="0.0230%" height="15" fill="rgb(244,45,10)" fg:x="32852" fg:w="10"/><text x="75.8292%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="75.5861%" y="325" width="0.0161%" height="15" fill="rgb(207,125,25)" fg:x="32855" fg:w="7"/><text x="75.8361%" y="335.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Delete (12 samples, 0.03%)</title><rect x="75.5792%" y="357" width="0.0276%" height="15" fill="rgb(210,195,18)" fg:x="32852" fg:w="12"/><text x="75.8292%" y="367.50"></text></g><g><title>block_verifier`rocksdb_writebatch_delete_cf (14 samples, 0.03%)</title><rect x="75.5769%" y="389" width="0.0322%" height="15" fill="rgb(249,80,12)" fg:x="32851" fg:w="14"/><text x="75.8269%" y="399.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Delete (14 samples, 0.03%)</title><rect x="75.5769%" y="373" width="0.0322%" height="15" fill="rgb(221,65,9)" fg:x="32851" fg:w="14"/><text x="75.8269%" y="383.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::GetColumnFamilyIdAndTimestampSize (6 samples, 0.01%)</title><rect x="75.6206%" y="357" width="0.0138%" height="15" fill="rgb(235,49,36)" fg:x="32870" fg:w="6"/><text x="75.8706%" y="367.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (21 samples, 0.05%)</title><rect x="75.6505%" y="341" width="0.0483%" height="15" fill="rgb(225,32,20)" fg:x="32883" fg:w="21"/><text x="75.9005%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="75.6712%" y="325" width="0.0276%" height="15" fill="rgb(215,141,46)" fg:x="32892" fg:w="12"/><text x="75.9212%" y="335.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (37 samples, 0.09%)</title><rect x="75.6344%" y="357" width="0.0851%" height="15" fill="rgb(250,160,47)" fg:x="32876" fg:w="37"/><text x="75.8844%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="75.7011%" y="341" width="0.0184%" height="15" fill="rgb(216,222,40)" fg:x="32905" fg:w="8"/><text x="75.9511%" y="351.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (256 samples, 0.59%)</title><rect x="75.1352%" y="405" width="0.5890%" height="15" fill="rgb(234,217,39)" fg:x="32659" fg:w="256"/><text x="75.3852%" y="415.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (50 samples, 0.12%)</title><rect x="75.6091%" y="389" width="0.1150%" height="15" fill="rgb(207,178,40)" fg:x="32865" fg:w="50"/><text x="75.8591%" y="399.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (50 samples, 0.12%)</title><rect x="75.6091%" y="373" width="0.1150%" height="15" fill="rgb(221,136,13)" fg:x="32865" fg:w="50"/><text x="75.8591%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::commit (370 samples, 0.85%)</title><rect x="74.8821%" y="453" width="0.8512%" height="15" fill="rgb(249,199,10)" fg:x="32549" fg:w="370"/><text x="75.1321%" y="463.50"></text></g><g><title>block_verifier`fuel_core::database::_&lt;impl fuel_core_storage::transactional::Modifiable for fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;&gt;::commit_changes (370 samples, 0.85%)</title><rect x="74.8821%" y="437" width="0.8512%" height="15" fill="rgb(249,222,13)" fg:x="32549" fg:w="370"/><text x="75.1321%" y="447.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (370 samples, 0.85%)</title><rect x="74.8821%" y="421" width="0.8512%" height="15" fill="rgb(244,185,38)" fg:x="32549" fg:w="370"/><text x="75.1321%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.02%)</title><rect x="75.7931%" y="341" width="0.0207%" height="15" fill="rgb(236,202,9)" fg:x="32945" fg:w="9"/><text x="76.0431%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (10 samples, 0.02%)</title><rect x="75.7931%" y="357" width="0.0230%" height="15" fill="rgb(250,229,37)" fg:x="32945" fg:w="10"/><text x="76.0431%" y="367.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.03%)</title><rect x="75.7931%" y="421" width="0.0276%" height="15" fill="rgb(206,174,23)" fg:x="32945" fg:w="12"/><text x="76.0431%" y="431.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.03%)</title><rect x="75.7931%" y="405" width="0.0276%" height="15" fill="rgb(211,33,43)" fg:x="32945" fg:w="12"/><text x="76.0431%" y="415.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (12 samples, 0.03%)</title><rect x="75.7931%" y="389" width="0.0276%" height="15" fill="rgb(245,58,50)" fg:x="32945" fg:w="12"/><text x="76.0431%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (12 samples, 0.03%)</title><rect x="75.7931%" y="373" width="0.0276%" height="15" fill="rgb(244,68,36)" fg:x="32945" fg:w="12"/><text x="76.0431%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.02%)</title><rect x="75.8253%" y="357" width="0.0207%" height="15" fill="rgb(232,229,15)" fg:x="32959" fg:w="9"/><text x="76.0753%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.03%)</title><rect x="75.8253%" y="373" width="0.0253%" height="15" fill="rgb(254,30,23)" fg:x="32959" fg:w="11"/><text x="76.0753%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (14 samples, 0.03%)</title><rect x="75.8230%" y="405" width="0.0322%" height="15" fill="rgb(235,160,14)" fg:x="32958" fg:w="14"/><text x="76.0730%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (14 samples, 0.03%)</title><rect x="75.8230%" y="389" width="0.0322%" height="15" fill="rgb(212,155,44)" fg:x="32958" fg:w="14"/><text x="76.0730%" y="399.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (15 samples, 0.03%)</title><rect x="75.8230%" y="421" width="0.0345%" height="15" fill="rgb(226,2,50)" fg:x="32958" fg:w="15"/><text x="76.0730%" y="431.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (51 samples, 0.12%)</title><rect x="75.7448%" y="437" width="0.1173%" height="15" fill="rgb(234,177,6)" fg:x="32924" fg:w="51"/><text x="75.9948%" y="447.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (24 samples, 0.06%)</title><rect x="75.8714%" y="421" width="0.0552%" height="15" fill="rgb(217,24,9)" fg:x="32979" fg:w="24"/><text x="76.1214%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (37 samples, 0.09%)</title><rect x="75.8644%" y="437" width="0.0851%" height="15" fill="rgb(220,13,46)" fg:x="32976" fg:w="37"/><text x="76.1144%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.02%)</title><rect x="75.9335%" y="421" width="0.0161%" height="15" fill="rgb(239,221,27)" fg:x="33006" fg:w="7"/><text x="76.1835%" y="431.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.03%)</title><rect x="75.9496%" y="437" width="0.0276%" height="15" fill="rgb(222,198,25)" fg:x="33013" fg:w="12"/><text x="76.1996%" y="447.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="75.9542%" y="421" width="0.0230%" height="15" fill="rgb(211,99,13)" fg:x="33015" fg:w="10"/><text x="76.2042%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (9 samples, 0.02%)</title><rect x="75.9565%" y="405" width="0.0207%" height="15" fill="rgb(232,111,31)" fg:x="33016" fg:w="9"/><text x="76.2065%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (8 samples, 0.02%)</title><rect x="75.9588%" y="389" width="0.0184%" height="15" fill="rgb(245,82,37)" fg:x="33017" fg:w="8"/><text x="76.2088%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="75.9657%" y="373" width="0.0115%" height="15" fill="rgb(227,149,46)" fg:x="33020" fg:w="5"/><text x="76.2157%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="75.9887%" y="437" width="0.0138%" height="15" fill="rgb(218,36,50)" fg:x="33030" fg:w="6"/><text x="76.2387%" y="447.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::store_new_block (123 samples, 0.28%)</title><rect x="75.7333%" y="453" width="0.2830%" height="15" fill="rgb(226,80,48)" fg:x="32919" fg:w="123"/><text x="75.9833%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="76.0025%" y="437" width="0.0138%" height="15" fill="rgb(238,224,15)" fg:x="33036" fg:w="6"/><text x="76.2525%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="76.0025%" y="421" width="0.0138%" height="15" fill="rgb(241,136,10)" fg:x="33036" fg:w="6"/><text x="76.2525%" y="431.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="76.0347%" y="389" width="0.0276%" height="15" fill="rgb(208,32,45)" fg:x="33050" fg:w="12"/><text x="76.2847%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="76.0439%" y="373" width="0.0184%" height="15" fill="rgb(207,135,9)" fg:x="33054" fg:w="8"/><text x="76.2939%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="76.0485%" y="357" width="0.0138%" height="15" fill="rgb(206,86,44)" fg:x="33056" fg:w="6"/><text x="76.2985%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (22 samples, 0.05%)</title><rect x="76.0209%" y="405" width="0.0506%" height="15" fill="rgb(245,177,15)" fg:x="33044" fg:w="22"/><text x="76.2709%" y="415.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.06%)</title><rect x="76.0209%" y="437" width="0.0552%" height="15" fill="rgb(206,64,50)" fg:x="33044" fg:w="24"/><text x="76.2709%" y="447.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as core::clone::Clone&gt;::clone (24 samples, 0.06%)</title><rect x="76.0209%" y="421" width="0.0552%" height="15" fill="rgb(234,36,40)" fg:x="33044" fg:w="24"/><text x="76.2709%" y="431.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="76.0876%" y="373" width="0.0276%" height="15" fill="rgb(213,64,8)" fg:x="33073" fg:w="12"/><text x="76.3376%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="76.0945%" y="357" width="0.0207%" height="15" fill="rgb(210,75,36)" fg:x="33076" fg:w="9"/><text x="76.3445%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (20 samples, 0.05%)</title><rect x="76.0761%" y="389" width="0.0460%" height="15" fill="rgb(229,88,21)" fg:x="33068" fg:w="20"/><text x="76.3261%" y="399.50"></text></g><g><title>block_verifier`&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23 samples, 0.05%)</title><rect x="76.0761%" y="421" width="0.0529%" height="15" fill="rgb(252,204,47)" fg:x="33068" fg:w="23"/><text x="76.3261%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="76.0761%" y="405" width="0.0529%" height="15" fill="rgb(208,77,27)" fg:x="33068" fg:w="23"/><text x="76.3261%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (5 samples, 0.01%)</title><rect x="76.1359%" y="389" width="0.0115%" height="15" fill="rgb(221,76,26)" fg:x="33094" fg:w="5"/><text x="76.3859%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (5 samples, 0.01%)</title><rect x="76.1566%" y="357" width="0.0115%" height="15" fill="rgb(225,139,18)" fg:x="33103" fg:w="5"/><text x="76.4066%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="76.1681%" y="357" width="0.0184%" height="15" fill="rgb(230,137,11)" fg:x="33108" fg:w="8"/><text x="76.4181%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.05%)</title><rect x="76.1520%" y="389" width="0.0506%" height="15" fill="rgb(212,28,1)" fg:x="33101" fg:w="22"/><text x="76.4020%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.05%)</title><rect x="76.1566%" y="373" width="0.0460%" height="15" fill="rgb(248,164,17)" fg:x="33103" fg:w="20"/><text x="76.4066%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (30 samples, 0.07%)</title><rect x="76.1359%" y="405" width="0.0690%" height="15" fill="rgb(222,171,42)" fg:x="33094" fg:w="30"/><text x="76.3859%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fuel_core_executor::ports::MaybeCheckedTransaction&gt;&gt; (32 samples, 0.07%)</title><rect x="76.1359%" y="421" width="0.0736%" height="15" fill="rgb(243,84,45)" fg:x="33094" fg:w="32"/><text x="76.3859%" y="431.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="76.2417%" y="405" width="0.0161%" height="15" fill="rgb(252,49,23)" fg:x="33140" fg:w="7"/><text x="76.4917%" y="415.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::Bucket::add (10 samples, 0.02%)</title><rect x="76.2740%" y="405" width="0.0230%" height="15" fill="rgb(215,19,7)" fg:x="33154" fg:w="10"/><text x="76.5240%" y="415.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="76.3108%" y="389" width="0.0138%" height="15" fill="rgb(238,81,41)" fg:x="33170" fg:w="6"/><text x="76.5608%" y="399.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.06%)</title><rect x="76.2970%" y="405" width="0.0552%" height="15" fill="rgb(210,199,37)" fg:x="33164" fg:w="24"/><text x="76.5470%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="76.3246%" y="389" width="0.0276%" height="15" fill="rgb(244,192,49)" fg:x="33176" fg:w="12"/><text x="76.5746%" y="399.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="76.3522%" y="405" width="0.0138%" height="15" fill="rgb(226,211,11)" fg:x="33188" fg:w="6"/><text x="76.6022%" y="415.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::process (67 samples, 0.15%)</title><rect x="76.2187%" y="421" width="0.1541%" height="15" fill="rgb(236,162,54)" fg:x="33130" fg:w="67"/><text x="76.4687%" y="431.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="76.3913%" y="389" width="0.0207%" height="15" fill="rgb(220,229,9)" fg:x="33205" fg:w="9"/><text x="76.6413%" y="399.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="76.4120%" y="389" width="0.0115%" height="15" fill="rgb(250,87,22)" fg:x="33214" fg:w="5"/><text x="76.6620%" y="399.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="76.4120%" y="373" width="0.0115%" height="15" fill="rgb(239,43,17)" fg:x="33214" fg:w="5"/><text x="76.6620%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.01%)</title><rect x="76.4120%" y="357" width="0.0115%" height="15" fill="rgb(231,177,25)" fg:x="33214" fg:w="5"/><text x="76.6620%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.01%)</title><rect x="76.4120%" y="341" width="0.0115%" height="15" fill="rgb(219,179,1)" fg:x="33214" fg:w="5"/><text x="76.6620%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="76.4120%" y="325" width="0.0115%" height="15" fill="rgb(238,219,53)" fg:x="33214" fg:w="5"/><text x="76.6620%" y="335.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="76.3913%" y="405" width="0.0414%" height="15" fill="rgb(232,167,36)" fg:x="33205" fg:w="18"/><text x="76.6413%" y="415.50"></text></g><g><title>block_verifier`core::slice::sort::stable::driftsort_main (5 samples, 0.01%)</title><rect x="76.4419%" y="405" width="0.0115%" height="15" fill="rgb(244,19,51)" fg:x="33227" fg:w="5"/><text x="76.6919%" y="415.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::split_equally (47 samples, 0.11%)</title><rect x="76.3729%" y="421" width="0.1081%" height="15" fill="rgb(224,6,22)" fg:x="33197" fg:w="47"/><text x="76.6229%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="76.4534%" y="405" width="0.0276%" height="15" fill="rgb(224,145,5)" fg:x="33232" fg:w="12"/><text x="76.7034%" y="415.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (12 samples, 0.03%)</title><rect x="76.5615%" y="389" width="0.0276%" height="15" fill="rgb(234,130,49)" fg:x="33279" fg:w="12"/><text x="76.8115%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="76.5661%" y="373" width="0.0230%" height="15" fill="rgb(254,6,2)" fg:x="33281" fg:w="10"/><text x="76.8161%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="76.5661%" y="357" width="0.0230%" height="15" fill="rgb(208,96,46)" fg:x="33281" fg:w="10"/><text x="76.8161%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (6 samples, 0.01%)</title><rect x="76.5753%" y="341" width="0.0138%" height="15" fill="rgb(239,3,39)" fg:x="33285" fg:w="6"/><text x="76.8253%" y="351.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.02%)</title><rect x="76.5891%" y="389" width="0.0207%" height="15" fill="rgb(233,210,1)" fg:x="33291" fg:w="9"/><text x="76.8391%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt; as fuel_core_storage::transactional::Modifiable&gt;::commit_changes (59 samples, 0.14%)</title><rect x="76.4810%" y="405" width="0.1357%" height="15" fill="rgb(244,137,37)" fg:x="33244" fg:w="59"/><text x="76.7310%" y="415.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (8 samples, 0.02%)</title><rect x="76.6190%" y="405" width="0.0184%" height="15" fill="rgb(240,136,2)" fg:x="33304" fg:w="8"/><text x="76.8690%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="76.6559%" y="389" width="0.0115%" height="15" fill="rgb(239,18,37)" fg:x="33320" fg:w="5"/><text x="76.9059%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (9 samples, 0.02%)</title><rect x="76.6881%" y="373" width="0.0207%" height="15" fill="rgb(218,185,22)" fg:x="33334" fg:w="9"/><text x="76.9381%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (6 samples, 0.01%)</title><rect x="76.7479%" y="357" width="0.0138%" height="15" fill="rgb(225,218,4)" fg:x="33360" fg:w="6"/><text x="76.9979%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.02%)</title><rect x="76.7709%" y="357" width="0.0161%" height="15" fill="rgb(230,182,32)" fg:x="33370" fg:w="7"/><text x="77.0209%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (59 samples, 0.14%)</title><rect x="76.6674%" y="389" width="0.1357%" height="15" fill="rgb(242,56,43)" fg:x="33325" fg:w="59"/><text x="76.9174%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (41 samples, 0.09%)</title><rect x="76.7088%" y="373" width="0.0943%" height="15" fill="rgb(233,99,24)" fg:x="33343" fg:w="41"/><text x="76.9588%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (72 samples, 0.17%)</title><rect x="76.6397%" y="405" width="0.1656%" height="15" fill="rgb(234,209,42)" fg:x="33313" fg:w="72"/><text x="76.8897%" y="415.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::PartialBlockHeader::generate (38 samples, 0.09%)</title><rect x="76.8054%" y="405" width="0.0874%" height="15" fill="rgb(227,7,12)" fg:x="33385" fg:w="38"/><text x="77.0554%" y="415.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::generate_txns_root (38 samples, 0.09%)</title><rect x="76.8054%" y="389" width="0.0874%" height="15" fill="rgb(245,203,43)" fg:x="33385" fg:w="38"/><text x="77.0554%" y="399.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (38 samples, 0.09%)</title><rect x="76.8054%" y="373" width="0.0874%" height="15" fill="rgb(238,205,33)" fg:x="33385" fg:w="38"/><text x="77.0554%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (37 samples, 0.09%)</title><rect x="76.8077%" y="357" width="0.0851%" height="15" fill="rgb(231,56,7)" fg:x="33386" fg:w="37"/><text x="77.0577%" y="367.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results (193 samples, 0.44%)</title><rect x="76.4810%" y="421" width="0.4440%" height="15" fill="rgb(244,186,29)" fg:x="33244" fg:w="193"/><text x="76.7310%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.02%)</title><rect x="76.9043%" y="405" width="0.0207%" height="15" fill="rgb(234,111,31)" fg:x="33428" fg:w="9"/><text x="77.1543%" y="415.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da (392 samples, 0.90%)</title><rect x="76.0761%" y="437" width="0.9018%" height="15" fill="rgb(241,149,10)" fg:x="33068" fg:w="392"/><text x="76.3261%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.05%)</title><rect x="76.9296%" y="421" width="0.0483%" height="15" fill="rgb(249,206,44)" fg:x="33439" fg:w="21"/><text x="77.1796%" y="431.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (5 samples, 0.01%)</title><rect x="76.9917%" y="389" width="0.0115%" height="15" fill="rgb(251,153,30)" fg:x="33466" fg:w="5"/><text x="77.2417%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="76.9917%" y="373" width="0.0115%" height="15" fill="rgb(239,152,38)" fg:x="33466" fg:w="5"/><text x="77.2417%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (10 samples, 0.02%)</title><rect x="77.0539%" y="357" width="0.0230%" height="15" fill="rgb(249,139,47)" fg:x="33493" fg:w="10"/><text x="77.3039%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (42 samples, 0.10%)</title><rect x="77.0239%" y="373" width="0.0966%" height="15" fill="rgb(244,64,35)" fg:x="33480" fg:w="42"/><text x="77.2739%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (10 samples, 0.02%)</title><rect x="77.0976%" y="357" width="0.0230%" height="15" fill="rgb(216,46,15)" fg:x="33512" fg:w="10"/><text x="77.3476%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (51 samples, 0.12%)</title><rect x="77.0055%" y="389" width="0.1173%" height="15" fill="rgb(250,74,19)" fg:x="33472" fg:w="51"/><text x="77.2555%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (60 samples, 0.14%)</title><rect x="76.9871%" y="405" width="0.1380%" height="15" fill="rgb(249,42,33)" fg:x="33464" fg:w="60"/><text x="77.2371%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="77.1344%" y="405" width="0.0184%" height="15" fill="rgb(242,149,17)" fg:x="33528" fg:w="8"/><text x="77.3844%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="77.1367%" y="389" width="0.0161%" height="15" fill="rgb(244,29,21)" fg:x="33529" fg:w="7"/><text x="77.3867%" y="399.50"></text></g><g><title>block_verifier`fuel_core_types::services::executor::_&lt;impl fuel_core_types::services::Uncommitted&lt;fuel_core_types::services::executor::ProductionResult,DatabaseTransaction&gt;&gt;::into_validation_result (77 samples, 0.18%)</title><rect x="76.9779%" y="437" width="0.1771%" height="15" fill="rgb(220,130,37)" fg:x="33460" fg:w="77"/><text x="77.2279%" y="447.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;[fuel_tx::transaction::Transaction]&gt; (77 samples, 0.18%)</title><rect x="76.9779%" y="421" width="0.1771%" height="15" fill="rgb(211,67,2)" fg:x="33460" fg:w="77"/><text x="77.2279%" y="431.50"></text></g><g><title>block_verifier`fuel_core::service::adapters::block_importer::_&lt;impl fuel_core_importer::ports::Validator for fuel_core::service::adapters::ExecutorAdapter&gt;::validate (520 samples, 1.20%)</title><rect x="76.0209%" y="453" width="1.1963%" height="15" fill="rgb(235,68,52)" fg:x="33044" fg:w="520"/><text x="76.2709%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.06%)</title><rect x="77.1551%" y="437" width="0.0621%" height="15" fill="rgb(246,142,3)" fg:x="33537" fg:w="27"/><text x="77.4051%" y="447.50"></text></g><g><title>block_verifier`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1,019 samples, 2.34%)</title><rect x="74.8752%" y="485" width="2.3443%" height="15" fill="rgb(241,25,7)" fg:x="32546" fg:w="1019"/><text x="75.1252%" y="495.50">b..</text></g><g><title>block_verifier`rayon_core::scope::scope_fifo::_{{closure}} (1,018 samples, 2.34%)</title><rect x="74.8775%" y="469" width="2.3420%" height="15" fill="rgb(242,119,39)" fg:x="32547" fg:w="1018"/><text x="75.1275%" y="479.50">b..</text></g><g><title>block_verifier`rayon_core::registry::WorkerThread::wait_until_cold (1,020 samples, 2.35%)</title><rect x="74.8752%" y="501" width="2.3466%" height="15" fill="rgb(241,98,45)" fg:x="32546" fg:w="1020"/><text x="75.1252%" y="511.50">b..</text></g><g><title>block_verifier`rayon_core::registry::ThreadBuilder::run (1,021 samples, 2.35%)</title><rect x="74.8752%" y="517" width="2.3489%" height="15" fill="rgb(254,28,30)" fg:x="32546" fg:w="1021"/><text x="75.1252%" y="527.50">b..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.08%)</title><rect x="77.3069%" y="357" width="0.0782%" height="15" fill="rgb(241,142,54)" fg:x="33603" fg:w="34"/><text x="77.5569%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.06%)</title><rect x="77.3276%" y="341" width="0.0575%" height="15" fill="rgb(222,85,15)" fg:x="33612" fg:w="25"/><text x="77.5776%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.04%)</title><rect x="77.3483%" y="325" width="0.0368%" height="15" fill="rgb(210,85,47)" fg:x="33621" fg:w="16"/><text x="77.5983%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (54 samples, 0.12%)</title><rect x="77.2678%" y="373" width="0.1242%" height="15" fill="rgb(224,206,25)" fg:x="33586" fg:w="54"/><text x="77.5178%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="77.3943%" y="373" width="0.0138%" height="15" fill="rgb(243,201,19)" fg:x="33641" fg:w="6"/><text x="77.6443%" y="383.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (72 samples, 0.17%)</title><rect x="77.2632%" y="389" width="0.1656%" height="15" fill="rgb(236,59,4)" fg:x="33584" fg:w="72"/><text x="77.5132%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="77.4081%" y="373" width="0.0207%" height="15" fill="rgb(254,179,45)" fg:x="33647" fg:w="9"/><text x="77.6581%" y="383.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (74 samples, 0.17%)</title><rect x="77.2632%" y="437" width="0.1702%" height="15" fill="rgb(226,14,10)" fg:x="33584" fg:w="74"/><text x="77.5132%" y="447.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (74 samples, 0.17%)</title><rect x="77.2632%" y="421" width="0.1702%" height="15" fill="rgb(244,27,41)" fg:x="33584" fg:w="74"/><text x="77.5132%" y="431.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (74 samples, 0.17%)</title><rect x="77.2632%" y="405" width="0.1702%" height="15" fill="rgb(235,35,32)" fg:x="33584" fg:w="74"/><text x="77.5132%" y="415.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="77.4450%" y="421" width="0.0414%" height="15" fill="rgb(218,68,31)" fg:x="33663" fg:w="18"/><text x="77.6950%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (5 samples, 0.01%)</title><rect x="77.4864%" y="421" width="0.0115%" height="15" fill="rgb(207,120,37)" fg:x="33681" fg:w="5"/><text x="77.7364%" y="431.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (15 samples, 0.03%)</title><rect x="77.5002%" y="421" width="0.0345%" height="15" fill="rgb(227,98,0)" fg:x="33687" fg:w="15"/><text x="77.7502%" y="431.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.11%)</title><rect x="77.4335%" y="437" width="0.1104%" height="15" fill="rgb(207,7,3)" fg:x="33658" fg:w="48"/><text x="77.6835%" y="447.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (14 samples, 0.03%)</title><rect x="77.5600%" y="421" width="0.0322%" height="15" fill="rgb(206,98,19)" fg:x="33713" fg:w="14"/><text x="77.8100%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="77.6014%" y="421" width="0.0161%" height="15" fill="rgb(217,5,26)" fg:x="33731" fg:w="7"/><text x="77.8514%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="77.6037%" y="405" width="0.0138%" height="15" fill="rgb(235,190,38)" fg:x="33732" fg:w="6"/><text x="77.8537%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (40 samples, 0.09%)</title><rect x="77.5462%" y="437" width="0.0920%" height="15" fill="rgb(247,86,24)" fg:x="33707" fg:w="40"/><text x="77.7962%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.02%)</title><rect x="77.6198%" y="421" width="0.0184%" height="15" fill="rgb(205,101,16)" fg:x="33739" fg:w="8"/><text x="77.8698%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="77.7279%" y="341" width="0.0207%" height="15" fill="rgb(246,168,33)" fg:x="33786" fg:w="9"/><text x="77.9779%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="77.7532%" y="341" width="0.0322%" height="15" fill="rgb(231,114,1)" fg:x="33797" fg:w="14"/><text x="78.0032%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="77.7624%" y="325" width="0.0230%" height="15" fill="rgb(207,184,53)" fg:x="33801" fg:w="10"/><text x="78.0124%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="77.7693%" y="309" width="0.0161%" height="15" fill="rgb(224,95,51)" fg:x="33804" fg:w="7"/><text x="78.0193%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="77.7854%" y="341" width="0.0115%" height="15" fill="rgb(212,188,45)" fg:x="33811" fg:w="5"/><text x="78.0354%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="77.7854%" y="325" width="0.0115%" height="15" fill="rgb(223,154,38)" fg:x="33811" fg:w="5"/><text x="78.0354%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (38 samples, 0.09%)</title><rect x="77.7233%" y="357" width="0.0874%" height="15" fill="rgb(251,22,52)" fg:x="33784" fg:w="38"/><text x="77.9733%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (5 samples, 0.01%)</title><rect x="77.7993%" y="341" width="0.0115%" height="15" fill="rgb(229,209,22)" fg:x="33817" fg:w="5"/><text x="78.0493%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (46 samples, 0.11%)</title><rect x="77.7072%" y="373" width="0.1058%" height="15" fill="rgb(234,138,34)" fg:x="33777" fg:w="46"/><text x="77.9572%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (56 samples, 0.13%)</title><rect x="77.7026%" y="389" width="0.1288%" height="15" fill="rgb(212,95,11)" fg:x="33775" fg:w="56"/><text x="77.9526%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="77.8200%" y="373" width="0.0115%" height="15" fill="rgb(240,179,47)" fg:x="33826" fg:w="5"/><text x="78.0700%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (63 samples, 0.14%)</title><rect x="77.6911%" y="421" width="0.1449%" height="15" fill="rgb(240,163,11)" fg:x="33770" fg:w="63"/><text x="77.9411%" y="431.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (61 samples, 0.14%)</title><rect x="77.6957%" y="405" width="0.1403%" height="15" fill="rgb(236,37,12)" fg:x="33772" fg:w="61"/><text x="77.9457%" y="415.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="77.8361%" y="405" width="0.0161%" height="15" fill="rgb(232,164,16)" fg:x="33833" fg:w="7"/><text x="78.0861%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="77.8361%" y="389" width="0.0161%" height="15" fill="rgb(244,205,15)" fg:x="33833" fg:w="7"/><text x="78.0861%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="77.8384%" y="373" width="0.0138%" height="15" fill="rgb(223,117,47)" fg:x="33834" fg:w="6"/><text x="78.0884%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.02%)</title><rect x="77.8361%" y="421" width="0.0184%" height="15" fill="rgb(244,107,35)" fg:x="33833" fg:w="8"/><text x="78.0861%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="77.8591%" y="421" width="0.0184%" height="15" fill="rgb(205,140,8)" fg:x="33843" fg:w="8"/><text x="78.1091%" y="431.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (105 samples, 0.24%)</title><rect x="77.6451%" y="437" width="0.2416%" height="15" fill="rgb(228,84,46)" fg:x="33750" fg:w="105"/><text x="77.8951%" y="447.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (8 samples, 0.02%)</title><rect x="77.9189%" y="405" width="0.0184%" height="15" fill="rgb(254,188,9)" fg:x="33869" fg:w="8"/><text x="78.1689%" y="415.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (12 samples, 0.03%)</title><rect x="77.9143%" y="421" width="0.0276%" height="15" fill="rgb(206,112,54)" fg:x="33867" fg:w="12"/><text x="78.1643%" y="431.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (30 samples, 0.07%)</title><rect x="77.8890%" y="437" width="0.0690%" height="15" fill="rgb(216,84,49)" fg:x="33856" fg:w="30"/><text x="78.1390%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="77.9419%" y="421" width="0.0161%" height="15" fill="rgb(214,194,35)" fg:x="33879" fg:w="7"/><text x="78.1919%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="77.9419%" y="405" width="0.0161%" height="15" fill="rgb(249,28,3)" fg:x="33879" fg:w="7"/><text x="78.1919%" y="415.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (291 samples, 0.67%)</title><rect x="77.9580%" y="437" width="0.6695%" height="15" fill="rgb(222,56,52)" fg:x="33886" fg:w="291"/><text x="78.2080%" y="447.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results::_{{closure}}::_{{closure}} (618 samples, 1.42%)</title><rect x="77.2333%" y="453" width="1.4218%" height="15" fill="rgb(245,217,50)" fg:x="33571" fg:w="618"/><text x="77.4833%" y="463.50"></text></g><g><title>block_verifier`core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="78.7172%" y="405" width="0.0207%" height="15" fill="rgb(213,201,24)" fg:x="34216" fg:w="9"/><text x="78.9672%" y="415.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="78.7471%" y="357" width="0.0184%" height="15" fill="rgb(248,116,28)" fg:x="34229" fg:w="8"/><text x="78.9971%" y="367.50"></text></g><g><title>block_verifier`&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="78.7425%" y="373" width="0.0276%" height="15" fill="rgb(219,72,43)" fg:x="34227" fg:w="12"/><text x="78.9925%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="78.7701%" y="373" width="0.0115%" height="15" fill="rgb(209,138,14)" fg:x="34239" fg:w="5"/><text x="79.0201%" y="383.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.05%)</title><rect x="78.7402%" y="389" width="0.0460%" height="15" fill="rgb(222,18,33)" fg:x="34226" fg:w="20"/><text x="78.9902%" y="399.50"></text></g><g><title>block_verifier`fuel_tx::transaction::Executable::input_asset_ids_unique (24 samples, 0.06%)</title><rect x="78.7379%" y="405" width="0.0552%" height="15" fill="rgb(213,199,7)" fg:x="34225" fg:w="24"/><text x="78.9879%" y="415.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (6 samples, 0.01%)</title><rect x="78.8138%" y="389" width="0.0138%" height="15" fill="rgb(250,110,10)" fg:x="34258" fg:w="6"/><text x="79.0638%" y="399.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.02%)</title><rect x="78.8276%" y="389" width="0.0161%" height="15" fill="rgb(248,123,6)" fg:x="34264" fg:w="7"/><text x="79.0776%" y="399.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="78.8276%" y="373" width="0.0161%" height="15" fill="rgb(206,91,31)" fg:x="34264" fg:w="7"/><text x="79.0776%" y="383.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (24 samples, 0.06%)</title><rect x="78.7931%" y="405" width="0.0552%" height="15" fill="rgb(211,154,13)" fg:x="34249" fg:w="24"/><text x="79.0431%" y="415.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="78.8966%" y="373" width="0.0276%" height="15" fill="rgb(225,148,7)" fg:x="34294" fg:w="12"/><text x="79.1466%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="78.9012%" y="357" width="0.0230%" height="15" fill="rgb(220,160,43)" fg:x="34296" fg:w="10"/><text x="79.1512%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="78.9012%" y="341" width="0.0230%" height="15" fill="rgb(213,52,39)" fg:x="34296" fg:w="10"/><text x="79.1512%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (8 samples, 0.02%)</title><rect x="78.9242%" y="373" width="0.0184%" height="15" fill="rgb(243,137,7)" fg:x="34306" fg:w="8"/><text x="79.1742%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.03%)</title><rect x="78.9495%" y="357" width="0.0253%" height="15" fill="rgb(230,79,13)" fg:x="34317" fg:w="11"/><text x="79.1995%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="78.9611%" y="341" width="0.0138%" height="15" fill="rgb(247,105,23)" fg:x="34322" fg:w="6"/><text x="79.2111%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (16 samples, 0.04%)</title><rect x="78.9426%" y="373" width="0.0368%" height="15" fill="rgb(223,179,41)" fg:x="34314" fg:w="16"/><text x="79.1926%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (17 samples, 0.04%)</title><rect x="78.9818%" y="373" width="0.0391%" height="15" fill="rgb(218,9,34)" fg:x="34331" fg:w="17"/><text x="79.2318%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="79.0301%" y="373" width="0.0138%" height="15" fill="rgb(222,106,8)" fg:x="34352" fg:w="6"/><text x="79.2801%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (82 samples, 0.19%)</title><rect x="78.8667%" y="389" width="0.1886%" height="15" fill="rgb(211,220,0)" fg:x="34281" fg:w="82"/><text x="79.1167%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.0554%" y="357" width="0.0115%" height="15" fill="rgb(229,52,16)" fg:x="34363" fg:w="5"/><text x="79.3054%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="79.0554%" y="373" width="0.0138%" height="15" fill="rgb(212,155,18)" fg:x="34363" fg:w="6"/><text x="79.3054%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="79.0554%" y="389" width="0.0161%" height="15" fill="rgb(242,21,14)" fg:x="34363" fg:w="7"/><text x="79.3054%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (227 samples, 0.52%)</title><rect x="79.0715%" y="389" width="0.5222%" height="15" fill="rgb(222,19,48)" fg:x="34370" fg:w="227"/><text x="79.3215%" y="399.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::script::_&lt;impl fuel_tx::transaction::metadata::Cacheable for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::precompute (329 samples, 0.76%)</title><rect x="78.8483%" y="405" width="0.7569%" height="15" fill="rgb(232,45,27)" fg:x="34273" fg:w="329"/><text x="79.0983%" y="415.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.02%)</title><rect x="79.6167%" y="389" width="0.0161%" height="15" fill="rgb(249,103,42)" fg:x="34607" fg:w="7"/><text x="79.8667%" y="399.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::next_duplicate (16 samples, 0.04%)</title><rect x="79.6052%" y="405" width="0.0368%" height="15" fill="rgb(246,81,33)" fg:x="34602" fg:w="16"/><text x="79.8552%" y="415.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::types::script::_&lt;impl fuel_vm::checked_transaction::IntoChecked for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::into_checked_basic (425 samples, 0.98%)</title><rect x="78.6873%" y="421" width="0.9778%" height="15" fill="rgb(252,33,42)" fg:x="34203" fg:w="425"/><text x="78.9373%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_vm::checked_transaction::IntoChecked&gt;::into_checked_basic (434 samples, 1.00%)</title><rect x="78.6689%" y="437" width="0.9985%" height="15" fill="rgb(209,212,41)" fg:x="34195" fg:w="434"/><text x="78.9189%" y="447.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (10 samples, 0.02%)</title><rect x="79.8928%" y="389" width="0.0230%" height="15" fill="rgb(207,154,6)" fg:x="34727" fg:w="10"/><text x="80.1428%" y="399.50"></text></g><g><title>block_verifier`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (5 samples, 0.01%)</title><rect x="79.9043%" y="373" width="0.0115%" height="15" fill="rgb(223,64,47)" fg:x="34732" fg:w="5"/><text x="80.1543%" y="383.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (86 samples, 0.20%)</title><rect x="79.7225%" y="405" width="0.1979%" height="15" fill="rgb(211,161,38)" fg:x="34653" fg:w="86"/><text x="79.9725%" y="415.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (27 samples, 0.06%)</title><rect x="79.9204%" y="405" width="0.0621%" height="15" fill="rgb(219,138,40)" fg:x="34739" fg:w="27"/><text x="80.1704%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.04%)</title><rect x="79.9434%" y="389" width="0.0391%" height="15" fill="rgb(241,228,46)" fg:x="34749" fg:w="17"/><text x="80.1934%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.03%)</title><rect x="79.9480%" y="373" width="0.0345%" height="15" fill="rgb(223,209,38)" fg:x="34751" fg:w="15"/><text x="80.1980%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="79.9710%" y="357" width="0.0115%" height="15" fill="rgb(236,164,45)" fg:x="34761" fg:w="5"/><text x="80.2210%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="79.9848%" y="341" width="0.0115%" height="15" fill="rgb(231,15,5)" fg:x="34767" fg:w="5"/><text x="80.2348%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (5 samples, 0.01%)</title><rect x="79.9848%" y="325" width="0.0115%" height="15" fill="rgb(252,35,15)" fg:x="34767" fg:w="5"/><text x="80.2348%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.01%)</title><rect x="79.9848%" y="309" width="0.0115%" height="15" fill="rgb(248,181,18)" fg:x="34767" fg:w="5"/><text x="80.2348%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="79.9848%" y="405" width="0.0138%" height="15" fill="rgb(233,39,42)" fg:x="34767" fg:w="6"/><text x="80.2348%" y="415.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="79.9848%" y="389" width="0.0138%" height="15" fill="rgb(238,110,33)" fg:x="34767" fg:w="6"/><text x="80.2348%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.01%)</title><rect x="79.9848%" y="373" width="0.0138%" height="15" fill="rgb(233,195,10)" fg:x="34767" fg:w="6"/><text x="80.2348%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.01%)</title><rect x="79.9848%" y="357" width="0.0138%" height="15" fill="rgb(254,105,3)" fg:x="34767" fg:w="6"/><text x="80.2348%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="80.0722%" y="373" width="0.0115%" height="15" fill="rgb(221,225,9)" fg:x="34805" fg:w="5"/><text x="80.3222%" y="383.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="80.0722%" y="357" width="0.0115%" height="15" fill="rgb(224,227,45)" fg:x="34805" fg:w="5"/><text x="80.3222%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.0883%" y="341" width="0.0115%" height="15" fill="rgb(229,198,43)" fg:x="34812" fg:w="5"/><text x="80.3383%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (15 samples, 0.03%)</title><rect x="80.0676%" y="389" width="0.0345%" height="15" fill="rgb(206,209,35)" fg:x="34803" fg:w="15"/><text x="80.3176%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.0860%" y="373" width="0.0161%" height="15" fill="rgb(245,195,53)" fg:x="34811" fg:w="7"/><text x="80.3360%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.0860%" y="357" width="0.0161%" height="15" fill="rgb(240,92,26)" fg:x="34811" fg:w="7"/><text x="80.3360%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 0.09%)</title><rect x="80.1160%" y="373" width="0.0943%" height="15" fill="rgb(207,40,23)" fg:x="34824" fg:w="41"/><text x="80.3660%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.08%)</title><rect x="80.1344%" y="357" width="0.0759%" height="15" fill="rgb(223,111,35)" fg:x="34832" fg:w="33"/><text x="80.3844%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30 samples, 0.07%)</title><rect x="80.1413%" y="341" width="0.0690%" height="15" fill="rgb(229,147,28)" fg:x="34835" fg:w="30"/><text x="80.3913%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.05%)</title><rect x="80.1643%" y="325" width="0.0460%" height="15" fill="rgb(211,29,28)" fg:x="34845" fg:w="20"/><text x="80.4143%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="80.1942%" y="309" width="0.0161%" height="15" fill="rgb(228,72,33)" fg:x="34858" fg:w="7"/><text x="80.4442%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (37 samples, 0.09%)</title><rect x="80.2103%" y="373" width="0.0851%" height="15" fill="rgb(205,214,31)" fg:x="34865" fg:w="37"/><text x="80.4603%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.08%)</title><rect x="80.2126%" y="357" width="0.0828%" height="15" fill="rgb(224,111,15)" fg:x="34866" fg:w="36"/><text x="80.4626%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.07%)</title><rect x="80.2287%" y="341" width="0.0667%" height="15" fill="rgb(253,21,26)" fg:x="34873" fg:w="29"/><text x="80.4787%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.05%)</title><rect x="80.2494%" y="325" width="0.0460%" height="15" fill="rgb(245,139,43)" fg:x="34882" fg:w="20"/><text x="80.4994%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="80.3046%" y="373" width="0.0299%" height="15" fill="rgb(252,170,7)" fg:x="34906" fg:w="13"/><text x="80.5546%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="80.3138%" y="357" width="0.0207%" height="15" fill="rgb(231,118,14)" fg:x="34910" fg:w="9"/><text x="80.5638%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="80.3207%" y="341" width="0.0138%" height="15" fill="rgb(238,83,0)" fg:x="34913" fg:w="6"/><text x="80.5707%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (103 samples, 0.24%)</title><rect x="80.1021%" y="389" width="0.2370%" height="15" fill="rgb(221,39,39)" fg:x="34818" fg:w="103"/><text x="80.3521%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (5 samples, 0.01%)</title><rect x="80.3391%" y="389" width="0.0115%" height="15" fill="rgb(222,119,46)" fg:x="34921" fg:w="5"/><text x="80.5891%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (5 samples, 0.01%)</title><rect x="80.4081%" y="357" width="0.0115%" height="15" fill="rgb(222,165,49)" fg:x="34951" fg:w="5"/><text x="80.6581%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="80.4426%" y="341" width="0.0115%" height="15" fill="rgb(219,113,52)" fg:x="34966" fg:w="5"/><text x="80.6926%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.08%)</title><rect x="80.3851%" y="373" width="0.0759%" height="15" fill="rgb(214,7,15)" fg:x="34941" fg:w="33"/><text x="80.6351%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.04%)</title><rect x="80.4196%" y="357" width="0.0414%" height="15" fill="rgb(235,32,4)" fg:x="34956" fg:w="18"/><text x="80.6696%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (44 samples, 0.10%)</title><rect x="80.3690%" y="389" width="0.1012%" height="15" fill="rgb(238,90,54)" fg:x="34934" fg:w="44"/><text x="80.6190%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (6 samples, 0.01%)</title><rect x="80.4794%" y="357" width="0.0138%" height="15" fill="rgb(213,208,19)" fg:x="34982" fg:w="6"/><text x="80.7294%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.05%)</title><rect x="80.5048%" y="357" width="0.0529%" height="15" fill="rgb(233,156,4)" fg:x="34993" fg:w="23"/><text x="80.7548%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.03%)</title><rect x="80.5232%" y="341" width="0.0345%" height="15" fill="rgb(207,194,5)" fg:x="35001" fg:w="15"/><text x="80.7732%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (39 samples, 0.09%)</title><rect x="80.4748%" y="373" width="0.0897%" height="15" fill="rgb(206,111,30)" fg:x="34980" fg:w="39"/><text x="80.7248%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="80.5738%" y="373" width="0.0276%" height="15" fill="rgb(243,70,54)" fg:x="35023" fg:w="12"/><text x="80.8238%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="80.5807%" y="357" width="0.0207%" height="15" fill="rgb(242,28,8)" fg:x="35026" fg:w="9"/><text x="80.8307%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_vm::storage::predicate::PredicateStorage&lt;&amp;fuel_core::graphql_api::database::ReadView&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (59 samples, 0.14%)</title><rect x="80.4702%" y="389" width="0.1357%" height="15" fill="rgb(219,106,18)" fg:x="34978" fg:w="59"/><text x="80.7202%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.01%)</title><rect x="80.6842%" y="325" width="0.0115%" height="15" fill="rgb(244,222,10)" fg:x="35071" fg:w="5"/><text x="80.9342%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (18 samples, 0.04%)</title><rect x="80.6658%" y="373" width="0.0414%" height="15" fill="rgb(236,179,52)" fg:x="35063" fg:w="18"/><text x="80.9158%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="80.6773%" y="357" width="0.0299%" height="15" fill="rgb(213,23,39)" fg:x="35068" fg:w="13"/><text x="80.9273%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="80.6773%" y="341" width="0.0299%" height="15" fill="rgb(238,48,10)" fg:x="35068" fg:w="13"/><text x="80.9273%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.6957%" y="325" width="0.0115%" height="15" fill="rgb(251,196,23)" fg:x="35076" fg:w="5"/><text x="80.9457%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.02%)</title><rect x="80.7325%" y="357" width="0.0184%" height="15" fill="rgb(250,152,24)" fg:x="35092" fg:w="8"/><text x="80.9825%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="80.7371%" y="341" width="0.0138%" height="15" fill="rgb(209,150,17)" fg:x="35094" fg:w="6"/><text x="80.9871%" y="351.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="80.7509%" y="357" width="0.0184%" height="15" fill="rgb(234,202,34)" fg:x="35100" fg:w="8"/><text x="81.0009%" y="367.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (7 samples, 0.02%)</title><rect x="80.7532%" y="341" width="0.0161%" height="15" fill="rgb(253,148,53)" fg:x="35101" fg:w="7"/><text x="81.0032%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.7532%" y="325" width="0.0161%" height="15" fill="rgb(218,129,16)" fg:x="35101" fg:w="7"/><text x="81.0032%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.7532%" y="309" width="0.0161%" height="15" fill="rgb(216,85,19)" fg:x="35101" fg:w="7"/><text x="81.0032%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.7578%" y="293" width="0.0115%" height="15" fill="rgb(235,228,7)" fg:x="35103" fg:w="5"/><text x="81.0078%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="80.7762%" y="357" width="0.0115%" height="15" fill="rgb(245,175,0)" fg:x="35111" fg:w="5"/><text x="81.0262%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (33 samples, 0.08%)</title><rect x="80.7279%" y="373" width="0.0759%" height="15" fill="rgb(208,168,36)" fg:x="35090" fg:w="33"/><text x="80.9779%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.7877%" y="357" width="0.0161%" height="15" fill="rgb(246,171,24)" fg:x="35116" fg:w="7"/><text x="81.0377%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.7877%" y="341" width="0.0161%" height="15" fill="rgb(215,142,24)" fg:x="35116" fg:w="7"/><text x="81.0377%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.7923%" y="325" width="0.0115%" height="15" fill="rgb(250,187,7)" fg:x="35118" fg:w="5"/><text x="81.0423%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.05%)</title><rect x="80.8199%" y="325" width="0.0483%" height="15" fill="rgb(228,66,33)" fg:x="35130" fg:w="21"/><text x="81.0699%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.05%)</title><rect x="80.8222%" y="309" width="0.0460%" height="15" fill="rgb(234,215,21)" fg:x="35131" fg:w="20"/><text x="81.0722%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="80.8475%" y="293" width="0.0207%" height="15" fill="rgb(222,191,20)" fg:x="35142" fg:w="9"/><text x="81.0975%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.06%)</title><rect x="80.8130%" y="341" width="0.0575%" height="15" fill="rgb(245,79,54)" fg:x="35127" fg:w="25"/><text x="81.0630%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="80.8774%" y="325" width="0.0299%" height="15" fill="rgb(240,10,37)" fg:x="35155" fg:w="13"/><text x="81.1274%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.03%)</title><rect x="80.8820%" y="309" width="0.0253%" height="15" fill="rgb(214,192,32)" fg:x="35157" fg:w="11"/><text x="81.1320%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.8959%" y="293" width="0.0115%" height="15" fill="rgb(209,36,54)" fg:x="35163" fg:w="5"/><text x="81.1459%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="80.8705%" y="341" width="0.0391%" height="15" fill="rgb(220,10,11)" fg:x="35152" fg:w="17"/><text x="81.1205%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.9189%" y="341" width="0.0161%" height="15" fill="rgb(221,106,17)" fg:x="35173" fg:w="7"/><text x="81.1689%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.9189%" y="325" width="0.0161%" height="15" fill="rgb(251,142,44)" fg:x="35173" fg:w="7"/><text x="81.1689%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (56 samples, 0.13%)</title><rect x="80.8107%" y="357" width="0.1288%" height="15" fill="rgb(238,13,15)" fg:x="35126" fg:w="56"/><text x="81.0607%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_vm::state::StateTransition&lt;Tx&gt; as core::convert::From&lt;fuel_vm::state::StateTransitionRef&lt;Tx&gt;&gt;&gt;::from (66 samples, 0.15%)</title><rect x="80.8038%" y="373" width="0.1518%" height="15" fill="rgb(208,107,27)" fg:x="35123" fg:w="66"/><text x="81.0538%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.9396%" y="357" width="0.0161%" height="15" fill="rgb(205,136,37)" fg:x="35182" fg:w="7"/><text x="81.1896%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.9396%" y="341" width="0.0161%" height="15" fill="rgb(250,205,27)" fg:x="35182" fg:w="7"/><text x="81.1896%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.9442%" y="325" width="0.0115%" height="15" fill="rgb(210,80,43)" fg:x="35184" fg:w="5"/><text x="81.1942%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="81.0086%" y="309" width="0.0115%" height="15" fill="rgb(247,160,36)" fg:x="35212" fg:w="5"/><text x="81.2586%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="80.9925%" y="325" width="0.0299%" height="15" fill="rgb(234,13,49)" fg:x="35205" fg:w="13"/><text x="81.2425%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (19 samples, 0.04%)</title><rect x="80.9833%" y="341" width="0.0437%" height="15" fill="rgb(234,122,0)" fg:x="35201" fg:w="19"/><text x="81.2333%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (26 samples, 0.06%)</title><rect x="81.0270%" y="341" width="0.0598%" height="15" fill="rgb(207,146,38)" fg:x="35220" fg:w="26"/><text x="81.2770%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (21 samples, 0.05%)</title><rect x="81.1926%" y="325" width="0.0483%" height="15" fill="rgb(207,177,25)" fg:x="35292" fg:w="21"/><text x="81.4426%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (19 samples, 0.04%)</title><rect x="81.3008%" y="309" width="0.0437%" height="15" fill="rgb(211,178,42)" fg:x="35339" fg:w="19"/><text x="81.5508%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (44 samples, 0.10%)</title><rect x="81.2501%" y="325" width="0.1012%" height="15" fill="rgb(230,69,54)" fg:x="35317" fg:w="44"/><text x="81.5001%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (118 samples, 0.27%)</title><rect x="81.0914%" y="341" width="0.2715%" height="15" fill="rgb(214,135,41)" fg:x="35248" fg:w="118"/><text x="81.3414%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (5 samples, 0.01%)</title><rect x="81.3514%" y="325" width="0.0115%" height="15" fill="rgb(237,67,25)" fg:x="35361" fg:w="5"/><text x="81.6014%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.02%)</title><rect x="81.3652%" y="341" width="0.0161%" height="15" fill="rgb(222,189,50)" fg:x="35367" fg:w="7"/><text x="81.6152%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (175 samples, 0.40%)</title><rect x="80.9810%" y="357" width="0.4026%" height="15" fill="rgb(245,148,34)" fg:x="35200" fg:w="175"/><text x="81.2310%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (5 samples, 0.01%)</title><rect x="81.4503%" y="341" width="0.0115%" height="15" fill="rgb(222,29,6)" fg:x="35404" fg:w="5"/><text x="81.7003%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="81.4825%" y="325" width="0.0184%" height="15" fill="rgb(221,189,43)" fg:x="35418" fg:w="8"/><text x="81.7325%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.04%)</title><rect x="81.4618%" y="341" width="0.0437%" height="15" fill="rgb(207,36,27)" fg:x="35409" fg:w="19"/><text x="81.7118%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (45 samples, 0.10%)</title><rect x="81.4043%" y="357" width="0.1035%" height="15" fill="rgb(217,90,24)" fg:x="35384" fg:w="45"/><text x="81.6543%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.01%)</title><rect x="81.5124%" y="357" width="0.0138%" height="15" fill="rgb(224,66,35)" fg:x="35431" fg:w="6"/><text x="81.7624%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_core_storage::vm_storage::VmStorage&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::key_value_view::KeyValueViewWrapper&lt;fuel_core_storage::column::Column&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (242 samples, 0.56%)</title><rect x="80.9764%" y="373" width="0.5567%" height="15" fill="rgb(221,13,50)" fg:x="35198" fg:w="242"/><text x="81.2264%" y="383.50"></text></g><g><title>block_verifier`core::fmt::write (7 samples, 0.02%)</title><rect x="81.5998%" y="277" width="0.0161%" height="15" fill="rgb(236,68,49)" fg:x="35469" fg:w="7"/><text x="81.8498%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="81.6159%" y="277" width="0.0184%" height="15" fill="rgb(229,146,28)" fg:x="35476" fg:w="8"/><text x="81.8659%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="81.6182%" y="261" width="0.0161%" height="15" fill="rgb(225,31,38)" fg:x="35477" fg:w="7"/><text x="81.8682%" y="271.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (25 samples, 0.06%)</title><rect x="81.5975%" y="293" width="0.0575%" height="15" fill="rgb(250,208,3)" fg:x="35468" fg:w="25"/><text x="81.8475%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="81.6343%" y="277" width="0.0207%" height="15" fill="rgb(246,54,23)" fg:x="35484" fg:w="9"/><text x="81.8843%" y="287.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (16 samples, 0.04%)</title><rect x="81.6573%" y="293" width="0.0368%" height="15" fill="rgb(243,76,11)" fg:x="35494" fg:w="16"/><text x="81.9073%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="81.6942%" y="293" width="0.0276%" height="15" fill="rgb(245,21,50)" fg:x="35510" fg:w="12"/><text x="81.9442%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="81.7011%" y="277" width="0.0207%" height="15" fill="rgb(228,9,43)" fg:x="35513" fg:w="9"/><text x="81.9511%" y="287.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (57 samples, 0.13%)</title><rect x="81.5975%" y="309" width="0.1311%" height="15" fill="rgb(208,100,47)" fg:x="35468" fg:w="57"/><text x="81.8475%" y="319.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9 samples, 0.02%)</title><rect x="81.8483%" y="197" width="0.0207%" height="15" fill="rgb(232,26,8)" fg:x="35577" fg:w="9"/><text x="82.0983%" y="207.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9 samples, 0.02%)</title><rect x="81.9610%" y="181" width="0.0207%" height="15" fill="rgb(216,166,38)" fg:x="35626" fg:w="9"/><text x="82.2110%" y="191.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (6 samples, 0.01%)</title><rect x="81.9817%" y="181" width="0.0138%" height="15" fill="rgb(251,202,51)" fg:x="35635" fg:w="6"/><text x="82.2317%" y="191.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (9 samples, 0.02%)</title><rect x="81.9955%" y="181" width="0.0207%" height="15" fill="rgb(254,216,34)" fg:x="35641" fg:w="9"/><text x="82.2455%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.05%)</title><rect x="82.0162%" y="181" width="0.0483%" height="15" fill="rgb(251,32,27)" fg:x="35650" fg:w="21"/><text x="82.2662%" y="191.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (109 samples, 0.25%)</title><rect x="81.8690%" y="197" width="0.2508%" height="15" fill="rgb(208,127,28)" fg:x="35586" fg:w="109"/><text x="82.1190%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (24 samples, 0.06%)</title><rect x="82.0646%" y="181" width="0.0552%" height="15" fill="rgb(224,137,22)" fg:x="35671" fg:w="24"/><text x="82.3146%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (152 samples, 0.35%)</title><rect x="81.7770%" y="213" width="0.3497%" height="15" fill="rgb(254,70,32)" fg:x="35546" fg:w="152"/><text x="82.0270%" y="223.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (18 samples, 0.04%)</title><rect x="82.1359%" y="213" width="0.0414%" height="15" fill="rgb(229,75,37)" fg:x="35702" fg:w="18"/><text x="82.3859%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (13 samples, 0.03%)</title><rect x="82.1474%" y="197" width="0.0299%" height="15" fill="rgb(252,64,23)" fg:x="35707" fg:w="13"/><text x="82.3974%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (11 samples, 0.03%)</title><rect x="82.1520%" y="181" width="0.0253%" height="15" fill="rgb(232,162,48)" fg:x="35709" fg:w="11"/><text x="82.4020%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (11 samples, 0.03%)</title><rect x="82.1520%" y="165" width="0.0253%" height="15" fill="rgb(246,160,12)" fg:x="35709" fg:w="11"/><text x="82.4020%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.03%)</title><rect x="82.1520%" y="149" width="0.0253%" height="15" fill="rgb(247,166,0)" fg:x="35709" fg:w="11"/><text x="82.4020%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.03%)</title><rect x="82.1520%" y="133" width="0.0253%" height="15" fill="rgb(249,219,21)" fg:x="35709" fg:w="11"/><text x="82.4020%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="82.1612%" y="117" width="0.0161%" height="15" fill="rgb(205,209,3)" fg:x="35713" fg:w="7"/><text x="82.4112%" y="127.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (176 samples, 0.40%)</title><rect x="81.7747%" y="229" width="0.4049%" height="15" fill="rgb(243,44,1)" fg:x="35545" fg:w="176"/><text x="82.0247%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (184 samples, 0.42%)</title><rect x="81.7655%" y="245" width="0.4233%" height="15" fill="rgb(206,159,16)" fg:x="35541" fg:w="184"/><text x="82.0155%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (201 samples, 0.46%)</title><rect x="81.7471%" y="261" width="0.4624%" height="15" fill="rgb(244,77,30)" fg:x="35533" fg:w="201"/><text x="81.9971%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.01%)</title><rect x="82.1957%" y="245" width="0.0138%" height="15" fill="rgb(218,69,12)" fg:x="35728" fg:w="6"/><text x="82.4457%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (207 samples, 0.48%)</title><rect x="81.7356%" y="277" width="0.4762%" height="15" fill="rgb(212,87,7)" fg:x="35528" fg:w="207"/><text x="81.9856%" y="287.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (10 samples, 0.02%)</title><rect x="82.2118%" y="277" width="0.0230%" height="15" fill="rgb(245,114,25)" fg:x="35735" fg:w="10"/><text x="82.4618%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="82.2118%" y="261" width="0.0230%" height="15" fill="rgb(210,61,42)" fg:x="35735" fg:w="10"/><text x="82.4618%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="82.2141%" y="245" width="0.0207%" height="15" fill="rgb(211,52,33)" fg:x="35736" fg:w="9"/><text x="82.4641%" y="255.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (219 samples, 0.50%)</title><rect x="81.7356%" y="293" width="0.5038%" height="15" fill="rgb(234,58,33)" fg:x="35528" fg:w="219"/><text x="81.9856%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="82.2440%" y="277" width="0.0276%" height="15" fill="rgb(220,115,36)" fg:x="35749" fg:w="12"/><text x="82.4940%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="82.2486%" y="261" width="0.0230%" height="15" fill="rgb(243,153,54)" fg:x="35751" fg:w="10"/><text x="82.4986%" y="271.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (16 samples, 0.04%)</title><rect x="82.2394%" y="293" width="0.0368%" height="15" fill="rgb(251,47,18)" fg:x="35747" fg:w="16"/><text x="82.4894%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="82.2854%" y="293" width="0.0184%" height="15" fill="rgb(242,102,42)" fg:x="35767" fg:w="8"/><text x="82.5354%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="82.2900%" y="277" width="0.0138%" height="15" fill="rgb(234,31,38)" fg:x="35769" fg:w="6"/><text x="82.5400%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="82.3038%" y="293" width="0.0276%" height="15" fill="rgb(221,117,51)" fg:x="35775" fg:w="12"/><text x="82.5538%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.03%)</title><rect x="82.3061%" y="277" width="0.0253%" height="15" fill="rgb(212,20,18)" fg:x="35776" fg:w="11"/><text x="82.5561%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="82.3130%" y="261" width="0.0184%" height="15" fill="rgb(245,133,36)" fg:x="35779" fg:w="8"/><text x="82.5630%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="82.3199%" y="245" width="0.0115%" height="15" fill="rgb(212,6,19)" fg:x="35782" fg:w="5"/><text x="82.5699%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (263 samples, 0.61%)</title><rect x="81.7287%" y="309" width="0.6051%" height="15" fill="rgb(218,1,36)" fg:x="35525" fg:w="263"/><text x="81.9787%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="82.3590%" y="293" width="0.0207%" height="15" fill="rgb(246,84,54)" fg:x="35799" fg:w="9"/><text x="82.6090%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.03%)</title><rect x="82.3567%" y="309" width="0.0253%" height="15" fill="rgb(242,110,6)" fg:x="35798" fg:w="11"/><text x="82.6067%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (361 samples, 0.83%)</title><rect x="81.5561%" y="325" width="0.8305%" height="15" fill="rgb(214,47,5)" fg:x="35450" fg:w="361"/><text x="81.8061%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (6 samples, 0.01%)</title><rect x="82.3866%" y="325" width="0.0138%" height="15" fill="rgb(218,159,25)" fg:x="35811" fg:w="6"/><text x="82.6366%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (32 samples, 0.07%)</title><rect x="82.4050%" y="309" width="0.0736%" height="15" fill="rgb(215,211,28)" fg:x="35819" fg:w="32"/><text x="82.6550%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (48 samples, 0.11%)</title><rect x="82.4004%" y="325" width="0.1104%" height="15" fill="rgb(238,59,32)" fg:x="35817" fg:w="48"/><text x="82.6504%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (14 samples, 0.03%)</title><rect x="82.4787%" y="309" width="0.0322%" height="15" fill="rgb(226,82,3)" fg:x="35851" fg:w="14"/><text x="82.7287%" y="319.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (11 samples, 0.03%)</title><rect x="82.5224%" y="325" width="0.0253%" height="15" fill="rgb(240,164,32)" fg:x="35870" fg:w="11"/><text x="82.7724%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="82.5523%" y="325" width="0.0299%" height="15" fill="rgb(232,46,7)" fg:x="35883" fg:w="13"/><text x="82.8023%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="82.5638%" y="309" width="0.0184%" height="15" fill="rgb(229,129,53)" fg:x="35888" fg:w="8"/><text x="82.8138%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (450 samples, 1.04%)</title><rect x="81.5538%" y="341" width="1.0353%" height="15" fill="rgb(234,188,29)" fg:x="35449" fg:w="450"/><text x="81.8038%" y="351.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::compute_inputs (457 samples, 1.05%)</title><rect x="81.5400%" y="373" width="1.0514%" height="15" fill="rgb(246,141,4)" fg:x="35443" fg:w="457"/><text x="81.7900%" y="383.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::get_coin_or_default (456 samples, 1.05%)</title><rect x="81.5423%" y="357" width="1.0491%" height="15" fill="rgb(229,23,39)" fg:x="35444" fg:w="456"/><text x="81.7923%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (16 samples, 0.04%)</title><rect x="82.6098%" y="341" width="0.0368%" height="15" fill="rgb(206,12,3)" fg:x="35908" fg:w="16"/><text x="82.8598%" y="351.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (19 samples, 0.04%)</title><rect x="82.6052%" y="357" width="0.0437%" height="15" fill="rgb(252,226,20)" fg:x="35906" fg:w="19"/><text x="82.8552%" y="367.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (26 samples, 0.06%)</title><rect x="82.5960%" y="373" width="0.0598%" height="15" fill="rgb(216,123,35)" fg:x="35902" fg:w="26"/><text x="82.8460%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (11 samples, 0.03%)</title><rect x="82.6742%" y="341" width="0.0253%" height="15" fill="rgb(212,68,40)" fg:x="35936" fg:w="11"/><text x="82.9242%" y="351.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (13 samples, 0.03%)</title><rect x="82.7018%" y="341" width="0.0299%" height="15" fill="rgb(254,125,32)" fg:x="35948" fg:w="13"/><text x="82.9518%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="82.7570%" y="293" width="0.0184%" height="15" fill="rgb(253,97,22)" fg:x="35972" fg:w="8"/><text x="83.0070%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="82.7593%" y="277" width="0.0161%" height="15" fill="rgb(241,101,14)" fg:x="35973" fg:w="7"/><text x="83.0093%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (10 samples, 0.02%)</title><rect x="82.7547%" y="309" width="0.0230%" height="15" fill="rgb(238,103,29)" fg:x="35971" fg:w="10"/><text x="83.0047%" y="319.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.06%)</title><rect x="82.7317%" y="341" width="0.0598%" height="15" fill="rgb(233,195,47)" fg:x="35961" fg:w="26"/><text x="82.9817%" y="351.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (20 samples, 0.05%)</title><rect x="82.7455%" y="325" width="0.0460%" height="15" fill="rgb(246,218,30)" fg:x="35967" fg:w="20"/><text x="82.9955%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.03%)</title><rect x="82.7938%" y="341" width="0.0253%" height="15" fill="rgb(219,145,47)" fg:x="35988" fg:w="11"/><text x="83.0438%" y="351.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (71 samples, 0.16%)</title><rect x="82.6581%" y="357" width="0.1633%" height="15" fill="rgb(243,12,26)" fg:x="35929" fg:w="71"/><text x="82.9081%" y="367.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::into_ready (78 samples, 0.18%)</title><rect x="82.6558%" y="373" width="0.1794%" height="15" fill="rgb(214,87,16)" fg:x="35928" fg:w="78"/><text x="82.9058%" y="383.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (10 samples, 0.02%)</title><rect x="82.8353%" y="357" width="0.0230%" height="15" fill="rgb(208,99,42)" fg:x="36006" fg:w="10"/><text x="83.0853%" y="367.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::ExecutableTransaction::update_outputs (12 samples, 0.03%)</title><rect x="82.8353%" y="373" width="0.0276%" height="15" fill="rgb(253,99,2)" fg:x="36006" fg:w="12"/><text x="83.0853%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="82.8698%" y="309" width="0.0138%" height="15" fill="rgb(220,168,23)" fg:x="36021" fg:w="6"/><text x="83.1198%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="82.8698%" y="325" width="0.0161%" height="15" fill="rgb(242,38,24)" fg:x="36021" fg:w="7"/><text x="83.1198%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="82.8859%" y="293" width="0.0115%" height="15" fill="rgb(225,182,9)" fg:x="36028" fg:w="5"/><text x="83.1359%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="82.8859%" y="309" width="0.0138%" height="15" fill="rgb(243,178,37)" fg:x="36028" fg:w="6"/><text x="83.1359%" y="319.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (60 samples, 0.14%)</title><rect x="82.8859%" y="325" width="0.1380%" height="15" fill="rgb(232,139,19)" fg:x="36028" fg:w="60"/><text x="83.1359%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (51 samples, 0.12%)</title><rect x="82.9066%" y="309" width="0.1173%" height="15" fill="rgb(225,201,24)" fg:x="36037" fg:w="51"/><text x="83.1566%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::ret (79 samples, 0.18%)</title><rect x="82.8629%" y="373" width="0.1817%" height="15" fill="rgb(221,47,46)" fg:x="36018" fg:w="79"/><text x="83.1129%" y="383.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (79 samples, 0.18%)</title><rect x="82.8629%" y="357" width="0.1817%" height="15" fill="rgb(249,23,13)" fg:x="36018" fg:w="79"/><text x="83.1129%" y="367.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (78 samples, 0.18%)</title><rect x="82.8652%" y="341" width="0.1794%" height="15" fill="rgb(219,9,5)" fg:x="36019" fg:w="78"/><text x="83.1152%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="83.0262%" y="325" width="0.0184%" height="15" fill="rgb(254,171,16)" fg:x="36089" fg:w="8"/><text x="83.2762%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="83.0262%" y="309" width="0.0184%" height="15" fill="rgb(230,171,20)" fg:x="36089" fg:w="8"/><text x="83.2762%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="83.0308%" y="293" width="0.0138%" height="15" fill="rgb(210,71,41)" fg:x="36091" fg:w="6"/><text x="83.2808%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (79 samples, 0.18%)</title><rect x="83.0722%" y="341" width="0.1817%" height="15" fill="rgb(206,173,20)" fg:x="36109" fg:w="79"/><text x="83.3222%" y="351.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (84 samples, 0.19%)</title><rect x="83.0653%" y="357" width="0.1933%" height="15" fill="rgb(233,88,34)" fg:x="36106" fg:w="84"/><text x="83.3153%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="83.2586%" y="357" width="0.0230%" height="15" fill="rgb(223,209,46)" fg:x="36190" fg:w="10"/><text x="83.5086%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="83.2655%" y="341" width="0.0161%" height="15" fill="rgb(250,43,18)" fg:x="36193" fg:w="7"/><text x="83.5155%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (100 samples, 0.23%)</title><rect x="83.0561%" y="373" width="0.2301%" height="15" fill="rgb(208,13,10)" fg:x="36102" fg:w="100"/><text x="83.3061%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (7 samples, 0.02%)</title><rect x="83.2885%" y="373" width="0.0161%" height="15" fill="rgb(212,200,36)" fg:x="36203" fg:w="7"/><text x="83.5385%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="83.3046%" y="373" width="0.0115%" height="15" fill="rgb(225,90,30)" fg:x="36210" fg:w="5"/><text x="83.5546%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (5 samples, 0.01%)</title><rect x="83.3368%" y="357" width="0.0115%" height="15" fill="rgb(236,182,39)" fg:x="36224" fg:w="5"/><text x="83.5868%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.04%)</title><rect x="83.3529%" y="357" width="0.0437%" height="15" fill="rgb(212,144,35)" fg:x="36231" fg:w="19"/><text x="83.6029%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="83.3759%" y="341" width="0.0207%" height="15" fill="rgb(228,63,44)" fg:x="36241" fg:w="9"/><text x="83.6259%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (34 samples, 0.08%)</title><rect x="83.3207%" y="373" width="0.0782%" height="15" fill="rgb(228,109,6)" fg:x="36217" fg:w="34"/><text x="83.5707%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="83.3989%" y="373" width="0.0345%" height="15" fill="rgb(238,117,24)" fg:x="36251" fg:w="15"/><text x="83.6489%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.03%)</title><rect x="83.3989%" y="357" width="0.0345%" height="15" fill="rgb(242,26,26)" fg:x="36251" fg:w="15"/><text x="83.6489%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="83.4104%" y="341" width="0.0230%" height="15" fill="rgb(221,92,48)" fg:x="36256" fg:w="10"/><text x="83.6604%" y="351.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::attempt_tx_execution_with_vm (1,236 samples, 2.84%)</title><rect x="80.6060%" y="389" width="2.8435%" height="15" fill="rgb(209,209,32)" fg:x="35037" fg:w="1236"/><text x="80.8560%" y="399.50">bl..</text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="83.4380%" y="373" width="0.0115%" height="15" fill="rgb(221,70,22)" fg:x="36268" fg:w="5"/><text x="83.6880%" y="383.50"></text></g><g><title>block_verifier`core::fmt::write (6 samples, 0.01%)</title><rect x="83.5231%" y="309" width="0.0138%" height="15" fill="rgb(248,145,5)" fg:x="36305" fg:w="6"/><text x="83.7731%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="83.5369%" y="309" width="0.0322%" height="15" fill="rgb(226,116,26)" fg:x="36311" fg:w="14"/><text x="83.7869%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.03%)</title><rect x="83.5369%" y="293" width="0.0322%" height="15" fill="rgb(244,5,17)" fg:x="36311" fg:w="14"/><text x="83.7869%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="83.5461%" y="277" width="0.0230%" height="15" fill="rgb(252,159,33)" fg:x="36315" fg:w="10"/><text x="83.7961%" y="287.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (25 samples, 0.06%)</title><rect x="83.5185%" y="325" width="0.0575%" height="15" fill="rgb(206,71,0)" fg:x="36303" fg:w="25"/><text x="83.7685%" y="335.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (26 samples, 0.06%)</title><rect x="83.5760%" y="325" width="0.0598%" height="15" fill="rgb(233,118,54)" fg:x="36328" fg:w="26"/><text x="83.8260%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="83.6359%" y="325" width="0.0299%" height="15" fill="rgb(234,83,48)" fg:x="36354" fg:w="13"/><text x="83.8859%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="83.6451%" y="309" width="0.0207%" height="15" fill="rgb(228,3,54)" fg:x="36358" fg:w="9"/><text x="83.8951%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (72 samples, 0.17%)</title><rect x="83.5139%" y="341" width="0.1656%" height="15" fill="rgb(226,155,13)" fg:x="36301" fg:w="72"/><text x="83.7639%" y="351.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.02%)</title><rect x="83.8383%" y="229" width="0.0184%" height="15" fill="rgb(241,28,37)" fg:x="36442" fg:w="8"/><text x="84.0883%" y="239.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (6 samples, 0.01%)</title><rect x="83.9925%" y="213" width="0.0138%" height="15" fill="rgb(233,93,10)" fg:x="36509" fg:w="6"/><text x="84.2425%" y="223.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (8 samples, 0.02%)</title><rect x="84.0063%" y="213" width="0.0184%" height="15" fill="rgb(225,113,19)" fg:x="36515" fg:w="8"/><text x="84.2563%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (26 samples, 0.06%)</title><rect x="84.0339%" y="213" width="0.0598%" height="15" fill="rgb(241,2,18)" fg:x="36527" fg:w="26"/><text x="84.2839%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (185 samples, 0.43%)</title><rect x="83.7141%" y="245" width="0.4256%" height="15" fill="rgb(228,207,21)" fg:x="36388" fg:w="185"/><text x="83.9641%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (123 samples, 0.28%)</title><rect x="83.8567%" y="229" width="0.2830%" height="15" fill="rgb(213,211,35)" fg:x="36450" fg:w="123"/><text x="84.1067%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (20 samples, 0.05%)</title><rect x="84.0937%" y="213" width="0.0460%" height="15" fill="rgb(209,83,10)" fg:x="36553" fg:w="20"/><text x="84.3437%" y="223.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (7 samples, 0.02%)</title><rect x="84.1397%" y="245" width="0.0161%" height="15" fill="rgb(209,164,1)" fg:x="36573" fg:w="7"/><text x="84.3897%" y="255.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (193 samples, 0.44%)</title><rect x="83.7141%" y="261" width="0.4440%" height="15" fill="rgb(213,184,43)" fg:x="36388" fg:w="193"/><text x="83.9641%" y="271.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (198 samples, 0.46%)</title><rect x="83.7072%" y="277" width="0.4555%" height="15" fill="rgb(231,61,34)" fg:x="36385" fg:w="198"/><text x="83.9572%" y="287.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.03%)</title><rect x="84.1650%" y="277" width="0.0276%" height="15" fill="rgb(235,75,3)" fg:x="36584" fg:w="12"/><text x="84.4150%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (226 samples, 0.52%)</title><rect x="83.6842%" y="293" width="0.5199%" height="15" fill="rgb(220,106,47)" fg:x="36375" fg:w="226"/><text x="83.9342%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (232 samples, 0.53%)</title><rect x="83.6819%" y="309" width="0.5337%" height="15" fill="rgb(210,196,33)" fg:x="36374" fg:w="232"/><text x="83.9319%" y="319.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (12 samples, 0.03%)</title><rect x="84.2156%" y="309" width="0.0276%" height="15" fill="rgb(229,154,42)" fg:x="36606" fg:w="12"/><text x="84.4656%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="84.2156%" y="293" width="0.0276%" height="15" fill="rgb(228,114,26)" fg:x="36606" fg:w="12"/><text x="84.4656%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="84.2202%" y="277" width="0.0230%" height="15" fill="rgb(208,144,1)" fg:x="36608" fg:w="10"/><text x="84.4702%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="84.2317%" y="261" width="0.0115%" height="15" fill="rgb(239,112,37)" fg:x="36613" fg:w="5"/><text x="84.4817%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="84.2547%" y="293" width="0.0184%" height="15" fill="rgb(210,96,50)" fg:x="36623" fg:w="8"/><text x="84.5047%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="84.2455%" y="309" width="0.0322%" height="15" fill="rgb(222,178,2)" fg:x="36619" fg:w="14"/><text x="84.4955%" y="319.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (260 samples, 0.60%)</title><rect x="83.6819%" y="325" width="0.5982%" height="15" fill="rgb(226,74,18)" fg:x="36374" fg:w="260"/><text x="83.9319%" y="335.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (265 samples, 0.61%)</title><rect x="83.6796%" y="341" width="0.6097%" height="15" fill="rgb(225,67,54)" fg:x="36373" fg:w="265"/><text x="83.9296%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (356 samples, 0.82%)</title><rect x="83.4771%" y="357" width="0.8190%" height="15" fill="rgb(251,92,32)" fg:x="36285" fg:w="356"/><text x="83.7271%" y="367.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (65 samples, 0.15%)</title><rect x="84.3283%" y="341" width="0.1495%" height="15" fill="rgb(228,149,22)" fg:x="36655" fg:w="65"/><text x="84.5783%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="84.4779%" y="341" width="0.0184%" height="15" fill="rgb(243,54,13)" fg:x="36720" fg:w="8"/><text x="84.7279%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="84.4779%" y="325" width="0.0184%" height="15" fill="rgb(243,180,28)" fg:x="36720" fg:w="8"/><text x="84.7279%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="84.4848%" y="309" width="0.0115%" height="15" fill="rgb(208,167,24)" fg:x="36723" fg:w="5"/><text x="84.7348%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (109 samples, 0.25%)</title><rect x="84.2961%" y="357" width="0.2508%" height="15" fill="rgb(245,73,45)" fg:x="36641" fg:w="109"/><text x="84.5461%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.05%)</title><rect x="84.4963%" y="341" width="0.0506%" height="15" fill="rgb(237,203,48)" fg:x="36728" fg:w="22"/><text x="84.7463%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.05%)</title><rect x="84.6481%" y="261" width="0.0483%" height="15" fill="rgb(211,197,16)" fg:x="36794" fg:w="21"/><text x="84.8981%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.03%)</title><rect x="84.6711%" y="245" width="0.0253%" height="15" fill="rgb(243,99,51)" fg:x="36804" fg:w="11"/><text x="84.9211%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.05%)</title><rect x="84.6964%" y="261" width="0.0529%" height="15" fill="rgb(215,123,29)" fg:x="36815" fg:w="23"/><text x="84.9464%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.04%)</title><rect x="84.7056%" y="245" width="0.0437%" height="15" fill="rgb(239,186,37)" fg:x="36819" fg:w="19"/><text x="84.9556%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.03%)</title><rect x="84.7171%" y="229" width="0.0322%" height="15" fill="rgb(252,136,39)" fg:x="36824" fg:w="14"/><text x="84.9671%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="84.7378%" y="213" width="0.0115%" height="15" fill="rgb(223,213,32)" fg:x="36833" fg:w="5"/><text x="84.9878%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.01%)</title><rect x="84.7494%" y="261" width="0.0138%" height="15" fill="rgb(233,115,5)" fg:x="36838" fg:w="6"/><text x="84.9994%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="84.7517%" y="245" width="0.0115%" height="15" fill="rgb(207,226,44)" fg:x="36839" fg:w="5"/><text x="85.0017%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (13 samples, 0.03%)</title><rect x="84.7655%" y="261" width="0.0299%" height="15" fill="rgb(208,126,0)" fg:x="36845" fg:w="13"/><text x="85.0155%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (67 samples, 0.15%)</title><rect x="84.6435%" y="277" width="0.1541%" height="15" fill="rgb(244,66,21)" fg:x="36792" fg:w="67"/><text x="84.8935%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (77 samples, 0.18%)</title><rect x="84.6320%" y="293" width="0.1771%" height="15" fill="rgb(222,97,12)" fg:x="36787" fg:w="77"/><text x="84.8820%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (81 samples, 0.19%)</title><rect x="84.6274%" y="309" width="0.1863%" height="15" fill="rgb(219,213,19)" fg:x="36785" fg:w="81"/><text x="84.8774%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (92 samples, 0.21%)</title><rect x="84.6067%" y="341" width="0.2117%" height="15" fill="rgb(252,169,30)" fg:x="36776" fg:w="92"/><text x="84.8567%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (88 samples, 0.20%)</title><rect x="84.6159%" y="325" width="0.2025%" height="15" fill="rgb(206,32,51)" fg:x="36780" fg:w="88"/><text x="84.8659%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="84.8184%" y="309" width="0.0161%" height="15" fill="rgb(250,172,42)" fg:x="36868" fg:w="7"/><text x="85.0684%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="84.8230%" y="293" width="0.0115%" height="15" fill="rgb(209,34,43)" fg:x="36870" fg:w="5"/><text x="85.0730%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="84.8184%" y="325" width="0.0184%" height="15" fill="rgb(223,11,35)" fg:x="36868" fg:w="8"/><text x="85.0684%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.02%)</title><rect x="84.8184%" y="341" width="0.0207%" height="15" fill="rgb(251,219,26)" fg:x="36868" fg:w="9"/><text x="85.0684%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="84.8414%" y="341" width="0.0138%" height="15" fill="rgb(231,119,3)" fg:x="36878" fg:w="6"/><text x="85.0914%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (134 samples, 0.31%)</title><rect x="84.5538%" y="357" width="0.3083%" height="15" fill="rgb(216,97,11)" fg:x="36753" fg:w="134"/><text x="84.8038%" y="367.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::insert_coin (616 samples, 1.42%)</title><rect x="83.4610%" y="373" width="1.4172%" height="15" fill="rgb(223,59,9)" fg:x="36278" fg:w="616"/><text x="83.7110%" y="383.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::persist_output_utxos (621 samples, 1.43%)</title><rect x="83.4518%" y="389" width="1.4287%" height="15" fill="rgb(233,93,31)" fg:x="36274" fg:w="621"/><text x="83.7018%" y="399.50"></text></g><g><title>block_verifier`core::fmt::write (8 samples, 0.02%)</title><rect x="84.9426%" y="325" width="0.0184%" height="15" fill="rgb(239,81,33)" fg:x="36922" fg:w="8"/><text x="85.1926%" y="335.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (5 samples, 0.01%)</title><rect x="84.9495%" y="309" width="0.0115%" height="15" fill="rgb(213,120,34)" fg:x="36925" fg:w="5"/><text x="85.1995%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="84.9610%" y="325" width="0.0184%" height="15" fill="rgb(243,49,53)" fg:x="36930" fg:w="8"/><text x="85.2110%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="84.9633%" y="309" width="0.0161%" height="15" fill="rgb(247,216,33)" fg:x="36931" fg:w="7"/><text x="85.2133%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="84.9679%" y="293" width="0.0115%" height="15" fill="rgb(226,26,14)" fg:x="36933" fg:w="5"/><text x="85.2179%" y="303.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (23 samples, 0.05%)</title><rect x="84.9380%" y="341" width="0.0529%" height="15" fill="rgb(215,49,53)" fg:x="36920" fg:w="23"/><text x="85.1880%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="84.9794%" y="325" width="0.0115%" height="15" fill="rgb(245,162,40)" fg:x="36938" fg:w="5"/><text x="85.2294%" y="335.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (17 samples, 0.04%)</title><rect x="84.9909%" y="341" width="0.0391%" height="15" fill="rgb(229,68,17)" fg:x="36943" fg:w="17"/><text x="85.2409%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="85.0346%" y="341" width="0.0322%" height="15" fill="rgb(213,182,10)" fg:x="36962" fg:w="14"/><text x="85.2846%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="85.0438%" y="325" width="0.0230%" height="15" fill="rgb(245,125,30)" fg:x="36966" fg:w="10"/><text x="85.2938%" y="335.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (59 samples, 0.14%)</title><rect x="84.9357%" y="357" width="0.1357%" height="15" fill="rgb(232,202,2)" fg:x="36919" fg:w="59"/><text x="85.1857%" y="367.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (5 samples, 0.01%)</title><rect x="85.1911%" y="245" width="0.0115%" height="15" fill="rgb(237,140,51)" fg:x="37030" fg:w="5"/><text x="85.4411%" y="255.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (6 samples, 0.01%)</title><rect x="85.2900%" y="229" width="0.0138%" height="15" fill="rgb(236,157,25)" fg:x="37073" fg:w="6"/><text x="85.5400%" y="239.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (10 samples, 0.02%)</title><rect x="85.3038%" y="229" width="0.0230%" height="15" fill="rgb(219,209,0)" fg:x="37079" fg:w="10"/><text x="85.5538%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.04%)</title><rect x="85.3314%" y="229" width="0.0368%" height="15" fill="rgb(240,116,54)" fg:x="37091" fg:w="16"/><text x="85.5814%" y="239.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (132 samples, 0.30%)</title><rect x="85.1151%" y="261" width="0.3037%" height="15" fill="rgb(216,10,36)" fg:x="36997" fg:w="132"/><text x="85.3651%" y="271.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (94 samples, 0.22%)</title><rect x="85.2026%" y="245" width="0.2163%" height="15" fill="rgb(222,72,44)" fg:x="37035" fg:w="94"/><text x="85.4526%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.05%)</title><rect x="85.3682%" y="229" width="0.0506%" height="15" fill="rgb(232,159,9)" fg:x="37107" fg:w="22"/><text x="85.6182%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.04%)</title><rect x="85.4349%" y="197" width="0.0368%" height="15" fill="rgb(210,39,32)" fg:x="37136" fg:w="16"/><text x="85.6849%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.03%)</title><rect x="85.4395%" y="181" width="0.0322%" height="15" fill="rgb(216,194,45)" fg:x="37138" fg:w="14"/><text x="85.6895%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="85.4579%" y="165" width="0.0138%" height="15" fill="rgb(218,18,35)" fg:x="37146" fg:w="6"/><text x="85.7079%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (18 samples, 0.04%)</title><rect x="85.4349%" y="213" width="0.0414%" height="15" fill="rgb(207,83,51)" fg:x="37136" fg:w="18"/><text x="85.6849%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (19 samples, 0.04%)</title><rect x="85.4349%" y="229" width="0.0437%" height="15" fill="rgb(225,63,43)" fg:x="37136" fg:w="19"/><text x="85.6849%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (20 samples, 0.05%)</title><rect x="85.4349%" y="245" width="0.0460%" height="15" fill="rgb(207,57,36)" fg:x="37136" fg:w="20"/><text x="85.6849%" y="255.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (25 samples, 0.06%)</title><rect x="85.4257%" y="261" width="0.0575%" height="15" fill="rgb(216,99,33)" fg:x="37132" fg:w="25"/><text x="85.6757%" y="271.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (161 samples, 0.37%)</title><rect x="85.1151%" y="277" width="0.3704%" height="15" fill="rgb(225,42,16)" fg:x="36997" fg:w="161"/><text x="85.3651%" y="287.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (167 samples, 0.38%)</title><rect x="85.1105%" y="293" width="0.3842%" height="15" fill="rgb(220,201,45)" fg:x="36995" fg:w="167"/><text x="85.3605%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (181 samples, 0.42%)</title><rect x="85.0875%" y="325" width="0.4164%" height="15" fill="rgb(225,33,4)" fg:x="36985" fg:w="181"/><text x="85.3375%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (181 samples, 0.42%)</title><rect x="85.0875%" y="309" width="0.4164%" height="15" fill="rgb(224,33,50)" fg:x="36985" fg:w="181"/><text x="85.3375%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.5039%" y="309" width="0.0115%" height="15" fill="rgb(246,198,51)" fg:x="37166" fg:w="5"/><text x="85.7539%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.5039%" y="293" width="0.0115%" height="15" fill="rgb(205,22,4)" fg:x="37166" fg:w="5"/><text x="85.7539%" y="303.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.02%)</title><rect x="85.5039%" y="325" width="0.0161%" height="15" fill="rgb(206,3,8)" fg:x="37166" fg:w="7"/><text x="85.7539%" y="335.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (191 samples, 0.44%)</title><rect x="85.0875%" y="341" width="0.4394%" height="15" fill="rgb(251,23,15)" fg:x="36985" fg:w="191"/><text x="85.3375%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="85.5293%" y="325" width="0.0161%" height="15" fill="rgb(252,88,28)" fg:x="37177" fg:w="7"/><text x="85.7793%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="85.5339%" y="309" width="0.0115%" height="15" fill="rgb(212,127,14)" fg:x="37179" fg:w="5"/><text x="85.7839%" y="319.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (9 samples, 0.02%)</title><rect x="85.5270%" y="341" width="0.0207%" height="15" fill="rgb(247,145,37)" fg:x="37176" fg:w="9"/><text x="85.7770%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.03%)</title><rect x="85.5592%" y="341" width="0.0253%" height="15" fill="rgb(209,117,53)" fg:x="37190" fg:w="11"/><text x="85.8092%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="85.5661%" y="325" width="0.0184%" height="15" fill="rgb(212,90,42)" fg:x="37193" fg:w="8"/><text x="85.8161%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.5845%" y="341" width="0.0138%" height="15" fill="rgb(218,164,37)" fg:x="37201" fg:w="6"/><text x="85.8345%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.5868%" y="325" width="0.0115%" height="15" fill="rgb(246,65,34)" fg:x="37202" fg:w="5"/><text x="85.8368%" y="335.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (230 samples, 0.53%)</title><rect x="85.0714%" y="357" width="0.5291%" height="15" fill="rgb(231,100,33)" fg:x="36978" fg:w="230"/><text x="85.3214%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (322 samples, 0.74%)</title><rect x="84.8989%" y="373" width="0.7408%" height="15" fill="rgb(228,126,14)" fg:x="36903" fg:w="322"/><text x="85.1489%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.6213%" y="357" width="0.0184%" height="15" fill="rgb(215,173,21)" fg:x="37217" fg:w="8"/><text x="85.8713%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.6236%" y="341" width="0.0161%" height="15" fill="rgb(210,6,40)" fg:x="37218" fg:w="7"/><text x="85.8736%" y="351.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.02%)</title><rect x="85.6650%" y="357" width="0.0207%" height="15" fill="rgb(212,48,18)" fg:x="37236" fg:w="9"/><text x="85.9150%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.6673%" y="341" width="0.0184%" height="15" fill="rgb(230,214,11)" fg:x="37237" fg:w="8"/><text x="85.9173%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.6696%" y="325" width="0.0161%" height="15" fill="rgb(254,105,39)" fg:x="37238" fg:w="7"/><text x="85.9196%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (19 samples, 0.04%)</title><rect x="85.6903%" y="357" width="0.0437%" height="15" fill="rgb(245,158,5)" fg:x="37247" fg:w="19"/><text x="85.9403%" y="367.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="85.7340%" y="357" width="0.0115%" height="15" fill="rgb(249,208,11)" fg:x="37266" fg:w="5"/><text x="85.9840%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.7478%" y="357" width="0.0207%" height="15" fill="rgb(210,39,28)" fg:x="37272" fg:w="9"/><text x="85.9978%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.7547%" y="341" width="0.0138%" height="15" fill="rgb(211,56,53)" fg:x="37275" fg:w="6"/><text x="86.0047%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="85.7685%" y="357" width="0.0115%" height="15" fill="rgb(226,201,30)" fg:x="37281" fg:w="5"/><text x="86.0185%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::take (58 samples, 0.13%)</title><rect x="85.6489%" y="373" width="0.1334%" height="15" fill="rgb(239,101,34)" fg:x="37229" fg:w="58"/><text x="85.8989%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (11 samples, 0.03%)</title><rect x="85.7846%" y="293" width="0.0253%" height="15" fill="rgb(226,209,5)" fg:x="37288" fg:w="11"/><text x="86.0346%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.03%)</title><rect x="85.7846%" y="277" width="0.0253%" height="15" fill="rgb(250,105,47)" fg:x="37288" fg:w="11"/><text x="86.0346%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (15 samples, 0.03%)</title><rect x="85.7823%" y="309" width="0.0345%" height="15" fill="rgb(230,72,3)" fg:x="37287" fg:w="15"/><text x="86.0323%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16 samples, 0.04%)</title><rect x="85.7823%" y="373" width="0.0368%" height="15" fill="rgb(232,218,39)" fg:x="37287" fg:w="16"/><text x="86.0323%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (16 samples, 0.04%)</title><rect x="85.7823%" y="357" width="0.0368%" height="15" fill="rgb(248,166,6)" fg:x="37287" fg:w="16"/><text x="86.0323%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (16 samples, 0.04%)</title><rect x="85.7823%" y="341" width="0.0368%" height="15" fill="rgb(247,89,20)" fg:x="37287" fg:w="16"/><text x="86.0323%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (16 samples, 0.04%)</title><rect x="85.7823%" y="325" width="0.0368%" height="15" fill="rgb(248,130,54)" fg:x="37287" fg:w="16"/><text x="86.0323%" y="335.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (17 samples, 0.04%)</title><rect x="85.8214%" y="373" width="0.0391%" height="15" fill="rgb(234,196,4)" fg:x="37304" fg:w="17"/><text x="86.0714%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="85.8674%" y="373" width="0.0161%" height="15" fill="rgb(250,143,31)" fg:x="37324" fg:w="7"/><text x="86.1174%" y="383.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::spend_input_utxos (438 samples, 1.01%)</title><rect x="84.8805%" y="389" width="1.0077%" height="15" fill="rgb(211,110,34)" fg:x="36895" fg:w="438"/><text x="85.1305%" y="399.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (12 samples, 0.03%)</title><rect x="85.9388%" y="325" width="0.0276%" height="15" fill="rgb(215,124,48)" fg:x="37355" fg:w="12"/><text x="86.1888%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.03%)</title><rect x="85.9411%" y="309" width="0.0253%" height="15" fill="rgb(216,46,13)" fg:x="37356" fg:w="11"/><text x="86.1911%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.9457%" y="293" width="0.0207%" height="15" fill="rgb(205,184,25)" fg:x="37358" fg:w="9"/><text x="86.1957%" y="303.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (16 samples, 0.04%)</title><rect x="85.9319%" y="357" width="0.0368%" height="15" fill="rgb(228,1,10)" fg:x="37352" fg:w="16"/><text x="86.1819%" y="367.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.03%)</title><rect x="85.9365%" y="341" width="0.0322%" height="15" fill="rgb(213,116,27)" fg:x="37354" fg:w="14"/><text x="86.1865%" y="351.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (37 samples, 0.09%)</title><rect x="85.9065%" y="373" width="0.0851%" height="15" fill="rgb(241,95,50)" fg:x="37341" fg:w="37"/><text x="86.1565%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="85.9733%" y="357" width="0.0184%" height="15" fill="rgb(238,48,32)" fg:x="37370" fg:w="8"/><text x="86.2233%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="85.9779%" y="341" width="0.0138%" height="15" fill="rgb(235,113,49)" fg:x="37372" fg:w="6"/><text x="86.2279%" y="351.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::update_execution_data (51 samples, 0.12%)</title><rect x="85.8881%" y="389" width="0.1173%" height="15" fill="rgb(205,127,43)" fg:x="37333" fg:w="51"/><text x="86.1381%" y="399.50"></text></g><g><title>block_verifier`core::fmt::write (7 samples, 0.02%)</title><rect x="86.0446%" y="309" width="0.0161%" height="15" fill="rgb(250,162,2)" fg:x="37401" fg:w="7"/><text x="86.2946%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="86.0607%" y="309" width="0.0138%" height="15" fill="rgb(220,13,41)" fg:x="37408" fg:w="6"/><text x="86.3107%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="86.0607%" y="293" width="0.0138%" height="15" fill="rgb(249,221,25)" fg:x="37408" fg:w="6"/><text x="86.3107%" y="303.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (20 samples, 0.05%)</title><rect x="86.0423%" y="325" width="0.0460%" height="15" fill="rgb(215,208,19)" fg:x="37400" fg:w="20"/><text x="86.2923%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="86.0745%" y="309" width="0.0138%" height="15" fill="rgb(236,175,2)" fg:x="37414" fg:w="6"/><text x="86.3245%" y="319.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (16 samples, 0.04%)</title><rect x="86.0883%" y="325" width="0.0368%" height="15" fill="rgb(241,52,2)" fg:x="37420" fg:w="16"/><text x="86.3383%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="86.1297%" y="325" width="0.0207%" height="15" fill="rgb(248,140,14)" fg:x="37438" fg:w="9"/><text x="86.3797%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="86.1389%" y="309" width="0.0115%" height="15" fill="rgb(253,22,42)" fg:x="37442" fg:w="5"/><text x="86.3889%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (50 samples, 0.12%)</title><rect x="86.0423%" y="341" width="0.1150%" height="15" fill="rgb(234,61,47)" fg:x="37400" fg:w="50"/><text x="86.2923%" y="351.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (11 samples, 0.03%)</title><rect x="86.4035%" y="229" width="0.0253%" height="15" fill="rgb(208,226,15)" fg:x="37557" fg:w="11"/><text x="86.6535%" y="239.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (7 samples, 0.02%)</title><rect x="86.6105%" y="213" width="0.0161%" height="15" fill="rgb(217,221,4)" fg:x="37647" fg:w="7"/><text x="86.8605%" y="223.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (12 samples, 0.03%)</title><rect x="86.6266%" y="213" width="0.0276%" height="15" fill="rgb(212,174,34)" fg:x="37654" fg:w="12"/><text x="86.8766%" y="223.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (9 samples, 0.02%)</title><rect x="86.6542%" y="213" width="0.0207%" height="15" fill="rgb(253,83,4)" fg:x="37666" fg:w="9"/><text x="86.9042%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (27 samples, 0.06%)</title><rect x="86.6749%" y="213" width="0.0621%" height="15" fill="rgb(250,195,49)" fg:x="37675" fg:w="27"/><text x="86.9249%" y="223.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (175 samples, 0.40%)</title><rect x="86.4288%" y="229" width="0.4026%" height="15" fill="rgb(241,192,25)" fg:x="37568" fg:w="175"/><text x="86.6788%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (41 samples, 0.09%)</title><rect x="86.7371%" y="213" width="0.0943%" height="15" fill="rgb(208,124,10)" fg:x="37702" fg:w="41"/><text x="86.9871%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (271 samples, 0.62%)</title><rect x="86.2102%" y="245" width="0.6235%" height="15" fill="rgb(222,33,0)" fg:x="37473" fg:w="271"/><text x="86.4602%" y="255.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (11 samples, 0.03%)</title><rect x="86.8498%" y="229" width="0.0253%" height="15" fill="rgb(234,209,28)" fg:x="37751" fg:w="11"/><text x="87.0998%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (10 samples, 0.02%)</title><rect x="86.8521%" y="213" width="0.0230%" height="15" fill="rgb(224,11,23)" fg:x="37752" fg:w="10"/><text x="87.1021%" y="223.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (10 samples, 0.02%)</title><rect x="86.8521%" y="197" width="0.0230%" height="15" fill="rgb(232,99,1)" fg:x="37752" fg:w="10"/><text x="87.1021%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="86.8521%" y="181" width="0.0230%" height="15" fill="rgb(237,95,45)" fg:x="37752" fg:w="10"/><text x="87.1021%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="86.8567%" y="165" width="0.0184%" height="15" fill="rgb(208,109,11)" fg:x="37754" fg:w="8"/><text x="87.1067%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="86.8636%" y="149" width="0.0115%" height="15" fill="rgb(216,190,48)" fg:x="37757" fg:w="5"/><text x="87.1136%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (291 samples, 0.67%)</title><rect x="86.2079%" y="261" width="0.6695%" height="15" fill="rgb(251,171,36)" fg:x="37472" fg:w="291"/><text x="86.4579%" y="271.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (16 samples, 0.04%)</title><rect x="86.8406%" y="245" width="0.0368%" height="15" fill="rgb(230,62,22)" fg:x="37747" fg:w="16"/><text x="87.0906%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (295 samples, 0.68%)</title><rect x="86.2056%" y="277" width="0.6787%" height="15" fill="rgb(225,114,35)" fg:x="37471" fg:w="295"/><text x="86.4556%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (324 samples, 0.75%)</title><rect x="86.1642%" y="309" width="0.7454%" height="15" fill="rgb(215,118,42)" fg:x="37453" fg:w="324"/><text x="86.4142%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (319 samples, 0.73%)</title><rect x="86.1757%" y="293" width="0.7339%" height="15" fill="rgb(243,119,21)" fg:x="37458" fg:w="319"/><text x="86.4257%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.02%)</title><rect x="86.8912%" y="277" width="0.0184%" height="15" fill="rgb(252,177,53)" fg:x="37769" fg:w="8"/><text x="87.1412%" y="287.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (9 samples, 0.02%)</title><rect x="86.9096%" y="309" width="0.0207%" height="15" fill="rgb(237,209,29)" fg:x="37777" fg:w="9"/><text x="87.1596%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="86.9119%" y="293" width="0.0184%" height="15" fill="rgb(212,65,23)" fg:x="37778" fg:w="8"/><text x="87.1619%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="86.9142%" y="277" width="0.0161%" height="15" fill="rgb(230,222,46)" fg:x="37779" fg:w="7"/><text x="87.1642%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="86.9188%" y="261" width="0.0115%" height="15" fill="rgb(215,135,32)" fg:x="37781" fg:w="5"/><text x="87.1688%" y="271.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (334 samples, 0.77%)</title><rect x="86.1642%" y="325" width="0.7684%" height="15" fill="rgb(246,101,22)" fg:x="37453" fg:w="334"/><text x="86.4142%" y="335.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (19 samples, 0.04%)</title><rect x="86.9326%" y="325" width="0.0437%" height="15" fill="rgb(206,107,13)" fg:x="37787" fg:w="19"/><text x="87.1826%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.04%)</title><rect x="86.9395%" y="309" width="0.0368%" height="15" fill="rgb(250,100,44)" fg:x="37790" fg:w="16"/><text x="87.1895%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="86.9533%" y="293" width="0.0230%" height="15" fill="rgb(231,147,38)" fg:x="37796" fg:w="10"/><text x="87.2033%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (373 samples, 0.86%)</title><rect x="86.1573%" y="341" width="0.8581%" height="15" fill="rgb(229,8,40)" fg:x="37450" fg:w="373"/><text x="86.4073%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="86.9878%" y="325" width="0.0276%" height="15" fill="rgb(221,135,30)" fg:x="37811" fg:w="12"/><text x="87.2378%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="86.9924%" y="309" width="0.0230%" height="15" fill="rgb(249,193,18)" fg:x="37813" fg:w="10"/><text x="87.2424%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="86.9993%" y="293" width="0.0161%" height="15" fill="rgb(209,133,39)" fg:x="37816" fg:w="7"/><text x="87.2493%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="87.0223%" y="341" width="0.0115%" height="15" fill="rgb(232,100,14)" fg:x="37826" fg:w="5"/><text x="87.2723%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="87.0361%" y="341" width="0.0230%" height="15" fill="rgb(224,185,1)" fg:x="37832" fg:w="10"/><text x="87.2861%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="87.0407%" y="325" width="0.0184%" height="15" fill="rgb(223,139,8)" fg:x="37834" fg:w="8"/><text x="87.2907%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (458 samples, 1.05%)</title><rect x="86.0078%" y="357" width="1.0537%" height="15" fill="rgb(232,213,38)" fg:x="37385" fg:w="458"/><text x="86.2578%" y="367.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (84 samples, 0.19%)</title><rect x="87.0776%" y="341" width="0.1933%" height="15" fill="rgb(207,94,22)" fg:x="37850" fg:w="84"/><text x="87.3276%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (130 samples, 0.30%)</title><rect x="87.0684%" y="357" width="0.2991%" height="15" fill="rgb(219,183,54)" fg:x="37846" fg:w="130"/><text x="87.3184%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (42 samples, 0.10%)</title><rect x="87.2708%" y="341" width="0.0966%" height="15" fill="rgb(216,185,54)" fg:x="37934" fg:w="42"/><text x="87.5208%" y="351.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (14 samples, 0.03%)</title><rect x="87.3743%" y="357" width="0.0322%" height="15" fill="rgb(254,217,39)" fg:x="37979" fg:w="14"/><text x="87.6243%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="87.4088%" y="357" width="0.0207%" height="15" fill="rgb(240,178,23)" fg:x="37994" fg:w="9"/><text x="87.6588%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="87.4157%" y="341" width="0.0138%" height="15" fill="rgb(218,11,47)" fg:x="37997" fg:w="6"/><text x="87.6657%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (620 samples, 1.43%)</title><rect x="86.0078%" y="373" width="1.4264%" height="15" fill="rgb(218,51,51)" fg:x="37385" fg:w="620"/><text x="86.2578%" y="383.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::verify_inputs_exist_and_values_match (622 samples, 1.43%)</title><rect x="86.0055%" y="389" width="1.4310%" height="15" fill="rgb(238,126,27)" fg:x="37384" fg:w="622"/><text x="86.2555%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (5 samples, 0.01%)</title><rect x="87.4410%" y="373" width="0.0115%" height="15" fill="rgb(249,202,22)" fg:x="38008" fg:w="5"/><text x="87.6910%" y="383.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (6 samples, 0.01%)</title><rect x="87.4618%" y="341" width="0.0138%" height="15" fill="rgb(254,195,49)" fg:x="38017" fg:w="6"/><text x="87.7118%" y="351.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="87.4595%" y="373" width="0.0184%" height="15" fill="rgb(208,123,14)" fg:x="38016" fg:w="8"/><text x="87.7095%" y="383.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="87.4618%" y="357" width="0.0161%" height="15" fill="rgb(224,200,8)" fg:x="38017" fg:w="7"/><text x="87.7118%" y="367.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (22 samples, 0.05%)</title><rect x="87.4387%" y="389" width="0.0506%" height="15" fill="rgb(217,61,36)" fg:x="38007" fg:w="22"/><text x="87.6887%" y="399.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.03%)</title><rect x="87.4894%" y="357" width="0.0299%" height="15" fill="rgb(206,35,45)" fg:x="38029" fg:w="13"/><text x="87.7394%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (10 samples, 0.02%)</title><rect x="87.4963%" y="341" width="0.0230%" height="15" fill="rgb(217,65,33)" fg:x="38032" fg:w="10"/><text x="87.7463%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="87.4986%" y="325" width="0.0207%" height="15" fill="rgb(222,158,48)" fg:x="38033" fg:w="9"/><text x="87.7486%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="87.4986%" y="309" width="0.0207%" height="15" fill="rgb(254,2,54)" fg:x="38033" fg:w="9"/><text x="87.7486%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (27 samples, 0.06%)</title><rect x="87.5262%" y="357" width="0.0621%" height="15" fill="rgb(250,143,38)" fg:x="38045" fg:w="27"/><text x="87.7762%" y="367.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (44 samples, 0.10%)</title><rect x="87.4894%" y="373" width="0.1012%" height="15" fill="rgb(248,25,0)" fg:x="38029" fg:w="44"/><text x="87.7394%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (19 samples, 0.04%)</title><rect x="87.5906%" y="373" width="0.0437%" height="15" fill="rgb(206,152,27)" fg:x="38073" fg:w="19"/><text x="87.8406%" y="383.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (64 samples, 0.15%)</title><rect x="87.4894%" y="389" width="0.1472%" height="15" fill="rgb(240,77,30)" fg:x="38029" fg:w="64"/><text x="87.7394%" y="399.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (9 samples, 0.02%)</title><rect x="87.6596%" y="357" width="0.0207%" height="15" fill="rgb(231,5,3)" fg:x="38103" fg:w="9"/><text x="87.9096%" y="367.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (13 samples, 0.03%)</title><rect x="87.6550%" y="373" width="0.0299%" height="15" fill="rgb(207,226,32)" fg:x="38101" fg:w="13"/><text x="87.9050%" y="383.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (26 samples, 0.06%)</title><rect x="87.6435%" y="389" width="0.0598%" height="15" fill="rgb(222,207,47)" fg:x="38096" fg:w="26"/><text x="87.8935%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="87.6918%" y="373" width="0.0115%" height="15" fill="rgb(229,115,45)" fg:x="38117" fg:w="5"/><text x="87.9418%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="87.6918%" y="357" width="0.0115%" height="15" fill="rgb(224,191,6)" fg:x="38117" fg:w="5"/><text x="87.9418%" y="367.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ec_pubkey_serialize (5 samples, 0.01%)</title><rect x="87.7355%" y="341" width="0.0115%" height="15" fill="rgb(230,227,24)" fg:x="38136" fg:w="5"/><text x="87.9855%" y="351.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_get_b32 (5 samples, 0.01%)</title><rect x="87.7355%" y="325" width="0.0115%" height="15" fill="rgb(228,80,19)" fg:x="38136" fg:w="5"/><text x="87.9855%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_odd_multiples_table (22 samples, 0.05%)</title><rect x="88.1174%" y="309" width="0.0506%" height="15" fill="rgb(247,229,0)" fg:x="38302" fg:w="22"/><text x="88.3674%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (10 samples, 0.02%)</title><rect x="88.1450%" y="293" width="0.0230%" height="15" fill="rgb(237,194,15)" fg:x="38314" fg:w="10"/><text x="88.3950%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_wnaf (75 samples, 0.17%)</title><rect x="88.1680%" y="309" width="0.1725%" height="15" fill="rgb(219,203,20)" fg:x="38324" fg:w="75"/><text x="88.4180%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_mul (322 samples, 0.74%)</title><rect x="88.3406%" y="309" width="0.7408%" height="15" fill="rgb(234,128,8)" fg:x="38399" fg:w="322"/><text x="88.5906%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (185 samples, 0.43%)</title><rect x="89.0814%" y="309" width="0.4256%" height="15" fill="rgb(248,202,8)" fg:x="38721" fg:w="185"/><text x="89.3314%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (1,438 samples, 3.31%)</title><rect x="89.5070%" y="309" width="3.3083%" height="15" fill="rgb(206,104,37)" fg:x="38906" fg:w="1438"/><text x="89.7570%" y="319.50">blo..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul (6 samples, 0.01%)</title><rect x="92.8267%" y="293" width="0.0138%" height="15" fill="rgb(223,8,27)" fg:x="40349" fg:w="6"/><text x="93.0767%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_split_lambda (13 samples, 0.03%)</title><rect x="92.8244%" y="309" width="0.0299%" height="15" fill="rgb(216,217,28)" fg:x="40348" fg:w="13"/><text x="93.0744%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul_512 (6 samples, 0.01%)</title><rect x="92.8405%" y="293" width="0.0138%" height="15" fill="rgb(249,199,1)" fg:x="40355" fg:w="6"/><text x="93.0905%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult (2,217 samples, 5.10%)</title><rect x="87.7562%" y="325" width="5.1004%" height="15" fill="rgb(240,85,17)" fg:x="38145" fg:w="2217"/><text x="88.0062%" y="335.50">block_..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_table_get_ge_storage (17 samples, 0.04%)</title><rect x="92.8566%" y="325" width="0.0391%" height="15" fill="rgb(206,108,45)" fg:x="40362" fg:w="17"/><text x="93.1066%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_sqrt (492 samples, 1.13%)</title><rect x="92.8958%" y="325" width="1.1319%" height="15" fill="rgb(245,210,41)" fg:x="40379" fg:w="492"/><text x="93.1458%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (19 samples, 0.04%)</title><rect x="94.0783%" y="293" width="0.0437%" height="15" fill="rgb(206,13,37)" fg:x="40893" fg:w="19"/><text x="94.3283%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_gej_var (163 samples, 0.37%)</title><rect x="94.0277%" y="325" width="0.3750%" height="15" fill="rgb(250,61,18)" fg:x="40871" fg:w="163"/><text x="94.2777%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_inv_var (149 samples, 0.34%)</title><rect x="94.0599%" y="309" width="0.3428%" height="15" fill="rgb(235,172,48)" fg:x="40885" fg:w="149"/><text x="94.3099%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (122 samples, 0.28%)</title><rect x="94.1220%" y="293" width="0.2807%" height="15" fill="rgb(249,201,17)" fg:x="40912" fg:w="122"/><text x="94.3720%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_xo_var (7 samples, 0.02%)</title><rect x="94.4027%" y="325" width="0.0161%" height="15" fill="rgb(219,208,6)" fg:x="41034" fg:w="7"/><text x="94.6527%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_table_set_globalz (79 samples, 0.18%)</title><rect x="94.4188%" y="325" width="0.1817%" height="15" fill="rgb(248,31,23)" fg:x="41041" fg:w="79"/><text x="94.6688%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (993 samples, 2.28%)</title><rect x="94.6005%" y="325" width="2.2845%" height="15" fill="rgb(245,15,42)" fg:x="41120" fg:w="993"/><text x="94.8505%" y="335.50">b..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_zinv_var (517 samples, 1.19%)</title><rect x="96.8850%" y="325" width="1.1894%" height="15" fill="rgb(222,217,39)" fg:x="42113" fg:w="517"/><text x="97.1350%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (32 samples, 0.07%)</title><rect x="98.0744%" y="325" width="0.0736%" height="15" fill="rgb(210,219,27)" fg:x="42630" fg:w="32"/><text x="98.3244%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (18 samples, 0.04%)</title><rect x="98.1503%" y="325" width="0.0414%" height="15" fill="rgb(252,166,36)" fg:x="42663" fg:w="18"/><text x="98.4003%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (127 samples, 0.29%)</title><rect x="98.1917%" y="325" width="0.2922%" height="15" fill="rgb(245,132,34)" fg:x="42681" fg:w="127"/><text x="98.4417%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecdsa_recover (4,676 samples, 10.76%)</title><rect x="87.7470%" y="341" width="10.7576%" height="15" fill="rgb(236,54,3)" fg:x="38141" fg:w="4676"/><text x="87.9970%" y="351.50">block_verifier`r..</text></g><g><title>block_verifier`fuel_crypto::secp256::signature::Signature::recover (4,687 samples, 10.78%)</title><rect x="87.7286%" y="357" width="10.7829%" height="15" fill="rgb(241,173,43)" fg:x="38133" fg:w="4687"/><text x="87.9786%" y="367.50">block_verifier`f..</text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (9 samples, 0.02%)</title><rect x="98.5207%" y="309" width="0.0207%" height="15" fill="rgb(215,190,9)" fg:x="42824" fg:w="9"/><text x="98.7707%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="98.5207%" y="293" width="0.0207%" height="15" fill="rgb(242,101,16)" fg:x="42824" fg:w="9"/><text x="98.7707%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="98.5207%" y="277" width="0.0207%" height="15" fill="rgb(223,190,21)" fg:x="42824" fg:w="9"/><text x="98.7707%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="98.5253%" y="261" width="0.0161%" height="15" fill="rgb(215,228,25)" fg:x="42826" fg:w="7"/><text x="98.7753%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="98.5299%" y="245" width="0.0115%" height="15" fill="rgb(225,36,22)" fg:x="42828" fg:w="5"/><text x="98.7799%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.03%)</title><rect x="98.5184%" y="325" width="0.0276%" height="15" fill="rgb(251,106,46)" fg:x="42823" fg:w="12"/><text x="98.7684%" y="335.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (41 samples, 0.09%)</title><rect x="98.5184%" y="341" width="0.0943%" height="15" fill="rgb(208,90,1)" fg:x="42823" fg:w="41"/><text x="98.7684%" y="351.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (27 samples, 0.06%)</title><rect x="98.5506%" y="325" width="0.0621%" height="15" fill="rgb(243,10,4)" fg:x="42837" fg:w="27"/><text x="98.8006%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (16 samples, 0.04%)</title><rect x="98.6150%" y="341" width="0.0368%" height="15" fill="rgb(212,137,27)" fg:x="42865" fg:w="16"/><text x="98.8650%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="98.6519%" y="341" width="0.0138%" height="15" fill="rgb(231,220,49)" fg:x="42881" fg:w="6"/><text x="98.9019%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="98.6542%" y="325" width="0.0115%" height="15" fill="rgb(237,96,20)" fg:x="42882" fg:w="5"/><text x="98.9042%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (68 samples, 0.16%)</title><rect x="98.5138%" y="357" width="0.1564%" height="15" fill="rgb(239,229,30)" fg:x="42821" fg:w="68"/><text x="98.7638%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (47 samples, 0.11%)</title><rect x="98.6703%" y="357" width="0.1081%" height="15" fill="rgb(219,65,33)" fg:x="42889" fg:w="47"/><text x="98.9203%" y="367.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::_&lt;impl fuel_tx::transaction::types::input::Input&gt;::check_signature (4,846 samples, 11.15%)</title><rect x="87.7056%" y="373" width="11.1487%" height="15" fill="rgb(243,134,7)" fg:x="38123" fg:w="4846"/><text x="87.9556%" y="383.50">block_verifier`f..</text></g><g><title>libsystem_platform.dylib`_platform_memset (31 samples, 0.07%)</title><rect x="98.7830%" y="357" width="0.0713%" height="15" fill="rgb(216,177,54)" fg:x="42938" fg:w="31"/><text x="99.0330%" y="367.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::check_signatures (4,859 samples, 11.18%)</title><rect x="87.7033%" y="389" width="11.1786%" height="15" fill="rgb(211,160,20)" fg:x="38122" fg:w="4859"/><text x="87.9533%" y="399.50">block_verifier`f..</text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="98.9187%" y="325" width="0.0138%" height="15" fill="rgb(239,85,39)" fg:x="42997" fg:w="6"/><text x="99.1687%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="98.9187%" y="309" width="0.0138%" height="15" fill="rgb(232,125,22)" fg:x="42997" fg:w="6"/><text x="99.1687%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.9187%" y="293" width="0.0138%" height="15" fill="rgb(244,57,34)" fg:x="42997" fg:w="6"/><text x="99.1687%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.9187%" y="277" width="0.0138%" height="15" fill="rgb(214,203,32)" fg:x="42997" fg:w="6"/><text x="99.1687%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.9440%" y="261" width="0.0115%" height="15" fill="rgb(207,58,43)" fg:x="43008" fg:w="5"/><text x="99.1940%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.02%)</title><rect x="98.9371%" y="309" width="0.0207%" height="15" fill="rgb(215,193,15)" fg:x="43005" fg:w="9"/><text x="99.1871%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (9 samples, 0.02%)</title><rect x="98.9371%" y="293" width="0.0207%" height="15" fill="rgb(232,15,44)" fg:x="43005" fg:w="9"/><text x="99.1871%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="98.9394%" y="277" width="0.0184%" height="15" fill="rgb(212,3,48)" fg:x="43006" fg:w="8"/><text x="99.1894%" y="287.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (61 samples, 0.14%)</title><rect x="98.9325%" y="325" width="0.1403%" height="15" fill="rgb(218,128,7)" fg:x="43003" fg:w="61"/><text x="99.1825%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (50 samples, 0.12%)</title><rect x="98.9578%" y="309" width="0.1150%" height="15" fill="rgb(226,216,39)" fg:x="43014" fg:w="50"/><text x="99.2078%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="99.0729%" y="325" width="0.0184%" height="15" fill="rgb(243,47,51)" fg:x="43064" fg:w="8"/><text x="99.3229%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="99.0913%" y="325" width="0.0161%" height="15" fill="rgb(241,183,40)" fg:x="43072" fg:w="7"/><text x="99.3413%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="99.0936%" y="309" width="0.0138%" height="15" fill="rgb(231,217,32)" fg:x="43073" fg:w="6"/><text x="99.3436%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (85 samples, 0.20%)</title><rect x="98.9141%" y="341" width="0.1956%" height="15" fill="rgb(229,61,38)" fg:x="42995" fg:w="85"/><text x="99.1641%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::instruction::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::instruction_inner (99 samples, 0.23%)</title><rect x="98.8842%" y="389" width="0.2278%" height="15" fill="rgb(225,210,5)" fg:x="42982" fg:w="99"/><text x="99.1342%" y="399.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::ret (91 samples, 0.21%)</title><rect x="98.9026%" y="373" width="0.2094%" height="15" fill="rgb(231,79,45)" fg:x="42990" fg:w="91"/><text x="99.1526%" y="383.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (88 samples, 0.20%)</title><rect x="98.9095%" y="357" width="0.2025%" height="15" fill="rgb(224,100,7)" fg:x="42993" fg:w="88"/><text x="99.1595%" y="367.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (7 samples, 0.02%)</title><rect x="99.1304%" y="357" width="0.0161%" height="15" fill="rgb(241,198,18)" fg:x="43089" fg:w="7"/><text x="99.3804%" y="367.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (19 samples, 0.04%)</title><rect x="99.1143%" y="373" width="0.0437%" height="15" fill="rgb(252,97,53)" fg:x="43082" fg:w="19"/><text x="99.3643%" y="383.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::main::predicates::finalize_check_predicate (27 samples, 0.06%)</title><rect x="99.1120%" y="389" width="0.0621%" height="15" fill="rgb(220,88,7)" fg:x="43081" fg:w="27"/><text x="99.3620%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_free (11 samples, 0.03%)</title><rect x="99.1879%" y="389" width="0.0253%" height="15" fill="rgb(213,176,14)" fg:x="43114" fg:w="11"/><text x="99.4379%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="99.2201%" y="389" width="0.0115%" height="15" fill="rgb(246,73,7)" fg:x="43128" fg:w="5"/><text x="99.4701%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="99.2316%" y="389" width="0.0276%" height="15" fill="rgb(245,64,36)" fg:x="43133" fg:w="12"/><text x="99.4816%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="99.2454%" y="373" width="0.0138%" height="15" fill="rgb(245,80,10)" fg:x="43139" fg:w="6"/><text x="99.4954%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="99.2776%" y="389" width="0.0207%" height="15" fill="rgb(232,107,50)" fg:x="43153" fg:w="9"/><text x="99.5276%" y="399.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_chargeable_transaction (8,435 samples, 19.41%)</title><rect x="80.0170%" y="405" width="19.4055%" height="15" fill="rgb(253,3,0)" fg:x="34781" fg:w="8435"/><text x="80.2670%" y="415.50">block_verifier`fuel_core_execu..</text></g><g><title>libsystem_platform.dylib`_platform_memset (54 samples, 0.12%)</title><rect x="99.2983%" y="389" width="0.1242%" height="15" fill="rgb(212,99,53)" fg:x="43162" fg:w="54"/><text x="99.5483%" y="399.50"></text></g><g><title>block_verifier`core::fmt::write (8 samples, 0.02%)</title><rect x="99.4617%" y="341" width="0.0184%" height="15" fill="rgb(249,111,54)" fg:x="43233" fg:w="8"/><text x="99.7117%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="99.4801%" y="341" width="0.0161%" height="15" fill="rgb(249,55,30)" fg:x="43241" fg:w="7"/><text x="99.7301%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="99.4824%" y="325" width="0.0138%" height="15" fill="rgb(237,47,42)" fg:x="43242" fg:w="6"/><text x="99.7324%" y="335.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (21 samples, 0.05%)</title><rect x="99.4548%" y="357" width="0.0483%" height="15" fill="rgb(211,20,18)" fg:x="43230" fg:w="21"/><text x="99.7048%" y="367.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (7 samples, 0.02%)</title><rect x="99.5031%" y="357" width="0.0161%" height="15" fill="rgb(231,203,46)" fg:x="43251" fg:w="7"/><text x="99.7531%" y="367.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (37 samples, 0.09%)</title><rect x="99.4548%" y="373" width="0.0851%" height="15" fill="rgb(237,142,3)" fg:x="43230" fg:w="37"/><text x="99.7048%" y="383.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (12 samples, 0.03%)</title><rect x="99.5399%" y="341" width="0.0276%" height="15" fill="rgb(241,107,1)" fg:x="43267" fg:w="12"/><text x="99.7899%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (13 samples, 0.03%)</title><rect x="99.5399%" y="357" width="0.0299%" height="15" fill="rgb(229,83,13)" fg:x="43267" fg:w="13"/><text x="99.7899%" y="367.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (25 samples, 0.06%)</title><rect x="99.5399%" y="373" width="0.0575%" height="15" fill="rgb(241,91,40)" fg:x="43267" fg:w="25"/><text x="99.7899%" y="383.50"></text></g><g><title>block_verifier`fuel_core_storage::kv_store::KeyValueInspect::exists (76 samples, 0.17%)</title><rect x="99.4295%" y="405" width="0.1748%" height="15" fill="rgb(225,3,45)" fg:x="43219" fg:w="76"/><text x="99.6795%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::size_of_value (75 samples, 0.17%)</title><rect x="99.4318%" y="389" width="0.1725%" height="15" fill="rgb(244,223,14)" fg:x="43220" fg:w="75"/><text x="99.6818%" y="399.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (37 samples, 0.09%)</title><rect x="99.6043%" y="405" width="0.0851%" height="15" fill="rgb(224,124,37)" fg:x="43295" fg:w="37"/><text x="99.8543%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (36 samples, 0.08%)</title><rect x="99.7400%" y="405" width="0.0828%" height="15" fill="rgb(251,171,30)" fg:x="43354" fg:w="36"/><text x="99.9900%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="99.8229%" y="405" width="0.0276%" height="15" fill="rgb(236,46,54)" fg:x="43390" fg:w="12"/><text x="100.0729%" y="415.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_transaction_and_commit (8,785 samples, 20.21%)</title><rect x="79.6949%" y="421" width="20.2107%" height="15" fill="rgb(245,213,5)" fg:x="34641" fg:w="8785"/><text x="79.9449%" y="431.50">block_verifier`fuel_core_executo..</text></g><g><title>libsystem_platform.dylib`_platform_memset (24 samples, 0.06%)</title><rect x="99.8505%" y="405" width="0.0552%" height="15" fill="rgb(230,144,27)" fg:x="43402" fg:w="24"/><text x="100.1005%" y="415.50"></text></g><g><title>block_verifier`fuel_core_upgradable_executor::executor::Executor&lt;S,R&gt;::dry_run (8,803 samples, 20.25%)</title><rect x="79.6765%" y="437" width="20.2521%" height="15" fill="rgb(220,86,6)" fg:x="34633" fg:w="8803"/><text x="79.9265%" y="447.50">block_verifier`fuel_core_upgrada..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="99.9103%" y="421" width="0.0184%" height="15" fill="rgb(240,20,13)" fg:x="43428" fg:w="8"/><text x="100.1603%" y="431.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da::_{{closure}}::_{{closure}} (9,264 samples, 21.31%)</title><rect x="78.6551%" y="453" width="21.3127%" height="15" fill="rgb(217,89,34)" fg:x="34189" fg:w="9264"/><text x="78.9051%" y="463.50">block_verifier`fuel_core_parallel_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.04%)</title><rect x="99.9310%" y="437" width="0.0368%" height="15" fill="rgb(229,13,5)" fg:x="43437" fg:w="16"/><text x="100.1810%" y="447.50"></text></g><g><title>block_verifier`std::sys::pal::unix::thread::Thread::new::thread_start (10,920 samples, 25.12%)</title><rect x="74.8729%" y="565" width="25.1225%" height="15" fill="rgb(244,67,35)" fg:x="32545" fg:w="10920"/><text x="75.1229%" y="575.50">block_verifier`std::sys::pal::unix::thre..</text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (10,920 samples, 25.12%)</title><rect x="74.8729%" y="549" width="25.1225%" height="15" fill="rgb(221,40,2)" fg:x="32545" fg:w="10920"/><text x="75.1229%" y="559.50">block_verifier`core::ops::function::FnOn..</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (10,920 samples, 25.12%)</title><rect x="74.8729%" y="533" width="25.1225%" height="15" fill="rgb(237,157,21)" fg:x="32545" fg:w="10920"/><text x="75.1229%" y="543.50">block_verifier`std::sys::backtrace::__ru..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (9,898 samples, 22.77%)</title><rect x="77.2241%" y="517" width="22.7713%" height="15" fill="rgb(222,94,11)" fg:x="33567" fg:w="9898"/><text x="77.4741%" y="527.50">block_verifier`tokio::runtime::task:..</text></g><g><title>block_verifier`tokio::runtime::scheduler::multi_thread::worker::run (9,898 samples, 22.77%)</title><rect x="77.2241%" y="501" width="22.7713%" height="15" fill="rgb(249,113,6)" fg:x="33567" fg:w="9898"/><text x="77.4741%" y="511.50">block_verifier`tokio::runtime::sched..</text></g><g><title>block_verifier`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (9,898 samples, 22.77%)</title><rect x="77.2241%" y="485" width="22.7713%" height="15" fill="rgb(238,137,36)" fg:x="33567" fg:w="9898"/><text x="77.4741%" y="495.50">block_verifier`tokio::runtime::sched..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (9,897 samples, 22.77%)</title><rect x="77.2264%" y="469" width="22.7690%" height="15" fill="rgb(210,102,26)" fg:x="33568" fg:w="9897"/><text x="77.4764%" y="479.50">block_verifier`tokio::runtime::task:..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="99.9724%" y="453" width="0.0230%" height="15" fill="rgb(218,30,30)" fg:x="43455" fg:w="10"/><text x="100.2224%" y="463.50"></text></g><g><title>all (43,467 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(214,67,26)" fg:x="0" fg:w="43467"/><text x="0.2500%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (10,922 samples, 25.13%)</title><rect x="74.8729%" y="597" width="25.1271%" height="15" fill="rgb(251,9,53)" fg:x="32545" fg:w="10922"/><text x="75.1229%" y="607.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (10,922 samples, 25.13%)</title><rect x="74.8729%" y="581" width="25.1271%" height="15" fill="rgb(228,204,25)" fg:x="32545" fg:w="10922"/><text x="75.1229%" y="591.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>