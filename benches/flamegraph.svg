<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="597.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="597.00"> </text><svg id="frames" x="10" width="1180" total_samples="45775"><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (23 samples, 0.05%)</title><rect x="0.0066%" y="501" width="0.0502%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="23"/><text x="0.2566%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`read (23 samples, 0.05%)</title><rect x="0.0066%" y="485" width="0.0502%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="23"/><text x="0.2566%" y="495.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (171 samples, 0.37%)</title><rect x="0.0066%" y="517" width="0.3736%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="171"/><text x="0.2566%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`read (146 samples, 0.32%)</title><rect x="0.0612%" y="501" width="0.3190%" height="15" fill="rgb(248,212,6)" fg:x="28" fg:w="146"/><text x="0.3112%" y="511.50"></text></g><g><title>block_verifier`block_verifier::main (187 samples, 0.41%)</title><rect x="0.0000%" y="549" width="0.4085%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="187"/><text x="0.2500%" y="559.50"></text></g><g><title>block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserialize for fuel_core_types::blockchain::block::BlockV1&lt;TransactionRepresentation&gt;&gt;::deserialize::__Visitor&lt;TransactionRepresentation&gt; as serde::de::Visitor&gt;::visit_seq (187 samples, 0.41%)</title><rect x="0.0000%" y="533" width="0.4085%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="187"/><text x="0.2500%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`read (13 samples, 0.03%)</title><rect x="0.3801%" y="517" width="0.0284%" height="15" fill="rgb(207,160,47)" fg:x="174" fg:w="13"/><text x="0.6301%" y="527.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (93 samples, 0.20%)</title><rect x="0.4850%" y="469" width="0.2032%" height="15" fill="rgb(228,23,34)" fg:x="222" fg:w="93"/><text x="0.7350%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`read (93 samples, 0.20%)</title><rect x="0.4850%" y="453" width="0.2032%" height="15" fill="rgb(218,30,26)" fg:x="222" fg:w="93"/><text x="0.7350%" y="463.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (5 samples, 0.01%)</title><rect x="0.8017%" y="437" width="0.0109%" height="15" fill="rgb(220,122,19)" fg:x="367" fg:w="5"/><text x="1.0517%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`read (3,011 samples, 6.58%)</title><rect x="0.8127%" y="437" width="6.5778%" height="15" fill="rgb(250,228,42)" fg:x="372" fg:w="3011"/><text x="1.0627%" y="447.50">libsystem..</text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (3,029 samples, 6.62%)</title><rect x="0.7755%" y="453" width="6.6171%" height="15" fill="rgb(240,193,28)" fg:x="355" fg:w="3029"/><text x="1.0255%" y="463.50">block_ver..</text></g><g><title>block_verifier`DYLD-STUB$$read (9 samples, 0.02%)</title><rect x="7.3927%" y="453" width="0.0197%" height="15" fill="rgb(216,20,37)" fg:x="3384" fg:w="9"/><text x="7.6427%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`read (279 samples, 0.61%)</title><rect x="7.4189%" y="421" width="0.6095%" height="15" fill="rgb(206,188,39)" fg:x="3396" fg:w="279"/><text x="7.6689%" y="431.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (284 samples, 0.62%)</title><rect x="7.4123%" y="437" width="0.6204%" height="15" fill="rgb(217,207,13)" fg:x="3393" fg:w="284"/><text x="7.6623%" y="447.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (326 samples, 0.71%)</title><rect x="7.4123%" y="453" width="0.7122%" height="15" fill="rgb(231,73,38)" fg:x="3393" fg:w="326"/><text x="7.6623%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`read (41 samples, 0.09%)</title><rect x="8.0350%" y="437" width="0.0896%" height="15" fill="rgb(225,20,46)" fg:x="3678" fg:w="41"/><text x="8.2850%" y="447.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (56 samples, 0.12%)</title><rect x="8.1245%" y="453" width="0.1223%" height="15" fill="rgb(210,31,41)" fg:x="3719" fg:w="56"/><text x="8.3745%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`read (16,523 samples, 36.10%)</title><rect x="8.2469%" y="453" width="36.0961%" height="15" fill="rgb(221,200,47)" fg:x="3775" fg:w="16523"/><text x="8.4969%" y="463.50">libsystem_kernel.dylib`read</text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (19,984 samples, 43.66%)</title><rect x="0.6947%" y="469" width="43.6570%" height="15" fill="rgb(226,26,5)" fg:x="318" fg:w="19984"/><text x="0.9447%" y="479.50">block_verifier`serde::de::SeqAccess::next_element</text></g><g><title>block_verifier`std::io::Read::read_exact (24 samples, 0.05%)</title><rect x="44.3517%" y="469" width="0.0524%" height="15" fill="rgb(249,33,26)" fg:x="20302" fg:w="24"/><text x="44.6017%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`read (1,642 samples, 3.59%)</title><rect x="44.4042%" y="469" width="3.5871%" height="15" fill="rgb(235,183,28)" fg:x="20326" fg:w="1642"/><text x="44.6542%" y="479.50">libs..</text></g><g><title>block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserialize for fuel_core_types::blockchain::block::BlockV1&lt;TransactionRepresentation&gt;&gt;::deserialize::__Visitor&lt;TransactionRepresentation&gt; as serde::de::Visitor&gt;::visit_seq (21,755 samples, 47.53%)</title><rect x="0.4675%" y="485" width="47.5259%" height="15" fill="rgb(221,5,38)" fg:x="214" fg:w="21755"/><text x="0.7175%" y="495.50">block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deseri..</text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::open_with (11 samples, 0.02%)</title><rect x="48.0153%" y="453" width="0.0240%" height="15" fill="rgb(247,18,42)" fg:x="21979" fg:w="11"/><text x="48.2653%" y="463.50"></text></g><g><title>block_verifier`core::ops::function::Fn::call (11 samples, 0.02%)</title><rect x="48.0153%" y="437" width="0.0240%" height="15" fill="rgb(241,131,45)" fg:x="21979" fg:w="11"/><text x="48.2653%" y="447.50"></text></g><g><title>block_verifier`rocksdb_open (11 samples, 0.02%)</title><rect x="48.0153%" y="421" width="0.0240%" height="15" fill="rgb(249,31,29)" fg:x="21979" fg:w="11"/><text x="48.2653%" y="431.50"></text></g><g><title>block_verifier`rocksdb::DB::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="48.0153%" y="405" width="0.0240%" height="15" fill="rgb(225,111,53)" fg:x="21979" fg:w="11"/><text x="48.2653%" y="415.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Open(rocksdb::DBOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyDescriptor, std::__1::allocator&lt;rocksdb::ColumnFamilyDescriptor&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator (11 samples, 0.02%)</title><rect x="48.0153%" y="389" width="0.0240%" height="15" fill="rgb(238,160,17)" fg:x="21979" fg:w="11"/><text x="48.2653%" y="399.50"></text></g><g><title>block_verifier`fuel_core::combined_database::CombinedDatabase::from_config (13 samples, 0.03%)</title><rect x="48.0131%" y="469" width="0.0284%" height="15" fill="rgb(214,148,48)" fg:x="21978" fg:w="13"/><text x="48.2631%" y="479.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntry (6 samples, 0.01%)</title><rect x="48.0918%" y="357" width="0.0131%" height="15" fill="rgb(232,36,49)" fg:x="22014" fg:w="6"/><text x="48.3418%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBIter::Next (9 samples, 0.02%)</title><rect x="48.0918%" y="373" width="0.0197%" height="15" fill="rgb(209,103,24)" fg:x="22014" fg:w="9"/><text x="48.3418%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db_key_iterator::RocksDBKeyIterator&lt;D,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="48.0918%" y="389" width="0.0262%" height="15" fill="rgb(229,88,8)" fg:x="22014" fg:w="12"/><text x="48.3418%" y="399.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="48.0918%" y="405" width="0.0328%" height="15" fill="rgb(213,181,19)" fg:x="22014" fg:w="15"/><text x="48.3418%" y="415.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (6 samples, 0.01%)</title><rect x="48.1289%" y="405" width="0.0131%" height="15" fill="rgb(254,191,54)" fg:x="22031" fg:w="6"/><text x="48.3789%" y="415.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.06%)</title><rect x="48.0852%" y="421" width="0.0634%" height="15" fill="rgb(241,83,37)" fg:x="22011" fg:w="29"/><text x="48.3352%" y="431.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (113 samples, 0.25%)</title><rect x="48.1704%" y="405" width="0.2469%" height="15" fill="rgb(233,36,39)" fg:x="22050" fg:w="113"/><text x="48.4204%" y="415.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (122 samples, 0.27%)</title><rect x="48.1529%" y="421" width="0.2665%" height="15" fill="rgb(226,3,54)" fg:x="22042" fg:w="122"/><text x="48.4029%" y="431.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (26 samples, 0.06%)</title><rect x="48.4194%" y="421" width="0.0568%" height="15" fill="rgb(245,192,40)" fg:x="22164" fg:w="26"/><text x="48.6694%" y="431.50"></text></g><g><title>block_verifier`fuel_core::database::genesis_progress::_&lt;impl fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::GenesisStage&gt;&gt;&gt;::genesis_coins_root (187 samples, 0.41%)</title><rect x="48.0721%" y="437" width="0.4085%" height="15" fill="rgb(238,167,29)" fg:x="22005" fg:w="187"/><text x="48.3221%" y="447.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="48.6117%" y="357" width="0.0109%" height="15" fill="rgb(232,182,51)" fg:x="22252" fg:w="5"/><text x="48.8617%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (45 samples, 0.10%)</title><rect x="48.5330%" y="373" width="0.0983%" height="15" fill="rgb(231,60,39)" fg:x="22216" fg:w="45"/><text x="48.7830%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (67 samples, 0.15%)</title><rect x="48.5177%" y="389" width="0.1464%" height="15" fill="rgb(208,69,12)" fg:x="22209" fg:w="67"/><text x="48.7677%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.02%)</title><rect x="48.6401%" y="373" width="0.0240%" height="15" fill="rgb(235,93,37)" fg:x="22265" fg:w="11"/><text x="48.8901%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (19 samples, 0.04%)</title><rect x="48.6729%" y="373" width="0.0415%" height="15" fill="rgb(213,116,39)" fg:x="22280" fg:w="19"/><text x="48.9229%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (15 samples, 0.03%)</title><rect x="48.7144%" y="373" width="0.0328%" height="15" fill="rgb(222,207,29)" fg:x="22299" fg:w="15"/><text x="48.9644%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.02%)</title><rect x="48.7318%" y="357" width="0.0153%" height="15" fill="rgb(206,96,30)" fg:x="22307" fg:w="7"/><text x="48.9818%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="48.7471%" y="357" width="0.0218%" height="15" fill="rgb(218,138,4)" fg:x="22314" fg:w="10"/><text x="48.9971%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="48.7515%" y="341" width="0.0175%" height="15" fill="rgb(250,191,14)" fg:x="22316" fg:w="8"/><text x="49.0015%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="48.7515%" y="325" width="0.0175%" height="15" fill="rgb(239,60,40)" fg:x="22316" fg:w="8"/><text x="49.0015%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="48.7559%" y="309" width="0.0131%" height="15" fill="rgb(206,27,48)" fg:x="22318" fg:w="6"/><text x="49.0059%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="48.7559%" y="293" width="0.0131%" height="15" fill="rgb(225,35,8)" fg:x="22318" fg:w="6"/><text x="49.0059%" y="303.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (16 samples, 0.03%)</title><rect x="48.7471%" y="373" width="0.0350%" height="15" fill="rgb(250,213,24)" fg:x="22314" fg:w="16"/><text x="48.9971%" y="383.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::indexation::process_balances_update (55 samples, 0.12%)</title><rect x="48.6685%" y="389" width="0.1202%" height="15" fill="rgb(247,123,22)" fg:x="22278" fg:w="55"/><text x="48.9185%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (28 samples, 0.06%)</title><rect x="48.7930%" y="341" width="0.0612%" height="15" fill="rgb(231,138,38)" fg:x="22335" fg:w="28"/><text x="49.0430%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.05%)</title><rect x="48.8061%" y="325" width="0.0481%" height="15" fill="rgb(231,145,46)" fg:x="22341" fg:w="22"/><text x="49.0561%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (32 samples, 0.07%)</title><rect x="48.7886%" y="357" width="0.0699%" height="15" fill="rgb(251,118,11)" fg:x="22333" fg:w="32"/><text x="49.0386%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (5 samples, 0.01%)</title><rect x="48.8651%" y="277" width="0.0109%" height="15" fill="rgb(217,147,25)" fg:x="22368" fg:w="5"/><text x="49.1151%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (5 samples, 0.01%)</title><rect x="48.8651%" y="261" width="0.0109%" height="15" fill="rgb(247,81,37)" fg:x="22368" fg:w="5"/><text x="49.1151%" y="271.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (5 samples, 0.01%)</title><rect x="48.8651%" y="245" width="0.0109%" height="15" fill="rgb(209,12,38)" fg:x="22368" fg:w="5"/><text x="49.1151%" y="255.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (8 samples, 0.02%)</title><rect x="48.8804%" y="197" width="0.0175%" height="15" fill="rgb(227,1,9)" fg:x="22375" fg:w="8"/><text x="49.1304%" y="207.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (6 samples, 0.01%)</title><rect x="48.8848%" y="181" width="0.0131%" height="15" fill="rgb(248,47,43)" fg:x="22377" fg:w="6"/><text x="49.1348%" y="191.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (12 samples, 0.03%)</title><rect x="48.8782%" y="213" width="0.0262%" height="15" fill="rgb(221,10,30)" fg:x="22374" fg:w="12"/><text x="49.1282%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (14 samples, 0.03%)</title><rect x="48.8760%" y="229" width="0.0306%" height="15" fill="rgb(210,229,1)" fg:x="22373" fg:w="14"/><text x="49.1260%" y="239.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (15 samples, 0.03%)</title><rect x="48.8760%" y="245" width="0.0328%" height="15" fill="rgb(222,148,37)" fg:x="22373" fg:w="15"/><text x="49.1260%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (21 samples, 0.05%)</title><rect x="48.8651%" y="341" width="0.0459%" height="15" fill="rgb(234,67,33)" fg:x="22368" fg:w="21"/><text x="49.1151%" y="351.50"></text></g><g><title>block_verifier`rocksdb_write (21 samples, 0.05%)</title><rect x="48.8651%" y="325" width="0.0459%" height="15" fill="rgb(247,98,35)" fg:x="22368" fg:w="21"/><text x="49.1151%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (21 samples, 0.05%)</title><rect x="48.8651%" y="309" width="0.0459%" height="15" fill="rgb(247,138,52)" fg:x="22368" fg:w="21"/><text x="49.1151%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (21 samples, 0.05%)</title><rect x="48.8651%" y="293" width="0.0459%" height="15" fill="rgb(213,79,30)" fg:x="22368" fg:w="21"/><text x="49.1151%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (16 samples, 0.03%)</title><rect x="48.8760%" y="277" width="0.0350%" height="15" fill="rgb(246,177,23)" fg:x="22373" fg:w="16"/><text x="49.1260%" y="287.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (16 samples, 0.03%)</title><rect x="48.8760%" y="261" width="0.0350%" height="15" fill="rgb(230,62,27)" fg:x="22373" fg:w="16"/><text x="49.1260%" y="271.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (10 samples, 0.02%)</title><rect x="48.9197%" y="309" width="0.0218%" height="15" fill="rgb(216,154,8)" fg:x="22393" fg:w="10"/><text x="49.1697%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="48.9306%" y="293" width="0.0109%" height="15" fill="rgb(244,35,45)" fg:x="22398" fg:w="5"/><text x="49.1806%" y="303.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (39 samples, 0.09%)</title><rect x="48.8585%" y="357" width="0.0852%" height="15" fill="rgb(251,115,12)" fg:x="22365" fg:w="39"/><text x="49.1085%" y="367.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (15 samples, 0.03%)</title><rect x="48.9110%" y="341" width="0.0328%" height="15" fill="rgb(240,54,50)" fg:x="22389" fg:w="15"/><text x="49.1610%" y="351.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (14 samples, 0.03%)</title><rect x="48.9132%" y="325" width="0.0306%" height="15" fill="rgb(233,84,52)" fg:x="22390" fg:w="14"/><text x="49.1632%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (72 samples, 0.16%)</title><rect x="48.7886%" y="389" width="0.1573%" height="15" fill="rgb(207,117,47)" fg:x="22333" fg:w="72"/><text x="49.0386%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (72 samples, 0.16%)</title><rect x="48.7886%" y="373" width="0.1573%" height="15" fill="rgb(249,43,39)" fg:x="22333" fg:w="72"/><text x="49.0386%" y="383.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain::_{{closure}} (201 samples, 0.44%)</title><rect x="48.5134%" y="405" width="0.4391%" height="15" fill="rgb(209,38,44)" fg:x="22207" fg:w="201"/><text x="48.7634%" y="415.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain (213 samples, 0.47%)</title><rect x="48.5068%" y="421" width="0.4653%" height="15" fill="rgb(236,212,23)" fg:x="22204" fg:w="213"/><text x="48.7568%" y="431.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (9 samples, 0.02%)</title><rect x="48.9525%" y="405" width="0.0197%" height="15" fill="rgb(242,79,21)" fg:x="22408" fg:w="9"/><text x="49.2025%" y="415.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="48.9612%" y="389" width="0.0109%" height="15" fill="rgb(211,96,35)" fg:x="22412" fg:w="5"/><text x="49.2112%" y="399.50"></text></g><g><title>block_verifier`core::fmt::write (5 samples, 0.01%)</title><rect x="48.9918%" y="357" width="0.0109%" height="15" fill="rgb(253,215,40)" fg:x="22426" fg:w="5"/><text x="49.2418%" y="367.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (11 samples, 0.02%)</title><rect x="48.9896%" y="373" width="0.0240%" height="15" fill="rgb(211,81,21)" fg:x="22425" fg:w="11"/><text x="49.2396%" y="383.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (19 samples, 0.04%)</title><rect x="48.9853%" y="389" width="0.0415%" height="15" fill="rgb(208,190,38)" fg:x="22423" fg:w="19"/><text x="49.2353%" y="399.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="49.0486%" y="325" width="0.0109%" height="15" fill="rgb(235,213,38)" fg:x="22452" fg:w="5"/><text x="49.2986%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="49.0595%" y="325" width="0.0109%" height="15" fill="rgb(237,122,38)" fg:x="22457" fg:w="5"/><text x="49.3095%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (20 samples, 0.04%)</title><rect x="49.0311%" y="341" width="0.0437%" height="15" fill="rgb(244,218,35)" fg:x="22444" fg:w="20"/><text x="49.2811%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (22 samples, 0.05%)</title><rect x="49.0289%" y="357" width="0.0481%" height="15" fill="rgb(240,68,47)" fg:x="22443" fg:w="22"/><text x="49.2789%" y="367.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.02%)</title><rect x="49.0770%" y="357" width="0.0153%" height="15" fill="rgb(210,16,53)" fg:x="22465" fg:w="7"/><text x="49.3270%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="49.0770%" y="341" width="0.0153%" height="15" fill="rgb(235,124,12)" fg:x="22465" fg:w="7"/><text x="49.3270%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="49.0770%" y="325" width="0.0153%" height="15" fill="rgb(224,169,11)" fg:x="22465" fg:w="7"/><text x="49.3270%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="49.0814%" y="309" width="0.0109%" height="15" fill="rgb(250,166,2)" fg:x="22467" fg:w="5"/><text x="49.3314%" y="319.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (36 samples, 0.08%)</title><rect x="49.0268%" y="373" width="0.0786%" height="15" fill="rgb(242,216,29)" fg:x="22442" fg:w="36"/><text x="49.2768%" y="383.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (37 samples, 0.08%)</title><rect x="49.0268%" y="389" width="0.0808%" height="15" fill="rgb(230,116,27)" fg:x="22442" fg:w="37"/><text x="49.2768%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (60 samples, 0.13%)</title><rect x="48.9831%" y="405" width="0.1311%" height="15" fill="rgb(228,99,48)" fg:x="22422" fg:w="60"/><text x="49.2331%" y="415.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.01%)</title><rect x="49.1950%" y="389" width="0.0131%" height="15" fill="rgb(253,11,6)" fg:x="22519" fg:w="6"/><text x="49.4450%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (52 samples, 0.11%)</title><rect x="49.1141%" y="405" width="0.1136%" height="15" fill="rgb(247,143,39)" fg:x="22482" fg:w="52"/><text x="49.3641%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="49.2736%" y="309" width="0.0284%" height="15" fill="rgb(236,97,10)" fg:x="22555" fg:w="13"/><text x="49.5236%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="49.2845%" y="293" width="0.0175%" height="15" fill="rgb(233,208,19)" fg:x="22560" fg:w="8"/><text x="49.5345%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.3020%" y="309" width="0.0109%" height="15" fill="rgb(216,164,2)" fg:x="22568" fg:w="5"/><text x="49.5520%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.3020%" y="293" width="0.0109%" height="15" fill="rgb(220,129,5)" fg:x="22568" fg:w="5"/><text x="49.5520%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.01%)</title><rect x="49.3129%" y="309" width="0.0131%" height="15" fill="rgb(242,17,10)" fg:x="22573" fg:w="6"/><text x="49.5629%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (35 samples, 0.08%)</title><rect x="49.2649%" y="341" width="0.0765%" height="15" fill="rgb(242,107,0)" fg:x="22551" fg:w="35"/><text x="49.5149%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (33 samples, 0.07%)</title><rect x="49.2693%" y="325" width="0.0721%" height="15" fill="rgb(251,28,31)" fg:x="22553" fg:w="33"/><text x="49.5193%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (41 samples, 0.09%)</title><rect x="49.2627%" y="373" width="0.0896%" height="15" fill="rgb(233,223,10)" fg:x="22550" fg:w="41"/><text x="49.5127%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (41 samples, 0.09%)</title><rect x="49.2627%" y="357" width="0.0896%" height="15" fill="rgb(215,21,27)" fg:x="22550" fg:w="41"/><text x="49.5127%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (44 samples, 0.10%)</title><rect x="49.2583%" y="389" width="0.0961%" height="15" fill="rgb(232,23,21)" fg:x="22548" fg:w="44"/><text x="49.5083%" y="399.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="49.3545%" y="389" width="0.0131%" height="15" fill="rgb(244,5,23)" fg:x="22592" fg:w="6"/><text x="49.6045%" y="399.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (66 samples, 0.14%)</title><rect x="49.2409%" y="405" width="0.1442%" height="15" fill="rgb(226,81,46)" fg:x="22540" fg:w="66"/><text x="49.4909%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (26 samples, 0.06%)</title><rect x="49.4047%" y="341" width="0.0568%" height="15" fill="rgb(247,70,30)" fg:x="22615" fg:w="26"/><text x="49.6547%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (34 samples, 0.07%)</title><rect x="49.3894%" y="357" width="0.0743%" height="15" fill="rgb(212,68,19)" fg:x="22608" fg:w="34"/><text x="49.6394%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (40 samples, 0.09%)</title><rect x="49.3850%" y="373" width="0.0874%" height="15" fill="rgb(240,187,13)" fg:x="22606" fg:w="40"/><text x="49.6350%" y="383.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (5 samples, 0.01%)</title><rect x="49.4724%" y="293" width="0.0109%" height="15" fill="rgb(223,113,26)" fg:x="22646" fg:w="5"/><text x="49.7224%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (5 samples, 0.01%)</title><rect x="49.4724%" y="277" width="0.0109%" height="15" fill="rgb(206,192,2)" fg:x="22646" fg:w="5"/><text x="49.7224%" y="287.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (5 samples, 0.01%)</title><rect x="49.4724%" y="261" width="0.0109%" height="15" fill="rgb(241,108,4)" fg:x="22646" fg:w="5"/><text x="49.7224%" y="271.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (7 samples, 0.02%)</title><rect x="49.4965%" y="229" width="0.0153%" height="15" fill="rgb(247,173,49)" fg:x="22657" fg:w="7"/><text x="49.7465%" y="239.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (14 samples, 0.03%)</title><rect x="49.4855%" y="261" width="0.0306%" height="15" fill="rgb(224,114,35)" fg:x="22652" fg:w="14"/><text x="49.7355%" y="271.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (13 samples, 0.03%)</title><rect x="49.4877%" y="245" width="0.0284%" height="15" fill="rgb(245,159,27)" fg:x="22653" fg:w="13"/><text x="49.7377%" y="255.50"></text></g><g><title>block_verifier`rocksdb_write (21 samples, 0.05%)</title><rect x="49.4724%" y="341" width="0.0459%" height="15" fill="rgb(245,172,44)" fg:x="22646" fg:w="21"/><text x="49.7224%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (21 samples, 0.05%)</title><rect x="49.4724%" y="325" width="0.0459%" height="15" fill="rgb(236,23,11)" fg:x="22646" fg:w="21"/><text x="49.7224%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (21 samples, 0.05%)</title><rect x="49.4724%" y="309" width="0.0459%" height="15" fill="rgb(205,117,38)" fg:x="22646" fg:w="21"/><text x="49.7224%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (16 samples, 0.03%)</title><rect x="49.4833%" y="293" width="0.0350%" height="15" fill="rgb(237,72,25)" fg:x="22651" fg:w="16"/><text x="49.7333%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (16 samples, 0.03%)</title><rect x="49.4833%" y="277" width="0.0350%" height="15" fill="rgb(244,70,9)" fg:x="22651" fg:w="16"/><text x="49.7333%" y="287.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (22 samples, 0.05%)</title><rect x="49.4724%" y="357" width="0.0481%" height="15" fill="rgb(217,125,39)" fg:x="22646" fg:w="22"/><text x="49.7224%" y="367.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (7 samples, 0.02%)</title><rect x="49.5380%" y="309" width="0.0153%" height="15" fill="rgb(235,36,10)" fg:x="22676" fg:w="7"/><text x="49.7880%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (41 samples, 0.09%)</title><rect x="49.4724%" y="373" width="0.0896%" height="15" fill="rgb(251,123,47)" fg:x="22646" fg:w="41"/><text x="49.7224%" y="383.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (19 samples, 0.04%)</title><rect x="49.5205%" y="357" width="0.0415%" height="15" fill="rgb(221,13,13)" fg:x="22668" fg:w="19"/><text x="49.7705%" y="367.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (19 samples, 0.04%)</title><rect x="49.5205%" y="341" width="0.0415%" height="15" fill="rgb(238,131,9)" fg:x="22668" fg:w="19"/><text x="49.7705%" y="351.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (14 samples, 0.03%)</title><rect x="49.5314%" y="325" width="0.0306%" height="15" fill="rgb(211,50,8)" fg:x="22673" fg:w="14"/><text x="49.7814%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (83 samples, 0.18%)</title><rect x="49.3850%" y="405" width="0.1813%" height="15" fill="rgb(245,182,24)" fg:x="22606" fg:w="83"/><text x="49.6350%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (83 samples, 0.18%)</title><rect x="49.3850%" y="389" width="0.1813%" height="15" fill="rgb(242,14,37)" fg:x="22606" fg:w="83"/><text x="49.6350%" y="399.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_on_chain::_{{closure}} (277 samples, 0.61%)</title><rect x="48.9721%" y="421" width="0.6051%" height="15" fill="rgb(246,228,12)" fg:x="22417" fg:w="277"/><text x="49.2221%" y="431.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (502 samples, 1.10%)</title><rect x="48.5025%" y="437" width="1.0967%" height="15" fill="rgb(213,55,15)" fg:x="22202" fg:w="502"/><text x="48.7525%" y="447.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (10 samples, 0.02%)</title><rect x="49.5773%" y="421" width="0.0218%" height="15" fill="rgb(209,9,3)" fg:x="22694" fg:w="10"/><text x="49.8273%" y="431.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="49.5860%" y="405" width="0.0131%" height="15" fill="rgb(230,59,30)" fg:x="22698" fg:w="6"/><text x="49.8360%" y="415.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (67 samples, 0.15%)</title><rect x="49.5991%" y="437" width="0.1464%" height="15" fill="rgb(209,121,21)" fg:x="22704" fg:w="67"/><text x="49.8491%" y="447.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (772 samples, 1.69%)</title><rect x="48.0634%" y="453" width="1.6865%" height="15" fill="rgb(220,109,13)" fg:x="22001" fg:w="772"/><text x="48.3134%" y="463.50"></text></g><g><title>block_verifier`&lt;fuel_core::service::config::Config as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="49.7499%" y="437" width="0.0131%" height="15" fill="rgb(232,18,1)" fg:x="22773" fg:w="6"/><text x="49.9999%" y="447.50"></text></g><g><title>block_verifier`fuel_core::service::sub_services::init_sub_services (12 samples, 0.03%)</title><rect x="49.7499%" y="453" width="0.0262%" height="15" fill="rgb(215,41,42)" fg:x="22773" fg:w="12"/><text x="49.9999%" y="463.50"></text></g><g><title>block_verifier`block_verifier::main::_{{closure}} (812 samples, 1.77%)</title><rect x="48.0044%" y="485" width="1.7739%" height="15" fill="rgb(224,123,36)" fg:x="21974" fg:w="812"/><text x="48.2544%" y="495.50">b..</text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (795 samples, 1.74%)</title><rect x="48.0415%" y="469" width="1.7368%" height="15" fill="rgb(240,125,3)" fg:x="21991" fg:w="795"/><text x="48.2915%" y="479.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.01%)</title><rect x="49.7804%" y="309" width="0.0109%" height="15" fill="rgb(205,98,50)" fg:x="22787" fg:w="5"/><text x="50.0304%" y="319.50"></text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.01%)</title><rect x="49.7804%" y="293" width="0.0109%" height="15" fill="rgb(205,185,37)" fg:x="22787" fg:w="5"/><text x="50.0304%" y="303.50"></text></g><g><title>block_verifier`&lt;tempfile::dir::TempDir as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="49.7804%" y="277" width="0.0109%" height="15" fill="rgb(238,207,15)" fg:x="22787" fg:w="5"/><text x="50.0304%" y="287.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (5 samples, 0.01%)</title><rect x="49.7804%" y="261" width="0.0109%" height="15" fill="rgb(213,199,42)" fg:x="22787" fg:w="5"/><text x="50.0304%" y="271.50"></text></g><g><title>block_verifier`std::sys::pal::unix::fs::remove_dir_impl::remove_dir_all_recursive (5 samples, 0.01%)</title><rect x="49.7804%" y="245" width="0.0109%" height="15" fill="rgb(235,201,11)" fg:x="22787" fg:w="5"/><text x="50.0304%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__unlinkat (5 samples, 0.01%)</title><rect x="49.7804%" y="229" width="0.0109%" height="15" fill="rgb(207,46,11)" fg:x="22787" fg:w="5"/><text x="50.0304%" y="239.50"></text></g><g><title>block_verifier`rocksdb::Arena::~Arena (5 samples, 0.01%)</title><rect x="49.7936%" y="69" width="0.0109%" height="15" fill="rgb(241,35,35)" fg:x="22793" fg:w="5"/><text x="50.0436%" y="79.50"></text></g><g><title>block_verifier`std::__1::deque&lt;std::__1::unique_ptr&lt;char [], std::__1::default_delete&lt;char []&gt;&gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;char [], std::__1::default_delete&lt;char []&gt;&gt;&gt;&gt;::~deque[abi:ue170006] (5 samples, 0.01%)</title><rect x="49.7936%" y="53" width="0.0109%" height="15" fill="rgb(243,32,47)" fg:x="22793" fg:w="5"/><text x="50.0436%" y="63.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$tracing..instrument..Instrumented$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$� (13 samples, 0.03%)</title><rect x="49.7783%" y="405" width="0.0284%" height="15" fill="rgb(247,202,23)" fg:x="22786" fg:w="13"/><text x="50.0283%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_desc� (13 samples, 0.03%)</title><rect x="49.7783%" y="389" width="0.0284%" height="15" fill="rgb(219,102,11)" fg:x="22786" fg:w="13"/><text x="50.0283%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$fuel_core_services..service..run$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$� (13 samples, 0.03%)</title><rect x="49.7783%" y="373" width="0.0284%" height="15" fill="rgb(243,110,44)" fg:x="22786" fg:w="13"/><text x="50.0283%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_gas_price_service::v0::service::GasPriceServiceV0&lt;fuel_core_gas_price_service::common::l2_block_source::FuelL2BlockSource&lt;fuel_core::service::adapters::ConsensusParametersProvider&gt;,fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase&gt;&gt;&gt;&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="49.7783%" y="357" width="0.0284%" height="15" fill="rgb(222,74,54)" fg:x="22786" fg:w="13"/><text x="50.0283%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::service::adapters::consensus_parameters_provider::SharedState&gt; (12 samples, 0.03%)</title><rect x="49.7804%" y="341" width="0.0262%" height="15" fill="rgb(216,99,12)" fg:x="22787" fg:w="12"/><text x="50.0304%" y="351.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (12 samples, 0.03%)</title><rect x="49.7804%" y="325" width="0.0262%" height="15" fill="rgb(226,22,26)" fg:x="22787" fg:w="12"/><text x="50.0304%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::state::rocks_db::RocksDb&lt;fuel_core::state::historical_rocksdb::description::Historical&lt;fuel_core::database::database_description::relayer::Relayer&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="49.7914%" y="309" width="0.0153%" height="15" fill="rgb(217,163,10)" fg:x="22792" fg:w="7"/><text x="50.0414%" y="319.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.02%)</title><rect x="49.7914%" y="293" width="0.0153%" height="15" fill="rgb(213,25,53)" fg:x="22792" fg:w="7"/><text x="50.0414%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,rocksdb::db::DBWithThreadModeInner&gt;&gt; (7 samples, 0.02%)</title><rect x="49.7914%" y="277" width="0.0153%" height="15" fill="rgb(252,105,26)" fg:x="22792" fg:w="7"/><text x="50.0414%" y="287.50"></text></g><g><title>block_verifier`rocksdb_close (7 samples, 0.02%)</title><rect x="49.7914%" y="261" width="0.0153%" height="15" fill="rgb(220,39,43)" fg:x="22792" fg:w="7"/><text x="50.0414%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::~DBImpl (7 samples, 0.02%)</title><rect x="49.7914%" y="245" width="0.0153%" height="15" fill="rgb(229,68,48)" fg:x="22792" fg:w="7"/><text x="50.0414%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::~DBImpl (7 samples, 0.02%)</title><rect x="49.7914%" y="229" width="0.0153%" height="15" fill="rgb(252,8,32)" fg:x="22792" fg:w="7"/><text x="50.0414%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CloseHelper (7 samples, 0.02%)</title><rect x="49.7914%" y="213" width="0.0153%" height="15" fill="rgb(223,20,43)" fg:x="22792" fg:w="7"/><text x="50.0414%" y="223.50"></text></g><g><title>block_verifier`rocksdb::VersionSet::~VersionSet (6 samples, 0.01%)</title><rect x="49.7936%" y="197" width="0.0131%" height="15" fill="rgb(229,81,49)" fg:x="22793" fg:w="6"/><text x="50.0436%" y="207.50"></text></g><g><title>block_verifier`rocksdb::VersionSet::~VersionSet (6 samples, 0.01%)</title><rect x="49.7936%" y="181" width="0.0131%" height="15" fill="rgb(236,28,36)" fg:x="22793" fg:w="6"/><text x="50.0436%" y="191.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilySet::~ColumnFamilySet (6 samples, 0.01%)</title><rect x="49.7936%" y="165" width="0.0131%" height="15" fill="rgb(249,185,26)" fg:x="22793" fg:w="6"/><text x="50.0436%" y="175.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::UnrefAndTryDelete (6 samples, 0.01%)</title><rect x="49.7936%" y="149" width="0.0131%" height="15" fill="rgb(249,174,33)" fg:x="22793" fg:w="6"/><text x="50.0436%" y="159.50"></text></g><g><title>block_verifier`rocksdb::SuperVersion::Cleanup (6 samples, 0.01%)</title><rect x="49.7936%" y="133" width="0.0131%" height="15" fill="rgb(233,201,37)" fg:x="22793" fg:w="6"/><text x="50.0436%" y="143.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::UnrefAndTryDelete (6 samples, 0.01%)</title><rect x="49.7936%" y="117" width="0.0131%" height="15" fill="rgb(221,78,26)" fg:x="22793" fg:w="6"/><text x="50.0436%" y="127.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::~ColumnFamilyData (6 samples, 0.01%)</title><rect x="49.7936%" y="101" width="0.0131%" height="15" fill="rgb(250,127,30)" fg:x="22793" fg:w="6"/><text x="50.0436%" y="111.50"></text></g><g><title>block_verifier`rocksdb::MemTable::~MemTable (6 samples, 0.01%)</title><rect x="49.7936%" y="85" width="0.0131%" height="15" fill="rgb(230,49,44)" fg:x="22793" fg:w="6"/><text x="50.0436%" y="95.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (7 samples, 0.02%)</title><rect x="49.8307%" y="213" width="0.0153%" height="15" fill="rgb(229,67,23)" fg:x="22810" fg:w="7"/><text x="50.0807%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="49.8329%" y="197" width="0.0131%" height="15" fill="rgb(249,83,47)" fg:x="22811" fg:w="6"/><text x="50.0829%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (7 samples, 0.02%)</title><rect x="49.8635%" y="181" width="0.0153%" height="15" fill="rgb(215,43,3)" fg:x="22825" fg:w="7"/><text x="50.1135%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (8 samples, 0.02%)</title><rect x="49.8831%" y="181" width="0.0175%" height="15" fill="rgb(238,154,13)" fg:x="22834" fg:w="8"/><text x="50.1331%" y="191.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fuel_tx::transaction::Transaction&gt;&gt; (38 samples, 0.08%)</title><rect x="49.8285%" y="245" width="0.0830%" height="15" fill="rgb(219,56,2)" fg:x="22809" fg:w="38"/><text x="50.0785%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (38 samples, 0.08%)</title><rect x="49.8285%" y="229" width="0.0830%" height="15" fill="rgb(233,0,4)" fg:x="22809" fg:w="38"/><text x="50.0785%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.06%)</title><rect x="49.8482%" y="213" width="0.0634%" height="15" fill="rgb(235,30,7)" fg:x="22818" fg:w="29"/><text x="50.0982%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (28 samples, 0.06%)</title><rect x="49.8504%" y="197" width="0.0612%" height="15" fill="rgb(250,79,13)" fg:x="22819" fg:w="28"/><text x="50.1004%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (5 samples, 0.01%)</title><rect x="49.9006%" y="181" width="0.0109%" height="15" fill="rgb(211,146,34)" fg:x="22842" fg:w="5"/><text x="50.1506%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="49.9137%" y="245" width="0.0262%" height="15" fill="rgb(228,22,38)" fg:x="22848" fg:w="12"/><text x="50.1637%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="49.9159%" y="229" width="0.0240%" height="15" fill="rgb(235,168,5)" fg:x="22849" fg:w="11"/><text x="50.1659%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_types::services::block_importer::ImportResult&gt; (56 samples, 0.12%)</title><rect x="49.8220%" y="261" width="0.1223%" height="15" fill="rgb(221,155,16)" fg:x="22806" fg:w="56"/><text x="50.0720%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_importer::importer::Awaiter&gt; (57 samples, 0.12%)</title><rect x="49.8220%" y="277" width="0.1245%" height="15" fill="rgb(215,215,53)" fg:x="22806" fg:w="57"/><text x="50.0720%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (16 samples, 0.03%)</title><rect x="50.0557%" y="229" width="0.0350%" height="15" fill="rgb(223,4,10)" fg:x="22913" fg:w="16"/><text x="50.3057%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.02%)</title><rect x="50.0950%" y="213" width="0.0240%" height="15" fill="rgb(234,103,6)" fg:x="22931" fg:w="11"/><text x="50.3450%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (73 samples, 0.16%)</title><rect x="49.9618%" y="261" width="0.1595%" height="15" fill="rgb(227,97,0)" fg:x="22870" fg:w="73"/><text x="50.2118%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (67 samples, 0.15%)</title><rect x="49.9749%" y="245" width="0.1464%" height="15" fill="rgb(234,150,53)" fg:x="22876" fg:w="67"/><text x="50.2249%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (13 samples, 0.03%)</title><rect x="50.0928%" y="229" width="0.0284%" height="15" fill="rgb(228,201,54)" fg:x="22930" fg:w="13"/><text x="50.3428%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (82 samples, 0.18%)</title><rect x="49.9465%" y="277" width="0.1791%" height="15" fill="rgb(222,22,37)" fg:x="22863" fg:w="82"/><text x="50.1965%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (6 samples, 0.01%)</title><rect x="50.1256%" y="277" width="0.0131%" height="15" fill="rgb(237,53,32)" fg:x="22945" fg:w="6"/><text x="50.3756%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (168 samples, 0.37%)</title><rect x="49.7783%" y="485" width="0.3670%" height="15" fill="rgb(233,25,53)" fg:x="22786" fg:w="168"/><text x="50.0283%" y="495.50"></text></g><g><title>block_verifier`&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (168 samples, 0.37%)</title><rect x="49.7783%" y="469" width="0.3670%" height="15" fill="rgb(210,40,34)" fg:x="22786" fg:w="168"/><text x="50.0283%" y="479.50"></text></g><g><title>block_verifier`tokio::runtime::scheduler::current_thread::shutdown2 (168 samples, 0.37%)</title><rect x="49.7783%" y="453" width="0.3670%" height="15" fill="rgb(241,220,44)" fg:x="22786" fg:w="168"/><text x="50.0283%" y="463.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::shutdown (168 samples, 0.37%)</title><rect x="49.7783%" y="437" width="0.3670%" height="15" fill="rgb(235,28,35)" fg:x="22786" fg:w="168"/><text x="50.0283%" y="447.50"></text></g><g><title>block_verifier`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (168 samples, 0.37%)</title><rect x="49.7783%" y="421" width="0.3670%" height="15" fill="rgb(210,56,17)" fg:x="22786" fg:w="168"/><text x="50.0283%" y="431.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (154 samples, 0.34%)</title><rect x="49.8088%" y="405" width="0.3364%" height="15" fill="rgb(224,130,29)" fg:x="22800" fg:w="154"/><text x="50.0588%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt; (154 samples, 0.34%)</title><rect x="49.8088%" y="389" width="0.3364%" height="15" fill="rgb(235,212,8)" fg:x="22800" fg:w="154"/><text x="50.0588%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;fuel_core_services::service::run&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (154 samples, 0.34%)</title><rect x="49.8088%" y="373" width="0.3364%" height="15" fill="rgb(223,33,50)" fg:x="22800" fg:w="154"/><text x="50.0588%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::graphql_api::worker_service::Task&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt; (154 samples, 0.34%)</title><rect x="49.8088%" y="357" width="0.3364%" height="15" fill="rgb(219,149,13)" fg:x="22800" fg:w="154"/><text x="50.0588%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::stream::filter_map::FilterMap&lt;tokio_stream::wrappers::broadcast::BroadcastStream&lt;fuel_core_importer::ImporterResult&gt;,futures_util::future::ready::Ready&lt;core::option::Option&lt;fuel_core_importer::ImporterResult&gt;&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;&gt; (150 samples, 0.33%)</title><rect x="49.8176%" y="341" width="0.3277%" height="15" fill="rgb(250,156,29)" fg:x="22804" fg:w="150"/><text x="50.0676%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::sync::broadcast::Receiver&lt;fuel_core_importer::ImporterResult&gt;&gt; (148 samples, 0.32%)</title><rect x="49.8220%" y="325" width="0.3233%" height="15" fill="rgb(216,193,19)" fg:x="22806" fg:w="148"/><text x="50.0720%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::sync::broadcast::RecvGuard&lt;fuel_core_importer::ImporterResult&gt;&gt; (148 samples, 0.32%)</title><rect x="49.8220%" y="309" width="0.3233%" height="15" fill="rgb(216,135,14)" fg:x="22806" fg:w="148"/><text x="50.0720%" y="319.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (148 samples, 0.32%)</title><rect x="49.8220%" y="293" width="0.3233%" height="15" fill="rgb(241,47,5)" fg:x="22806" fg:w="148"/><text x="50.0720%" y="303.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (25 samples, 0.05%)</title><rect x="50.1475%" y="485" width="0.0546%" height="15" fill="rgb(233,42,35)" fg:x="22955" fg:w="25"/><text x="50.3975%" y="495.50"></text></g><g><title>block_verifier`fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt;::store_modifications_history (7 samples, 0.02%)</title><rect x="50.2108%" y="373" width="0.0153%" height="15" fill="rgb(231,13,6)" fg:x="22984" fg:w="7"/><text x="50.4608%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;TxPool,BlockImporter,OnChain,OffChain&gt; as fuel_core_services::service::RunnableService&gt;::into_task::_{{closure}} (18 samples, 0.04%)</title><rect x="50.2064%" y="437" width="0.0393%" height="15" fill="rgb(207,181,40)" fg:x="22982" fg:w="18"/><text x="50.4564%" y="447.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::worker_service::Task&lt;TxPool,D&gt;::process_block (16 samples, 0.03%)</title><rect x="50.2108%" y="421" width="0.0350%" height="15" fill="rgb(254,173,49)" fg:x="22984" fg:w="16"/><text x="50.4608%" y="431.50"></text></g><g><title>block_verifier`fuel_core::database::_&lt;impl fuel_core_storage::transactional::Modifiable for fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;::commit_changes (16 samples, 0.03%)</title><rect x="50.2108%" y="405" width="0.0350%" height="15" fill="rgb(221,1,38)" fg:x="22984" fg:w="16"/><text x="50.4608%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (16 samples, 0.03%)</title><rect x="50.2108%" y="389" width="0.0350%" height="15" fill="rgb(206,124,46)" fg:x="22984" fg:w="16"/><text x="50.4608%" y="399.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (9 samples, 0.02%)</title><rect x="50.2261%" y="373" width="0.0197%" height="15" fill="rgb(249,21,11)" fg:x="22991" fg:w="9"/><text x="50.4761%" y="383.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (9 samples, 0.02%)</title><rect x="50.2261%" y="357" width="0.0197%" height="15" fill="rgb(222,201,40)" fg:x="22991" fg:w="9"/><text x="50.4761%" y="367.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (9 samples, 0.02%)</title><rect x="50.2261%" y="341" width="0.0197%" height="15" fill="rgb(235,61,29)" fg:x="22991" fg:w="9"/><text x="50.4761%" y="351.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (9 samples, 0.02%)</title><rect x="50.2261%" y="325" width="0.0197%" height="15" fill="rgb(219,207,3)" fg:x="22991" fg:w="9"/><text x="50.4761%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="50.2261%" y="309" width="0.0197%" height="15" fill="rgb(222,56,46)" fg:x="22991" fg:w="9"/><text x="50.4761%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (9 samples, 0.02%)</title><rect x="50.2261%" y="293" width="0.0197%" height="15" fill="rgb(239,76,54)" fg:x="22991" fg:w="9"/><text x="50.4761%" y="303.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="50.2261%" y="277" width="0.0197%" height="15" fill="rgb(231,124,27)" fg:x="22991" fg:w="9"/><text x="50.4761%" y="287.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="50.2261%" y="261" width="0.0197%" height="15" fill="rgb(249,195,6)" fg:x="22991" fg:w="9"/><text x="50.4761%" y="271.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7 samples, 0.02%)</title><rect x="50.2305%" y="245" width="0.0153%" height="15" fill="rgb(237,174,47)" fg:x="22993" fg:w="7"/><text x="50.4805%" y="255.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7 samples, 0.02%)</title><rect x="50.2305%" y="229" width="0.0153%" height="15" fill="rgb(206,201,31)" fg:x="22993" fg:w="7"/><text x="50.4805%" y="239.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (23 samples, 0.05%)</title><rect x="50.2043%" y="485" width="0.0502%" height="15" fill="rgb(231,57,52)" fg:x="22981" fg:w="23"/><text x="50.4543%" y="495.50"></text></g><g><title>block_verifier`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.05%)</title><rect x="50.2043%" y="469" width="0.0502%" height="15" fill="rgb(248,177,22)" fg:x="22981" fg:w="23"/><text x="50.4543%" y="479.50"></text></g><g><title>block_verifier`fuel_core_services::service::initialize_loop::_{{closure}} (23 samples, 0.05%)</title><rect x="50.2043%" y="453" width="0.0502%" height="15" fill="rgb(215,211,37)" fg:x="22981" fg:w="23"/><text x="50.4543%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`read (6,529 samples, 14.26%)</title><rect x="50.2545%" y="485" width="14.2632%" height="15" fill="rgb(241,128,51)" fg:x="23004" fg:w="6529"/><text x="50.5045%" y="495.50">libsystem_kernel.dylib..</text></g><g><title>block_verifier`block_verifier::main (29,350 samples, 64.12%)</title><rect x="0.4129%" y="501" width="64.1180%" height="15" fill="rgb(227,165,31)" fg:x="189" fg:w="29350"/><text x="0.6629%" y="511.50">block_verifier`block_verifier::main</text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="64.5177%" y="485" width="0.0131%" height="15" fill="rgb(228,167,24)" fg:x="29533" fg:w="6"/><text x="64.7677%" y="495.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (13 samples, 0.03%)</title><rect x="64.5309%" y="501" width="0.0284%" height="15" fill="rgb(228,143,12)" fg:x="29539" fg:w="13"/><text x="64.7809%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`read (3,016 samples, 6.59%)</title><rect x="64.5593%" y="501" width="6.5887%" height="15" fill="rgb(249,149,8)" fg:x="29552" fg:w="3016"/><text x="64.8093%" y="511.50">libsystem..</text></g><g><title>block_verifier`main (32,385 samples, 70.75%)</title><rect x="0.4085%" y="533" width="70.7482%" height="15" fill="rgb(243,35,44)" fg:x="187" fg:w="32385"/><text x="0.6585%" y="543.50">block_verifier`main</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (32,385 samples, 70.75%)</title><rect x="0.4085%" y="517" width="70.7482%" height="15" fill="rgb(246,89,9)" fg:x="187" fg:w="32385"/><text x="0.6585%" y="527.50">block_verifier`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>dyld`start (32,386 samples, 70.75%)</title><rect x="0.4085%" y="549" width="70.7504%" height="15" fill="rgb(233,213,13)" fg:x="187" fg:w="32386"/><text x="0.6585%" y="559.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__exit (7 samples, 0.02%)</title><rect x="71.1589%" y="549" width="0.0153%" height="15" fill="rgb(233,141,41)" fg:x="32573" fg:w="7"/><text x="71.4089%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (5 samples, 0.01%)</title><rect x="71.2135%" y="293" width="0.0109%" height="15" fill="rgb(239,167,4)" fg:x="32598" fg:w="5"/><text x="71.4635%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (5 samples, 0.01%)</title><rect x="71.2245%" y="293" width="0.0109%" height="15" fill="rgb(209,217,16)" fg:x="32603" fg:w="5"/><text x="71.4745%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.06%)</title><rect x="71.1917%" y="325" width="0.0634%" height="15" fill="rgb(219,88,35)" fg:x="32588" fg:w="29"/><text x="71.4417%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.06%)</title><rect x="71.1983%" y="309" width="0.0568%" height="15" fill="rgb(220,193,23)" fg:x="32591" fg:w="26"/><text x="71.4483%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="71.2354%" y="293" width="0.0197%" height="15" fill="rgb(230,90,52)" fg:x="32608" fg:w="9"/><text x="71.4854%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (35 samples, 0.08%)</title><rect x="71.1808%" y="341" width="0.0765%" height="15" fill="rgb(252,106,19)" fg:x="32583" fg:w="35"/><text x="71.4308%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (49 samples, 0.11%)</title><rect x="71.1764%" y="373" width="0.1070%" height="15" fill="rgb(206,74,20)" fg:x="32581" fg:w="49"/><text x="71.4264%" y="383.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (48 samples, 0.10%)</title><rect x="71.1786%" y="357" width="0.1049%" height="15" fill="rgb(230,138,44)" fg:x="32582" fg:w="48"/><text x="71.4286%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (50 samples, 0.11%)</title><rect x="71.1764%" y="389" width="0.1092%" height="15" fill="rgb(235,182,43)" fg:x="32581" fg:w="50"/><text x="71.4264%" y="399.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (51 samples, 0.11%)</title><rect x="71.1764%" y="421" width="0.1114%" height="15" fill="rgb(242,16,51)" fg:x="32581" fg:w="51"/><text x="71.4264%" y="431.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (51 samples, 0.11%)</title><rect x="71.1764%" y="405" width="0.1114%" height="15" fill="rgb(248,9,4)" fg:x="32581" fg:w="51"/><text x="71.4264%" y="415.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (13 samples, 0.03%)</title><rect x="71.2944%" y="373" width="0.0284%" height="15" fill="rgb(210,31,22)" fg:x="32635" fg:w="13"/><text x="71.5444%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (15 samples, 0.03%)</title><rect x="71.5259%" y="325" width="0.0328%" height="15" fill="rgb(239,54,39)" fg:x="32741" fg:w="15"/><text x="71.7759%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (23 samples, 0.05%)</title><rect x="71.5587%" y="325" width="0.0502%" height="15" fill="rgb(230,99,41)" fg:x="32756" fg:w="23"/><text x="71.8087%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.04%)</title><rect x="71.6090%" y="325" width="0.0371%" height="15" fill="rgb(253,106,12)" fg:x="32779" fg:w="17"/><text x="71.8590%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (9 samples, 0.02%)</title><rect x="71.6461%" y="325" width="0.0197%" height="15" fill="rgb(213,46,41)" fg:x="32796" fg:w="9"/><text x="71.8961%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (9 samples, 0.02%)</title><rect x="71.6658%" y="325" width="0.0197%" height="15" fill="rgb(215,133,35)" fg:x="32805" fg:w="9"/><text x="71.9158%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (138 samples, 0.30%)</title><rect x="71.4036%" y="341" width="0.3015%" height="15" fill="rgb(213,28,5)" fg:x="32685" fg:w="138"/><text x="71.6536%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (9 samples, 0.02%)</title><rect x="71.6854%" y="325" width="0.0197%" height="15" fill="rgb(215,77,49)" fg:x="32814" fg:w="9"/><text x="71.9354%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (9 samples, 0.02%)</title><rect x="71.6854%" y="309" width="0.0197%" height="15" fill="rgb(248,100,22)" fg:x="32814" fg:w="9"/><text x="71.9354%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (166 samples, 0.36%)</title><rect x="71.3446%" y="357" width="0.3626%" height="15" fill="rgb(208,67,9)" fg:x="32658" fg:w="166"/><text x="71.5946%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="71.7073%" y="357" width="0.0153%" height="15" fill="rgb(219,133,21)" fg:x="32824" fg:w="7"/><text x="71.9573%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (188 samples, 0.41%)</title><rect x="71.3228%" y="373" width="0.4107%" height="15" fill="rgb(246,46,29)" fg:x="32648" fg:w="188"/><text x="71.5728%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="71.7226%" y="357" width="0.0109%" height="15" fill="rgb(246,185,52)" fg:x="32831" fg:w="5"/><text x="71.9726%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (10 samples, 0.02%)</title><rect x="71.8842%" y="341" width="0.0218%" height="15" fill="rgb(252,136,11)" fg:x="32905" fg:w="10"/><text x="72.1342%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="71.8930%" y="325" width="0.0131%" height="15" fill="rgb(219,138,53)" fg:x="32909" fg:w="6"/><text x="72.1430%" y="335.50"></text></g><g><title>block_verifier`fuel_core::state::historical_rocksdb::height_key (19 samples, 0.04%)</title><rect x="71.9061%" y="341" width="0.0415%" height="15" fill="rgb(211,51,23)" fg:x="32915" fg:w="19"/><text x="72.1561%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="71.9126%" y="325" width="0.0350%" height="15" fill="rgb(247,221,28)" fg:x="32918" fg:w="16"/><text x="72.1626%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.03%)</title><rect x="71.9214%" y="309" width="0.0262%" height="15" fill="rgb(251,222,45)" fg:x="32922" fg:w="12"/><text x="72.1714%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="71.9257%" y="293" width="0.0218%" height="15" fill="rgb(217,162,53)" fg:x="32924" fg:w="10"/><text x="72.1757%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="72.0131%" y="229" width="0.0240%" height="15" fill="rgb(229,93,14)" fg:x="32964" fg:w="11"/><text x="72.2631%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="72.0175%" y="213" width="0.0197%" height="15" fill="rgb(209,67,49)" fg:x="32966" fg:w="9"/><text x="72.2675%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="72.0240%" y="197" width="0.0131%" height="15" fill="rgb(213,87,29)" fg:x="32969" fg:w="6"/><text x="72.2740%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (19 samples, 0.04%)</title><rect x="72.0087%" y="245" width="0.0415%" height="15" fill="rgb(205,151,52)" fg:x="32962" fg:w="19"/><text x="72.2587%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (25 samples, 0.05%)</title><rect x="71.9978%" y="261" width="0.0546%" height="15" fill="rgb(253,215,39)" fg:x="32957" fg:w="25"/><text x="72.2478%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (37 samples, 0.08%)</title><rect x="71.9825%" y="293" width="0.0808%" height="15" fill="rgb(221,220,41)" fg:x="32950" fg:w="37"/><text x="72.2325%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (33 samples, 0.07%)</title><rect x="71.9913%" y="277" width="0.0721%" height="15" fill="rgb(218,133,21)" fg:x="32954" fg:w="33"/><text x="72.2413%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="72.0524%" y="261" width="0.0109%" height="15" fill="rgb(221,193,43)" fg:x="32982" fg:w="5"/><text x="72.3024%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (42 samples, 0.09%)</title><rect x="71.9782%" y="309" width="0.0918%" height="15" fill="rgb(240,128,52)" fg:x="32948" fg:w="42"/><text x="72.2282%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="72.0786%" y="277" width="0.0109%" height="15" fill="rgb(253,114,12)" fg:x="32994" fg:w="5"/><text x="72.3286%" y="287.50"></text></g><g><title>block_verifier`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (62 samples, 0.14%)</title><rect x="71.9563%" y="325" width="0.1354%" height="15" fill="rgb(215,223,47)" fg:x="32938" fg:w="62"/><text x="72.2063%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="72.0699%" y="309" width="0.0218%" height="15" fill="rgb(248,225,23)" fg:x="32990" fg:w="10"/><text x="72.3199%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="72.0743%" y="293" width="0.0175%" height="15" fill="rgb(250,108,0)" fg:x="32992" fg:w="8"/><text x="72.3243%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="72.0939%" y="325" width="0.0109%" height="15" fill="rgb(228,208,7)" fg:x="33001" fg:w="5"/><text x="72.3439%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="72.1049%" y="325" width="0.0153%" height="15" fill="rgb(244,45,10)" fg:x="33006" fg:w="7"/><text x="72.3549%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="72.1070%" y="309" width="0.0131%" height="15" fill="rgb(207,125,25)" fg:x="33007" fg:w="6"/><text x="72.3570%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::historical_rocksdb::serialize (81 samples, 0.18%)</title><rect x="71.9476%" y="341" width="0.1770%" height="15" fill="rgb(210,195,18)" fg:x="32934" fg:w="81"/><text x="72.1976%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="72.1267%" y="341" width="0.0109%" height="15" fill="rgb(249,80,12)" fg:x="33016" fg:w="5"/><text x="72.3767%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="72.1726%" y="309" width="0.0175%" height="15" fill="rgb(221,65,9)" fg:x="33037" fg:w="8"/><text x="72.4226%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="72.1901%" y="309" width="0.0109%" height="15" fill="rgb(235,49,36)" fg:x="33045" fg:w="5"/><text x="72.4401%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.06%)</title><rect x="72.1398%" y="341" width="0.0634%" height="15" fill="rgb(225,32,20)" fg:x="33022" fg:w="29"/><text x="72.3898%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.04%)</title><rect x="72.1595%" y="325" width="0.0437%" height="15" fill="rgb(215,141,46)" fg:x="33031" fg:w="20"/><text x="72.4095%" y="335.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 0.33%)</title><rect x="71.8820%" y="357" width="0.3342%" height="15" fill="rgb(250,160,47)" fg:x="32904" fg:w="153"/><text x="72.1320%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.01%)</title><rect x="72.2359%" y="357" width="0.0131%" height="15" fill="rgb(216,222,40)" fg:x="33066" fg:w="6"/><text x="72.4859%" y="367.50"></text></g><g><title>block_verifier`core::slice::sort::stable::driftsort_main (5 samples, 0.01%)</title><rect x="72.2578%" y="357" width="0.0109%" height="15" fill="rgb(234,217,39)" fg:x="33076" fg:w="5"/><text x="72.5078%" y="367.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="72.2818%" y="149" width="0.0109%" height="15" fill="rgb(207,178,40)" fg:x="33087" fg:w="5"/><text x="72.5318%" y="159.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureSomeOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, rocksdb::OptionTypeInfo, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, rocksdb::OptionTypeInfo&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="72.2818%" y="133" width="0.0109%" height="15" fill="rgb(221,136,13)" fg:x="33087" fg:w="5"/><text x="72.5318%" y="143.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::EndSection(rocksdb::ConfigOptions const&amp;, rocksdb::OptionSection, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7 samples, 0.02%)</title><rect x="72.2796%" y="213" width="0.0153%" height="15" fill="rgb(249,199,10)" fg:x="33086" fg:w="7"/><text x="72.5296%" y="223.50"></text></g><g><title>block_verifier`rocksdb::GetColumnFamilyOptionsFromMap(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="72.2818%" y="197" width="0.0131%" height="15" fill="rgb(249,222,13)" fg:x="33087" fg:w="6"/><text x="72.5318%" y="207.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableCFOptions::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (6 samples, 0.01%)</title><rect x="72.2818%" y="181" width="0.0131%" height="15" fill="rgb(244,185,38)" fg:x="33087" fg:w="6"/><text x="72.5318%" y="191.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (6 samples, 0.01%)</title><rect x="72.2818%" y="165" width="0.0131%" height="15" fill="rgb(236,202,9)" fg:x="33087" fg:w="6"/><text x="72.5318%" y="175.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (10 samples, 0.02%)</title><rect x="72.2796%" y="245" width="0.0218%" height="15" fill="rgb(250,229,37)" fg:x="33086" fg:w="10"/><text x="72.5296%" y="255.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (10 samples, 0.02%)</title><rect x="72.2796%" y="229" width="0.0218%" height="15" fill="rgb(206,174,23)" fg:x="33086" fg:w="10"/><text x="72.5296%" y="239.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (13 samples, 0.03%)</title><rect x="72.2753%" y="325" width="0.0284%" height="15" fill="rgb(211,33,43)" fg:x="33084" fg:w="13"/><text x="72.5253%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (13 samples, 0.03%)</title><rect x="72.2753%" y="309" width="0.0284%" height="15" fill="rgb(245,58,50)" fg:x="33084" fg:w="13"/><text x="72.5253%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (13 samples, 0.03%)</title><rect x="72.2753%" y="293" width="0.0284%" height="15" fill="rgb(244,68,36)" fg:x="33084" fg:w="13"/><text x="72.5253%" y="303.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="72.2796%" y="277" width="0.0240%" height="15" fill="rgb(232,229,15)" fg:x="33086" fg:w="11"/><text x="72.5296%" y="287.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="72.2796%" y="261" width="0.0240%" height="15" fill="rgb(254,30,23)" fg:x="33086" fg:w="11"/><text x="72.5296%" y="271.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (14 samples, 0.03%)</title><rect x="72.2753%" y="357" width="0.0306%" height="15" fill="rgb(235,160,14)" fg:x="33084" fg:w="14"/><text x="72.5253%" y="367.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (14 samples, 0.03%)</title><rect x="72.2753%" y="341" width="0.0306%" height="15" fill="rgb(212,155,44)" fg:x="33084" fg:w="14"/><text x="72.5253%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (31 samples, 0.07%)</title><rect x="72.3058%" y="357" width="0.0677%" height="15" fill="rgb(226,2,50)" fg:x="33098" fg:w="31"/><text x="72.5558%" y="367.50"></text></g><g><title>block_verifier`serde::ser::impls::_&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.03%)</title><rect x="72.3474%" y="341" width="0.0262%" height="15" fill="rgb(234,177,6)" fg:x="33117" fg:w="12"/><text x="72.5974%" y="351.50"></text></g><g><title>block_verifier`rocksdb::db::convert_values (9 samples, 0.02%)</title><rect x="72.3736%" y="357" width="0.0197%" height="15" fill="rgb(217,24,9)" fg:x="33129" fg:w="9"/><text x="72.6236%" y="367.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (14 samples, 0.03%)</title><rect x="72.5658%" y="277" width="0.0306%" height="15" fill="rgb(220,13,46)" fg:x="33217" fg:w="14"/><text x="72.8158%" y="287.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9 samples, 0.02%)</title><rect x="72.6750%" y="261" width="0.0197%" height="15" fill="rgb(239,221,27)" fg:x="33267" fg:w="9"/><text x="72.9250%" y="271.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (5 samples, 0.01%)</title><rect x="72.6947%" y="261" width="0.0109%" height="15" fill="rgb(222,198,25)" fg:x="33276" fg:w="5"/><text x="72.9447%" y="271.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (19 samples, 0.04%)</title><rect x="72.7056%" y="261" width="0.0415%" height="15" fill="rgb(211,99,13)" fg:x="33281" fg:w="19"/><text x="72.9556%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (46 samples, 0.10%)</title><rect x="72.7471%" y="261" width="0.1005%" height="15" fill="rgb(232,111,31)" fg:x="33300" fg:w="46"/><text x="72.9971%" y="271.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (193 samples, 0.42%)</title><rect x="72.4478%" y="293" width="0.4216%" height="15" fill="rgb(245,82,37)" fg:x="33163" fg:w="193"/><text x="72.6978%" y="303.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (125 samples, 0.27%)</title><rect x="72.5964%" y="277" width="0.2731%" height="15" fill="rgb(227,149,46)" fg:x="33231" fg:w="125"/><text x="72.8464%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.02%)</title><rect x="72.8476%" y="261" width="0.0218%" height="15" fill="rgb(218,36,50)" fg:x="33346" fg:w="10"/><text x="73.0976%" y="271.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.01%)</title><rect x="72.8826%" y="245" width="0.0131%" height="15" fill="rgb(226,80,48)" fg:x="33362" fg:w="6"/><text x="73.1326%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="72.8826%" y="229" width="0.0131%" height="15" fill="rgb(238,224,15)" fg:x="33362" fg:w="6"/><text x="73.1326%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (7 samples, 0.02%)</title><rect x="72.8826%" y="277" width="0.0153%" height="15" fill="rgb(241,136,10)" fg:x="33362" fg:w="7"/><text x="73.1326%" y="287.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (7 samples, 0.02%)</title><rect x="72.8826%" y="261" width="0.0153%" height="15" fill="rgb(208,32,45)" fg:x="33362" fg:w="7"/><text x="73.1326%" y="271.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (211 samples, 0.46%)</title><rect x="72.4413%" y="309" width="0.4610%" height="15" fill="rgb(207,135,9)" fg:x="33160" fg:w="211"/><text x="72.6913%" y="319.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (12 samples, 0.03%)</title><rect x="72.8760%" y="293" width="0.0262%" height="15" fill="rgb(206,86,44)" fg:x="33359" fg:w="12"/><text x="73.1260%" y="303.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (213 samples, 0.47%)</title><rect x="72.4391%" y="325" width="0.4653%" height="15" fill="rgb(245,177,15)" fg:x="33159" fg:w="213"/><text x="72.6891%" y="335.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="72.9044%" y="325" width="0.0197%" height="15" fill="rgb(206,64,50)" fg:x="33372" fg:w="9"/><text x="73.1544%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt;&gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;*, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (241 samples, 0.53%)</title><rect x="72.4085%" y="341" width="0.5265%" height="15" fill="rgb(234,36,40)" fg:x="33145" fg:w="241"/><text x="72.6585%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="72.9394%" y="341" width="0.0109%" height="15" fill="rgb(213,64,8)" fg:x="33388" fg:w="5"/><text x="73.1894%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="72.9503%" y="341" width="0.0109%" height="15" fill="rgb(210,75,36)" fg:x="33393" fg:w="5"/><text x="73.2003%" y="351.50"></text></g><g><title>block_verifier`rocksdb_multi_get_cf (262 samples, 0.57%)</title><rect x="72.3932%" y="357" width="0.5724%" height="15" fill="rgb(229,88,21)" fg:x="33138" fg:w="262"/><text x="72.6432%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.01%)</title><rect x="72.9656%" y="357" width="0.0109%" height="15" fill="rgb(252,204,47)" fg:x="33400" fg:w="5"/><text x="73.2156%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.07%)</title><rect x="72.9896%" y="357" width="0.0721%" height="15" fill="rgb(208,77,27)" fg:x="33411" fg:w="33"/><text x="73.2396%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.04%)</title><rect x="73.0224%" y="341" width="0.0393%" height="15" fill="rgb(221,76,26)" fg:x="33426" fg:w="18"/><text x="73.2724%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="73.0464%" y="325" width="0.0153%" height="15" fill="rgb(225,139,18)" fg:x="33437" fg:w="7"/><text x="73.2964%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.02%)</title><rect x="73.0901%" y="325" width="0.0218%" height="15" fill="rgb(230,137,11)" fg:x="33457" fg:w="10"/><text x="73.3401%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.09%)</title><rect x="73.0617%" y="357" width="0.0918%" height="15" fill="rgb(212,28,1)" fg:x="33444" fg:w="42"/><text x="73.3117%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.07%)</title><rect x="73.0814%" y="341" width="0.0721%" height="15" fill="rgb(248,164,17)" fg:x="33453" fg:w="33"/><text x="73.3314%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.04%)</title><rect x="73.1120%" y="325" width="0.0415%" height="15" fill="rgb(222,171,42)" fg:x="33467" fg:w="19"/><text x="73.3620%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="73.1557%" y="357" width="0.0109%" height="15" fill="rgb(243,84,45)" fg:x="33487" fg:w="5"/><text x="73.4057%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="73.1666%" y="357" width="0.0175%" height="15" fill="rgb(252,49,23)" fg:x="33492" fg:w="8"/><text x="73.4166%" y="367.50"></text></g><g><title>block_verifier`fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt;::store_modifications_history (666 samples, 1.45%)</title><rect x="71.7335%" y="373" width="1.4549%" height="15" fill="rgb(215,19,7)" fg:x="32836" fg:w="666"/><text x="71.9835%" y="383.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::RenameTempFileToOptionsFile(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="73.2015%" y="277" width="0.0109%" height="15" fill="rgb(238,81,41)" fg:x="33508" fg:w="5"/><text x="73.4515%" y="287.50"></text></g><g><title>block_verifier`rocksdb::GetStringFromColumnFamilyOptions(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="73.2190%" y="245" width="0.0109%" height="15" fill="rgb(210,199,37)" fg:x="33516" fg:w="5"/><text x="73.4690%" y="255.50"></text></g><g><title>block_verifier`rocksdb::Configurable::GetOptionString(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="73.2190%" y="229" width="0.0109%" height="15" fill="rgb(244,192,49)" fg:x="33516" fg:w="5"/><text x="73.4690%" y="239.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="73.2518%" y="37" width="0.0109%" height="15" fill="rgb(226,211,11)" fg:x="33531" fg:w="5"/><text x="73.5018%" y="47.50"></text></g><g><title>block_verifier`rocksdb::Customizable::ConfigureNewObject(rocksdb::ConfigOptions const&amp;, rocksdb::Customizable*, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.02%)</title><rect x="73.2518%" y="69" width="0.0175%" height="15" fill="rgb(236,162,54)" fg:x="33531" fg:w="8"/><text x="73.5018%" y="79.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (8 samples, 0.02%)</title><rect x="73.2518%" y="53" width="0.0175%" height="15" fill="rgb(220,229,9)" fg:x="33531" fg:w="8"/><text x="73.5018%" y="63.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureCustomizableOption(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, rocksdb::OptionTypeInfo const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (17 samples, 0.04%)</title><rect x="73.2518%" y="117" width="0.0371%" height="15" fill="rgb(250,87,22)" fg:x="33531" fg:w="17"/><text x="73.5018%" y="127.50"></text></g><g><title>block_verifier`rocksdb::OptionTypeInfo::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (17 samples, 0.04%)</title><rect x="73.2518%" y="101" width="0.0371%" height="15" fill="rgb(239,43,17)" fg:x="33531" fg:w="17"/><text x="73.5018%" y="111.50"></text></g><g><title>block_verifier`rocksdb::TableFactory::CreateFromString(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::shared_ptr (17 samples, 0.04%)</title><rect x="73.2518%" y="85" width="0.0371%" height="15" fill="rgb(231,177,25)" fg:x="33531" fg:w="17"/><text x="73.5018%" y="95.50"></text></g><g><title>block_verifier`rocksdb::Customizable::GetOptionsMap(rocksdb::ConfigOptions const&amp;, rocksdb::Customizable const*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="73.2693%" y="69" width="0.0197%" height="15" fill="rgb(219,179,1)" fg:x="33539" fg:w="9"/><text x="73.5193%" y="79.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureSomeOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, rocksdb::OptionTypeInfo, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, rocksdb::OptionTypeInfo&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (24 samples, 0.05%)</title><rect x="73.2518%" y="133" width="0.0524%" height="15" fill="rgb(238,219,53)" fg:x="33531" fg:w="24"/><text x="73.5018%" y="143.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (25 samples, 0.05%)</title><rect x="73.2518%" y="149" width="0.0546%" height="15" fill="rgb(232,167,36)" fg:x="33531" fg:w="25"/><text x="73.5018%" y="159.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (31 samples, 0.07%)</title><rect x="73.2518%" y="165" width="0.0677%" height="15" fill="rgb(244,19,51)" fg:x="33531" fg:w="31"/><text x="73.5018%" y="175.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::SerializeOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="73.3064%" y="149" width="0.0131%" height="15" fill="rgb(224,6,22)" fg:x="33556" fg:w="6"/><text x="73.5564%" y="159.50"></text></g><g><title>block_verifier`rocksdb::GetColumnFamilyOptionsFromMap(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (33 samples, 0.07%)</title><rect x="73.2496%" y="197" width="0.0721%" height="15" fill="rgb(224,145,5)" fg:x="33530" fg:w="33"/><text x="73.4996%" y="207.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableCFOptions::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (32 samples, 0.07%)</title><rect x="73.2518%" y="181" width="0.0699%" height="15" fill="rgb(234,130,49)" fg:x="33531" fg:w="32"/><text x="73.5018%" y="191.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::EndSection(rocksdb::ConfigOptions const&amp;, rocksdb::OptionSection, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (42 samples, 0.09%)</title><rect x="73.2343%" y="213" width="0.0918%" height="15" fill="rgb(254,6,2)" fg:x="33523" fg:w="42"/><text x="73.4843%" y="223.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (53 samples, 0.12%)</title><rect x="73.2321%" y="229" width="0.1158%" height="15" fill="rgb(208,96,46)" fg:x="33522" fg:w="53"/><text x="73.4821%" y="239.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (56 samples, 0.12%)</title><rect x="73.2321%" y="245" width="0.1223%" height="15" fill="rgb(239,3,39)" fg:x="33522" fg:w="56"/><text x="73.4821%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (71 samples, 0.16%)</title><rect x="73.2015%" y="357" width="0.1551%" height="15" fill="rgb(233,210,1)" fg:x="33508" fg:w="71"/><text x="73.4515%" y="367.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (71 samples, 0.16%)</title><rect x="73.2015%" y="341" width="0.1551%" height="15" fill="rgb(244,137,37)" fg:x="33508" fg:w="71"/><text x="73.4515%" y="351.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (71 samples, 0.16%)</title><rect x="73.2015%" y="325" width="0.1551%" height="15" fill="rgb(240,136,2)" fg:x="33508" fg:w="71"/><text x="73.4515%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (71 samples, 0.16%)</title><rect x="73.2015%" y="309" width="0.1551%" height="15" fill="rgb(239,18,37)" fg:x="33508" fg:w="71"/><text x="73.4515%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (71 samples, 0.16%)</title><rect x="73.2015%" y="293" width="0.1551%" height="15" fill="rgb(218,185,22)" fg:x="33508" fg:w="71"/><text x="73.4515%" y="303.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (66 samples, 0.14%)</title><rect x="73.2125%" y="277" width="0.1442%" height="15" fill="rgb(225,218,4)" fg:x="33513" fg:w="66"/><text x="73.4625%" y="287.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (66 samples, 0.14%)</title><rect x="73.2125%" y="261" width="0.1442%" height="15" fill="rgb(230,182,32)" fg:x="33513" fg:w="66"/><text x="73.4625%" y="271.50"></text></g><g><title>block_verifier`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (15 samples, 0.03%)</title><rect x="73.3566%" y="245" width="0.0328%" height="15" fill="rgb(242,56,43)" fg:x="33579" fg:w="15"/><text x="73.6066%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Append (26 samples, 0.06%)</title><rect x="73.3894%" y="229" width="0.0568%" height="15" fill="rgb(233,99,24)" fg:x="33594" fg:w="26"/><text x="73.6394%" y="239.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Flush (26 samples, 0.06%)</title><rect x="73.3894%" y="213" width="0.0568%" height="15" fill="rgb(234,209,42)" fg:x="33594" fg:w="26"/><text x="73.6394%" y="223.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::WriteBuffered (26 samples, 0.06%)</title><rect x="73.3894%" y="197" width="0.0568%" height="15" fill="rgb(227,7,12)" fg:x="33594" fg:w="26"/><text x="73.6394%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`write (26 samples, 0.06%)</title><rect x="73.3894%" y="181" width="0.0568%" height="15" fill="rgb(245,203,43)" fg:x="33594" fg:w="26"/><text x="73.6394%" y="191.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (47 samples, 0.10%)</title><rect x="73.3566%" y="293" width="0.1027%" height="15" fill="rgb(238,205,33)" fg:x="33579" fg:w="47"/><text x="73.6066%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (47 samples, 0.10%)</title><rect x="73.3566%" y="277" width="0.1027%" height="15" fill="rgb(231,56,7)" fg:x="33579" fg:w="47"/><text x="73.6066%" y="287.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (47 samples, 0.10%)</title><rect x="73.3566%" y="261" width="0.1027%" height="15" fill="rgb(244,186,29)" fg:x="33579" fg:w="47"/><text x="73.6066%" y="271.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::EmitPhysicalRecord (32 samples, 0.07%)</title><rect x="73.3894%" y="245" width="0.0699%" height="15" fill="rgb(234,111,31)" fg:x="33594" fg:w="32"/><text x="73.6394%" y="255.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (5 samples, 0.01%)</title><rect x="73.5161%" y="197" width="0.0109%" height="15" fill="rgb(241,149,10)" fg:x="33652" fg:w="5"/><text x="73.7661%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.05%)</title><rect x="73.5467%" y="181" width="0.0459%" height="15" fill="rgb(249,206,44)" fg:x="33666" fg:w="21"/><text x="73.7967%" y="191.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (50 samples, 0.11%)</title><rect x="73.4899%" y="213" width="0.1092%" height="15" fill="rgb(251,153,30)" fg:x="33640" fg:w="50"/><text x="73.7399%" y="223.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (33 samples, 0.07%)</title><rect x="73.5270%" y="197" width="0.0721%" height="15" fill="rgb(239,152,38)" fg:x="33657" fg:w="33"/><text x="73.7770%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (60 samples, 0.13%)</title><rect x="73.4768%" y="245" width="0.1311%" height="15" fill="rgb(249,139,47)" fg:x="33634" fg:w="60"/><text x="73.7268%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (55 samples, 0.12%)</title><rect x="73.4877%" y="229" width="0.1202%" height="15" fill="rgb(244,64,35)" fg:x="33639" fg:w="55"/><text x="73.7377%" y="239.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteCF (62 samples, 0.14%)</title><rect x="73.4746%" y="261" width="0.1354%" height="15" fill="rgb(216,46,15)" fg:x="33633" fg:w="62"/><text x="73.7246%" y="271.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (5 samples, 0.01%)</title><rect x="73.7105%" y="181" width="0.0109%" height="15" fill="rgb(250,74,19)" fg:x="33741" fg:w="5"/><text x="73.9605%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (18 samples, 0.04%)</title><rect x="73.7236%" y="181" width="0.0393%" height="15" fill="rgb(249,42,33)" fg:x="33747" fg:w="18"/><text x="73.9736%" y="191.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (57 samples, 0.12%)</title><rect x="73.6516%" y="213" width="0.1245%" height="15" fill="rgb(242,149,17)" fg:x="33714" fg:w="57"/><text x="73.9016%" y="223.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (35 samples, 0.08%)</title><rect x="73.6996%" y="197" width="0.0765%" height="15" fill="rgb(244,29,21)" fg:x="33736" fg:w="35"/><text x="73.9496%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="73.7630%" y="181" width="0.0131%" height="15" fill="rgb(220,130,37)" fg:x="33765" fg:w="6"/><text x="74.0130%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Allocate (8 samples, 0.02%)</title><rect x="73.7761%" y="213" width="0.0175%" height="15" fill="rgb(211,67,2)" fg:x="33771" fg:w="8"/><text x="74.0261%" y="223.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (76 samples, 0.17%)</title><rect x="73.6363%" y="229" width="0.1660%" height="15" fill="rgb(235,68,52)" fg:x="33707" fg:w="76"/><text x="73.8863%" y="239.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (109 samples, 0.24%)</title><rect x="73.6166%" y="245" width="0.2381%" height="15" fill="rgb(246,142,3)" fg:x="33698" fg:w="109"/><text x="73.8666%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (22 samples, 0.05%)</title><rect x="73.8067%" y="229" width="0.0481%" height="15" fill="rgb(241,25,7)" fg:x="33785" fg:w="22"/><text x="74.0567%" y="239.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (113 samples, 0.25%)</title><rect x="73.6100%" y="261" width="0.2469%" height="15" fill="rgb(242,119,39)" fg:x="33695" fg:w="113"/><text x="73.8600%" y="271.50"></text></g><g><title>block_verifier`rocksdb_write (235 samples, 0.51%)</title><rect x="73.3566%" y="341" width="0.5134%" height="15" fill="rgb(241,98,45)" fg:x="33579" fg:w="235"/><text x="73.6066%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (235 samples, 0.51%)</title><rect x="73.3566%" y="325" width="0.5134%" height="15" fill="rgb(254,28,30)" fg:x="33579" fg:w="235"/><text x="73.6066%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (235 samples, 0.51%)</title><rect x="73.3566%" y="309" width="0.5134%" height="15" fill="rgb(241,142,54)" fg:x="33579" fg:w="235"/><text x="73.6066%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (188 samples, 0.41%)</title><rect x="73.4593%" y="293" width="0.4107%" height="15" fill="rgb(222,85,15)" fg:x="33626" fg:w="188"/><text x="73.7093%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (186 samples, 0.41%)</title><rect x="73.4637%" y="277" width="0.4063%" height="15" fill="rgb(210,85,47)" fg:x="33628" fg:w="186"/><text x="73.7137%" y="287.50"></text></g><g><title>block_verifier`rocksdb::ReadRecordFromWriteBatch (5 samples, 0.01%)</title><rect x="73.8591%" y="261" width="0.0109%" height="15" fill="rgb(224,206,25)" fg:x="33809" fg:w="5"/><text x="74.1091%" y="271.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (237 samples, 0.52%)</title><rect x="73.3566%" y="357" width="0.5177%" height="15" fill="rgb(243,201,19)" fg:x="33579" fg:w="237"/><text x="73.6066%" y="367.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (8 samples, 0.02%)</title><rect x="73.8788%" y="309" width="0.0175%" height="15" fill="rgb(236,59,4)" fg:x="33818" fg:w="8"/><text x="74.1288%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Delete (11 samples, 0.02%)</title><rect x="73.8766%" y="325" width="0.0240%" height="15" fill="rgb(254,179,45)" fg:x="33817" fg:w="11"/><text x="74.1266%" y="335.50"></text></g><g><title>block_verifier`rocksdb_writebatch_delete_cf (14 samples, 0.03%)</title><rect x="73.8744%" y="357" width="0.0306%" height="15" fill="rgb(226,14,10)" fg:x="33816" fg:w="14"/><text x="74.1244%" y="367.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Delete (14 samples, 0.03%)</title><rect x="73.8744%" y="341" width="0.0306%" height="15" fill="rgb(244,27,41)" fg:x="33816" fg:w="14"/><text x="74.1244%" y="351.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (53 samples, 0.12%)</title><rect x="73.9618%" y="309" width="0.1158%" height="15" fill="rgb(235,35,32)" fg:x="33856" fg:w="53"/><text x="74.2118%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (28 samples, 0.06%)</title><rect x="74.0164%" y="293" width="0.0612%" height="15" fill="rgb(218,68,31)" fg:x="33881" fg:w="28"/><text x="74.2664%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (85 samples, 0.19%)</title><rect x="73.9399%" y="325" width="0.1857%" height="15" fill="rgb(207,120,37)" fg:x="33846" fg:w="85"/><text x="74.1899%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (22 samples, 0.05%)</title><rect x="74.0776%" y="309" width="0.0481%" height="15" fill="rgb(227,98,0)" fg:x="33909" fg:w="22"/><text x="74.3276%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (432 samples, 0.94%)</title><rect x="73.1884%" y="373" width="0.9437%" height="15" fill="rgb(207,7,3)" fg:x="33502" fg:w="432"/><text x="73.4384%" y="383.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (104 samples, 0.23%)</title><rect x="73.9050%" y="357" width="0.2272%" height="15" fill="rgb(206,98,19)" fg:x="33830" fg:w="104"/><text x="74.1550%" y="367.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (104 samples, 0.23%)</title><rect x="73.9050%" y="341" width="0.2272%" height="15" fill="rgb(217,5,26)" fg:x="33830" fg:w="104"/><text x="74.1550%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_free (17 samples, 0.04%)</title><rect x="74.1322%" y="373" width="0.0371%" height="15" fill="rgb(235,190,38)" fg:x="33934" fg:w="17"/><text x="74.3822%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.05%)</title><rect x="74.1868%" y="373" width="0.0481%" height="15" fill="rgb(247,86,24)" fg:x="33959" fg:w="22"/><text x="74.4368%" y="383.50"></text></g><g><title>block_verifier`fuel_core::database::_&lt;impl fuel_core_storage::transactional::Modifiable for fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;&gt;::commit_changes (1,354 samples, 2.96%)</title><rect x="71.2878%" y="405" width="2.9579%" height="15" fill="rgb(205,101,16)" fg:x="32632" fg:w="1354"/><text x="71.5378%" y="415.50">blo..</text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (1,354 samples, 2.96%)</title><rect x="71.2878%" y="389" width="2.9579%" height="15" fill="rgb(246,168,33)" fg:x="32632" fg:w="1354"/><text x="71.5378%" y="399.50">blo..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="74.2348%" y="373" width="0.0109%" height="15" fill="rgb(231,114,1)" fg:x="33981" fg:w="5"/><text x="74.4848%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::commit (1,355 samples, 2.96%)</title><rect x="71.2878%" y="421" width="2.9601%" height="15" fill="rgb(207,184,53)" fg:x="32632" fg:w="1355"/><text x="71.5378%" y="431.50">blo..</text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="74.3310%" y="293" width="0.0109%" height="15" fill="rgb(224,95,51)" fg:x="34025" fg:w="5"/><text x="74.5810%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.02%)</title><rect x="74.3288%" y="309" width="0.0197%" height="15" fill="rgb(212,188,45)" fg:x="34024" fg:w="9"/><text x="74.5788%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (10 samples, 0.02%)</title><rect x="74.3288%" y="325" width="0.0218%" height="15" fill="rgb(223,154,38)" fg:x="34024" fg:w="10"/><text x="74.5788%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.02%)</title><rect x="74.3288%" y="373" width="0.0240%" height="15" fill="rgb(251,22,52)" fg:x="34024" fg:w="11"/><text x="74.5788%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="74.3288%" y="357" width="0.0240%" height="15" fill="rgb(229,209,22)" fg:x="34024" fg:w="11"/><text x="74.5788%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.02%)</title><rect x="74.3288%" y="341" width="0.0240%" height="15" fill="rgb(234,138,34)" fg:x="34024" fg:w="11"/><text x="74.5788%" y="351.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 0.03%)</title><rect x="74.3266%" y="389" width="0.0284%" height="15" fill="rgb(212,95,11)" fg:x="34023" fg:w="13"/><text x="74.5766%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.02%)</title><rect x="74.3703%" y="325" width="0.0218%" height="15" fill="rgb(240,179,47)" fg:x="34043" fg:w="10"/><text x="74.6203%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (14 samples, 0.03%)</title><rect x="74.3659%" y="341" width="0.0306%" height="15" fill="rgb(240,163,11)" fg:x="34041" fg:w="14"/><text x="74.6159%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (17 samples, 0.04%)</title><rect x="74.3616%" y="389" width="0.0371%" height="15" fill="rgb(236,37,12)" fg:x="34039" fg:w="17"/><text x="74.6116%" y="399.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (17 samples, 0.04%)</title><rect x="74.3616%" y="373" width="0.0371%" height="15" fill="rgb(232,164,16)" fg:x="34039" fg:w="17"/><text x="74.6116%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (16 samples, 0.03%)</title><rect x="74.3637%" y="357" width="0.0350%" height="15" fill="rgb(244,205,15)" fg:x="34040" fg:w="16"/><text x="74.6137%" y="367.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (69 samples, 0.15%)</title><rect x="74.2523%" y="405" width="0.1507%" height="15" fill="rgb(223,117,47)" fg:x="33989" fg:w="69"/><text x="74.5023%" y="415.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (8 samples, 0.02%)</title><rect x="74.4074%" y="373" width="0.0175%" height="15" fill="rgb(244,107,35)" fg:x="34060" fg:w="8"/><text x="74.6574%" y="383.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (8 samples, 0.02%)</title><rect x="74.4074%" y="357" width="0.0175%" height="15" fill="rgb(205,140,8)" fg:x="34060" fg:w="8"/><text x="74.6574%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.02%)</title><rect x="74.4074%" y="341" width="0.0175%" height="15" fill="rgb(228,84,46)" fg:x="34060" fg:w="8"/><text x="74.6574%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (7 samples, 0.02%)</title><rect x="74.4096%" y="325" width="0.0153%" height="15" fill="rgb(254,188,9)" fg:x="34061" fg:w="7"/><text x="74.6596%" y="335.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="74.4118%" y="309" width="0.0131%" height="15" fill="rgb(206,112,54)" fg:x="34062" fg:w="6"/><text x="74.6618%" y="319.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="74.4118%" y="293" width="0.0131%" height="15" fill="rgb(216,84,49)" fg:x="34062" fg:w="6"/><text x="74.6618%" y="303.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="74.4118%" y="277" width="0.0131%" height="15" fill="rgb(214,194,35)" fg:x="34062" fg:w="6"/><text x="74.6618%" y="287.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="74.4118%" y="261" width="0.0131%" height="15" fill="rgb(249,28,3)" fg:x="34062" fg:w="6"/><text x="74.6618%" y="271.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::EndSection(rocksdb::ConfigOptions const&amp;, rocksdb::OptionSection, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="74.4140%" y="245" width="0.0109%" height="15" fill="rgb(222,56,52)" fg:x="34063" fg:w="5"/><text x="74.6640%" y="255.50"></text></g><g><title>block_verifier`rocksdb::GetColumnFamilyOptionsFromMap(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="74.4140%" y="229" width="0.0109%" height="15" fill="rgb(245,217,50)" fg:x="34063" fg:w="5"/><text x="74.6640%" y="239.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableCFOptions::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (5 samples, 0.01%)</title><rect x="74.4140%" y="213" width="0.0109%" height="15" fill="rgb(213,201,24)" fg:x="34063" fg:w="5"/><text x="74.6640%" y="223.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (5 samples, 0.01%)</title><rect x="74.4140%" y="197" width="0.0109%" height="15" fill="rgb(248,116,28)" fg:x="34063" fg:w="5"/><text x="74.6640%" y="207.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (12 samples, 0.03%)</title><rect x="74.4052%" y="389" width="0.0262%" height="15" fill="rgb(219,72,43)" fg:x="34059" fg:w="12"/><text x="74.6552%" y="399.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="74.4336%" y="357" width="0.0131%" height="15" fill="rgb(209,138,14)" fg:x="34072" fg:w="6"/><text x="74.6836%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (6 samples, 0.01%)</title><rect x="74.4336%" y="341" width="0.0131%" height="15" fill="rgb(222,18,33)" fg:x="34072" fg:w="6"/><text x="74.6836%" y="351.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (9 samples, 0.02%)</title><rect x="74.4336%" y="373" width="0.0197%" height="15" fill="rgb(213,199,7)" fg:x="34072" fg:w="9"/><text x="74.6836%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (25 samples, 0.05%)</title><rect x="74.4031%" y="405" width="0.0546%" height="15" fill="rgb(250,110,10)" fg:x="34058" fg:w="25"/><text x="74.6531%" y="415.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (12 samples, 0.03%)</title><rect x="74.4315%" y="389" width="0.0262%" height="15" fill="rgb(248,123,6)" fg:x="34071" fg:w="12"/><text x="74.6815%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (41 samples, 0.09%)</title><rect x="74.4577%" y="405" width="0.0896%" height="15" fill="rgb(206,91,31)" fg:x="34083" fg:w="41"/><text x="74.7077%" y="415.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="74.5625%" y="389" width="0.0153%" height="15" fill="rgb(211,154,13)" fg:x="34131" fg:w="7"/><text x="74.8125%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="74.5647%" y="373" width="0.0131%" height="15" fill="rgb(225,148,7)" fg:x="34132" fg:w="6"/><text x="74.8147%" y="383.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (10 samples, 0.02%)</title><rect x="74.5778%" y="389" width="0.0218%" height="15" fill="rgb(220,160,43)" fg:x="34138" fg:w="10"/><text x="74.8278%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="74.6062%" y="373" width="0.0131%" height="15" fill="rgb(213,52,39)" fg:x="34151" fg:w="6"/><text x="74.8562%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="74.6084%" y="357" width="0.0109%" height="15" fill="rgb(243,137,7)" fg:x="34152" fg:w="5"/><text x="74.8584%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (10 samples, 0.02%)</title><rect x="74.6019%" y="389" width="0.0218%" height="15" fill="rgb(230,79,13)" fg:x="34149" fg:w="10"/><text x="74.8519%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (22 samples, 0.05%)</title><rect x="74.6237%" y="389" width="0.0481%" height="15" fill="rgb(247,105,23)" fg:x="34159" fg:w="22"/><text x="74.8737%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="74.6783%" y="389" width="0.0153%" height="15" fill="rgb(223,179,41)" fg:x="34184" fg:w="7"/><text x="74.9283%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="74.6827%" y="373" width="0.0109%" height="15" fill="rgb(218,9,34)" fg:x="34186" fg:w="5"/><text x="74.9327%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (72 samples, 0.16%)</title><rect x="74.5472%" y="405" width="0.1573%" height="15" fill="rgb(222,106,8)" fg:x="34124" fg:w="72"/><text x="74.7972%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="74.7155%" y="325" width="0.0109%" height="15" fill="rgb(211,220,0)" fg:x="34201" fg:w="5"/><text x="74.9655%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.02%)</title><rect x="74.7111%" y="341" width="0.0197%" height="15" fill="rgb(229,52,16)" fg:x="34199" fg:w="9"/><text x="74.9611%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.03%)</title><rect x="74.7067%" y="405" width="0.0262%" height="15" fill="rgb(212,155,18)" fg:x="34197" fg:w="12"/><text x="74.9567%" y="415.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="74.7089%" y="389" width="0.0240%" height="15" fill="rgb(242,21,14)" fg:x="34198" fg:w="11"/><text x="74.9589%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.02%)</title><rect x="74.7089%" y="373" width="0.0240%" height="15" fill="rgb(222,19,48)" fg:x="34198" fg:w="11"/><text x="74.9589%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (10 samples, 0.02%)</title><rect x="74.7111%" y="357" width="0.0218%" height="15" fill="rgb(232,45,27)" fg:x="34199" fg:w="10"/><text x="74.9611%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="74.7657%" y="357" width="0.0153%" height="15" fill="rgb(249,103,42)" fg:x="34224" fg:w="7"/><text x="75.0157%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="74.7482%" y="373" width="0.0350%" height="15" fill="rgb(246,81,33)" fg:x="34216" fg:w="16"/><text x="74.9982%" y="383.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (7 samples, 0.02%)</title><rect x="74.7832%" y="373" width="0.0153%" height="15" fill="rgb(252,33,42)" fg:x="34232" fg:w="7"/><text x="75.0332%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="74.8072%" y="357" width="0.0131%" height="15" fill="rgb(209,212,41)" fg:x="34243" fg:w="6"/><text x="75.0572%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (12 samples, 0.03%)</title><rect x="74.8007%" y="373" width="0.0262%" height="15" fill="rgb(207,154,6)" fg:x="34240" fg:w="12"/><text x="75.0507%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (15 samples, 0.03%)</title><rect x="74.8312%" y="373" width="0.0328%" height="15" fill="rgb(223,64,47)" fg:x="34254" fg:w="15"/><text x="75.0812%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (65 samples, 0.14%)</title><rect x="74.7439%" y="389" width="0.1420%" height="15" fill="rgb(211,161,38)" fg:x="34214" fg:w="65"/><text x="74.9939%" y="399.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::block::Block::compress (219 samples, 0.48%)</title><rect x="74.7439%" y="405" width="0.4784%" height="15" fill="rgb(219,138,40)" fg:x="34214" fg:w="219"/><text x="74.9939%" y="415.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (154 samples, 0.34%)</title><rect x="74.8859%" y="389" width="0.3364%" height="15" fill="rgb(241,228,46)" fg:x="34279" fg:w="154"/><text x="75.1359%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (147 samples, 0.32%)</title><rect x="75.2245%" y="405" width="0.3211%" height="15" fill="rgb(223,209,38)" fg:x="34434" fg:w="147"/><text x="75.4745%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="75.5500%" y="405" width="0.0109%" height="15" fill="rgb(236,164,45)" fg:x="34583" fg:w="5"/><text x="75.8000%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="75.5609%" y="405" width="0.0109%" height="15" fill="rgb(231,15,5)" fg:x="34588" fg:w="5"/><text x="75.8109%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::store_new_block (608 samples, 1.33%)</title><rect x="74.2480%" y="421" width="1.3282%" height="15" fill="rgb(252,35,15)" fg:x="33987" fg:w="608"/><text x="74.4980%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="75.5937%" y="341" width="0.0153%" height="15" fill="rgb(248,181,18)" fg:x="34603" fg:w="7"/><text x="75.8437%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="75.5958%" y="325" width="0.0131%" height="15" fill="rgb(233,39,42)" fg:x="34604" fg:w="6"/><text x="75.8458%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="75.5871%" y="357" width="0.0262%" height="15" fill="rgb(238,110,33)" fg:x="34600" fg:w="12"/><text x="75.8371%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="75.5806%" y="373" width="0.0415%" height="15" fill="rgb(233,195,10)" fg:x="34597" fg:w="19"/><text x="75.8306%" y="383.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="75.5806%" y="405" width="0.0437%" height="15" fill="rgb(254,105,3)" fg:x="34597" fg:w="20"/><text x="75.8306%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="75.5806%" y="389" width="0.0437%" height="15" fill="rgb(221,225,9)" fg:x="34597" fg:w="20"/><text x="75.8306%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (8 samples, 0.02%)</title><rect x="75.6548%" y="309" width="0.0175%" height="15" fill="rgb(224,227,45)" fg:x="34631" fg:w="8"/><text x="75.9048%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="75.6352%" y="373" width="0.0393%" height="15" fill="rgb(229,198,43)" fg:x="34622" fg:w="18"/><text x="75.8852%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="75.6395%" y="357" width="0.0350%" height="15" fill="rgb(206,209,35)" fg:x="34624" fg:w="16"/><text x="75.8895%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.03%)</title><rect x="75.6417%" y="341" width="0.0328%" height="15" fill="rgb(245,195,53)" fg:x="34625" fg:w="15"/><text x="75.8917%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.03%)</title><rect x="75.6461%" y="325" width="0.0284%" height="15" fill="rgb(240,92,26)" fg:x="34627" fg:w="13"/><text x="75.8961%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (10 samples, 0.02%)</title><rect x="75.6810%" y="373" width="0.0218%" height="15" fill="rgb(207,40,23)" fg:x="34643" fg:w="10"/><text x="75.9310%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="75.6898%" y="357" width="0.0131%" height="15" fill="rgb(223,111,35)" fg:x="34647" fg:w="6"/><text x="75.9398%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="75.6898%" y="341" width="0.0131%" height="15" fill="rgb(229,147,28)" fg:x="34647" fg:w="6"/><text x="75.9398%" y="351.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (22 samples, 0.05%)</title><rect x="75.7029%" y="373" width="0.0481%" height="15" fill="rgb(211,29,28)" fg:x="34653" fg:w="22"/><text x="75.9529%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="75.7597%" y="373" width="0.0109%" height="15" fill="rgb(228,72,33)" fg:x="34679" fg:w="5"/><text x="76.0097%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="75.7597%" y="357" width="0.0109%" height="15" fill="rgb(205,214,31)" fg:x="34679" fg:w="5"/><text x="76.0097%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (67 samples, 0.15%)</title><rect x="75.6330%" y="389" width="0.1464%" height="15" fill="rgb(224,111,15)" fg:x="34621" fg:w="67"/><text x="75.8830%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_core_executor::ports::TransactionExt&gt;::max_gas (5 samples, 0.01%)</title><rect x="75.8099%" y="373" width="0.0109%" height="15" fill="rgb(253,21,26)" fg:x="34702" fg:w="5"/><text x="76.0599%" y="383.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="75.8209%" y="373" width="0.0153%" height="15" fill="rgb(245,139,43)" fg:x="34707" fg:w="7"/><text x="76.0709%" y="383.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::Bucket::add (7 samples, 0.02%)</title><rect x="75.8471%" y="373" width="0.0153%" height="15" fill="rgb(252,170,7)" fg:x="34719" fg:w="7"/><text x="76.0971%" y="383.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="75.8864%" y="357" width="0.0109%" height="15" fill="rgb(231,118,14)" fg:x="34737" fg:w="5"/><text x="76.1364%" y="367.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.06%)</title><rect x="75.8624%" y="373" width="0.0612%" height="15" fill="rgb(238,83,0)" fg:x="34726" fg:w="28"/><text x="76.1124%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="75.8973%" y="357" width="0.0262%" height="15" fill="rgb(221,39,39)" fg:x="34742" fg:w="12"/><text x="76.1473%" y="367.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::process (76 samples, 0.17%)</title><rect x="75.7815%" y="389" width="0.1660%" height="15" fill="rgb(222,119,46)" fg:x="34689" fg:w="76"/><text x="76.0315%" y="399.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="75.9738%" y="357" width="0.0175%" height="15" fill="rgb(222,165,49)" fg:x="34777" fg:w="8"/><text x="76.2238%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="75.9934%" y="357" width="0.0109%" height="15" fill="rgb(219,113,52)" fg:x="34786" fg:w="5"/><text x="76.2434%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="75.9934%" y="341" width="0.0109%" height="15" fill="rgb(214,7,15)" fg:x="34786" fg:w="5"/><text x="76.2434%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (5 samples, 0.01%)</title><rect x="75.9934%" y="325" width="0.0109%" height="15" fill="rgb(235,32,4)" fg:x="34786" fg:w="5"/><text x="76.2434%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (5 samples, 0.01%)</title><rect x="75.9934%" y="309" width="0.0109%" height="15" fill="rgb(238,90,54)" fg:x="34786" fg:w="5"/><text x="76.2434%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="75.9934%" y="293" width="0.0109%" height="15" fill="rgb(213,208,19)" fg:x="34786" fg:w="5"/><text x="76.2434%" y="303.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="75.9738%" y="373" width="0.0393%" height="15" fill="rgb(233,156,4)" fg:x="34777" fg:w="18"/><text x="76.2238%" y="383.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::split_equally (47 samples, 0.10%)</title><rect x="75.9476%" y="389" width="0.1027%" height="15" fill="rgb(207,194,5)" fg:x="34765" fg:w="47"/><text x="76.1976%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="76.0262%" y="373" width="0.0240%" height="15" fill="rgb(206,111,30)" fg:x="34801" fg:w="11"/><text x="76.2762%" y="383.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="76.0852%" y="357" width="0.0175%" height="15" fill="rgb(243,70,54)" fg:x="34828" fg:w="8"/><text x="76.3352%" y="367.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (18 samples, 0.04%)</title><rect x="76.1136%" y="357" width="0.0393%" height="15" fill="rgb(242,28,8)" fg:x="34841" fg:w="18"/><text x="76.3636%" y="367.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.08%)</title><rect x="76.0808%" y="373" width="0.0808%" height="15" fill="rgb(219,106,18)" fg:x="34826" fg:w="37"/><text x="76.3308%" y="383.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (19 samples, 0.04%)</title><rect x="76.1660%" y="357" width="0.0415%" height="15" fill="rgb(244,222,10)" fg:x="34865" fg:w="19"/><text x="76.4160%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="76.2163%" y="357" width="0.0153%" height="15" fill="rgb(236,179,52)" fg:x="34888" fg:w="7"/><text x="76.4663%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="76.2206%" y="341" width="0.0109%" height="15" fill="rgb(213,23,39)" fg:x="34890" fg:w="5"/><text x="76.4706%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (40 samples, 0.09%)</title><rect x="76.1617%" y="373" width="0.0874%" height="15" fill="rgb(238,48,10)" fg:x="34863" fg:w="40"/><text x="76.4117%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.02%)</title><rect x="76.2316%" y="357" width="0.0175%" height="15" fill="rgb(251,196,23)" fg:x="34895" fg:w="8"/><text x="76.4816%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (17 samples, 0.04%)</title><rect x="76.4194%" y="357" width="0.0371%" height="15" fill="rgb(250,152,24)" fg:x="34981" fg:w="17"/><text x="76.6694%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="76.4413%" y="341" width="0.0153%" height="15" fill="rgb(209,150,17)" fg:x="34991" fg:w="7"/><text x="76.6913%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="76.4435%" y="325" width="0.0131%" height="15" fill="rgb(234,202,34)" fg:x="34992" fg:w="6"/><text x="76.6935%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (11 samples, 0.02%)</title><rect x="76.4566%" y="357" width="0.0240%" height="15" fill="rgb(253,148,53)" fg:x="34998" fg:w="11"/><text x="76.7066%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="76.4631%" y="341" width="0.0175%" height="15" fill="rgb(218,129,16)" fg:x="35001" fg:w="8"/><text x="76.7131%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="76.4653%" y="325" width="0.0153%" height="15" fill="rgb(216,85,19)" fg:x="35002" fg:w="7"/><text x="76.7153%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.02%)</title><rect x="76.4806%" y="357" width="0.0197%" height="15" fill="rgb(235,228,7)" fg:x="35009" fg:w="9"/><text x="76.7306%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="76.5025%" y="357" width="0.0262%" height="15" fill="rgb(245,175,0)" fg:x="35019" fg:w="12"/><text x="76.7525%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="76.5112%" y="341" width="0.0175%" height="15" fill="rgb(208,168,36)" fg:x="35023" fg:w="8"/><text x="76.7612%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (15 samples, 0.03%)</title><rect x="76.5287%" y="357" width="0.0328%" height="15" fill="rgb(246,171,24)" fg:x="35031" fg:w="15"/><text x="76.7787%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="76.5614%" y="357" width="0.0109%" height="15" fill="rgb(215,142,24)" fg:x="35046" fg:w="5"/><text x="76.8114%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt; as fuel_core_storage::transactional::Modifiable&gt;::commit_changes (150 samples, 0.33%)</title><rect x="76.2490%" y="373" width="0.3277%" height="15" fill="rgb(250,187,7)" fg:x="34903" fg:w="150"/><text x="76.4990%" y="383.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (8 samples, 0.02%)</title><rect x="76.5767%" y="373" width="0.0175%" height="15" fill="rgb(228,66,33)" fg:x="35053" fg:w="8"/><text x="76.8267%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="76.6401%" y="277" width="0.0131%" height="15" fill="rgb(234,215,21)" fg:x="35082" fg:w="6"/><text x="76.8901%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="76.6532%" y="277" width="0.0240%" height="15" fill="rgb(222,191,20)" fg:x="35088" fg:w="11"/><text x="76.9032%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="76.6619%" y="261" width="0.0153%" height="15" fill="rgb(245,79,54)" fg:x="35092" fg:w="7"/><text x="76.9119%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="76.6772%" y="277" width="0.0153%" height="15" fill="rgb(240,10,37)" fg:x="35099" fg:w="7"/><text x="76.9272%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="76.6772%" y="261" width="0.0153%" height="15" fill="rgb(214,192,32)" fg:x="35099" fg:w="7"/><text x="76.9272%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (27 samples, 0.06%)</title><rect x="76.6401%" y="293" width="0.0590%" height="15" fill="rgb(209,36,54)" fg:x="35082" fg:w="27"/><text x="76.8901%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (30 samples, 0.07%)</title><rect x="76.6357%" y="309" width="0.0655%" height="15" fill="rgb(220,10,11)" fg:x="35080" fg:w="30"/><text x="76.8857%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (36 samples, 0.08%)</title><rect x="76.6248%" y="341" width="0.0786%" height="15" fill="rgb(221,106,17)" fg:x="35075" fg:w="36"/><text x="76.8748%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (34 samples, 0.07%)</title><rect x="76.6292%" y="325" width="0.0743%" height="15" fill="rgb(251,142,44)" fg:x="35077" fg:w="34"/><text x="76.8792%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (39 samples, 0.09%)</title><rect x="76.6204%" y="357" width="0.0852%" height="15" fill="rgb(238,13,15)" fg:x="35073" fg:w="39"/><text x="76.8704%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="76.7187%" y="357" width="0.0153%" height="15" fill="rgb(208,107,27)" fg:x="35118" fg:w="7"/><text x="76.9687%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="76.7187%" y="341" width="0.0153%" height="15" fill="rgb(205,136,37)" fg:x="35118" fg:w="7"/><text x="76.9687%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (61 samples, 0.13%)</title><rect x="76.6095%" y="373" width="0.1333%" height="15" fill="rgb(250,205,27)" fg:x="35068" fg:w="61"/><text x="76.8595%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (249 samples, 0.54%)</title><rect x="76.7646%" y="325" width="0.5440%" height="15" fill="rgb(210,80,43)" fg:x="35139" fg:w="249"/><text x="77.0146%" y="335.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (253 samples, 0.55%)</title><rect x="76.7581%" y="341" width="0.5527%" height="15" fill="rgb(247,160,36)" fg:x="35136" fg:w="253"/><text x="77.0081%" y="351.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::generate_txns_root (264 samples, 0.58%)</title><rect x="76.7449%" y="357" width="0.5767%" height="15" fill="rgb(234,13,49)" fg:x="35130" fg:w="264"/><text x="76.9949%" y="367.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::PartialBlockHeader::generate (266 samples, 0.58%)</title><rect x="76.7428%" y="373" width="0.5811%" height="15" fill="rgb(234,122,0)" fg:x="35129" fg:w="266"/><text x="76.9928%" y="383.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results (612 samples, 1.34%)</title><rect x="76.0502%" y="389" width="1.3370%" height="15" fill="rgb(207,146,38)" fg:x="34812" fg:w="612"/><text x="76.3002%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (16 samples, 0.03%)</title><rect x="77.3523%" y="373" width="0.0350%" height="15" fill="rgb(207,177,25)" fg:x="35408" fg:w="16"/><text x="77.6023%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (177 samples, 0.39%)</title><rect x="77.3872%" y="389" width="0.3867%" height="15" fill="rgb(211,178,42)" fg:x="35424" fg:w="177"/><text x="77.6372%" y="399.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da (1,001 samples, 2.19%)</title><rect x="75.6264%" y="405" width="2.1868%" height="15" fill="rgb(230,69,54)" fg:x="34618" fg:w="1001"/><text x="75.8764%" y="415.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="77.7826%" y="389" width="0.0306%" height="15" fill="rgb(214,135,41)" fg:x="35605" fg:w="14"/><text x="78.0326%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (9 samples, 0.02%)</title><rect x="77.8788%" y="325" width="0.0197%" height="15" fill="rgb(237,67,25)" fg:x="35649" fg:w="9"/><text x="78.1288%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (5 samples, 0.01%)</title><rect x="77.9159%" y="325" width="0.0109%" height="15" fill="rgb(222,189,50)" fg:x="35666" fg:w="5"/><text x="78.1659%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.08%)</title><rect x="77.8482%" y="341" width="0.0808%" height="15" fill="rgb(245,148,34)" fg:x="35635" fg:w="37"/><text x="78.0982%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (44 samples, 0.10%)</title><rect x="77.8351%" y="357" width="0.0961%" height="15" fill="rgb(222,29,6)" fg:x="35629" fg:w="44"/><text x="78.0851%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (54 samples, 0.12%)</title><rect x="77.8198%" y="373" width="0.1180%" height="15" fill="rgb(221,189,43)" fg:x="35622" fg:w="54"/><text x="78.0698%" y="383.50"></text></g><g><title>block_verifier`fuel_core_types::services::executor::_&lt;impl fuel_core_types::services::Uncommitted&lt;fuel_core_types::services::executor::ProductionResult,DatabaseTransaction&gt;&gt;::into_validation_result (70 samples, 0.15%)</title><rect x="77.8132%" y="405" width="0.1529%" height="15" fill="rgb(207,36,27)" fg:x="35619" fg:w="70"/><text x="78.0632%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;[fuel_tx::transaction::Transaction]&gt; (70 samples, 0.15%)</title><rect x="77.8132%" y="389" width="0.1529%" height="15" fill="rgb(217,90,24)" fg:x="35619" fg:w="70"/><text x="78.0632%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="77.9487%" y="373" width="0.0175%" height="15" fill="rgb(224,66,35)" fg:x="35681" fg:w="8"/><text x="78.1987%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="77.9530%" y="357" width="0.0131%" height="15" fill="rgb(221,13,50)" fg:x="35683" fg:w="6"/><text x="78.2030%" y="367.50"></text></g><g><title>block_verifier`fuel_core::service::adapters::block_importer::_&lt;impl fuel_core_importer::ports::Validator for fuel_core::service::adapters::ExecutorAdapter&gt;::validate (1,103 samples, 2.41%)</title><rect x="75.5806%" y="421" width="2.4096%" height="15" fill="rgb(236,68,49)" fg:x="34597" fg:w="1103"/><text x="75.8306%" y="431.50">bl..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="77.9661%" y="405" width="0.0240%" height="15" fill="rgb(229,146,28)" fg:x="35689" fg:w="11"/><text x="78.2161%" y="415.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (5 samples, 0.01%)</title><rect x="78.0011%" y="389" width="0.0109%" height="15" fill="rgb(225,31,38)" fg:x="35705" fg:w="5"/><text x="78.2511%" y="399.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (244 samples, 0.53%)</title><rect x="78.0186%" y="389" width="0.5330%" height="15" fill="rgb(250,208,3)" fg:x="35713" fg:w="244"/><text x="78.2686%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (241 samples, 0.53%)</title><rect x="78.0251%" y="373" width="0.5265%" height="15" fill="rgb(246,54,23)" fg:x="35716" fg:w="241"/><text x="78.2751%" y="383.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::generate_txns_root (258 samples, 0.56%)</title><rect x="77.9945%" y="405" width="0.5636%" height="15" fill="rgb(243,76,11)" fg:x="35702" fg:w="258"/><text x="78.2445%" y="415.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::BlockHeader::validate_transactions (262 samples, 0.57%)</title><rect x="77.9902%" y="421" width="0.5724%" height="15" fill="rgb(245,21,50)" fg:x="35700" fg:w="262"/><text x="78.2402%" y="431.50"></text></g><g><title>block_verifier`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3,391 samples, 7.41%)</title><rect x="71.1764%" y="453" width="7.4080%" height="15" fill="rgb(228,9,43)" fg:x="32581" fg:w="3391"/><text x="71.4264%" y="463.50">block_veri..</text></g><g><title>block_verifier`rayon_core::scope::scope_fifo::_{{closure}} (3,391 samples, 7.41%)</title><rect x="71.1764%" y="437" width="7.4080%" height="15" fill="rgb(208,100,47)" fg:x="32581" fg:w="3391"/><text x="71.4264%" y="447.50">block_veri..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="78.5625%" y="421" width="0.0218%" height="15" fill="rgb(232,26,8)" fg:x="35962" fg:w="10"/><text x="78.8125%" y="431.50"></text></g><g><title>block_verifier`rayon_core::registry::WorkerThread::wait_until_cold (3,392 samples, 7.41%)</title><rect x="71.1764%" y="469" width="7.4102%" height="15" fill="rgb(216,166,38)" fg:x="32581" fg:w="3392"/><text x="71.4264%" y="479.50">block_veri..</text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="78.6390%" y="373" width="0.0109%" height="15" fill="rgb(251,202,51)" fg:x="35997" fg:w="5"/><text x="78.8890%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_core_executor::ports::TransactionExt&gt;::max_gas (19 samples, 0.04%)</title><rect x="78.6128%" y="389" width="0.0415%" height="15" fill="rgb(254,216,34)" fg:x="35985" fg:w="19"/><text x="78.8628%" y="399.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.05%)</title><rect x="78.6739%" y="373" width="0.0524%" height="15" fill="rgb(251,32,27)" fg:x="36013" fg:w="24"/><text x="78.9239%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.04%)</title><rect x="78.6849%" y="357" width="0.0415%" height="15" fill="rgb(208,127,28)" fg:x="36018" fg:w="19"/><text x="78.9349%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.03%)</title><rect x="78.6914%" y="341" width="0.0350%" height="15" fill="rgb(224,137,22)" fg:x="36021" fg:w="16"/><text x="78.9414%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="78.7023%" y="325" width="0.0240%" height="15" fill="rgb(254,70,32)" fg:x="36026" fg:w="11"/><text x="78.9523%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (15 samples, 0.03%)</title><rect x="78.7264%" y="373" width="0.0328%" height="15" fill="rgb(229,75,37)" fg:x="36037" fg:w="15"/><text x="78.9764%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (8 samples, 0.02%)</title><rect x="78.7635%" y="357" width="0.0175%" height="15" fill="rgb(252,64,23)" fg:x="36054" fg:w="8"/><text x="79.0135%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="78.7679%" y="341" width="0.0131%" height="15" fill="rgb(232,162,48)" fg:x="36056" fg:w="6"/><text x="79.0179%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.04%)</title><rect x="78.7832%" y="357" width="0.0437%" height="15" fill="rgb(246,160,12)" fg:x="36063" fg:w="20"/><text x="79.0332%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.03%)</title><rect x="78.7963%" y="341" width="0.0306%" height="15" fill="rgb(247,166,0)" fg:x="36069" fg:w="14"/><text x="79.0463%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (33 samples, 0.07%)</title><rect x="78.7613%" y="373" width="0.0721%" height="15" fill="rgb(249,219,21)" fg:x="36053" fg:w="33"/><text x="79.0113%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (29 samples, 0.06%)</title><rect x="78.8356%" y="373" width="0.0634%" height="15" fill="rgb(205,209,3)" fg:x="36087" fg:w="29"/><text x="79.0856%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="78.9164%" y="373" width="0.0197%" height="15" fill="rgb(243,44,1)" fg:x="36124" fg:w="9"/><text x="79.1664%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="78.9186%" y="357" width="0.0175%" height="15" fill="rgb(206,159,16)" fg:x="36125" fg:w="8"/><text x="79.1686%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="78.9361%" y="373" width="0.0153%" height="15" fill="rgb(244,77,30)" fg:x="36133" fg:w="7"/><text x="79.1861%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="78.9383%" y="357" width="0.0131%" height="15" fill="rgb(218,69,12)" fg:x="36134" fg:w="6"/><text x="79.1883%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="78.9383%" y="341" width="0.0131%" height="15" fill="rgb(212,87,7)" fg:x="36134" fg:w="6"/><text x="79.1883%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (139 samples, 0.30%)</title><rect x="78.6543%" y="389" width="0.3037%" height="15" fill="rgb(245,114,25)" fg:x="36004" fg:w="139"/><text x="78.9043%" y="399.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="79.0410%" y="357" width="0.0371%" height="15" fill="rgb(210,61,42)" fg:x="36181" fg:w="17"/><text x="79.2910%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="79.0497%" y="341" width="0.0284%" height="15" fill="rgb(211,52,33)" fg:x="36185" fg:w="13"/><text x="79.2997%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="79.0563%" y="325" width="0.0218%" height="15" fill="rgb(234,58,33)" fg:x="36188" fg:w="10"/><text x="79.3063%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="79.0628%" y="309" width="0.0153%" height="15" fill="rgb(220,115,36)" fg:x="36191" fg:w="7"/><text x="79.3128%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (8 samples, 0.02%)</title><rect x="79.0890%" y="341" width="0.0175%" height="15" fill="rgb(243,153,54)" fg:x="36203" fg:w="8"/><text x="79.3390%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="79.0934%" y="325" width="0.0131%" height="15" fill="rgb(251,47,18)" fg:x="36205" fg:w="6"/><text x="79.3434%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="79.1087%" y="341" width="0.0197%" height="15" fill="rgb(242,102,42)" fg:x="36212" fg:w="9"/><text x="79.3587%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="79.1152%" y="325" width="0.0131%" height="15" fill="rgb(234,31,38)" fg:x="36215" fg:w="6"/><text x="79.3652%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (19 samples, 0.04%)</title><rect x="79.0890%" y="357" width="0.0415%" height="15" fill="rgb(221,117,51)" fg:x="36203" fg:w="19"/><text x="79.3390%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (36 samples, 0.08%)</title><rect x="79.1305%" y="357" width="0.0786%" height="15" fill="rgb(212,20,18)" fg:x="36222" fg:w="36"/><text x="79.3805%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="79.2157%" y="357" width="0.0218%" height="15" fill="rgb(245,133,36)" fg:x="36261" fg:w="10"/><text x="79.4657%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="79.2376%" y="357" width="0.0218%" height="15" fill="rgb(212,6,19)" fg:x="36271" fg:w="10"/><text x="79.4876%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="79.2376%" y="341" width="0.0218%" height="15" fill="rgb(218,1,36)" fg:x="36271" fg:w="10"/><text x="79.4876%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="79.2485%" y="325" width="0.0109%" height="15" fill="rgb(246,84,54)" fg:x="36276" fg:w="5"/><text x="79.4985%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (112 samples, 0.24%)</title><rect x="79.0191%" y="373" width="0.2447%" height="15" fill="rgb(242,110,6)" fg:x="36171" fg:w="112"/><text x="79.2691%" y="383.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (6 samples, 0.01%)</title><rect x="79.2682%" y="373" width="0.0131%" height="15" fill="rgb(214,47,5)" fg:x="36285" fg:w="6"/><text x="79.5182%" y="383.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.02%)</title><rect x="79.4342%" y="357" width="0.0197%" height="15" fill="rgb(218,159,25)" fg:x="36361" fg:w="9"/><text x="79.6842%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (88 samples, 0.19%)</title><rect x="79.2835%" y="373" width="0.1922%" height="15" fill="rgb(215,211,28)" fg:x="36292" fg:w="88"/><text x="79.5335%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="79.4539%" y="357" width="0.0218%" height="15" fill="rgb(238,59,32)" fg:x="36370" fg:w="10"/><text x="79.7039%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.03%)</title><rect x="79.5041%" y="341" width="0.0328%" height="15" fill="rgb(226,82,3)" fg:x="36393" fg:w="15"/><text x="79.7541%" y="351.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (29 samples, 0.06%)</title><rect x="79.4757%" y="373" width="0.0634%" height="15" fill="rgb(240,164,32)" fg:x="36380" fg:w="29"/><text x="79.7257%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.04%)</title><rect x="79.4975%" y="357" width="0.0415%" height="15" fill="rgb(232,46,7)" fg:x="36390" fg:w="19"/><text x="79.7475%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="79.5390%" y="309" width="0.0109%" height="15" fill="rgb(229,129,53)" fg:x="36409" fg:w="5"/><text x="79.7890%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="79.5390%" y="373" width="0.0131%" height="15" fill="rgb(234,188,29)" fg:x="36409" fg:w="6"/><text x="79.7890%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="79.5390%" y="357" width="0.0131%" height="15" fill="rgb(246,141,4)" fg:x="36409" fg:w="6"/><text x="79.7890%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.01%)</title><rect x="79.5390%" y="341" width="0.0131%" height="15" fill="rgb(229,23,39)" fg:x="36409" fg:w="6"/><text x="79.7890%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.01%)</title><rect x="79.5390%" y="325" width="0.0131%" height="15" fill="rgb(206,12,3)" fg:x="36409" fg:w="6"/><text x="79.7890%" y="335.50"></text></g><g><title>block_verifier`core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.02%)</title><rect x="79.6155%" y="325" width="0.0175%" height="15" fill="rgb(252,226,20)" fg:x="36444" fg:w="8"/><text x="79.8655%" y="335.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="79.6417%" y="277" width="0.0153%" height="15" fill="rgb(216,123,35)" fg:x="36456" fg:w="7"/><text x="79.8917%" y="287.50"></text></g><g><title>block_verifier`&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="79.6374%" y="293" width="0.0306%" height="15" fill="rgb(212,68,40)" fg:x="36454" fg:w="14"/><text x="79.8874%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.6745%" y="293" width="0.0109%" height="15" fill="rgb(254,125,32)" fg:x="36471" fg:w="5"/><text x="79.9245%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24 samples, 0.05%)</title><rect x="79.6352%" y="309" width="0.0524%" height="15" fill="rgb(253,97,22)" fg:x="36453" fg:w="24"/><text x="79.8852%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::Executable::input_asset_ids_unique (29 samples, 0.06%)</title><rect x="79.6330%" y="325" width="0.0634%" height="15" fill="rgb(241,101,14)" fg:x="36452" fg:w="29"/><text x="79.8830%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (6 samples, 0.01%)</title><rect x="79.7029%" y="309" width="0.0131%" height="15" fill="rgb(238,103,29)" fg:x="36484" fg:w="6"/><text x="79.9529%" y="319.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (13 samples, 0.03%)</title><rect x="79.7160%" y="309" width="0.0284%" height="15" fill="rgb(233,195,47)" fg:x="36490" fg:w="13"/><text x="79.9660%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="79.7553%" y="293" width="0.0240%" height="15" fill="rgb(246,218,30)" fg:x="36508" fg:w="11"/><text x="80.0053%" y="303.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (6 samples, 0.01%)</title><rect x="79.7662%" y="277" width="0.0131%" height="15" fill="rgb(219,145,47)" fg:x="36513" fg:w="6"/><text x="80.0162%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.7684%" y="261" width="0.0109%" height="15" fill="rgb(243,12,26)" fg:x="36514" fg:w="5"/><text x="80.0184%" y="271.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.04%)</title><rect x="79.7444%" y="309" width="0.0371%" height="15" fill="rgb(214,87,16)" fg:x="36503" fg:w="17"/><text x="79.9944%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (41 samples, 0.09%)</title><rect x="79.6963%" y="325" width="0.0896%" height="15" fill="rgb(208,99,42)" fg:x="36481" fg:w="41"/><text x="79.9463%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.04%)</title><rect x="79.8318%" y="277" width="0.0415%" height="15" fill="rgb(253,99,2)" fg:x="36543" fg:w="19"/><text x="80.0818%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.04%)</title><rect x="79.8362%" y="261" width="0.0371%" height="15" fill="rgb(220,168,23)" fg:x="36545" fg:w="17"/><text x="80.0862%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.03%)</title><rect x="79.8471%" y="245" width="0.0262%" height="15" fill="rgb(242,38,24)" fg:x="36550" fg:w="12"/><text x="80.0971%" y="255.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="79.8296%" y="293" width="0.0459%" height="15" fill="rgb(225,182,9)" fg:x="36542" fg:w="21"/><text x="80.0796%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (6 samples, 0.01%)</title><rect x="79.8755%" y="293" width="0.0131%" height="15" fill="rgb(243,178,37)" fg:x="36563" fg:w="6"/><text x="80.1255%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (7 samples, 0.02%)</title><rect x="79.8908%" y="277" width="0.0153%" height="15" fill="rgb(232,139,19)" fg:x="36570" fg:w="7"/><text x="80.1408%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="79.8930%" y="261" width="0.0131%" height="15" fill="rgb(225,201,24)" fg:x="36571" fg:w="6"/><text x="80.1430%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="79.9104%" y="277" width="0.0262%" height="15" fill="rgb(221,47,46)" fg:x="36579" fg:w="12"/><text x="80.1604%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="79.9170%" y="261" width="0.0197%" height="15" fill="rgb(249,23,13)" fg:x="36582" fg:w="9"/><text x="80.1670%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (24 samples, 0.05%)</title><rect x="79.8886%" y="293" width="0.0524%" height="15" fill="rgb(219,9,5)" fg:x="36569" fg:w="24"/><text x="80.1386%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (27 samples, 0.06%)</title><rect x="79.9432%" y="293" width="0.0590%" height="15" fill="rgb(254,171,16)" fg:x="36594" fg:w="27"/><text x="80.1932%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="80.0240%" y="293" width="0.0262%" height="15" fill="rgb(230,171,20)" fg:x="36631" fg:w="12"/><text x="80.2740%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="80.0328%" y="277" width="0.0175%" height="15" fill="rgb(210,71,41)" fg:x="36635" fg:w="8"/><text x="80.2828%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="80.0371%" y="261" width="0.0131%" height="15" fill="rgb(206,173,20)" fg:x="36637" fg:w="6"/><text x="80.2871%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (110 samples, 0.24%)</title><rect x="79.8121%" y="309" width="0.2403%" height="15" fill="rgb(233,88,34)" fg:x="36534" fg:w="110"/><text x="80.0621%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.0612%" y="277" width="0.0131%" height="15" fill="rgb(223,209,46)" fg:x="36648" fg:w="6"/><text x="80.3112%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.0634%" y="261" width="0.0109%" height="15" fill="rgb(250,43,18)" fg:x="36649" fg:w="5"/><text x="80.3134%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.02%)</title><rect x="80.0590%" y="309" width="0.0175%" height="15" fill="rgb(208,13,10)" fg:x="36647" fg:w="8"/><text x="80.3090%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="80.0612%" y="293" width="0.0153%" height="15" fill="rgb(212,200,36)" fg:x="36648" fg:w="7"/><text x="80.3112%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (216 samples, 0.47%)</title><rect x="80.0765%" y="309" width="0.4719%" height="15" fill="rgb(225,90,30)" fg:x="36655" fg:w="216"/><text x="80.3265%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.5571%" y="309" width="0.0131%" height="15" fill="rgb(236,182,39)" fg:x="36875" fg:w="6"/><text x="80.8071%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.5593%" y="293" width="0.0109%" height="15" fill="rgb(212,144,35)" fg:x="36876" fg:w="5"/><text x="80.8093%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.5593%" y="277" width="0.0109%" height="15" fill="rgb(228,63,44)" fg:x="36876" fg:w="5"/><text x="80.8093%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::script::_&lt;impl fuel_tx::transaction::metadata::Cacheable for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::precompute (360 samples, 0.79%)</title><rect x="79.7859%" y="325" width="0.7865%" height="15" fill="rgb(228,109,6)" fg:x="36522" fg:w="360"/><text x="80.0359%" y="335.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="80.5920%" y="293" width="0.0131%" height="15" fill="rgb(238,117,24)" fg:x="36891" fg:w="6"/><text x="80.8420%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.5920%" y="277" width="0.0131%" height="15" fill="rgb(242,26,26)" fg:x="36891" fg:w="6"/><text x="80.8420%" y="287.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="80.5855%" y="309" width="0.0218%" height="15" fill="rgb(221,92,48)" fg:x="36888" fg:w="10"/><text x="80.8355%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::next_duplicate (21 samples, 0.05%)</title><rect x="80.5745%" y="325" width="0.0459%" height="15" fill="rgb(209,209,32)" fg:x="36883" fg:w="21"/><text x="80.8245%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="80.6095%" y="309" width="0.0109%" height="15" fill="rgb(221,70,22)" fg:x="36899" fg:w="5"/><text x="80.8595%" y="319.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (5 samples, 0.01%)</title><rect x="80.6204%" y="325" width="0.0109%" height="15" fill="rgb(248,145,5)" fg:x="36904" fg:w="5"/><text x="80.8704%" y="335.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::types::script::_&lt;impl fuel_vm::checked_transaction::IntoChecked for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::into_checked_basic (487 samples, 1.06%)</title><rect x="79.5871%" y="341" width="1.0639%" height="15" fill="rgb(226,116,26)" fg:x="36431" fg:w="487"/><text x="79.8371%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_vm::checked_transaction::IntoChecked&gt;::into_checked_basic (498 samples, 1.09%)</title><rect x="79.5696%" y="357" width="1.0879%" height="15" fill="rgb(244,5,17)" fg:x="36423" fg:w="498"/><text x="79.8196%" y="367.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::convert_maybe_checked_tx_to_checked_tx (501 samples, 1.09%)</title><rect x="79.5674%" y="373" width="1.0945%" height="15" fill="rgb(252,159,33)" fg:x="36422" fg:w="501"/><text x="79.8174%" y="383.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="80.7187%" y="341" width="0.0109%" height="15" fill="rgb(206,71,0)" fg:x="36949" fg:w="5"/><text x="80.9687%" y="351.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="80.7187%" y="325" width="0.0109%" height="15" fill="rgb(233,118,54)" fg:x="36949" fg:w="5"/><text x="80.9687%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (11 samples, 0.02%)</title><rect x="80.7144%" y="357" width="0.0240%" height="15" fill="rgb(234,83,48)" fg:x="36947" fg:w="11"/><text x="80.9644%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.11%)</title><rect x="80.7428%" y="341" width="0.1092%" height="15" fill="rgb(228,3,54)" fg:x="36960" fg:w="50"/><text x="80.9928%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.09%)</title><rect x="80.7668%" y="325" width="0.0852%" height="15" fill="rgb(226,155,13)" fg:x="36971" fg:w="39"/><text x="81.0168%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.07%)</title><rect x="80.7821%" y="309" width="0.0699%" height="15" fill="rgb(241,28,37)" fg:x="36978" fg:w="32"/><text x="81.0321%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.04%)</title><rect x="80.8105%" y="293" width="0.0415%" height="15" fill="rgb(233,93,10)" fg:x="36991" fg:w="19"/><text x="81.0605%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="80.8411%" y="277" width="0.0109%" height="15" fill="rgb(225,113,19)" fg:x="37005" fg:w="5"/><text x="81.0911%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.06%)</title><rect x="80.8542%" y="325" width="0.0568%" height="15" fill="rgb(241,2,18)" fg:x="37011" fg:w="26"/><text x="81.1042%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.05%)</title><rect x="80.8629%" y="309" width="0.0481%" height="15" fill="rgb(228,207,21)" fg:x="37015" fg:w="22"/><text x="81.1129%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.04%)</title><rect x="80.8717%" y="293" width="0.0393%" height="15" fill="rgb(213,211,35)" fg:x="37019" fg:w="18"/><text x="81.1217%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (28 samples, 0.06%)</title><rect x="80.8520%" y="341" width="0.0612%" height="15" fill="rgb(209,83,10)" fg:x="37010" fg:w="28"/><text x="81.1020%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="80.9241%" y="341" width="0.0175%" height="15" fill="rgb(209,164,1)" fg:x="37043" fg:w="8"/><text x="81.1741%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.9285%" y="325" width="0.0131%" height="15" fill="rgb(213,184,43)" fg:x="37045" fg:w="6"/><text x="81.1785%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (92 samples, 0.20%)</title><rect x="80.7428%" y="357" width="0.2010%" height="15" fill="rgb(231,61,34)" fg:x="36960" fg:w="92"/><text x="80.9928%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (6 samples, 0.01%)</title><rect x="80.9437%" y="357" width="0.0131%" height="15" fill="rgb(235,75,3)" fg:x="37052" fg:w="6"/><text x="81.1937%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="80.9569%" y="357" width="0.0131%" height="15" fill="rgb(220,106,47)" fg:x="37058" fg:w="6"/><text x="81.2069%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="80.9590%" y="341" width="0.0109%" height="15" fill="rgb(210,196,33)" fg:x="37059" fg:w="5"/><text x="81.2090%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.9590%" y="325" width="0.0109%" height="15" fill="rgb(229,154,42)" fg:x="37059" fg:w="5"/><text x="81.2090%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="81.0355%" y="309" width="0.0153%" height="15" fill="rgb(228,114,26)" fg:x="37094" fg:w="7"/><text x="81.2855%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.07%)</title><rect x="80.9874%" y="341" width="0.0677%" height="15" fill="rgb(208,144,1)" fg:x="37072" fg:w="31"/><text x="81.2374%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.03%)</title><rect x="81.0202%" y="325" width="0.0350%" height="15" fill="rgb(239,112,37)" fg:x="37087" fg:w="16"/><text x="81.2702%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (37 samples, 0.08%)</title><rect x="80.9765%" y="357" width="0.0808%" height="15" fill="rgb(210,96,50)" fg:x="37067" fg:w="37"/><text x="81.2265%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (24 samples, 0.05%)</title><rect x="81.0617%" y="341" width="0.0524%" height="15" fill="rgb(222,178,2)" fg:x="37106" fg:w="24"/><text x="81.3117%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.04%)</title><rect x="81.0748%" y="325" width="0.0393%" height="15" fill="rgb(226,74,18)" fg:x="37112" fg:w="18"/><text x="81.3248%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="81.0923%" y="309" width="0.0218%" height="15" fill="rgb(225,67,54)" fg:x="37120" fg:w="10"/><text x="81.3423%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.04%)</title><rect x="81.1229%" y="341" width="0.0393%" height="15" fill="rgb(251,92,32)" fg:x="37134" fg:w="18"/><text x="81.3729%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="81.1425%" y="325" width="0.0197%" height="15" fill="rgb(228,149,22)" fg:x="37143" fg:w="9"/><text x="81.3925%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_vm::storage::predicate::PredicateStorage&lt;&amp;fuel_core::graphql_api::database::ReadView&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (49 samples, 0.11%)</title><rect x="81.0573%" y="357" width="0.1070%" height="15" fill="rgb(243,54,13)" fg:x="37104" fg:w="49"/><text x="81.3073%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 0.03%)</title><rect x="81.2256%" y="341" width="0.0306%" height="15" fill="rgb(243,180,28)" fg:x="37181" fg:w="14"/><text x="81.4756%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="81.2299%" y="325" width="0.0262%" height="15" fill="rgb(208,167,24)" fg:x="37183" fg:w="12"/><text x="81.4799%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="81.2321%" y="309" width="0.0240%" height="15" fill="rgb(245,73,45)" fg:x="37184" fg:w="11"/><text x="81.4821%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="81.2430%" y="293" width="0.0131%" height="15" fill="rgb(237,203,48)" fg:x="37189" fg:w="6"/><text x="81.4930%" y="303.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.01%)</title><rect x="81.2714%" y="325" width="0.0109%" height="15" fill="rgb(211,197,16)" fg:x="37202" fg:w="5"/><text x="81.5214%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (20 samples, 0.04%)</title><rect x="81.2649%" y="341" width="0.0437%" height="15" fill="rgb(243,99,51)" fg:x="37199" fg:w="20"/><text x="81.5149%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.04%)</title><rect x="81.3282%" y="293" width="0.0437%" height="15" fill="rgb(215,123,29)" fg:x="37228" fg:w="20"/><text x="81.5782%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.04%)</title><rect x="81.3348%" y="277" width="0.0371%" height="15" fill="rgb(239,186,37)" fg:x="37231" fg:w="17"/><text x="81.5848%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.03%)</title><rect x="81.3435%" y="261" width="0.0284%" height="15" fill="rgb(252,136,39)" fg:x="37235" fg:w="13"/><text x="81.5935%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="81.3610%" y="245" width="0.0109%" height="15" fill="rgb(223,213,32)" fg:x="37243" fg:w="5"/><text x="81.6110%" y="255.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.05%)</title><rect x="81.3195%" y="309" width="0.0546%" height="15" fill="rgb(233,115,5)" fg:x="37224" fg:w="25"/><text x="81.5695%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="81.3741%" y="309" width="0.0284%" height="15" fill="rgb(207,226,44)" fg:x="37249" fg:w="13"/><text x="81.6241%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="81.3763%" y="293" width="0.0262%" height="15" fill="rgb(208,126,0)" fg:x="37250" fg:w="12"/><text x="81.6263%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="81.3829%" y="277" width="0.0197%" height="15" fill="rgb(244,66,21)" fg:x="37253" fg:w="9"/><text x="81.6329%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="81.3916%" y="261" width="0.0109%" height="15" fill="rgb(222,97,12)" fg:x="37257" fg:w="5"/><text x="81.6416%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.4134%" y="309" width="0.0109%" height="15" fill="rgb(219,213,19)" fg:x="37267" fg:w="5"/><text x="81.6634%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.4134%" y="293" width="0.0109%" height="15" fill="rgb(252,169,30)" fg:x="37267" fg:w="5"/><text x="81.6634%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (54 samples, 0.12%)</title><rect x="81.3129%" y="325" width="0.1180%" height="15" fill="rgb(206,32,51)" fg:x="37221" fg:w="54"/><text x="81.5629%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_vm::state::StateTransition&lt;Tx&gt; as core::convert::From&lt;fuel_vm::state::StateTransitionRef&lt;Tx&gt;&gt;&gt;::from (61 samples, 0.13%)</title><rect x="81.3086%" y="341" width="0.1333%" height="15" fill="rgb(250,172,42)" fg:x="37219" fg:w="61"/><text x="81.5586%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (10 samples, 0.02%)</title><rect x="81.4506%" y="341" width="0.0218%" height="15" fill="rgb(209,34,43)" fg:x="37284" fg:w="10"/><text x="81.7006%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="81.4549%" y="325" width="0.0175%" height="15" fill="rgb(223,11,35)" fg:x="37286" fg:w="8"/><text x="81.7049%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="81.4615%" y="309" width="0.0109%" height="15" fill="rgb(251,219,26)" fg:x="37289" fg:w="5"/><text x="81.7115%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (8 samples, 0.02%)</title><rect x="81.4790%" y="293" width="0.0175%" height="15" fill="rgb(231,119,3)" fg:x="37297" fg:w="8"/><text x="81.7290%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.04%)</title><rect x="81.4965%" y="293" width="0.0415%" height="15" fill="rgb(216,97,11)" fg:x="37305" fg:w="19"/><text x="81.7465%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (29 samples, 0.06%)</title><rect x="81.4768%" y="309" width="0.0634%" height="15" fill="rgb(223,59,9)" fg:x="37296" fg:w="29"/><text x="81.7268%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (23 samples, 0.05%)</title><rect x="81.5401%" y="309" width="0.0502%" height="15" fill="rgb(233,93,31)" fg:x="37325" fg:w="23"/><text x="81.7901%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.01%)</title><rect x="81.5926%" y="309" width="0.0131%" height="15" fill="rgb(239,81,33)" fg:x="37349" fg:w="6"/><text x="81.8426%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (10 samples, 0.02%)</title><rect x="81.6581%" y="293" width="0.0218%" height="15" fill="rgb(213,120,34)" fg:x="37379" fg:w="10"/><text x="81.9081%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.02%)</title><rect x="81.7236%" y="277" width="0.0197%" height="15" fill="rgb(243,49,53)" fg:x="37409" fg:w="9"/><text x="81.9736%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.07%)</title><rect x="81.6843%" y="293" width="0.0743%" height="15" fill="rgb(247,216,33)" fg:x="37391" fg:w="34"/><text x="81.9343%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.02%)</title><rect x="81.7433%" y="277" width="0.0153%" height="15" fill="rgb(226,26,14)" fg:x="37418" fg:w="7"/><text x="81.9933%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (77 samples, 0.17%)</title><rect x="81.6057%" y="309" width="0.1682%" height="15" fill="rgb(215,49,53)" fg:x="37355" fg:w="77"/><text x="81.8557%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (7 samples, 0.02%)</title><rect x="81.7586%" y="293" width="0.0153%" height="15" fill="rgb(245,162,40)" fg:x="37425" fg:w="7"/><text x="82.0086%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (142 samples, 0.31%)</title><rect x="81.4724%" y="325" width="0.3102%" height="15" fill="rgb(229,68,17)" fg:x="37294" fg:w="142"/><text x="81.7224%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.02%)</title><rect x="81.7826%" y="325" width="0.0153%" height="15" fill="rgb(213,182,10)" fg:x="37436" fg:w="7"/><text x="82.0326%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.03%)</title><rect x="81.8045%" y="325" width="0.0350%" height="15" fill="rgb(245,125,30)" fg:x="37446" fg:w="16"/><text x="82.0545%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="81.8241%" y="309" width="0.0153%" height="15" fill="rgb(232,202,2)" fg:x="37455" fg:w="7"/><text x="82.0741%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_core_storage::vm_storage::VmStorage&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::key_value_view::KeyValueViewWrapper&lt;fuel_core_storage::column::Column&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (173 samples, 0.38%)</title><rect x="81.4724%" y="341" width="0.3779%" height="15" fill="rgb(237,140,51)" fg:x="37294" fg:w="173"/><text x="81.7224%" y="351.50"></text></g><g><title>block_verifier`core::fmt::Formatter::pad_integral (6 samples, 0.01%)</title><rect x="81.9421%" y="213" width="0.0131%" height="15" fill="rgb(236,157,25)" fg:x="37509" fg:w="6"/><text x="82.1921%" y="223.50"></text></g><g><title>block_verifier`core::fmt::write (19 samples, 0.04%)</title><rect x="81.9159%" y="245" width="0.0415%" height="15" fill="rgb(219,209,0)" fg:x="37497" fg:w="19"/><text x="82.1659%" y="255.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (9 samples, 0.02%)</title><rect x="81.9377%" y="229" width="0.0197%" height="15" fill="rgb(240,116,54)" fg:x="37507" fg:w="9"/><text x="82.1877%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="81.9574%" y="245" width="0.0197%" height="15" fill="rgb(216,10,36)" fg:x="37516" fg:w="9"/><text x="82.2074%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="81.9596%" y="229" width="0.0175%" height="15" fill="rgb(222,72,44)" fg:x="37517" fg:w="8"/><text x="82.2096%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="81.9661%" y="213" width="0.0109%" height="15" fill="rgb(232,159,9)" fg:x="37520" fg:w="5"/><text x="82.2161%" y="223.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (40 samples, 0.09%)</title><rect x="81.9072%" y="261" width="0.0874%" height="15" fill="rgb(210,39,32)" fg:x="37493" fg:w="40"/><text x="82.1572%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="81.9771%" y="245" width="0.0175%" height="15" fill="rgb(216,194,45)" fg:x="37525" fg:w="8"/><text x="82.2271%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (17 samples, 0.04%)</title><rect x="81.9989%" y="261" width="0.0371%" height="15" fill="rgb(218,18,35)" fg:x="37535" fg:w="17"/><text x="82.2489%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="82.0404%" y="261" width="0.0175%" height="15" fill="rgb(207,83,51)" fg:x="37554" fg:w="8"/><text x="82.2904%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="82.0448%" y="245" width="0.0131%" height="15" fill="rgb(225,63,43)" fg:x="37556" fg:w="6"/><text x="82.2948%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (72 samples, 0.16%)</title><rect x="81.9050%" y="277" width="0.1573%" height="15" fill="rgb(207,57,36)" fg:x="37492" fg:w="72"/><text x="82.1550%" y="287.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (7 samples, 0.02%)</title><rect x="82.1868%" y="165" width="0.0153%" height="15" fill="rgb(216,99,33)" fg:x="37621" fg:w="7"/><text x="82.4368%" y="175.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (9 samples, 0.02%)</title><rect x="82.2851%" y="149" width="0.0197%" height="15" fill="rgb(225,42,16)" fg:x="37666" fg:w="9"/><text x="82.5351%" y="159.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (8 samples, 0.02%)</title><rect x="82.3048%" y="149" width="0.0175%" height="15" fill="rgb(220,201,45)" fg:x="37675" fg:w="8"/><text x="82.5548%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (22 samples, 0.05%)</title><rect x="82.3222%" y="149" width="0.0481%" height="15" fill="rgb(225,33,4)" fg:x="37683" fg:w="22"/><text x="82.5722%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (132 samples, 0.29%)</title><rect x="82.1234%" y="181" width="0.2884%" height="15" fill="rgb(224,33,50)" fg:x="37592" fg:w="132"/><text x="82.3734%" y="191.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (96 samples, 0.21%)</title><rect x="82.2021%" y="165" width="0.2097%" height="15" fill="rgb(246,198,51)" fg:x="37628" fg:w="96"/><text x="82.4521%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.04%)</title><rect x="82.3703%" y="149" width="0.0415%" height="15" fill="rgb(205,22,4)" fg:x="37705" fg:w="19"/><text x="82.6203%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (10 samples, 0.02%)</title><rect x="82.4315%" y="149" width="0.0218%" height="15" fill="rgb(206,3,8)" fg:x="37733" fg:w="10"/><text x="82.6815%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (155 samples, 0.34%)</title><rect x="82.1169%" y="197" width="0.3386%" height="15" fill="rgb(251,23,15)" fg:x="37589" fg:w="155"/><text x="82.3669%" y="207.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (18 samples, 0.04%)</title><rect x="82.4162%" y="181" width="0.0393%" height="15" fill="rgb(252,88,28)" fg:x="37726" fg:w="18"/><text x="82.6662%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (12 samples, 0.03%)</title><rect x="82.4293%" y="165" width="0.0262%" height="15" fill="rgb(212,127,14)" fg:x="37732" fg:w="12"/><text x="82.6793%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (160 samples, 0.35%)</title><rect x="82.1125%" y="213" width="0.3495%" height="15" fill="rgb(247,145,37)" fg:x="37587" fg:w="160"/><text x="82.3625%" y="223.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (182 samples, 0.40%)</title><rect x="82.0841%" y="245" width="0.3976%" height="15" fill="rgb(209,117,53)" fg:x="37574" fg:w="182"/><text x="82.3341%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (182 samples, 0.40%)</title><rect x="82.0841%" y="229" width="0.3976%" height="15" fill="rgb(212,90,42)" fg:x="37574" fg:w="182"/><text x="82.3341%" y="239.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (195 samples, 0.43%)</title><rect x="82.0841%" y="261" width="0.4260%" height="15" fill="rgb(218,164,37)" fg:x="37574" fg:w="195"/><text x="82.3341%" y="271.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (11 samples, 0.02%)</title><rect x="82.4861%" y="245" width="0.0240%" height="15" fill="rgb(246,65,34)" fg:x="37758" fg:w="11"/><text x="82.7361%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="82.4861%" y="229" width="0.0240%" height="15" fill="rgb(231,100,33)" fg:x="37758" fg:w="11"/><text x="82.7361%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="82.4926%" y="213" width="0.0175%" height="15" fill="rgb(228,126,14)" fg:x="37761" fg:w="8"/><text x="82.7426%" y="223.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (12 samples, 0.03%)</title><rect x="82.5101%" y="261" width="0.0262%" height="15" fill="rgb(215,173,21)" fg:x="37769" fg:w="12"/><text x="82.7601%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="82.5145%" y="245" width="0.0218%" height="15" fill="rgb(210,6,40)" fg:x="37771" fg:w="10"/><text x="82.7645%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="82.5210%" y="229" width="0.0153%" height="15" fill="rgb(212,48,18)" fg:x="37774" fg:w="7"/><text x="82.7710%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="82.5429%" y="261" width="0.0175%" height="15" fill="rgb(230,214,11)" fg:x="37784" fg:w="8"/><text x="82.7929%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="82.5451%" y="245" width="0.0153%" height="15" fill="rgb(254,105,39)" fg:x="37785" fg:w="7"/><text x="82.7951%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.5603%" y="261" width="0.0109%" height="15" fill="rgb(245,158,5)" fg:x="37792" fg:w="5"/><text x="82.8103%" y="271.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (234 samples, 0.51%)</title><rect x="82.0623%" y="277" width="0.5112%" height="15" fill="rgb(249,208,11)" fg:x="37564" fg:w="234"/><text x="82.3123%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.5866%" y="277" width="0.0109%" height="15" fill="rgb(210,39,28)" fg:x="37804" fg:w="5"/><text x="82.8366%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.5866%" y="261" width="0.0109%" height="15" fill="rgb(211,56,53)" fg:x="37804" fg:w="5"/><text x="82.8366%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (336 samples, 0.73%)</title><rect x="81.8656%" y="293" width="0.7340%" height="15" fill="rgb(226,201,30)" fg:x="37474" fg:w="336"/><text x="82.1156%" y="303.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (37 samples, 0.08%)</title><rect x="82.6171%" y="277" width="0.0808%" height="15" fill="rgb(239,101,34)" fg:x="37818" fg:w="37"/><text x="82.8671%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (54 samples, 0.12%)</title><rect x="82.6084%" y="293" width="0.1180%" height="15" fill="rgb(226,209,5)" fg:x="37814" fg:w="54"/><text x="82.8584%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.03%)</title><rect x="82.6980%" y="277" width="0.0284%" height="15" fill="rgb(250,105,47)" fg:x="37855" fg:w="13"/><text x="82.9480%" y="287.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (20 samples, 0.04%)</title><rect x="82.7329%" y="293" width="0.0437%" height="15" fill="rgb(230,72,3)" fg:x="37871" fg:w="20"/><text x="82.9829%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::compute_inputs (436 samples, 0.95%)</title><rect x="81.8504%" y="341" width="0.9525%" height="15" fill="rgb(232,218,39)" fg:x="37467" fg:w="436"/><text x="82.1004%" y="351.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::get_coin_or_default (434 samples, 0.95%)</title><rect x="81.8547%" y="325" width="0.9481%" height="15" fill="rgb(248,166,6)" fg:x="37469" fg:w="434"/><text x="82.1047%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (430 samples, 0.94%)</title><rect x="81.8635%" y="309" width="0.9394%" height="15" fill="rgb(247,89,20)" fg:x="37473" fg:w="430"/><text x="82.1135%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="82.7788%" y="293" width="0.0240%" height="15" fill="rgb(248,130,54)" fg:x="37892" fg:w="11"/><text x="83.0288%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="82.7919%" y="277" width="0.0109%" height="15" fill="rgb(234,196,4)" fg:x="37898" fg:w="5"/><text x="83.0419%" y="287.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (19 samples, 0.04%)</title><rect x="82.8203%" y="309" width="0.0415%" height="15" fill="rgb(250,143,31)" fg:x="37911" fg:w="19"/><text x="83.0703%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (25 samples, 0.05%)</title><rect x="82.8138%" y="325" width="0.0546%" height="15" fill="rgb(211,110,34)" fg:x="37908" fg:w="25"/><text x="83.0638%" y="335.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (32 samples, 0.07%)</title><rect x="82.8094%" y="341" width="0.0699%" height="15" fill="rgb(215,124,48)" fg:x="37906" fg:w="32"/><text x="83.0594%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (7 samples, 0.02%)</title><rect x="82.9143%" y="309" width="0.0153%" height="15" fill="rgb(216,46,13)" fg:x="37954" fg:w="7"/><text x="83.1643%" y="319.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (21 samples, 0.05%)</title><rect x="82.9295%" y="309" width="0.0459%" height="15" fill="rgb(205,184,25)" fg:x="37961" fg:w="21"/><text x="83.1795%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (9 samples, 0.02%)</title><rect x="82.9885%" y="277" width="0.0197%" height="15" fill="rgb(228,1,10)" fg:x="37988" fg:w="9"/><text x="83.2385%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.9973%" y="261" width="0.0109%" height="15" fill="rgb(213,116,27)" fg:x="37992" fg:w="5"/><text x="83.2473%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.9973%" y="245" width="0.0109%" height="15" fill="rgb(241,95,50)" fg:x="37992" fg:w="5"/><text x="83.2473%" y="255.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.03%)</title><rect x="82.9820%" y="293" width="0.0328%" height="15" fill="rgb(238,48,32)" fg:x="37985" fg:w="15"/><text x="83.2320%" y="303.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.04%)</title><rect x="82.9754%" y="309" width="0.0415%" height="15" fill="rgb(235,113,49)" fg:x="37982" fg:w="19"/><text x="83.2254%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (70 samples, 0.15%)</title><rect x="82.8924%" y="325" width="0.1529%" height="15" fill="rgb(205,127,43)" fg:x="37944" fg:w="70"/><text x="83.1424%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="83.0213%" y="309" width="0.0240%" height="15" fill="rgb(250,162,2)" fg:x="38003" fg:w="11"/><text x="83.2713%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::into_ready (77 samples, 0.17%)</title><rect x="82.8793%" y="341" width="0.1682%" height="15" fill="rgb(220,13,41)" fg:x="37938" fg:w="77"/><text x="83.1293%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::ExecutableTransaction::update_outputs (9 samples, 0.02%)</title><rect x="83.0475%" y="341" width="0.0197%" height="15" fill="rgb(249,221,25)" fg:x="38015" fg:w="9"/><text x="83.2975%" y="351.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (6 samples, 0.01%)</title><rect x="83.0541%" y="325" width="0.0131%" height="15" fill="rgb(215,208,19)" fg:x="38018" fg:w="6"/><text x="83.3041%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.02%)</title><rect x="83.0737%" y="293" width="0.0175%" height="15" fill="rgb(236,175,2)" fg:x="38027" fg:w="8"/><text x="83.3237%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="83.0781%" y="277" width="0.0131%" height="15" fill="rgb(241,52,2)" fg:x="38029" fg:w="6"/><text x="83.3281%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="83.0803%" y="261" width="0.0109%" height="15" fill="rgb(248,140,14)" fg:x="38030" fg:w="5"/><text x="83.3303%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="83.0803%" y="245" width="0.0109%" height="15" fill="rgb(253,22,42)" fg:x="38030" fg:w="5"/><text x="83.3303%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="83.0934%" y="261" width="0.0153%" height="15" fill="rgb(234,61,47)" fg:x="38036" fg:w="7"/><text x="83.3434%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="83.0934%" y="245" width="0.0153%" height="15" fill="rgb(208,226,15)" fg:x="38036" fg:w="7"/><text x="83.3434%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="83.0934%" y="229" width="0.0153%" height="15" fill="rgb(217,221,4)" fg:x="38036" fg:w="7"/><text x="83.3434%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="83.0956%" y="213" width="0.0131%" height="15" fill="rgb(212,174,34)" fg:x="38037" fg:w="6"/><text x="83.3456%" y="223.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (9 samples, 0.02%)</title><rect x="83.0912%" y="277" width="0.0197%" height="15" fill="rgb(253,83,4)" fg:x="38035" fg:w="9"/><text x="83.3412%" y="287.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (42 samples, 0.09%)</title><rect x="83.1131%" y="277" width="0.0918%" height="15" fill="rgb(250,195,49)" fg:x="38045" fg:w="42"/><text x="83.3631%" y="287.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (53 samples, 0.12%)</title><rect x="83.0912%" y="293" width="0.1158%" height="15" fill="rgb(241,192,25)" fg:x="38035" fg:w="53"/><text x="83.3412%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (71 samples, 0.16%)</title><rect x="83.0715%" y="309" width="0.1551%" height="15" fill="rgb(208,124,10)" fg:x="38026" fg:w="71"/><text x="83.3215%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::ret (76 samples, 0.17%)</title><rect x="83.0672%" y="341" width="0.1660%" height="15" fill="rgb(222,33,0)" fg:x="38024" fg:w="76"/><text x="83.3172%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (76 samples, 0.17%)</title><rect x="83.0672%" y="325" width="0.1660%" height="15" fill="rgb(234,209,28)" fg:x="38024" fg:w="76"/><text x="83.3172%" y="335.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (80 samples, 0.17%)</title><rect x="83.2441%" y="325" width="0.1748%" height="15" fill="rgb(224,11,23)" fg:x="38105" fg:w="80"/><text x="83.4941%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (76 samples, 0.17%)</title><rect x="83.2529%" y="309" width="0.1660%" height="15" fill="rgb(232,99,1)" fg:x="38109" fg:w="76"/><text x="83.5029%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="83.4189%" y="325" width="0.0175%" height="15" fill="rgb(237,95,45)" fg:x="38185" fg:w="8"/><text x="83.6689%" y="335.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (94 samples, 0.21%)</title><rect x="83.2419%" y="341" width="0.2054%" height="15" fill="rgb(208,109,11)" fg:x="38104" fg:w="94"/><text x="83.4919%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="83.4364%" y="325" width="0.0109%" height="15" fill="rgb(216,190,48)" fg:x="38193" fg:w="5"/><text x="83.6864%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="83.4364%" y="309" width="0.0109%" height="15" fill="rgb(251,171,36)" fg:x="38193" fg:w="5"/><text x="83.6864%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="83.4364%" y="293" width="0.0109%" height="15" fill="rgb(230,62,22)" fg:x="38193" fg:w="5"/><text x="83.6864%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::root (7 samples, 0.02%)</title><rect x="83.4473%" y="341" width="0.0153%" height="15" fill="rgb(225,114,35)" fg:x="38198" fg:w="7"/><text x="83.6973%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.01%)</title><rect x="83.4626%" y="341" width="0.0109%" height="15" fill="rgb(215,118,42)" fg:x="38205" fg:w="5"/><text x="83.7126%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.02%)</title><rect x="83.4735%" y="341" width="0.0153%" height="15" fill="rgb(243,119,21)" fg:x="38210" fg:w="7"/><text x="83.7235%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="83.4910%" y="341" width="0.0306%" height="15" fill="rgb(252,177,53)" fg:x="38218" fg:w="14"/><text x="83.7410%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="83.5019%" y="325" width="0.0197%" height="15" fill="rgb(237,209,29)" fg:x="38223" fg:w="9"/><text x="83.7519%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="83.5303%" y="309" width="0.0109%" height="15" fill="rgb(212,65,23)" fg:x="38236" fg:w="5"/><text x="83.7803%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="83.5216%" y="341" width="0.0218%" height="15" fill="rgb(230,222,46)" fg:x="38232" fg:w="10"/><text x="83.7716%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="83.5281%" y="325" width="0.0153%" height="15" fill="rgb(215,135,32)" fg:x="38235" fg:w="7"/><text x="83.7781%" y="335.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::attempt_tx_execution_with_vm (1,094 samples, 2.39%)</title><rect x="81.1644%" y="357" width="2.3900%" height="15" fill="rgb(246,101,22)" fg:x="37153" fg:w="1094"/><text x="81.4144%" y="367.50">bl..</text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="83.5434%" y="341" width="0.0109%" height="15" fill="rgb(206,107,13)" fg:x="38242" fg:w="5"/><text x="83.7934%" y="351.50"></text></g><g><title>block_verifier`core::fmt::write (8 samples, 0.02%)</title><rect x="83.6395%" y="277" width="0.0175%" height="15" fill="rgb(250,100,44)" fg:x="38286" fg:w="8"/><text x="83.8895%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="83.6570%" y="277" width="0.0175%" height="15" fill="rgb(231,147,38)" fg:x="38294" fg:w="8"/><text x="83.9070%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="83.6614%" y="261" width="0.0131%" height="15" fill="rgb(229,8,40)" fg:x="38296" fg:w="6"/><text x="83.9114%" y="271.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (21 samples, 0.05%)</title><rect x="83.6352%" y="293" width="0.0459%" height="15" fill="rgb(221,135,30)" fg:x="38284" fg:w="21"/><text x="83.8852%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (17 samples, 0.04%)</title><rect x="83.6810%" y="293" width="0.0371%" height="15" fill="rgb(249,193,18)" fg:x="38305" fg:w="17"/><text x="83.9310%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="83.7226%" y="293" width="0.0153%" height="15" fill="rgb(209,133,39)" fg:x="38324" fg:w="7"/><text x="83.9726%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="83.7247%" y="277" width="0.0131%" height="15" fill="rgb(232,100,14)" fg:x="38325" fg:w="6"/><text x="83.9747%" y="287.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (57 samples, 0.12%)</title><rect x="83.6286%" y="309" width="0.1245%" height="15" fill="rgb(224,185,1)" fg:x="38281" fg:w="57"/><text x="83.8786%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="83.7400%" y="293" width="0.0131%" height="15" fill="rgb(223,139,8)" fg:x="38332" fg:w="6"/><text x="83.9900%" y="303.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.02%)</title><rect x="83.9519%" y="197" width="0.0175%" height="15" fill="rgb(232,213,38)" fg:x="38429" fg:w="8"/><text x="84.2019%" y="207.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (14 samples, 0.03%)</title><rect x="84.1049%" y="181" width="0.0306%" height="15" fill="rgb(207,94,22)" fg:x="38499" fg:w="14"/><text x="84.3549%" y="191.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (6 samples, 0.01%)</title><rect x="84.1354%" y="181" width="0.0131%" height="15" fill="rgb(219,183,54)" fg:x="38513" fg:w="6"/><text x="84.3854%" y="191.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (8 samples, 0.02%)</title><rect x="84.1486%" y="181" width="0.0175%" height="15" fill="rgb(216,185,54)" fg:x="38519" fg:w="8"/><text x="84.3986%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.04%)</title><rect x="84.1660%" y="181" width="0.0437%" height="15" fill="rgb(254,217,39)" fg:x="38527" fg:w="20"/><text x="84.4160%" y="191.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (126 samples, 0.28%)</title><rect x="83.9694%" y="197" width="0.2753%" height="15" fill="rgb(240,178,23)" fg:x="38437" fg:w="126"/><text x="84.2194%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (16 samples, 0.03%)</title><rect x="84.2097%" y="181" width="0.0350%" height="15" fill="rgb(218,11,47)" fg:x="38547" fg:w="16"/><text x="84.4597%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (206 samples, 0.45%)</title><rect x="83.7968%" y="213" width="0.4500%" height="15" fill="rgb(218,51,51)" fg:x="38358" fg:w="206"/><text x="84.0468%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (212 samples, 0.46%)</title><rect x="83.7946%" y="229" width="0.4631%" height="15" fill="rgb(238,126,27)" fg:x="38357" fg:w="212"/><text x="84.0446%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (216 samples, 0.47%)</title><rect x="83.7925%" y="245" width="0.4719%" height="15" fill="rgb(249,202,22)" fg:x="38356" fg:w="216"/><text x="84.0425%" y="255.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.03%)</title><rect x="84.2687%" y="245" width="0.0350%" height="15" fill="rgb(254,195,49)" fg:x="38574" fg:w="16"/><text x="84.5187%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (257 samples, 0.56%)</title><rect x="83.7597%" y="261" width="0.5614%" height="15" fill="rgb(208,123,14)" fg:x="38341" fg:w="257"/><text x="84.0097%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (259 samples, 0.57%)</title><rect x="83.7597%" y="277" width="0.5658%" height="15" fill="rgb(224,200,8)" fg:x="38341" fg:w="259"/><text x="84.0097%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="84.3255%" y="261" width="0.0153%" height="15" fill="rgb(217,61,36)" fg:x="38600" fg:w="7"/><text x="84.5755%" y="271.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (8 samples, 0.02%)</title><rect x="84.3255%" y="277" width="0.0175%" height="15" fill="rgb(206,35,45)" fg:x="38600" fg:w="8"/><text x="84.5755%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="84.3539%" y="277" width="0.0131%" height="15" fill="rgb(217,65,33)" fg:x="38613" fg:w="6"/><text x="84.6039%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="84.3561%" y="261" width="0.0109%" height="15" fill="rgb(222,158,48)" fg:x="38614" fg:w="5"/><text x="84.6061%" y="271.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (280 samples, 0.61%)</title><rect x="83.7575%" y="293" width="0.6117%" height="15" fill="rgb(254,2,54)" fg:x="38340" fg:w="280"/><text x="84.0075%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (284 samples, 0.62%)</title><rect x="83.7531%" y="309" width="0.6204%" height="15" fill="rgb(250,143,38)" fg:x="38338" fg:w="284"/><text x="84.0031%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (361 samples, 0.79%)</title><rect x="83.5915%" y="325" width="0.7886%" height="15" fill="rgb(248,25,0)" fg:x="38264" fg:w="361"/><text x="83.8415%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (54 samples, 0.12%)</title><rect x="84.4020%" y="309" width="0.1180%" height="15" fill="rgb(206,152,27)" fg:x="38635" fg:w="54"/><text x="84.6520%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.5199%" y="309" width="0.0131%" height="15" fill="rgb(240,77,30)" fg:x="38689" fg:w="6"/><text x="84.7699%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.5199%" y="293" width="0.0131%" height="15" fill="rgb(231,5,3)" fg:x="38689" fg:w="6"/><text x="84.7699%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (20 samples, 0.04%)</title><rect x="84.5330%" y="309" width="0.0437%" height="15" fill="rgb(207,226,32)" fg:x="38695" fg:w="20"/><text x="84.7830%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (92 samples, 0.20%)</title><rect x="84.3801%" y="325" width="0.2010%" height="15" fill="rgb(222,207,47)" fg:x="38625" fg:w="92"/><text x="84.6301%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.04%)</title><rect x="84.6772%" y="229" width="0.0393%" height="15" fill="rgb(229,115,45)" fg:x="38761" fg:w="18"/><text x="84.9272%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="84.6947%" y="213" width="0.0218%" height="15" fill="rgb(224,191,6)" fg:x="38769" fg:w="10"/><text x="84.9447%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="84.7187%" y="229" width="0.0306%" height="15" fill="rgb(230,227,24)" fg:x="38780" fg:w="14"/><text x="84.9687%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="84.7209%" y="213" width="0.0284%" height="15" fill="rgb(228,80,19)" fg:x="38781" fg:w="13"/><text x="84.9709%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="84.7362%" y="197" width="0.0131%" height="15" fill="rgb(247,229,0)" fg:x="38788" fg:w="6"/><text x="84.9862%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="84.7493%" y="229" width="0.0153%" height="15" fill="rgb(237,194,15)" fg:x="38794" fg:w="7"/><text x="84.9993%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (6 samples, 0.01%)</title><rect x="84.7515%" y="213" width="0.0131%" height="15" fill="rgb(219,203,20)" fg:x="38795" fg:w="6"/><text x="85.0015%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (65 samples, 0.14%)</title><rect x="84.6510%" y="245" width="0.1420%" height="15" fill="rgb(234,128,8)" fg:x="38749" fg:w="65"/><text x="84.9010%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (12 samples, 0.03%)</title><rect x="84.7668%" y="229" width="0.0262%" height="15" fill="rgb(248,202,8)" fg:x="38802" fg:w="12"/><text x="85.0168%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (71 samples, 0.16%)</title><rect x="84.6445%" y="261" width="0.1551%" height="15" fill="rgb(206,104,37)" fg:x="38746" fg:w="71"/><text x="84.8945%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (79 samples, 0.17%)</title><rect x="84.6423%" y="277" width="0.1726%" height="15" fill="rgb(223,8,27)" fg:x="38745" fg:w="79"/><text x="84.8923%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="84.8039%" y="261" width="0.0109%" height="15" fill="rgb(216,217,28)" fg:x="38819" fg:w="5"/><text x="85.0539%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="84.8039%" y="245" width="0.0109%" height="15" fill="rgb(249,199,1)" fg:x="38819" fg:w="5"/><text x="85.0539%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (84 samples, 0.18%)</title><rect x="84.6357%" y="293" width="0.1835%" height="15" fill="rgb(240,85,17)" fg:x="38742" fg:w="84"/><text x="84.8857%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (91 samples, 0.20%)</title><rect x="84.6248%" y="309" width="0.1988%" height="15" fill="rgb(206,108,45)" fg:x="38737" fg:w="91"/><text x="84.8748%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="84.8323%" y="245" width="0.0153%" height="15" fill="rgb(245,210,41)" fg:x="38832" fg:w="7"/><text x="85.0823%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="84.8258%" y="293" width="0.0240%" height="15" fill="rgb(206,13,37)" fg:x="38829" fg:w="11"/><text x="85.0758%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="84.8301%" y="277" width="0.0197%" height="15" fill="rgb(250,61,18)" fg:x="38831" fg:w="9"/><text x="85.0801%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="84.8301%" y="261" width="0.0197%" height="15" fill="rgb(235,172,48)" fg:x="38831" fg:w="9"/><text x="85.0801%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.03%)</title><rect x="84.8236%" y="309" width="0.0306%" height="15" fill="rgb(249,201,17)" fg:x="38828" fg:w="14"/><text x="85.0736%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="84.8542%" y="309" width="0.0197%" height="15" fill="rgb(219,208,6)" fg:x="38842" fg:w="9"/><text x="85.1042%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="84.8607%" y="293" width="0.0131%" height="15" fill="rgb(248,31,23)" fg:x="38845" fg:w="6"/><text x="85.1107%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="84.8738%" y="309" width="0.0153%" height="15" fill="rgb(245,15,42)" fg:x="38851" fg:w="7"/><text x="85.1238%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="84.8738%" y="293" width="0.0153%" height="15" fill="rgb(222,217,39)" fg:x="38851" fg:w="7"/><text x="85.1238%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="84.8760%" y="277" width="0.0131%" height="15" fill="rgb(210,219,27)" fg:x="38852" fg:w="6"/><text x="85.1260%" y="287.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (141 samples, 0.31%)</title><rect x="84.5877%" y="325" width="0.3080%" height="15" fill="rgb(252,166,36)" fg:x="38720" fg:w="141"/><text x="84.8377%" y="335.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::persist_output_utxos (618 samples, 1.35%)</title><rect x="83.5609%" y="357" width="1.3501%" height="15" fill="rgb(245,132,34)" fg:x="38250" fg:w="618"/><text x="83.8109%" y="367.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::insert_coin (610 samples, 1.33%)</title><rect x="83.5784%" y="341" width="1.3326%" height="15" fill="rgb(236,54,3)" fg:x="38258" fg:w="610"/><text x="83.8284%" y="351.50"></text></g><g><title>block_verifier`core::fmt::Formatter::pad_integral (5 samples, 0.01%)</title><rect x="84.9896%" y="261" width="0.0109%" height="15" fill="rgb(241,173,43)" fg:x="38904" fg:w="5"/><text x="85.2396%" y="271.50"></text></g><g><title>block_verifier`core::fmt::write (13 samples, 0.03%)</title><rect x="84.9743%" y="293" width="0.0284%" height="15" fill="rgb(215,190,9)" fg:x="38897" fg:w="13"/><text x="85.2243%" y="303.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (6 samples, 0.01%)</title><rect x="84.9896%" y="277" width="0.0131%" height="15" fill="rgb(242,101,16)" fg:x="38904" fg:w="6"/><text x="85.2396%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="85.0027%" y="293" width="0.0218%" height="15" fill="rgb(223,190,21)" fg:x="38910" fg:w="10"/><text x="85.2527%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.0049%" y="277" width="0.0197%" height="15" fill="rgb(215,228,25)" fg:x="38911" fg:w="9"/><text x="85.2549%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="85.0049%" y="261" width="0.0197%" height="15" fill="rgb(225,36,22)" fg:x="38911" fg:w="9"/><text x="85.2549%" y="271.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (29 samples, 0.06%)</title><rect x="84.9721%" y="309" width="0.0634%" height="15" fill="rgb(251,106,46)" fg:x="38896" fg:w="29"/><text x="85.2221%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.0246%" y="293" width="0.0109%" height="15" fill="rgb(208,90,1)" fg:x="38920" fg:w="5"/><text x="85.2746%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (12 samples, 0.03%)</title><rect x="85.0399%" y="309" width="0.0262%" height="15" fill="rgb(243,10,4)" fg:x="38927" fg:w="12"/><text x="85.2899%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="85.0705%" y="309" width="0.0175%" height="15" fill="rgb(212,137,27)" fg:x="38941" fg:w="8"/><text x="85.3205%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="85.0748%" y="293" width="0.0131%" height="15" fill="rgb(231,220,49)" fg:x="38943" fg:w="6"/><text x="85.3248%" y="303.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (59 samples, 0.13%)</title><rect x="84.9678%" y="325" width="0.1289%" height="15" fill="rgb(237,96,20)" fg:x="38894" fg:w="59"/><text x="85.2178%" y="335.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (10 samples, 0.02%)</title><rect x="85.2627%" y="197" width="0.0218%" height="15" fill="rgb(239,229,30)" fg:x="39029" fg:w="10"/><text x="85.5127%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (18 samples, 0.04%)</title><rect x="85.2889%" y="197" width="0.0393%" height="15" fill="rgb(219,65,33)" fg:x="39041" fg:w="18"/><text x="85.5389%" y="207.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (80 samples, 0.17%)</title><rect x="85.1928%" y="213" width="0.1748%" height="15" fill="rgb(243,134,7)" fg:x="38997" fg:w="80"/><text x="85.4428%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (18 samples, 0.04%)</title><rect x="85.3282%" y="197" width="0.0393%" height="15" fill="rgb(216,177,54)" fg:x="39059" fg:w="18"/><text x="85.5782%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (106 samples, 0.23%)</title><rect x="85.1382%" y="229" width="0.2316%" height="15" fill="rgb(211,160,20)" fg:x="38972" fg:w="106"/><text x="85.3882%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (5 samples, 0.01%)</title><rect x="85.3697%" y="229" width="0.0109%" height="15" fill="rgb(239,85,39)" fg:x="39078" fg:w="5"/><text x="85.6197%" y="239.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (10 samples, 0.02%)</title><rect x="85.3872%" y="181" width="0.0218%" height="15" fill="rgb(232,125,22)" fg:x="39086" fg:w="10"/><text x="85.6372%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="85.3872%" y="165" width="0.0218%" height="15" fill="rgb(244,57,34)" fg:x="39086" fg:w="10"/><text x="85.6372%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.3894%" y="149" width="0.0197%" height="15" fill="rgb(214,203,32)" fg:x="39087" fg:w="9"/><text x="85.6394%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="85.3981%" y="133" width="0.0109%" height="15" fill="rgb(207,58,43)" fg:x="39091" fg:w="5"/><text x="85.6481%" y="143.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (14 samples, 0.03%)</title><rect x="85.3829%" y="213" width="0.0306%" height="15" fill="rgb(215,193,15)" fg:x="39084" fg:w="14"/><text x="85.6329%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (13 samples, 0.03%)</title><rect x="85.3850%" y="197" width="0.0284%" height="15" fill="rgb(232,15,44)" fg:x="39085" fg:w="13"/><text x="85.6350%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (127 samples, 0.28%)</title><rect x="85.1382%" y="245" width="0.2774%" height="15" fill="rgb(212,3,48)" fg:x="38972" fg:w="127"/><text x="85.3882%" y="255.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (16 samples, 0.03%)</title><rect x="85.3807%" y="229" width="0.0350%" height="15" fill="rgb(218,128,7)" fg:x="39083" fg:w="16"/><text x="85.6307%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (132 samples, 0.29%)</title><rect x="85.1360%" y="261" width="0.2884%" height="15" fill="rgb(226,216,39)" fg:x="38971" fg:w="132"/><text x="85.3860%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (153 samples, 0.33%)</title><rect x="85.1054%" y="293" width="0.3342%" height="15" fill="rgb(243,47,51)" fg:x="38957" fg:w="153"/><text x="85.3554%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (152 samples, 0.33%)</title><rect x="85.1076%" y="277" width="0.3321%" height="15" fill="rgb(241,183,40)" fg:x="38958" fg:w="152"/><text x="85.3576%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="85.4397%" y="277" width="0.0262%" height="15" fill="rgb(231,217,32)" fg:x="39110" fg:w="12"/><text x="85.6897%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.4462%" y="261" width="0.0197%" height="15" fill="rgb(229,61,38)" fg:x="39113" fg:w="9"/><text x="85.6962%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="85.4506%" y="245" width="0.0153%" height="15" fill="rgb(225,210,5)" fg:x="39115" fg:w="7"/><text x="85.7006%" y="255.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (14 samples, 0.03%)</title><rect x="85.4397%" y="293" width="0.0306%" height="15" fill="rgb(231,79,45)" fg:x="39110" fg:w="14"/><text x="85.6897%" y="303.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (168 samples, 0.37%)</title><rect x="85.1054%" y="309" width="0.3670%" height="15" fill="rgb(224,100,7)" fg:x="38957" fg:w="168"/><text x="85.3554%" y="319.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (5 samples, 0.01%)</title><rect x="85.4724%" y="309" width="0.0109%" height="15" fill="rgb(241,198,18)" fg:x="39125" fg:w="5"/><text x="85.7224%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="85.4724%" y="293" width="0.0109%" height="15" fill="rgb(252,97,53)" fg:x="39125" fg:w="5"/><text x="85.7224%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="85.4833%" y="309" width="0.0197%" height="15" fill="rgb(220,88,7)" fg:x="39130" fg:w="9"/><text x="85.7333%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.5030%" y="309" width="0.0109%" height="15" fill="rgb(213,176,14)" fg:x="39139" fg:w="5"/><text x="85.7530%" y="319.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (193 samples, 0.42%)</title><rect x="85.0967%" y="325" width="0.4216%" height="15" fill="rgb(246,73,7)" fg:x="38953" fg:w="193"/><text x="85.3467%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (281 samples, 0.61%)</title><rect x="84.9285%" y="341" width="0.6139%" height="15" fill="rgb(245,64,36)" fg:x="38876" fg:w="281"/><text x="85.1785%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (5 samples, 0.01%)</title><rect x="85.5423%" y="341" width="0.0109%" height="15" fill="rgb(245,80,10)" fg:x="39157" fg:w="5"/><text x="85.7923%" y="351.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.02%)</title><rect x="85.5773%" y="325" width="0.0197%" height="15" fill="rgb(232,107,50)" fg:x="39173" fg:w="9"/><text x="85.8273%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.5795%" y="309" width="0.0175%" height="15" fill="rgb(253,3,0)" fg:x="39174" fg:w="8"/><text x="85.8295%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.5795%" y="293" width="0.0175%" height="15" fill="rgb(212,99,53)" fg:x="39174" fg:w="8"/><text x="85.8295%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="85.5816%" y="277" width="0.0153%" height="15" fill="rgb(249,111,54)" fg:x="39175" fg:w="7"/><text x="85.8316%" y="287.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (27 samples, 0.06%)</title><rect x="85.6013%" y="325" width="0.0590%" height="15" fill="rgb(249,55,30)" fg:x="39184" fg:w="27"/><text x="85.8513%" y="335.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="85.6603%" y="325" width="0.0131%" height="15" fill="rgb(237,47,42)" fg:x="39211" fg:w="6"/><text x="85.9103%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.6625%" y="309" width="0.0109%" height="15" fill="rgb(211,20,18)" fg:x="39212" fg:w="5"/><text x="85.9125%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.6734%" y="325" width="0.0197%" height="15" fill="rgb(231,203,46)" fg:x="39217" fg:w="9"/><text x="85.9234%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.6778%" y="309" width="0.0153%" height="15" fill="rgb(237,142,3)" fg:x="39219" fg:w="7"/><text x="85.9278%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::take (73 samples, 0.16%)</title><rect x="85.5532%" y="341" width="0.1595%" height="15" fill="rgb(241,107,1)" fg:x="39162" fg:w="73"/><text x="85.8032%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.02%)</title><rect x="85.6931%" y="325" width="0.0197%" height="15" fill="rgb(229,83,13)" fg:x="39226" fg:w="9"/><text x="85.9431%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (7 samples, 0.02%)</title><rect x="85.7149%" y="261" width="0.0153%" height="15" fill="rgb(241,91,40)" fg:x="39236" fg:w="7"/><text x="85.9649%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (7 samples, 0.02%)</title><rect x="85.7149%" y="245" width="0.0153%" height="15" fill="rgb(225,3,45)" fg:x="39236" fg:w="7"/><text x="85.9649%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.02%)</title><rect x="85.7149%" y="277" width="0.0197%" height="15" fill="rgb(244,223,14)" fg:x="39236" fg:w="9"/><text x="85.9649%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.02%)</title><rect x="85.7149%" y="341" width="0.0240%" height="15" fill="rgb(224,124,37)" fg:x="39236" fg:w="11"/><text x="85.9649%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="85.7149%" y="325" width="0.0240%" height="15" fill="rgb(251,171,30)" fg:x="39236" fg:w="11"/><text x="85.9649%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.02%)</title><rect x="85.7149%" y="309" width="0.0240%" height="15" fill="rgb(236,46,54)" fg:x="39236" fg:w="11"/><text x="85.9649%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.02%)</title><rect x="85.7149%" y="293" width="0.0240%" height="15" fill="rgb(245,213,5)" fg:x="39236" fg:w="11"/><text x="85.9649%" y="303.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (19 samples, 0.04%)</title><rect x="85.7477%" y="341" width="0.0415%" height="15" fill="rgb(230,144,27)" fg:x="39251" fg:w="19"/><text x="85.9977%" y="351.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::spend_input_utxos (414 samples, 0.90%)</title><rect x="84.9110%" y="357" width="0.9044%" height="15" fill="rgb(220,86,6)" fg:x="38868" fg:w="414"/><text x="85.1610%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="85.7914%" y="341" width="0.0240%" height="15" fill="rgb(240,20,13)" fg:x="39271" fg:w="11"/><text x="86.0414%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="85.8045%" y="325" width="0.0109%" height="15" fill="rgb(217,89,34)" fg:x="39277" fg:w="5"/><text x="86.0545%" y="335.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (6 samples, 0.01%)</title><rect x="85.8482%" y="325" width="0.0131%" height="15" fill="rgb(229,13,5)" fg:x="39297" fg:w="6"/><text x="86.0982%" y="335.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="85.8635%" y="309" width="0.0153%" height="15" fill="rgb(244,67,35)" fg:x="39304" fg:w="7"/><text x="86.1135%" y="319.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="85.8613%" y="325" width="0.0197%" height="15" fill="rgb(221,40,2)" fg:x="39303" fg:w="9"/><text x="86.1113%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (28 samples, 0.06%)</title><rect x="85.8394%" y="341" width="0.0612%" height="15" fill="rgb(237,157,21)" fg:x="39293" fg:w="28"/><text x="86.0894%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="85.8831%" y="325" width="0.0175%" height="15" fill="rgb(222,94,11)" fg:x="39313" fg:w="8"/><text x="86.1331%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="85.8897%" y="309" width="0.0109%" height="15" fill="rgb(249,113,6)" fg:x="39316" fg:w="5"/><text x="86.1397%" y="319.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::update_execution_data (41 samples, 0.09%)</title><rect x="85.8154%" y="357" width="0.0896%" height="15" fill="rgb(238,137,36)" fg:x="39282" fg:w="41"/><text x="86.0654%" y="367.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (5 samples, 0.01%)</title><rect x="85.9792%" y="261" width="0.0109%" height="15" fill="rgb(210,102,26)" fg:x="39357" fg:w="5"/><text x="86.2292%" y="271.50"></text></g><g><title>block_verifier`core::fmt::write (13 samples, 0.03%)</title><rect x="85.9640%" y="277" width="0.0284%" height="15" fill="rgb(218,30,30)" fg:x="39350" fg:w="13"/><text x="86.2140%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.9924%" y="277" width="0.0197%" height="15" fill="rgb(214,67,26)" fg:x="39363" fg:w="9"/><text x="86.2424%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.9924%" y="261" width="0.0197%" height="15" fill="rgb(251,9,53)" fg:x="39363" fg:w="9"/><text x="86.2424%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="86.0011%" y="245" width="0.0109%" height="15" fill="rgb(228,204,25)" fg:x="39367" fg:w="5"/><text x="86.2511%" y="255.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (28 samples, 0.06%)</title><rect x="85.9596%" y="293" width="0.0612%" height="15" fill="rgb(207,153,8)" fg:x="39348" fg:w="28"/><text x="86.2096%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (16 samples, 0.03%)</title><rect x="86.0229%" y="293" width="0.0350%" height="15" fill="rgb(242,9,16)" fg:x="39377" fg:w="16"/><text x="86.2729%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="86.0579%" y="293" width="0.0240%" height="15" fill="rgb(217,211,10)" fg:x="39393" fg:w="11"/><text x="86.3079%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="86.0666%" y="277" width="0.0153%" height="15" fill="rgb(219,228,52)" fg:x="39397" fg:w="7"/><text x="86.3166%" y="287.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (63 samples, 0.14%)</title><rect x="85.9574%" y="309" width="0.1376%" height="15" fill="rgb(231,92,29)" fg:x="39347" fg:w="63"/><text x="86.2074%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="86.0841%" y="293" width="0.0109%" height="15" fill="rgb(232,8,23)" fg:x="39405" fg:w="5"/><text x="86.3341%" y="303.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (19 samples, 0.04%)</title><rect x="86.3266%" y="197" width="0.0415%" height="15" fill="rgb(216,211,34)" fg:x="39516" fg:w="19"/><text x="86.5766%" y="207.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (6 samples, 0.01%)</title><rect x="86.5691%" y="181" width="0.0131%" height="15" fill="rgb(236,151,0)" fg:x="39627" fg:w="6"/><text x="86.8191%" y="191.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (11 samples, 0.02%)</title><rect x="86.5822%" y="181" width="0.0240%" height="15" fill="rgb(209,168,3)" fg:x="39633" fg:w="11"/><text x="86.8322%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (25 samples, 0.05%)</title><rect x="86.6062%" y="181" width="0.0546%" height="15" fill="rgb(208,129,28)" fg:x="39644" fg:w="25"/><text x="86.8562%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (265 samples, 0.58%)</title><rect x="86.1475%" y="213" width="0.5789%" height="15" fill="rgb(229,78,22)" fg:x="39434" fg:w="265"/><text x="86.3975%" y="223.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (164 samples, 0.36%)</title><rect x="86.3681%" y="197" width="0.3583%" height="15" fill="rgb(228,187,13)" fg:x="39535" fg:w="164"/><text x="86.6181%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (30 samples, 0.07%)</title><rect x="86.6608%" y="181" width="0.0655%" height="15" fill="rgb(240,119,24)" fg:x="39669" fg:w="30"/><text x="86.9108%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="86.7570%" y="149" width="0.0218%" height="15" fill="rgb(209,194,42)" fg:x="39713" fg:w="10"/><text x="87.0070%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="86.7591%" y="133" width="0.0197%" height="15" fill="rgb(247,200,46)" fg:x="39714" fg:w="9"/><text x="87.0091%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="86.7657%" y="117" width="0.0131%" height="15" fill="rgb(218,76,16)" fg:x="39717" fg:w="6"/><text x="87.0157%" y="127.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (14 samples, 0.03%)</title><rect x="86.7504%" y="197" width="0.0306%" height="15" fill="rgb(225,21,48)" fg:x="39710" fg:w="14"/><text x="87.0004%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (12 samples, 0.03%)</title><rect x="86.7548%" y="181" width="0.0262%" height="15" fill="rgb(239,223,50)" fg:x="39712" fg:w="12"/><text x="87.0048%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (11 samples, 0.02%)</title><rect x="86.7570%" y="165" width="0.0240%" height="15" fill="rgb(244,45,21)" fg:x="39713" fg:w="11"/><text x="87.0070%" y="175.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (23 samples, 0.05%)</title><rect x="86.7351%" y="213" width="0.0502%" height="15" fill="rgb(232,33,43)" fg:x="39703" fg:w="23"/><text x="86.9851%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (294 samples, 0.64%)</title><rect x="86.1475%" y="229" width="0.6423%" height="15" fill="rgb(209,8,3)" fg:x="39434" fg:w="294"/><text x="86.3975%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (300 samples, 0.66%)</title><rect x="86.1431%" y="245" width="0.6554%" height="15" fill="rgb(214,25,53)" fg:x="39432" fg:w="300"/><text x="86.3931%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="86.8007%" y="245" width="0.0109%" height="15" fill="rgb(254,186,54)" fg:x="39733" fg:w="5"/><text x="87.0507%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (324 samples, 0.71%)</title><rect x="86.1060%" y="277" width="0.7078%" height="15" fill="rgb(208,174,49)" fg:x="39415" fg:w="324"/><text x="86.3560%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (324 samples, 0.71%)</title><rect x="86.1060%" y="261" width="0.7078%" height="15" fill="rgb(233,191,51)" fg:x="39415" fg:w="324"/><text x="86.3560%" y="271.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (13 samples, 0.03%)</title><rect x="86.8138%" y="277" width="0.0284%" height="15" fill="rgb(222,134,10)" fg:x="39739" fg:w="13"/><text x="87.0638%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="86.8138%" y="261" width="0.0284%" height="15" fill="rgb(230,226,20)" fg:x="39739" fg:w="13"/><text x="87.0638%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="86.8181%" y="245" width="0.0240%" height="15" fill="rgb(251,111,25)" fg:x="39741" fg:w="11"/><text x="87.0681%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="86.8269%" y="229" width="0.0153%" height="15" fill="rgb(224,40,46)" fg:x="39745" fg:w="7"/><text x="87.0769%" y="239.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (340 samples, 0.74%)</title><rect x="86.1060%" y="293" width="0.7428%" height="15" fill="rgb(236,108,47)" fg:x="39415" fg:w="340"/><text x="86.3560%" y="303.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (14 samples, 0.03%)</title><rect x="86.8487%" y="293" width="0.0306%" height="15" fill="rgb(234,93,0)" fg:x="39755" fg:w="14"/><text x="87.0987%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="86.8509%" y="277" width="0.0284%" height="15" fill="rgb(224,213,32)" fg:x="39756" fg:w="13"/><text x="87.1009%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="86.8575%" y="261" width="0.0218%" height="15" fill="rgb(251,11,48)" fg:x="39759" fg:w="10"/><text x="87.1075%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="86.8859%" y="293" width="0.0197%" height="15" fill="rgb(236,173,5)" fg:x="39772" fg:w="9"/><text x="87.1359%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="86.8902%" y="277" width="0.0153%" height="15" fill="rgb(230,95,12)" fg:x="39774" fg:w="7"/><text x="87.1402%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="86.9055%" y="293" width="0.0175%" height="15" fill="rgb(232,209,1)" fg:x="39781" fg:w="8"/><text x="87.1555%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="86.9077%" y="277" width="0.0153%" height="15" fill="rgb(232,6,1)" fg:x="39782" fg:w="7"/><text x="87.1577%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="86.9121%" y="261" width="0.0109%" height="15" fill="rgb(210,224,50)" fg:x="39784" fg:w="5"/><text x="87.1621%" y="271.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (381 samples, 0.83%)</title><rect x="86.0950%" y="309" width="0.8323%" height="15" fill="rgb(228,127,35)" fg:x="39410" fg:w="381"/><text x="86.3450%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="86.9492%" y="309" width="0.0218%" height="15" fill="rgb(245,102,45)" fg:x="39801" fg:w="10"/><text x="87.1992%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="86.9536%" y="293" width="0.0175%" height="15" fill="rgb(214,1,49)" fg:x="39803" fg:w="8"/><text x="87.2036%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (482 samples, 1.05%)</title><rect x="85.9203%" y="325" width="1.0530%" height="15" fill="rgb(226,163,40)" fg:x="39330" fg:w="482"/><text x="86.1703%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (85 samples, 0.19%)</title><rect x="86.9885%" y="309" width="0.1857%" height="15" fill="rgb(239,212,28)" fg:x="39819" fg:w="85"/><text x="87.2385%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (129 samples, 0.28%)</title><rect x="86.9820%" y="325" width="0.2818%" height="15" fill="rgb(220,20,13)" fg:x="39816" fg:w="129"/><text x="87.2320%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (41 samples, 0.09%)</title><rect x="87.1742%" y="309" width="0.0896%" height="15" fill="rgb(210,164,35)" fg:x="39904" fg:w="41"/><text x="87.4242%" y="319.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (14 samples, 0.03%)</title><rect x="87.2682%" y="325" width="0.0306%" height="15" fill="rgb(248,109,41)" fg:x="39947" fg:w="14"/><text x="87.5182%" y="335.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::verify_inputs_exist_and_values_match (646 samples, 1.41%)</title><rect x="85.9050%" y="357" width="1.4113%" height="15" fill="rgb(238,23,50)" fg:x="39323" fg:w="646"/><text x="86.1550%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (641 samples, 1.40%)</title><rect x="85.9159%" y="341" width="1.4003%" height="15" fill="rgb(211,48,49)" fg:x="39328" fg:w="641"/><text x="86.1659%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="87.3031%" y="325" width="0.0131%" height="15" fill="rgb(223,36,21)" fg:x="39963" fg:w="6"/><text x="87.5531%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="87.3053%" y="309" width="0.0109%" height="15" fill="rgb(207,123,46)" fg:x="39964" fg:w="5"/><text x="87.5553%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (11 samples, 0.02%)</title><rect x="87.3162%" y="357" width="0.0240%" height="15" fill="rgb(240,218,32)" fg:x="39969" fg:w="11"/><text x="87.5662%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="87.3468%" y="325" width="0.0153%" height="15" fill="rgb(252,5,43)" fg:x="39983" fg:w="7"/><text x="87.5968%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="87.3468%" y="309" width="0.0153%" height="15" fill="rgb(252,84,19)" fg:x="39983" fg:w="7"/><text x="87.5968%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="87.3468%" y="293" width="0.0153%" height="15" fill="rgb(243,152,39)" fg:x="39983" fg:w="7"/><text x="87.5968%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="87.3512%" y="277" width="0.0109%" height="15" fill="rgb(234,160,15)" fg:x="39985" fg:w="5"/><text x="87.6012%" y="287.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (36 samples, 0.08%)</title><rect x="87.3446%" y="341" width="0.0786%" height="15" fill="rgb(237,34,20)" fg:x="39982" fg:w="36"/><text x="87.5946%" y="351.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (28 samples, 0.06%)</title><rect x="87.3621%" y="325" width="0.0612%" height="15" fill="rgb(229,97,13)" fg:x="39990" fg:w="28"/><text x="87.6121%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (19 samples, 0.04%)</title><rect x="87.4233%" y="341" width="0.0415%" height="15" fill="rgb(234,71,50)" fg:x="40018" fg:w="19"/><text x="87.6733%" y="351.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (60 samples, 0.13%)</title><rect x="87.3403%" y="357" width="0.1311%" height="15" fill="rgb(253,155,4)" fg:x="39980" fg:w="60"/><text x="87.5903%" y="367.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (5 samples, 0.01%)</title><rect x="87.4713%" y="357" width="0.0109%" height="15" fill="rgb(222,185,37)" fg:x="40040" fg:w="5"/><text x="87.7213%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (23 samples, 0.05%)</title><rect x="87.4910%" y="325" width="0.0502%" height="15" fill="rgb(251,177,13)" fg:x="40049" fg:w="23"/><text x="87.7410%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (25 samples, 0.05%)</title><rect x="87.4888%" y="341" width="0.0546%" height="15" fill="rgb(250,179,40)" fg:x="40048" fg:w="25"/><text x="87.7388%" y="351.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (29 samples, 0.06%)</title><rect x="87.4823%" y="357" width="0.0634%" height="15" fill="rgb(242,44,2)" fg:x="40045" fg:w="29"/><text x="87.7323%" y="367.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ec_pubkey_serialize (9 samples, 0.02%)</title><rect x="87.5806%" y="309" width="0.0197%" height="15" fill="rgb(216,177,13)" fg:x="40090" fg:w="9"/><text x="87.8306%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_odd_multiples_table (22 samples, 0.05%)</title><rect x="87.9388%" y="277" width="0.0481%" height="15" fill="rgb(216,106,43)" fg:x="40254" fg:w="22"/><text x="88.1888%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (8 samples, 0.02%)</title><rect x="87.9694%" y="261" width="0.0175%" height="15" fill="rgb(216,183,2)" fg:x="40268" fg:w="8"/><text x="88.2194%" y="271.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_wnaf (70 samples, 0.15%)</title><rect x="87.9869%" y="277" width="0.1529%" height="15" fill="rgb(249,75,3)" fg:x="40276" fg:w="70"/><text x="88.2369%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_mul (310 samples, 0.68%)</title><rect x="88.1398%" y="277" width="0.6772%" height="15" fill="rgb(219,67,39)" fg:x="40346" fg:w="310"/><text x="88.3898%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (149 samples, 0.33%)</title><rect x="88.8170%" y="277" width="0.3255%" height="15" fill="rgb(253,228,2)" fg:x="40656" fg:w="149"/><text x="89.0670%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (1,419 samples, 3.10%)</title><rect x="89.1425%" y="277" width="3.0999%" height="15" fill="rgb(235,138,27)" fg:x="40805" fg:w="1419"/><text x="89.3925%" y="287.50">blo..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul (5 samples, 0.01%)</title><rect x="92.2534%" y="261" width="0.0109%" height="15" fill="rgb(236,97,51)" fg:x="42229" fg:w="5"/><text x="92.5034%" y="271.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_split_lambda (13 samples, 0.03%)</title><rect x="92.2469%" y="277" width="0.0284%" height="15" fill="rgb(240,80,30)" fg:x="42226" fg:w="13"/><text x="92.4969%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul_512 (5 samples, 0.01%)</title><rect x="92.2643%" y="261" width="0.0109%" height="15" fill="rgb(230,178,19)" fg:x="42234" fg:w="5"/><text x="92.5143%" y="271.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult (2,137 samples, 4.67%)</title><rect x="87.6090%" y="293" width="4.6685%" height="15" fill="rgb(210,190,27)" fg:x="40103" fg:w="2137"/><text x="87.8590%" y="303.50">block..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_table_get_ge_storage (8 samples, 0.02%)</title><rect x="92.2774%" y="293" width="0.0175%" height="15" fill="rgb(222,107,31)" fg:x="42240" fg:w="8"/><text x="92.5274%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_sqrt (493 samples, 1.08%)</title><rect x="92.2949%" y="293" width="1.0770%" height="15" fill="rgb(216,127,34)" fg:x="42248" fg:w="493"/><text x="92.5449%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (21 samples, 0.05%)</title><rect x="93.4025%" y="261" width="0.0459%" height="15" fill="rgb(234,116,52)" fg:x="42755" fg:w="21"/><text x="93.6525%" y="271.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_gej_var (155 samples, 0.34%)</title><rect x="93.3719%" y="293" width="0.3386%" height="15" fill="rgb(222,124,15)" fg:x="42741" fg:w="155"/><text x="93.6219%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_inv_var (147 samples, 0.32%)</title><rect x="93.3894%" y="277" width="0.3211%" height="15" fill="rgb(231,179,28)" fg:x="42749" fg:w="147"/><text x="93.6394%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (120 samples, 0.26%)</title><rect x="93.4484%" y="261" width="0.2622%" height="15" fill="rgb(226,93,45)" fg:x="42776" fg:w="120"/><text x="93.6984%" y="271.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_xo_var (5 samples, 0.01%)</title><rect x="93.7105%" y="293" width="0.0109%" height="15" fill="rgb(215,8,51)" fg:x="42896" fg:w="5"/><text x="93.9605%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_table_set_globalz (74 samples, 0.16%)</title><rect x="93.7215%" y="293" width="0.1617%" height="15" fill="rgb(223,106,5)" fg:x="42901" fg:w="74"/><text x="93.9715%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (992 samples, 2.17%)</title><rect x="93.8831%" y="293" width="2.1671%" height="15" fill="rgb(250,191,5)" fg:x="42975" fg:w="992"/><text x="94.1331%" y="303.50">b..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_zinv_var (507 samples, 1.11%)</title><rect x="96.0502%" y="293" width="1.1076%" height="15" fill="rgb(242,132,44)" fg:x="43967" fg:w="507"/><text x="96.3002%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (33 samples, 0.07%)</title><rect x="97.1578%" y="293" width="0.0721%" height="15" fill="rgb(251,152,29)" fg:x="44474" fg:w="33"/><text x="97.4078%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (28 samples, 0.06%)</title><rect x="97.2343%" y="293" width="0.0612%" height="15" fill="rgb(218,179,5)" fg:x="44509" fg:w="28"/><text x="97.4843%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (150 samples, 0.33%)</title><rect x="97.2955%" y="293" width="0.3277%" height="15" fill="rgb(227,67,19)" fg:x="44537" fg:w="150"/><text x="97.5455%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecdsa_recover (4,595 samples, 10.04%)</title><rect x="87.6002%" y="309" width="10.0382%" height="15" fill="rgb(233,119,31)" fg:x="40099" fg:w="4595"/><text x="87.8502%" y="319.50">block_verifier`..</text></g><g><title>block_verifier`fuel_crypto::secp256::signature::Signature::recover (4,611 samples, 10.07%)</title><rect x="87.5696%" y="325" width="10.0732%" height="15" fill="rgb(241,120,22)" fg:x="40085" fg:w="4611"/><text x="87.8196%" y="335.50">block_verifier`..</text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="97.6494%" y="293" width="0.0131%" height="15" fill="rgb(224,102,30)" fg:x="44699" fg:w="6"/><text x="97.8994%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (23 samples, 0.05%)</title><rect x="97.6668%" y="293" width="0.0502%" height="15" fill="rgb(210,164,37)" fg:x="44707" fg:w="23"/><text x="97.9168%" y="303.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (33 samples, 0.07%)</title><rect x="97.6472%" y="309" width="0.0721%" height="15" fill="rgb(226,191,16)" fg:x="44698" fg:w="33"/><text x="97.8972%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (27 samples, 0.06%)</title><rect x="97.7215%" y="309" width="0.0590%" height="15" fill="rgb(214,40,45)" fg:x="44732" fg:w="27"/><text x="97.9715%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="97.7804%" y="309" width="0.0153%" height="15" fill="rgb(244,29,26)" fg:x="44759" fg:w="7"/><text x="98.0304%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="97.7848%" y="293" width="0.0109%" height="15" fill="rgb(216,16,5)" fg:x="44761" fg:w="5"/><text x="98.0348%" y="303.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (72 samples, 0.16%)</title><rect x="97.6428%" y="325" width="0.1573%" height="15" fill="rgb(249,76,35)" fg:x="44696" fg:w="72"/><text x="97.8928%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (50 samples, 0.11%)</title><rect x="97.8023%" y="325" width="0.1092%" height="15" fill="rgb(207,11,44)" fg:x="44769" fg:w="50"/><text x="98.0523%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::_&lt;impl fuel_tx::transaction::types::input::Input&gt;::check_signature (4,779 samples, 10.44%)</title><rect x="87.5500%" y="341" width="10.4402%" height="15" fill="rgb(228,190,49)" fg:x="40076" fg:w="4779"/><text x="87.8000%" y="351.50">block_verifier`..</text></g><g><title>libsystem_platform.dylib`_platform_memset (34 samples, 0.07%)</title><rect x="97.9159%" y="325" width="0.0743%" height="15" fill="rgb(214,173,12)" fg:x="44821" fg:w="34"/><text x="98.1659%" y="335.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (8 samples, 0.02%)</title><rect x="97.9902%" y="341" width="0.0175%" height="15" fill="rgb(218,26,35)" fg:x="44855" fg:w="8"/><text x="98.2402%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="97.9924%" y="325" width="0.0153%" height="15" fill="rgb(220,200,19)" fg:x="44856" fg:w="7"/><text x="98.2424%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="97.9945%" y="309" width="0.0131%" height="15" fill="rgb(239,95,49)" fg:x="44857" fg:w="6"/><text x="98.2445%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::check_signatures (4,796 samples, 10.48%)</title><rect x="87.5456%" y="357" width="10.4773%" height="15" fill="rgb(235,85,53)" fg:x="40074" fg:w="4796"/><text x="87.7956%" y="367.50">block_verifier`..</text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="98.0382%" y="277" width="0.0109%" height="15" fill="rgb(233,133,31)" fg:x="44877" fg:w="5"/><text x="98.2882%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.0382%" y="261" width="0.0109%" height="15" fill="rgb(218,25,20)" fg:x="44877" fg:w="5"/><text x="98.2882%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.0382%" y="245" width="0.0109%" height="15" fill="rgb(252,210,38)" fg:x="44877" fg:w="5"/><text x="98.2882%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="98.0382%" y="293" width="0.0153%" height="15" fill="rgb(242,134,21)" fg:x="44877" fg:w="7"/><text x="98.2882%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (45 samples, 0.10%)</title><rect x="98.0644%" y="277" width="0.0983%" height="15" fill="rgb(213,28,48)" fg:x="44889" fg:w="45"/><text x="98.3144%" y="287.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (51 samples, 0.11%)</title><rect x="98.0557%" y="293" width="0.1114%" height="15" fill="rgb(250,196,2)" fg:x="44885" fg:w="51"/><text x="98.3057%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (72 samples, 0.16%)</title><rect x="98.0339%" y="309" width="0.1573%" height="15" fill="rgb(227,5,17)" fg:x="44875" fg:w="72"/><text x="98.2839%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="98.1759%" y="293" width="0.0153%" height="15" fill="rgb(221,226,24)" fg:x="44940" fg:w="7"/><text x="98.4259%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.1780%" y="277" width="0.0131%" height="15" fill="rgb(211,5,48)" fg:x="44941" fg:w="6"/><text x="98.4280%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (74 samples, 0.16%)</title><rect x="98.0317%" y="325" width="0.1617%" height="15" fill="rgb(219,150,6)" fg:x="44874" fg:w="74"/><text x="98.2817%" y="335.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::instruction::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::instruction_inner (77 samples, 0.17%)</title><rect x="98.0273%" y="357" width="0.1682%" height="15" fill="rgb(251,46,16)" fg:x="44872" fg:w="77"/><text x="98.2773%" y="367.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::ret (76 samples, 0.17%)</title><rect x="98.0295%" y="341" width="0.1660%" height="15" fill="rgb(220,204,40)" fg:x="44873" fg:w="76"/><text x="98.2795%" y="351.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (5 samples, 0.01%)</title><rect x="98.2064%" y="325" width="0.0109%" height="15" fill="rgb(211,85,2)" fg:x="44954" fg:w="5"/><text x="98.4564%" y="335.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="98.2174%" y="325" width="0.0175%" height="15" fill="rgb(229,17,7)" fg:x="44959" fg:w="8"/><text x="98.4674%" y="335.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="98.2217%" y="309" width="0.0131%" height="15" fill="rgb(239,72,28)" fg:x="44961" fg:w="6"/><text x="98.4717%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (6 samples, 0.01%)</title><rect x="98.2217%" y="293" width="0.0131%" height="15" fill="rgb(230,47,54)" fg:x="44961" fg:w="6"/><text x="98.4717%" y="303.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (21 samples, 0.05%)</title><rect x="98.1955%" y="341" width="0.0459%" height="15" fill="rgb(214,50,8)" fg:x="44949" fg:w="21"/><text x="98.4455%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::main::predicates::finalize_check_predicate (28 samples, 0.06%)</title><rect x="98.1955%" y="357" width="0.0612%" height="15" fill="rgb(216,198,43)" fg:x="44949" fg:w="28"/><text x="98.4455%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_free (9 samples, 0.02%)</title><rect x="98.2676%" y="357" width="0.0197%" height="15" fill="rgb(234,20,35)" fg:x="44982" fg:w="9"/><text x="98.5176%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="98.2960%" y="357" width="0.0197%" height="15" fill="rgb(254,45,19)" fg:x="44995" fg:w="9"/><text x="98.5460%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="98.3048%" y="341" width="0.0109%" height="15" fill="rgb(219,14,44)" fg:x="44999" fg:w="5"/><text x="98.5548%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="98.3157%" y="357" width="0.0175%" height="15" fill="rgb(217,220,26)" fg:x="45004" fg:w="8"/><text x="98.5657%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="98.3179%" y="341" width="0.0153%" height="15" fill="rgb(213,158,28)" fg:x="45005" fg:w="7"/><text x="98.5679%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="98.3353%" y="357" width="0.0262%" height="15" fill="rgb(252,51,52)" fg:x="45013" fg:w="12"/><text x="98.5853%" y="367.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_chargeable_transaction (8,157 samples, 17.82%)</title><rect x="80.6619%" y="373" width="17.8198%" height="15" fill="rgb(246,89,16)" fg:x="36923" fg:w="8157"/><text x="80.9119%" y="383.50">block_verifier`fuel_core_exe..</text></g><g><title>libsystem_platform.dylib`_platform_memset (55 samples, 0.12%)</title><rect x="98.3616%" y="357" width="0.1202%" height="15" fill="rgb(216,158,49)" fg:x="45025" fg:w="55"/><text x="98.6116%" y="367.50"></text></g><g><title>block_verifier`core::fmt::write (8 samples, 0.02%)</title><rect x="98.4970%" y="309" width="0.0175%" height="15" fill="rgb(236,107,19)" fg:x="45087" fg:w="8"/><text x="98.7470%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.5145%" y="309" width="0.0109%" height="15" fill="rgb(228,185,30)" fg:x="45095" fg:w="5"/><text x="98.7645%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.5145%" y="293" width="0.0109%" height="15" fill="rgb(246,134,8)" fg:x="45095" fg:w="5"/><text x="98.7645%" y="303.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (18 samples, 0.04%)</title><rect x="98.4926%" y="325" width="0.0393%" height="15" fill="rgb(214,143,50)" fg:x="45085" fg:w="18"/><text x="98.7426%" y="335.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (12 samples, 0.03%)</title><rect x="98.5319%" y="325" width="0.0262%" height="15" fill="rgb(228,75,8)" fg:x="45103" fg:w="12"/><text x="98.7819%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="98.5603%" y="325" width="0.0131%" height="15" fill="rgb(207,175,4)" fg:x="45116" fg:w="6"/><text x="98.8103%" y="335.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (42 samples, 0.09%)</title><rect x="98.4904%" y="341" width="0.0918%" height="15" fill="rgb(205,108,24)" fg:x="45084" fg:w="42"/><text x="98.7404%" y="351.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="98.6106%" y="293" width="0.0109%" height="15" fill="rgb(244,120,49)" fg:x="45139" fg:w="5"/><text x="98.8606%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="98.6259%" y="293" width="0.0109%" height="15" fill="rgb(223,47,38)" fg:x="45146" fg:w="5"/><text x="98.8759%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (24 samples, 0.05%)</title><rect x="98.5866%" y="325" width="0.0524%" height="15" fill="rgb(229,179,11)" fg:x="45128" fg:w="24"/><text x="98.8366%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (22 samples, 0.05%)</title><rect x="98.5909%" y="309" width="0.0481%" height="15" fill="rgb(231,122,1)" fg:x="45130" fg:w="22"/><text x="98.8409%" y="319.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.01%)</title><rect x="98.6390%" y="325" width="0.0131%" height="15" fill="rgb(245,119,9)" fg:x="45152" fg:w="6"/><text x="98.8890%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.6390%" y="309" width="0.0131%" height="15" fill="rgb(241,163,25)" fg:x="45152" fg:w="6"/><text x="98.8890%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.6390%" y="293" width="0.0131%" height="15" fill="rgb(217,214,3)" fg:x="45152" fg:w="6"/><text x="98.8890%" y="303.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (37 samples, 0.08%)</title><rect x="98.5844%" y="341" width="0.0808%" height="15" fill="rgb(240,86,28)" fg:x="45127" fg:w="37"/><text x="98.8344%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::kv_store::KeyValueInspect::exists (85 samples, 0.19%)</title><rect x="98.4817%" y="373" width="0.1857%" height="15" fill="rgb(215,47,9)" fg:x="45080" fg:w="85"/><text x="98.7317%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::size_of_value (85 samples, 0.19%)</title><rect x="98.4817%" y="357" width="0.1857%" height="15" fill="rgb(252,25,45)" fg:x="45080" fg:w="85"/><text x="98.7317%" y="367.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (40 samples, 0.09%)</title><rect x="98.6674%" y="373" width="0.0874%" height="15" fill="rgb(251,164,9)" fg:x="45165" fg:w="40"/><text x="98.9174%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (221 samples, 0.48%)</title><rect x="98.7701%" y="373" width="0.4828%" height="15" fill="rgb(233,194,0)" fg:x="45212" fg:w="221"/><text x="99.0201%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.02%)</title><rect x="99.2529%" y="373" width="0.0153%" height="15" fill="rgb(249,111,24)" fg:x="45433" fg:w="7"/><text x="99.5029%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="99.2703%" y="373" width="0.0109%" height="15" fill="rgb(250,223,3)" fg:x="45441" fg:w="5"/><text x="99.5203%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (38 samples, 0.08%)</title><rect x="99.2856%" y="373" width="0.0830%" height="15" fill="rgb(236,178,37)" fg:x="45448" fg:w="38"/><text x="99.5356%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.03%)</title><rect x="99.3687%" y="373" width="0.0328%" height="15" fill="rgb(241,158,50)" fg:x="45486" fg:w="15"/><text x="99.6187%" y="383.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_transaction_and_commit (9,374 samples, 20.48%)</title><rect x="78.9689%" y="389" width="20.4784%" height="15" fill="rgb(213,121,41)" fg:x="36148" fg:w="9374"/><text x="79.2189%" y="399.50">block_verifier`fuel_core_executo..</text></g><g><title>libsystem_platform.dylib`_platform_memset (21 samples, 0.05%)</title><rect x="99.4014%" y="373" width="0.0459%" height="15" fill="rgb(240,92,3)" fg:x="45501" fg:w="21"/><text x="99.6514%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (207 samples, 0.45%)</title><rect x="99.4495%" y="389" width="0.4522%" height="15" fill="rgb(205,123,3)" fg:x="45523" fg:w="207"/><text x="99.6995%" y="399.50"></text></g><g><title>block_verifier`fuel_core_upgradable_executor::executor::Executor&lt;S,R&gt;::dry_run (9,771 samples, 21.35%)</title><rect x="78.6062%" y="405" width="21.3457%" height="15" fill="rgb(205,97,47)" fg:x="35982" fg:w="9771"/><text x="78.8562%" y="415.50">block_verifier`fuel_core_upgradabl..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="99.9214%" y="389" width="0.0306%" height="15" fill="rgb(247,152,14)" fg:x="45739" fg:w="14"/><text x="100.1714%" y="399.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (9,799 samples, 21.41%)</title><rect x="78.5866%" y="469" width="21.4069%" height="15" fill="rgb(248,195,53)" fg:x="35973" fg:w="9799"/><text x="78.8366%" y="479.50">block_verifier`tokio::runtime::tas..</text></g><g><title>block_verifier`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (9,795 samples, 21.40%)</title><rect x="78.5953%" y="453" width="21.3981%" height="15" fill="rgb(226,201,16)" fg:x="35977" fg:w="9795"/><text x="78.8453%" y="463.50">block_verifier`tokio::runtime::sch..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (9,795 samples, 21.40%)</title><rect x="78.5953%" y="437" width="21.3981%" height="15" fill="rgb(205,98,0)" fg:x="35977" fg:w="9795"/><text x="78.8453%" y="447.50">block_verifier`tokio::runtime::tas..</text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da::_{{closure}}::_{{closure}} (9,795 samples, 21.40%)</title><rect x="78.5953%" y="421" width="21.3981%" height="15" fill="rgb(214,191,48)" fg:x="35977" fg:w="9795"/><text x="78.8453%" y="431.50">block_verifier`fuel_core_parallel_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (19 samples, 0.04%)</title><rect x="99.9519%" y="405" width="0.0415%" height="15" fill="rgb(237,112,39)" fg:x="45753" fg:w="19"/><text x="100.2019%" y="415.50"></text></g><g><title>block_verifier`std::sys::pal::unix::thread::Thread::new::thread_start (13,193 samples, 28.82%)</title><rect x="71.1742%" y="517" width="28.8214%" height="15" fill="rgb(247,203,27)" fg:x="32580" fg:w="13193"/><text x="71.4242%" y="527.50">block_verifier`std::sys::pal::unix::thread::Th..</text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (13,193 samples, 28.82%)</title><rect x="71.1742%" y="501" width="28.8214%" height="15" fill="rgb(235,124,28)" fg:x="32580" fg:w="13193"/><text x="71.4242%" y="511.50">block_verifier`core::ops::function::FnOnce::ca..</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (13,193 samples, 28.82%)</title><rect x="71.1742%" y="485" width="28.8214%" height="15" fill="rgb(208,207,46)" fg:x="32580" fg:w="13193"/><text x="71.4242%" y="495.50">block_verifier`std::sys::backtrace::__rust_beg..</text></g><g><title>all (45,775 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(234,176,4)" fg:x="0" fg:w="45775"/><text x="0.2500%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (13,195 samples, 28.83%)</title><rect x="71.1742%" y="549" width="28.8258%" height="15" fill="rgb(230,133,28)" fg:x="32580" fg:w="13195"/><text x="71.4242%" y="559.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (13,195 samples, 28.83%)</title><rect x="71.1742%" y="533" width="28.8258%" height="15" fill="rgb(211,137,40)" fg:x="32580" fg:w="13195"/><text x="71.4242%" y="543.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>