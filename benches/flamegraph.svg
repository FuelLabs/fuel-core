<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="45034"><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (6 samples, 0.01%)</title><rect x="0.0133%" y="437" width="0.0133%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="6"/><text x="0.2633%" y="447.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (21 samples, 0.05%)</title><rect x="0.0000%" y="565" width="0.0466%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="21"/><text x="0.2500%" y="575.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_on_chain::_{{closure}} (21 samples, 0.05%)</title><rect x="0.0000%" y="549" width="0.0466%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="21"/><text x="0.2500%" y="559.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (21 samples, 0.05%)</title><rect x="0.0000%" y="533" width="0.0466%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="21"/><text x="0.2500%" y="543.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (21 samples, 0.05%)</title><rect x="0.0000%" y="517" width="0.0466%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="21"/><text x="0.2500%" y="527.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (21 samples, 0.05%)</title><rect x="0.0000%" y="501" width="0.0466%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="21"/><text x="0.2500%" y="511.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (20 samples, 0.04%)</title><rect x="0.0022%" y="485" width="0.0444%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="20"/><text x="0.2522%" y="495.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (20 samples, 0.04%)</title><rect x="0.0022%" y="469" width="0.0444%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="20"/><text x="0.2522%" y="479.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (16 samples, 0.04%)</title><rect x="0.0111%" y="453" width="0.0355%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="16"/><text x="0.2611%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="0.0266%" y="437" width="0.0200%" height="15" fill="rgb(220,122,19)" fg:x="12" fg:w="9"/><text x="0.2766%" y="447.50"></text></g><g><title>block_verifier`block_verifier::main (27 samples, 0.06%)</title><rect x="0.0511%" y="517" width="0.0600%" height="15" fill="rgb(250,228,42)" fg:x="23" fg:w="27"/><text x="0.3011%" y="527.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (116 samples, 0.26%)</title><rect x="0.1221%" y="485" width="0.2576%" height="15" fill="rgb(240,193,28)" fg:x="55" fg:w="116"/><text x="0.3721%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`read (112 samples, 0.25%)</title><rect x="0.1310%" y="469" width="0.2487%" height="15" fill="rgb(216,20,37)" fg:x="59" fg:w="112"/><text x="0.3810%" y="479.50"></text></g><g><title>block_verifier`DYLD-STUB$$read (5 samples, 0.01%)</title><rect x="0.4885%" y="453" width="0.0111%" height="15" fill="rgb(206,188,39)" fg:x="220" fg:w="5"/><text x="0.7385%" y="463.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (11 samples, 0.02%)</title><rect x="0.4996%" y="453" width="0.0244%" height="15" fill="rgb(217,207,13)" fg:x="225" fg:w="11"/><text x="0.7496%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`read (3,105 samples, 6.89%)</title><rect x="0.5240%" y="453" width="6.8948%" height="15" fill="rgb(231,73,38)" fg:x="236" fg:w="3105"/><text x="0.7740%" y="463.50">libsystem..</text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (3,134 samples, 6.96%)</title><rect x="0.4619%" y="469" width="6.9592%" height="15" fill="rgb(225,20,46)" fg:x="208" fg:w="3134"/><text x="0.7119%" y="479.50">block_ver..</text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (271 samples, 0.60%)</title><rect x="7.4299%" y="453" width="0.6018%" height="15" fill="rgb(210,31,41)" fg:x="3346" fg:w="271"/><text x="7.6799%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`read (269 samples, 0.60%)</title><rect x="7.4344%" y="437" width="0.5973%" height="15" fill="rgb(221,200,47)" fg:x="3348" fg:w="269"/><text x="7.6844%" y="447.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (318 samples, 0.71%)</title><rect x="7.4299%" y="469" width="0.7061%" height="15" fill="rgb(226,26,5)" fg:x="3346" fg:w="318"/><text x="7.6799%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`read (46 samples, 0.10%)</title><rect x="8.0339%" y="453" width="0.1021%" height="15" fill="rgb(249,33,26)" fg:x="3618" fg:w="46"/><text x="8.2839%" y="463.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (70 samples, 0.16%)</title><rect x="8.1361%" y="469" width="0.1554%" height="15" fill="rgb(235,183,28)" fg:x="3664" fg:w="70"/><text x="8.3861%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`read (16,602 samples, 36.87%)</title><rect x="8.2915%" y="469" width="36.8655%" height="15" fill="rgb(221,5,38)" fg:x="3734" fg:w="16602"/><text x="8.5415%" y="479.50">libsystem_kernel.dylib`read</text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (20,168 samples, 44.78%)</title><rect x="0.3842%" y="485" width="44.7839%" height="15" fill="rgb(247,18,42)" fg:x="173" fg:w="20168"/><text x="0.6342%" y="495.50">block_verifier`serde::de::SeqAccess::next_element</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="45.1570%" y="469" width="0.0111%" height="15" fill="rgb(241,131,45)" fg:x="20336" fg:w="5"/><text x="45.4070%" y="479.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (28 samples, 0.06%)</title><rect x="45.1681%" y="485" width="0.0622%" height="15" fill="rgb(249,31,29)" fg:x="20341" fg:w="28"/><text x="45.4181%" y="495.50"></text></g><g><title>block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserialize for fuel_core_types::blockchain::block::BlockV1&lt;TransactionRepresentation&gt;&gt;::deserialize::__Visitor&lt;TransactionRepresentation&gt; as serde::de::Visitor&gt;::visit_seq (21,930 samples, 48.70%)</title><rect x="0.1132%" y="501" width="48.6965%" height="15" fill="rgb(225,111,53)" fg:x="51" fg:w="21930"/><text x="0.3632%" y="511.50">block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserial..</text></g><g><title>libsystem_kernel.dylib`read (1,612 samples, 3.58%)</title><rect x="45.2303%" y="485" width="3.5795%" height="15" fill="rgb(238,160,17)" fg:x="20369" fg:w="1612"/><text x="45.4803%" y="495.50">libs..</text></g><g><title>block_verifier`fuel_core::combined_database::CombinedDatabase::from_config (12 samples, 0.03%)</title><rect x="48.8320%" y="485" width="0.0266%" height="15" fill="rgb(214,148,48)" fg:x="21991" fg:w="12"/><text x="49.0820%" y="495.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::open_with (12 samples, 0.03%)</title><rect x="48.8320%" y="469" width="0.0266%" height="15" fill="rgb(232,36,49)" fg:x="21991" fg:w="12"/><text x="49.0820%" y="479.50"></text></g><g><title>block_verifier`core::ops::function::Fn::call (10 samples, 0.02%)</title><rect x="48.8364%" y="453" width="0.0222%" height="15" fill="rgb(209,103,24)" fg:x="21993" fg:w="10"/><text x="49.0864%" y="463.50"></text></g><g><title>block_verifier`rocksdb_open (10 samples, 0.02%)</title><rect x="48.8364%" y="437" width="0.0222%" height="15" fill="rgb(229,88,8)" fg:x="21993" fg:w="10"/><text x="49.0864%" y="447.50"></text></g><g><title>block_verifier`rocksdb::DB::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (10 samples, 0.02%)</title><rect x="48.8364%" y="421" width="0.0222%" height="15" fill="rgb(213,181,19)" fg:x="21993" fg:w="10"/><text x="49.0864%" y="431.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Open(rocksdb::DBOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyDescriptor, std::__1::allocator&lt;rocksdb::ColumnFamilyDescriptor&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator (10 samples, 0.02%)</title><rect x="48.8364%" y="405" width="0.0222%" height="15" fill="rgb(254,191,54)" fg:x="21993" fg:w="10"/><text x="49.0864%" y="415.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntryInternal (7 samples, 0.02%)</title><rect x="48.8919%" y="357" width="0.0155%" height="15" fill="rgb(241,83,37)" fg:x="22018" fg:w="7"/><text x="49.1419%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntry (8 samples, 0.02%)</title><rect x="48.8919%" y="373" width="0.0178%" height="15" fill="rgb(233,36,39)" fg:x="22018" fg:w="8"/><text x="49.1419%" y="383.50"></text></g><g><title>block_verifier`rocksdb::DBIter::Next (11 samples, 0.02%)</title><rect x="48.8919%" y="389" width="0.0244%" height="15" fill="rgb(226,3,54)" fg:x="22018" fg:w="11"/><text x="49.1419%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db_key_iterator::RocksDBKeyIterator&lt;D,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="48.8919%" y="405" width="0.0355%" height="15" fill="rgb(245,192,40)" fg:x="22018" fg:w="16"/><text x="49.1419%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="48.9164%" y="389" width="0.0111%" height="15" fill="rgb(238,167,29)" fg:x="22029" fg:w="5"/><text x="49.1664%" y="399.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="48.8919%" y="421" width="0.0400%" height="15" fill="rgb(232,182,51)" fg:x="22018" fg:w="18"/><text x="49.1419%" y="431.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (7 samples, 0.02%)</title><rect x="48.9364%" y="421" width="0.0155%" height="15" fill="rgb(231,60,39)" fg:x="22038" fg:w="7"/><text x="49.1864%" y="431.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.07%)</title><rect x="48.8919%" y="437" width="0.0733%" height="15" fill="rgb(208,69,12)" fg:x="22018" fg:w="33"/><text x="49.1419%" y="447.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (120 samples, 0.27%)</title><rect x="48.9719%" y="421" width="0.2665%" height="15" fill="rgb(235,93,37)" fg:x="22054" fg:w="120"/><text x="49.2219%" y="431.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (123 samples, 0.27%)</title><rect x="48.9674%" y="437" width="0.2731%" height="15" fill="rgb(213,116,39)" fg:x="22052" fg:w="123"/><text x="49.2174%" y="447.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (41 samples, 0.09%)</title><rect x="49.2406%" y="437" width="0.0910%" height="15" fill="rgb(222,207,29)" fg:x="22175" fg:w="41"/><text x="49.4906%" y="447.50"></text></g><g><title>block_verifier`fuel_core::database::genesis_progress::_&lt;impl fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::GenesisStage&gt;&gt;&gt;::genesis_coins_root (203 samples, 0.45%)</title><rect x="48.8853%" y="453" width="0.4508%" height="15" fill="rgb(206,96,30)" fg:x="22015" fg:w="203"/><text x="49.1353%" y="463.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (49 samples, 0.11%)</title><rect x="49.3805%" y="389" width="0.1088%" height="15" fill="rgb(218,138,4)" fg:x="22238" fg:w="49"/><text x="49.6305%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (74 samples, 0.16%)</title><rect x="49.3716%" y="405" width="0.1643%" height="15" fill="rgb(250,191,14)" fg:x="22234" fg:w="74"/><text x="49.6216%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.04%)</title><rect x="49.4937%" y="389" width="0.0422%" height="15" fill="rgb(239,60,40)" fg:x="22289" fg:w="19"/><text x="49.7437%" y="399.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="49.5448%" y="373" width="0.0111%" height="15" fill="rgb(206,27,48)" fg:x="22312" fg:w="5"/><text x="49.7948%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (17 samples, 0.04%)</title><rect x="49.5448%" y="389" width="0.0377%" height="15" fill="rgb(225,35,8)" fg:x="22312" fg:w="17"/><text x="49.7948%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (5 samples, 0.01%)</title><rect x="49.5870%" y="373" width="0.0111%" height="15" fill="rgb(250,213,24)" fg:x="22331" fg:w="5"/><text x="49.8370%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (14 samples, 0.03%)</title><rect x="49.5825%" y="389" width="0.0311%" height="15" fill="rgb(247,123,22)" fg:x="22329" fg:w="14"/><text x="49.8325%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="49.6003%" y="373" width="0.0133%" height="15" fill="rgb(231,138,38)" fg:x="22337" fg:w="6"/><text x="49.8503%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.01%)</title><rect x="49.6158%" y="373" width="0.0133%" height="15" fill="rgb(231,145,46)" fg:x="22344" fg:w="6"/><text x="49.8658%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="49.6158%" y="357" width="0.0133%" height="15" fill="rgb(251,118,11)" fg:x="22344" fg:w="6"/><text x="49.8658%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.6181%" y="341" width="0.0111%" height="15" fill="rgb(217,147,25)" fg:x="22345" fg:w="5"/><text x="49.8681%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.6181%" y="325" width="0.0111%" height="15" fill="rgb(247,81,37)" fg:x="22345" fg:w="5"/><text x="49.8681%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (7 samples, 0.02%)</title><rect x="49.6158%" y="389" width="0.0155%" height="15" fill="rgb(209,12,38)" fg:x="22344" fg:w="7"/><text x="49.8658%" y="399.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::indexation::process_balances_update (47 samples, 0.10%)</title><rect x="49.5403%" y="405" width="0.1044%" height="15" fill="rgb(227,1,9)" fg:x="22310" fg:w="47"/><text x="49.7903%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (35 samples, 0.08%)</title><rect x="49.6447%" y="373" width="0.0777%" height="15" fill="rgb(248,47,43)" fg:x="22357" fg:w="35"/><text x="49.8947%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (34 samples, 0.08%)</title><rect x="49.6469%" y="357" width="0.0755%" height="15" fill="rgb(221,10,30)" fg:x="22358" fg:w="34"/><text x="49.8969%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (28 samples, 0.06%)</title><rect x="49.6603%" y="341" width="0.0622%" height="15" fill="rgb(210,229,1)" fg:x="22364" fg:w="28"/><text x="49.9103%" y="351.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (5 samples, 0.01%)</title><rect x="49.7624%" y="213" width="0.0111%" height="15" fill="rgb(222,148,37)" fg:x="22410" fg:w="5"/><text x="50.0124%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (21 samples, 0.05%)</title><rect x="49.7291%" y="357" width="0.0466%" height="15" fill="rgb(234,67,33)" fg:x="22395" fg:w="21"/><text x="49.9791%" y="367.50"></text></g><g><title>block_verifier`rocksdb_write (21 samples, 0.05%)</title><rect x="49.7291%" y="341" width="0.0466%" height="15" fill="rgb(247,98,35)" fg:x="22395" fg:w="21"/><text x="49.9791%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (21 samples, 0.05%)</title><rect x="49.7291%" y="325" width="0.0466%" height="15" fill="rgb(247,138,52)" fg:x="22395" fg:w="21"/><text x="49.9791%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (21 samples, 0.05%)</title><rect x="49.7291%" y="309" width="0.0466%" height="15" fill="rgb(213,79,30)" fg:x="22395" fg:w="21"/><text x="49.9791%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (17 samples, 0.04%)</title><rect x="49.7380%" y="293" width="0.0377%" height="15" fill="rgb(246,177,23)" fg:x="22399" fg:w="17"/><text x="49.9880%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (16 samples, 0.04%)</title><rect x="49.7402%" y="277" width="0.0355%" height="15" fill="rgb(230,62,27)" fg:x="22400" fg:w="16"/><text x="49.9902%" y="287.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (16 samples, 0.04%)</title><rect x="49.7402%" y="261" width="0.0355%" height="15" fill="rgb(216,154,8)" fg:x="22400" fg:w="16"/><text x="49.9902%" y="271.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (15 samples, 0.03%)</title><rect x="49.7424%" y="245" width="0.0333%" height="15" fill="rgb(244,35,45)" fg:x="22401" fg:w="15"/><text x="49.9924%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (6 samples, 0.01%)</title><rect x="49.7624%" y="229" width="0.0133%" height="15" fill="rgb(251,115,12)" fg:x="22410" fg:w="6"/><text x="50.0124%" y="239.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (38 samples, 0.08%)</title><rect x="49.7224%" y="373" width="0.0844%" height="15" fill="rgb(240,54,50)" fg:x="22392" fg:w="38"/><text x="49.9724%" y="383.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (14 samples, 0.03%)</title><rect x="49.7757%" y="357" width="0.0311%" height="15" fill="rgb(233,84,52)" fg:x="22416" fg:w="14"/><text x="50.0257%" y="367.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (13 samples, 0.03%)</title><rect x="49.7779%" y="341" width="0.0289%" height="15" fill="rgb(207,117,47)" fg:x="22417" fg:w="13"/><text x="50.0279%" y="351.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (10 samples, 0.02%)</title><rect x="49.7846%" y="325" width="0.0222%" height="15" fill="rgb(249,43,39)" fg:x="22420" fg:w="10"/><text x="50.0346%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="49.7935%" y="309" width="0.0133%" height="15" fill="rgb(209,38,44)" fg:x="22424" fg:w="6"/><text x="50.0435%" y="319.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (75 samples, 0.17%)</title><rect x="49.6447%" y="405" width="0.1665%" height="15" fill="rgb(236,212,23)" fg:x="22357" fg:w="75"/><text x="49.8947%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (75 samples, 0.17%)</title><rect x="49.6447%" y="389" width="0.1665%" height="15" fill="rgb(242,79,21)" fg:x="22357" fg:w="75"/><text x="49.8947%" y="399.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain::_{{closure}} (201 samples, 0.45%)</title><rect x="49.3671%" y="421" width="0.4463%" height="15" fill="rgb(211,96,35)" fg:x="22232" fg:w="201"/><text x="49.6171%" y="431.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (8 samples, 0.02%)</title><rect x="49.8157%" y="421" width="0.0178%" height="15" fill="rgb(253,215,40)" fg:x="22434" fg:w="8"/><text x="50.0657%" y="431.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain (213 samples, 0.47%)</title><rect x="49.3627%" y="437" width="0.4730%" height="15" fill="rgb(211,81,21)" fg:x="22230" fg:w="213"/><text x="49.6127%" y="447.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (7 samples, 0.02%)</title><rect x="49.8379%" y="389" width="0.0155%" height="15" fill="rgb(208,190,38)" fg:x="22444" fg:w="7"/><text x="50.0879%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.8423%" y="373" width="0.0111%" height="15" fill="rgb(235,213,38)" fg:x="22446" fg:w="5"/><text x="50.0923%" y="383.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (19 samples, 0.04%)</title><rect x="49.8379%" y="405" width="0.0422%" height="15" fill="rgb(237,122,38)" fg:x="22444" fg:w="19"/><text x="50.0879%" y="415.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="49.8890%" y="341" width="0.0200%" height="15" fill="rgb(244,218,35)" fg:x="22467" fg:w="9"/><text x="50.1390%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (18 samples, 0.04%)</title><rect x="49.8801%" y="357" width="0.0400%" height="15" fill="rgb(240,68,47)" fg:x="22463" fg:w="18"/><text x="50.1301%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (20 samples, 0.04%)</title><rect x="49.8801%" y="373" width="0.0444%" height="15" fill="rgb(210,16,53)" fg:x="22463" fg:w="20"/><text x="50.1301%" y="383.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.01%)</title><rect x="49.9245%" y="373" width="0.0133%" height="15" fill="rgb(235,124,12)" fg:x="22483" fg:w="6"/><text x="50.1745%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="49.9245%" y="357" width="0.0133%" height="15" fill="rgb(224,169,11)" fg:x="22483" fg:w="6"/><text x="50.1745%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="49.9267%" y="341" width="0.0111%" height="15" fill="rgb(250,166,2)" fg:x="22484" fg:w="5"/><text x="50.1767%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="49.9378%" y="373" width="0.0133%" height="15" fill="rgb(242,216,29)" fg:x="22489" fg:w="6"/><text x="50.1878%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="49.9400%" y="357" width="0.0111%" height="15" fill="rgb(230,116,27)" fg:x="22490" fg:w="5"/><text x="50.1900%" y="367.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (33 samples, 0.07%)</title><rect x="49.8801%" y="389" width="0.0733%" height="15" fill="rgb(228,99,48)" fg:x="22463" fg:w="33"/><text x="50.1301%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (55 samples, 0.12%)</title><rect x="49.8357%" y="421" width="0.1221%" height="15" fill="rgb(253,11,6)" fg:x="22443" fg:w="55"/><text x="50.0857%" y="431.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (35 samples, 0.08%)</title><rect x="49.8801%" y="405" width="0.0777%" height="15" fill="rgb(247,143,39)" fg:x="22463" fg:w="35"/><text x="50.1301%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (64 samples, 0.14%)</title><rect x="49.9578%" y="421" width="0.1421%" height="15" fill="rgb(236,97,10)" fg:x="22498" fg:w="64"/><text x="50.2078%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="50.1621%" y="325" width="0.0200%" height="15" fill="rgb(233,208,19)" fg:x="22590" fg:w="9"/><text x="50.4121%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="50.1821%" y="325" width="0.0133%" height="15" fill="rgb(216,164,2)" fg:x="22599" fg:w="6"/><text x="50.4321%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (33 samples, 0.07%)</title><rect x="50.1355%" y="357" width="0.0733%" height="15" fill="rgb(220,129,5)" fg:x="22578" fg:w="33"/><text x="50.3855%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (23 samples, 0.05%)</title><rect x="50.1577%" y="341" width="0.0511%" height="15" fill="rgb(242,17,10)" fg:x="22588" fg:w="23"/><text x="50.4077%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (37 samples, 0.08%)</title><rect x="50.1310%" y="389" width="0.0822%" height="15" fill="rgb(242,107,0)" fg:x="22576" fg:w="37"/><text x="50.3810%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (36 samples, 0.08%)</title><rect x="50.1332%" y="373" width="0.0799%" height="15" fill="rgb(251,28,31)" fg:x="22577" fg:w="36"/><text x="50.3832%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (41 samples, 0.09%)</title><rect x="50.1288%" y="405" width="0.0910%" height="15" fill="rgb(233,223,10)" fg:x="22575" fg:w="41"/><text x="50.3788%" y="415.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="50.2221%" y="389" width="0.0178%" height="15" fill="rgb(215,21,27)" fg:x="22617" fg:w="8"/><text x="50.4721%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="50.2221%" y="373" width="0.0178%" height="15" fill="rgb(232,23,21)" fg:x="22617" fg:w="8"/><text x="50.4721%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="50.2198%" y="405" width="0.0222%" height="15" fill="rgb(244,5,23)" fg:x="22616" fg:w="10"/><text x="50.4698%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="50.2443%" y="405" width="0.0133%" height="15" fill="rgb(226,81,46)" fg:x="22627" fg:w="6"/><text x="50.4943%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="50.2443%" y="389" width="0.0133%" height="15" fill="rgb(247,70,30)" fg:x="22627" fg:w="6"/><text x="50.4943%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="50.2576%" y="405" width="0.0111%" height="15" fill="rgb(212,68,19)" fg:x="22633" fg:w="5"/><text x="50.5076%" y="415.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (75 samples, 0.17%)</title><rect x="50.1066%" y="421" width="0.1665%" height="15" fill="rgb(240,187,13)" fg:x="22565" fg:w="75"/><text x="50.3566%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="50.3198%" y="341" width="0.0111%" height="15" fill="rgb(223,113,26)" fg:x="22661" fg:w="5"/><text x="50.5698%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (37 samples, 0.08%)</title><rect x="50.2731%" y="389" width="0.0822%" height="15" fill="rgb(206,192,2)" fg:x="22640" fg:w="37"/><text x="50.5231%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (36 samples, 0.08%)</title><rect x="50.2753%" y="373" width="0.0799%" height="15" fill="rgb(241,108,4)" fg:x="22641" fg:w="36"/><text x="50.5253%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.07%)</title><rect x="50.2842%" y="357" width="0.0711%" height="15" fill="rgb(247,173,49)" fg:x="22645" fg:w="32"/><text x="50.5342%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (6 samples, 0.01%)</title><rect x="50.3553%" y="309" width="0.0133%" height="15" fill="rgb(224,114,35)" fg:x="22677" fg:w="6"/><text x="50.6053%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (6 samples, 0.01%)</title><rect x="50.3553%" y="293" width="0.0133%" height="15" fill="rgb(245,159,27)" fg:x="22677" fg:w="6"/><text x="50.6053%" y="303.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (6 samples, 0.01%)</title><rect x="50.3553%" y="277" width="0.0133%" height="15" fill="rgb(245,172,44)" fg:x="22677" fg:w="6"/><text x="50.6053%" y="287.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::EmitPhysicalRecord (6 samples, 0.01%)</title><rect x="50.3553%" y="261" width="0.0133%" height="15" fill="rgb(236,23,11)" fg:x="22677" fg:w="6"/><text x="50.6053%" y="271.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (6 samples, 0.01%)</title><rect x="50.3753%" y="245" width="0.0133%" height="15" fill="rgb(205,117,38)" fg:x="22686" fg:w="6"/><text x="50.6253%" y="255.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (16 samples, 0.04%)</title><rect x="50.3686%" y="277" width="0.0355%" height="15" fill="rgb(237,72,25)" fg:x="22683" fg:w="16"/><text x="50.6186%" y="287.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (16 samples, 0.04%)</title><rect x="50.3686%" y="261" width="0.0355%" height="15" fill="rgb(244,70,9)" fg:x="22683" fg:w="16"/><text x="50.6186%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="50.3886%" y="245" width="0.0155%" height="15" fill="rgb(217,125,39)" fg:x="22692" fg:w="7"/><text x="50.6386%" y="255.50"></text></g><g><title>block_verifier`rocksdb_write (23 samples, 0.05%)</title><rect x="50.3553%" y="357" width="0.0511%" height="15" fill="rgb(235,36,10)" fg:x="22677" fg:w="23"/><text x="50.6053%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (23 samples, 0.05%)</title><rect x="50.3553%" y="341" width="0.0511%" height="15" fill="rgb(251,123,47)" fg:x="22677" fg:w="23"/><text x="50.6053%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (23 samples, 0.05%)</title><rect x="50.3553%" y="325" width="0.0511%" height="15" fill="rgb(221,13,13)" fg:x="22677" fg:w="23"/><text x="50.6053%" y="335.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (17 samples, 0.04%)</title><rect x="50.3686%" y="309" width="0.0377%" height="15" fill="rgb(238,131,9)" fg:x="22683" fg:w="17"/><text x="50.6186%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (17 samples, 0.04%)</title><rect x="50.3686%" y="293" width="0.0377%" height="15" fill="rgb(211,50,8)" fg:x="22683" fg:w="17"/><text x="50.6186%" y="303.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (24 samples, 0.05%)</title><rect x="50.3553%" y="389" width="0.0533%" height="15" fill="rgb(245,182,24)" fg:x="22677" fg:w="24"/><text x="50.6053%" y="399.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (24 samples, 0.05%)</title><rect x="50.3553%" y="373" width="0.0533%" height="15" fill="rgb(242,14,37)" fg:x="22677" fg:w="24"/><text x="50.6053%" y="383.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (62 samples, 0.14%)</title><rect x="50.2731%" y="421" width="0.1377%" height="15" fill="rgb(246,228,12)" fg:x="22640" fg:w="62"/><text x="50.5231%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (62 samples, 0.14%)</title><rect x="50.2731%" y="405" width="0.1377%" height="15" fill="rgb(213,55,15)" fg:x="22640" fg:w="62"/><text x="50.5231%" y="415.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_on_chain::_{{closure}} (263 samples, 0.58%)</title><rect x="49.8357%" y="437" width="0.5840%" height="15" fill="rgb(209,9,3)" fg:x="22443" fg:w="263"/><text x="50.0857%" y="447.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (489 samples, 1.09%)</title><rect x="49.3560%" y="453" width="1.0858%" height="15" fill="rgb(230,59,30)" fg:x="22227" fg:w="489"/><text x="49.6060%" y="463.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (10 samples, 0.02%)</title><rect x="50.4197%" y="437" width="0.0222%" height="15" fill="rgb(209,121,21)" fg:x="22706" fg:w="10"/><text x="50.6697%" y="447.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="50.4286%" y="421" width="0.0133%" height="15" fill="rgb(220,109,13)" fg:x="22710" fg:w="6"/><text x="50.6786%" y="431.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (767 samples, 1.70%)</title><rect x="48.8764%" y="469" width="1.7032%" height="15" fill="rgb(232,18,1)" fg:x="22011" fg:w="767"/><text x="49.1264%" y="479.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (61 samples, 0.14%)</title><rect x="50.4441%" y="453" width="0.1355%" height="15" fill="rgb(215,41,42)" fg:x="22717" fg:w="61"/><text x="50.6941%" y="463.50"></text></g><g><title>block_verifier`&lt;fuel_core::service::config::Config as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="50.5796%" y="453" width="0.0133%" height="15" fill="rgb(224,123,36)" fg:x="22778" fg:w="6"/><text x="50.8296%" y="463.50"></text></g><g><title>block_verifier`fuel_core::service::sub_services::init_sub_services (13 samples, 0.03%)</title><rect x="50.5796%" y="469" width="0.0289%" height="15" fill="rgb(240,125,3)" fg:x="22778" fg:w="13"/><text x="50.8296%" y="479.50"></text></g><g><title>block_verifier`block_verifier::main::_{{closure}} (806 samples, 1.79%)</title><rect x="48.8231%" y="501" width="1.7898%" height="15" fill="rgb(205,98,50)" fg:x="21987" fg:w="806"/><text x="49.0731%" y="511.50">b..</text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (790 samples, 1.75%)</title><rect x="48.8586%" y="485" width="1.7542%" height="15" fill="rgb(205,185,37)" fg:x="22003" fg:w="790"/><text x="49.1086%" y="495.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$tracing..instrument..Instrumented$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$� (10 samples, 0.02%)</title><rect x="50.6129%" y="421" width="0.0222%" height="15" fill="rgb(238,207,15)" fg:x="22793" fg:w="10"/><text x="50.8629%" y="431.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_desc� (10 samples, 0.02%)</title><rect x="50.6129%" y="405" width="0.0222%" height="15" fill="rgb(213,199,42)" fg:x="22793" fg:w="10"/><text x="50.8629%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$fuel_core_services..service..run$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$� (10 samples, 0.02%)</title><rect x="50.6129%" y="389" width="0.0222%" height="15" fill="rgb(235,201,11)" fg:x="22793" fg:w="10"/><text x="50.8629%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_gas_price_service::v0::service::GasPriceServiceV0&lt;fuel_core_gas_price_service::common::l2_block_source::FuelL2BlockSource&lt;fuel_core::service::adapters::ConsensusParametersProvider&gt;,fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase&gt;&gt;&gt;&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="50.6129%" y="373" width="0.0222%" height="15" fill="rgb(207,46,11)" fg:x="22793" fg:w="10"/><text x="50.8629%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::service::adapters::consensus_parameters_provider::SharedState&gt; (9 samples, 0.02%)</title><rect x="50.6151%" y="357" width="0.0200%" height="15" fill="rgb(241,35,35)" fg:x="22794" fg:w="9"/><text x="50.8651%" y="367.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.02%)</title><rect x="50.6151%" y="341" width="0.0200%" height="15" fill="rgb(243,32,47)" fg:x="22794" fg:w="9"/><text x="50.8651%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::state::rocks_db::RocksDb&lt;fuel_core::state::historical_rocksdb::description::Historical&lt;fuel_core::database::database_description::relayer::Relayer&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="50.6240%" y="325" width="0.0111%" height="15" fill="rgb(247,202,23)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="335.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.01%)</title><rect x="50.6240%" y="309" width="0.0111%" height="15" fill="rgb(219,102,11)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,rocksdb::db::DBWithThreadModeInner&gt;&gt; (5 samples, 0.01%)</title><rect x="50.6240%" y="293" width="0.0111%" height="15" fill="rgb(243,110,44)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="303.50"></text></g><g><title>block_verifier`rocksdb_close (5 samples, 0.01%)</title><rect x="50.6240%" y="277" width="0.0111%" height="15" fill="rgb(222,74,54)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::~DBImpl (5 samples, 0.01%)</title><rect x="50.6240%" y="261" width="0.0111%" height="15" fill="rgb(216,99,12)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::~DBImpl (5 samples, 0.01%)</title><rect x="50.6240%" y="245" width="0.0111%" height="15" fill="rgb(226,22,26)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CloseHelper (5 samples, 0.01%)</title><rect x="50.6240%" y="229" width="0.0111%" height="15" fill="rgb(217,163,10)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="239.50"></text></g><g><title>block_verifier`rocksdb::VersionSet::~VersionSet (5 samples, 0.01%)</title><rect x="50.6240%" y="213" width="0.0111%" height="15" fill="rgb(213,25,53)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="223.50"></text></g><g><title>block_verifier`rocksdb::VersionSet::~VersionSet (5 samples, 0.01%)</title><rect x="50.6240%" y="197" width="0.0111%" height="15" fill="rgb(252,105,26)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="207.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilySet::~ColumnFamilySet (5 samples, 0.01%)</title><rect x="50.6240%" y="181" width="0.0111%" height="15" fill="rgb(220,39,43)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="191.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::UnrefAndTryDelete (5 samples, 0.01%)</title><rect x="50.6240%" y="165" width="0.0111%" height="15" fill="rgb(229,68,48)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="175.50"></text></g><g><title>block_verifier`rocksdb::SuperVersion::Cleanup (5 samples, 0.01%)</title><rect x="50.6240%" y="149" width="0.0111%" height="15" fill="rgb(252,8,32)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="159.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::UnrefAndTryDelete (5 samples, 0.01%)</title><rect x="50.6240%" y="133" width="0.0111%" height="15" fill="rgb(223,20,43)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="143.50"></text></g><g><title>block_verifier`rocksdb::ColumnFamilyData::~ColumnFamilyData (5 samples, 0.01%)</title><rect x="50.6240%" y="117" width="0.0111%" height="15" fill="rgb(229,81,49)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="127.50"></text></g><g><title>block_verifier`rocksdb::MemTable::~MemTable (5 samples, 0.01%)</title><rect x="50.6240%" y="101" width="0.0111%" height="15" fill="rgb(236,28,36)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="111.50"></text></g><g><title>block_verifier`rocksdb::Arena::~Arena (5 samples, 0.01%)</title><rect x="50.6240%" y="85" width="0.0111%" height="15" fill="rgb(249,185,26)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="95.50"></text></g><g><title>block_verifier`std::__1::deque&lt;std::__1::unique_ptr&lt;char [], std::__1::default_delete&lt;char []&gt;&gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;char [], std::__1::default_delete&lt;char []&gt;&gt;&gt;&gt;::~deque[abi:ue170006] (5 samples, 0.01%)</title><rect x="50.6240%" y="69" width="0.0111%" height="15" fill="rgb(249,174,33)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (5 samples, 0.01%)</title><rect x="50.6240%" y="53" width="0.0111%" height="15" fill="rgb(233,201,37)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.01%)</title><rect x="50.6240%" y="37" width="0.0111%" height="15" fill="rgb(221,78,26)" fg:x="22798" fg:w="5"/><text x="50.8740%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.04%)</title><rect x="50.6684%" y="245" width="0.0355%" height="15" fill="rgb(250,127,30)" fg:x="22818" fg:w="16"/><text x="50.9184%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.03%)</title><rect x="50.6750%" y="229" width="0.0289%" height="15" fill="rgb(230,49,44)" fg:x="22821" fg:w="13"/><text x="50.9250%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (21 samples, 0.05%)</title><rect x="50.6595%" y="261" width="0.0466%" height="15" fill="rgb(229,67,23)" fg:x="22814" fg:w="21"/><text x="50.9095%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fuel_tx::transaction::Transaction&gt;&gt; (23 samples, 0.05%)</title><rect x="50.6595%" y="277" width="0.0511%" height="15" fill="rgb(249,83,47)" fg:x="22814" fg:w="23"/><text x="50.9095%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_types::services::block_importer::ImportResult&gt; (51 samples, 0.11%)</title><rect x="50.6462%" y="293" width="0.1132%" height="15" fill="rgb(215,43,3)" fg:x="22808" fg:w="51"/><text x="50.8962%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.05%)</title><rect x="50.7106%" y="277" width="0.0489%" height="15" fill="rgb(238,154,13)" fg:x="22837" fg:w="22"/><text x="50.9606%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.04%)</title><rect x="50.7150%" y="261" width="0.0444%" height="15" fill="rgb(219,56,2)" fg:x="22839" fg:w="20"/><text x="50.9650%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (13 samples, 0.03%)</title><rect x="50.7306%" y="245" width="0.0289%" height="15" fill="rgb(233,0,4)" fg:x="22846" fg:w="13"/><text x="50.9806%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (12 samples, 0.03%)</title><rect x="50.7328%" y="229" width="0.0266%" height="15" fill="rgb(235,30,7)" fg:x="22847" fg:w="12"/><text x="50.9828%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (57 samples, 0.13%)</title><rect x="50.6373%" y="421" width="0.1266%" height="15" fill="rgb(250,79,13)" fg:x="22804" fg:w="57"/><text x="50.8873%" y="431.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt; (57 samples, 0.13%)</title><rect x="50.6373%" y="405" width="0.1266%" height="15" fill="rgb(211,146,34)" fg:x="22804" fg:w="57"/><text x="50.8873%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;fuel_core_services::service::run&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (57 samples, 0.13%)</title><rect x="50.6373%" y="389" width="0.1266%" height="15" fill="rgb(228,22,38)" fg:x="22804" fg:w="57"/><text x="50.8873%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::graphql_api::worker_service::Task&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt; (57 samples, 0.13%)</title><rect x="50.6373%" y="373" width="0.1266%" height="15" fill="rgb(235,168,5)" fg:x="22804" fg:w="57"/><text x="50.8873%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::stream::filter_map::FilterMap&lt;tokio_stream::wrappers::broadcast::BroadcastStream&lt;fuel_core_importer::ImporterResult&gt;,futures_util::future::ready::Ready&lt;core::option::Option&lt;fuel_core_importer::ImporterResult&gt;&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;&gt; (53 samples, 0.12%)</title><rect x="50.6462%" y="357" width="0.1177%" height="15" fill="rgb(221,155,16)" fg:x="22808" fg:w="53"/><text x="50.8962%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::sync::broadcast::Receiver&lt;fuel_core_importer::ImporterResult&gt;&gt; (53 samples, 0.12%)</title><rect x="50.6462%" y="341" width="0.1177%" height="15" fill="rgb(215,215,53)" fg:x="22808" fg:w="53"/><text x="50.8962%" y="351.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (53 samples, 0.12%)</title><rect x="50.6462%" y="325" width="0.1177%" height="15" fill="rgb(223,4,10)" fg:x="22808" fg:w="53"/><text x="50.8962%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_importer::importer::Awaiter&gt; (53 samples, 0.12%)</title><rect x="50.6462%" y="309" width="0.1177%" height="15" fill="rgb(234,103,6)" fg:x="22808" fg:w="53"/><text x="50.8962%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (69 samples, 0.15%)</title><rect x="50.6129%" y="501" width="0.1532%" height="15" fill="rgb(227,97,0)" fg:x="22793" fg:w="69"/><text x="50.8629%" y="511.50"></text></g><g><title>block_verifier`&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (69 samples, 0.15%)</title><rect x="50.6129%" y="485" width="0.1532%" height="15" fill="rgb(234,150,53)" fg:x="22793" fg:w="69"/><text x="50.8629%" y="495.50"></text></g><g><title>block_verifier`tokio::runtime::scheduler::current_thread::shutdown2 (69 samples, 0.15%)</title><rect x="50.6129%" y="469" width="0.1532%" height="15" fill="rgb(228,201,54)" fg:x="22793" fg:w="69"/><text x="50.8629%" y="479.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::shutdown (69 samples, 0.15%)</title><rect x="50.6129%" y="453" width="0.1532%" height="15" fill="rgb(222,22,37)" fg:x="22793" fg:w="69"/><text x="50.8629%" y="463.50"></text></g><g><title>block_verifier`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (69 samples, 0.15%)</title><rect x="50.6129%" y="437" width="0.1532%" height="15" fill="rgb(237,53,32)" fg:x="22793" fg:w="69"/><text x="50.8629%" y="447.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (21 samples, 0.05%)</title><rect x="50.7661%" y="501" width="0.0466%" height="15" fill="rgb(233,25,53)" fg:x="22862" fg:w="21"/><text x="51.0161%" y="511.50"></text></g><g><title>block_verifier`&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;TxPool,BlockImporter,OnChain,OffChain&gt; as fuel_core_services::service::RunnableService&gt;::into_task::_{{closure}} (6 samples, 0.01%)</title><rect x="50.8149%" y="453" width="0.0133%" height="15" fill="rgb(210,40,34)" fg:x="22884" fg:w="6"/><text x="51.0649%" y="463.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10 samples, 0.02%)</title><rect x="50.8127%" y="501" width="0.0222%" height="15" fill="rgb(241,220,44)" fg:x="22883" fg:w="10"/><text x="51.0627%" y="511.50"></text></g><g><title>block_verifier`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.02%)</title><rect x="50.8127%" y="485" width="0.0222%" height="15" fill="rgb(235,28,35)" fg:x="22883" fg:w="10"/><text x="51.0627%" y="495.50"></text></g><g><title>block_verifier`fuel_core_services::service::initialize_loop::_{{closure}} (10 samples, 0.02%)</title><rect x="50.8127%" y="469" width="0.0222%" height="15" fill="rgb(210,56,17)" fg:x="22883" fg:w="10"/><text x="51.0627%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`read (6,544 samples, 14.53%)</title><rect x="50.8349%" y="501" width="14.5312%" height="15" fill="rgb(224,130,29)" fg:x="22893" fg:w="6544"/><text x="51.0849%" y="511.50">libsystem_kernel.dylib..</text></g><g><title>block_verifier`block_verifier::main (29,394 samples, 65.27%)</title><rect x="0.1132%" y="517" width="65.2707%" height="15" fill="rgb(235,212,8)" fg:x="51" fg:w="29394"/><text x="0.3632%" y="527.50">block_verifier`block_verifier::main</text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="65.3662%" y="501" width="0.0178%" height="15" fill="rgb(223,33,50)" fg:x="29437" fg:w="8"/><text x="65.6162%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`read (3,099 samples, 6.88%)</title><rect x="65.3884%" y="517" width="6.8815%" height="15" fill="rgb(219,149,13)" fg:x="29447" fg:w="3099"/><text x="65.6384%" y="527.50">libsystem..</text></g><g><title>block_verifier`main (32,528 samples, 72.23%)</title><rect x="0.0466%" y="549" width="72.2299%" height="15" fill="rgb(250,156,29)" fg:x="21" fg:w="32528"/><text x="0.2966%" y="559.50">block_verifier`main</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (32,528 samples, 72.23%)</title><rect x="0.0466%" y="533" width="72.2299%" height="15" fill="rgb(216,193,19)" fg:x="21" fg:w="32528"/><text x="0.2966%" y="543.50">block_verifier`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>dyld`start (32,529 samples, 72.23%)</title><rect x="0.0466%" y="565" width="72.2321%" height="15" fill="rgb(216,135,14)" fg:x="21" fg:w="32529"/><text x="0.2966%" y="575.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__exit (6 samples, 0.01%)</title><rect x="72.2809%" y="565" width="0.0133%" height="15" fill="rgb(241,47,5)" fg:x="32551" fg:w="6"/><text x="72.5309%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="72.3276%" y="373" width="0.0111%" height="15" fill="rgb(233,42,35)" fg:x="32572" fg:w="5"/><text x="72.5776%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (8 samples, 0.02%)</title><rect x="72.3742%" y="357" width="0.0178%" height="15" fill="rgb(231,13,6)" fg:x="32593" fg:w="8"/><text x="72.6242%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (14 samples, 0.03%)</title><rect x="72.5940%" y="341" width="0.0311%" height="15" fill="rgb(207,181,40)" fg:x="32692" fg:w="14"/><text x="72.8440%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.02%)</title><rect x="72.6074%" y="325" width="0.0178%" height="15" fill="rgb(254,173,49)" fg:x="32698" fg:w="8"/><text x="72.8574%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.02%)</title><rect x="72.6251%" y="341" width="0.0222%" height="15" fill="rgb(221,1,38)" fg:x="32706" fg:w="10"/><text x="72.8751%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (25 samples, 0.06%)</title><rect x="72.6473%" y="341" width="0.0555%" height="15" fill="rgb(206,124,46)" fg:x="32716" fg:w="25"/><text x="72.8973%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (11 samples, 0.02%)</title><rect x="72.7028%" y="341" width="0.0244%" height="15" fill="rgb(249,21,11)" fg:x="32741" fg:w="11"/><text x="72.9528%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (10 samples, 0.02%)</title><rect x="72.7273%" y="341" width="0.0222%" height="15" fill="rgb(222,201,40)" fg:x="32752" fg:w="10"/><text x="72.9773%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (165 samples, 0.37%)</title><rect x="72.3920%" y="357" width="0.3664%" height="15" fill="rgb(235,61,29)" fg:x="32601" fg:w="165"/><text x="72.6420%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (190 samples, 0.42%)</title><rect x="72.3387%" y="373" width="0.4219%" height="15" fill="rgb(219,207,3)" fg:x="32577" fg:w="190"/><text x="72.5887%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (216 samples, 0.48%)</title><rect x="72.2987%" y="389" width="0.4796%" height="15" fill="rgb(222,56,46)" fg:x="32559" fg:w="216"/><text x="72.5487%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="72.7672%" y="373" width="0.0111%" height="15" fill="rgb(239,76,54)" fg:x="32770" fg:w="5"/><text x="73.0172%" y="383.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureSomeOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, rocksdb::OptionTypeInfo, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, rocksdb::OptionTypeInfo&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="72.7983%" y="149" width="0.0133%" height="15" fill="rgb(231,124,27)" fg:x="32784" fg:w="6"/><text x="73.0483%" y="159.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7 samples, 0.02%)</title><rect x="72.7983%" y="165" width="0.0155%" height="15" fill="rgb(249,195,6)" fg:x="32784" fg:w="7"/><text x="73.0483%" y="175.50"></text></g><g><title>block_verifier`rocksdb::GetColumnFamilyOptionsFromMap(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="72.7983%" y="213" width="0.0200%" height="15" fill="rgb(237,174,47)" fg:x="32784" fg:w="9"/><text x="73.0483%" y="223.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableCFOptions::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (9 samples, 0.02%)</title><rect x="72.7983%" y="197" width="0.0200%" height="15" fill="rgb(206,201,31)" fg:x="32784" fg:w="9"/><text x="73.0483%" y="207.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (9 samples, 0.02%)</title><rect x="72.7983%" y="181" width="0.0200%" height="15" fill="rgb(231,57,52)" fg:x="32784" fg:w="9"/><text x="73.0483%" y="191.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::EndSection(rocksdb::ConfigOptions const&amp;, rocksdb::OptionSection, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="72.7961%" y="229" width="0.0244%" height="15" fill="rgb(248,177,22)" fg:x="32783" fg:w="11"/><text x="73.0461%" y="239.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (18 samples, 0.04%)</title><rect x="72.7850%" y="373" width="0.0400%" height="15" fill="rgb(215,211,37)" fg:x="32778" fg:w="18"/><text x="73.0350%" y="383.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (18 samples, 0.04%)</title><rect x="72.7850%" y="357" width="0.0400%" height="15" fill="rgb(241,128,51)" fg:x="32778" fg:w="18"/><text x="73.0350%" y="367.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (18 samples, 0.04%)</title><rect x="72.7850%" y="341" width="0.0400%" height="15" fill="rgb(227,165,31)" fg:x="32778" fg:w="18"/><text x="73.0350%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (18 samples, 0.04%)</title><rect x="72.7850%" y="325" width="0.0400%" height="15" fill="rgb(228,167,24)" fg:x="32778" fg:w="18"/><text x="73.0350%" y="335.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (18 samples, 0.04%)</title><rect x="72.7850%" y="309" width="0.0400%" height="15" fill="rgb(228,143,12)" fg:x="32778" fg:w="18"/><text x="73.0350%" y="319.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.04%)</title><rect x="72.7894%" y="293" width="0.0355%" height="15" fill="rgb(249,149,8)" fg:x="32780" fg:w="16"/><text x="73.0394%" y="303.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.04%)</title><rect x="72.7894%" y="277" width="0.0355%" height="15" fill="rgb(243,35,44)" fg:x="32780" fg:w="16"/><text x="73.0394%" y="287.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (14 samples, 0.03%)</title><rect x="72.7939%" y="261" width="0.0311%" height="15" fill="rgb(246,89,9)" fg:x="32782" fg:w="14"/><text x="73.0439%" y="271.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (14 samples, 0.03%)</title><rect x="72.7939%" y="245" width="0.0311%" height="15" fill="rgb(233,213,13)" fg:x="32782" fg:w="14"/><text x="73.0439%" y="255.50"></text></g><g><title>block_verifier`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (8 samples, 0.02%)</title><rect x="72.8272%" y="261" width="0.0178%" height="15" fill="rgb(233,141,41)" fg:x="32797" fg:w="8"/><text x="73.0772%" y="271.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Append (11 samples, 0.02%)</title><rect x="72.8472%" y="245" width="0.0244%" height="15" fill="rgb(239,167,4)" fg:x="32806" fg:w="11"/><text x="73.0972%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Flush (11 samples, 0.02%)</title><rect x="72.8472%" y="229" width="0.0244%" height="15" fill="rgb(209,217,16)" fg:x="32806" fg:w="11"/><text x="73.0972%" y="239.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::WriteBuffered (11 samples, 0.02%)</title><rect x="72.8472%" y="213" width="0.0244%" height="15" fill="rgb(219,88,35)" fg:x="32806" fg:w="11"/><text x="73.0972%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`write (11 samples, 0.02%)</title><rect x="72.8472%" y="197" width="0.0244%" height="15" fill="rgb(220,193,23)" fg:x="32806" fg:w="11"/><text x="73.0972%" y="207.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (23 samples, 0.05%)</title><rect x="72.8272%" y="309" width="0.0511%" height="15" fill="rgb(230,90,52)" fg:x="32797" fg:w="23"/><text x="73.0772%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (23 samples, 0.05%)</title><rect x="72.8272%" y="293" width="0.0511%" height="15" fill="rgb(252,106,19)" fg:x="32797" fg:w="23"/><text x="73.0772%" y="303.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (23 samples, 0.05%)</title><rect x="72.8272%" y="277" width="0.0511%" height="15" fill="rgb(206,74,20)" fg:x="32797" fg:w="23"/><text x="73.0772%" y="287.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::EmitPhysicalRecord (14 samples, 0.03%)</title><rect x="72.8472%" y="261" width="0.0311%" height="15" fill="rgb(230,138,44)" fg:x="32806" fg:w="14"/><text x="73.0972%" y="271.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (5 samples, 0.01%)</title><rect x="72.9471%" y="213" width="0.0111%" height="15" fill="rgb(235,182,43)" fg:x="32851" fg:w="5"/><text x="73.1971%" y="223.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (6 samples, 0.01%)</title><rect x="72.9649%" y="197" width="0.0133%" height="15" fill="rgb(242,16,51)" fg:x="32859" fg:w="6"/><text x="73.2149%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.03%)</title><rect x="72.9826%" y="197" width="0.0333%" height="15" fill="rgb(248,9,4)" fg:x="32867" fg:w="15"/><text x="73.2326%" y="207.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (51 samples, 0.11%)</title><rect x="72.9160%" y="229" width="0.1132%" height="15" fill="rgb(210,31,22)" fg:x="32837" fg:w="51"/><text x="73.1660%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (32 samples, 0.07%)</title><rect x="72.9582%" y="213" width="0.0711%" height="15" fill="rgb(239,54,39)" fg:x="32856" fg:w="32"/><text x="73.2082%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="73.0159%" y="197" width="0.0133%" height="15" fill="rgb(230,99,41)" fg:x="32882" fg:w="6"/><text x="73.2659%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Allocate (5 samples, 0.01%)</title><rect x="73.0293%" y="229" width="0.0111%" height="15" fill="rgb(253,106,12)" fg:x="32888" fg:w="5"/><text x="73.2793%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (61 samples, 0.14%)</title><rect x="72.9094%" y="245" width="0.1355%" height="15" fill="rgb(213,46,41)" fg:x="32834" fg:w="61"/><text x="73.1594%" y="255.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteCF (68 samples, 0.15%)</title><rect x="72.8960%" y="277" width="0.1510%" height="15" fill="rgb(215,133,35)" fg:x="32828" fg:w="68"/><text x="73.1460%" y="287.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (65 samples, 0.14%)</title><rect x="72.9027%" y="261" width="0.1443%" height="15" fill="rgb(213,28,5)" fg:x="32831" fg:w="65"/><text x="73.1527%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="73.1314%" y="197" width="0.0222%" height="15" fill="rgb(215,77,49)" fg:x="32934" fg:w="10"/><text x="73.3814%" y="207.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (21 samples, 0.05%)</title><rect x="73.1092%" y="213" width="0.0466%" height="15" fill="rgb(248,100,22)" fg:x="32924" fg:w="21"/><text x="73.3592%" y="223.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (42 samples, 0.09%)</title><rect x="73.0648%" y="229" width="0.0933%" height="15" fill="rgb(208,67,9)" fg:x="32904" fg:w="42"/><text x="73.3148%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (49 samples, 0.11%)</title><rect x="73.0559%" y="245" width="0.1088%" height="15" fill="rgb(219,133,21)" fg:x="32900" fg:w="49"/><text x="73.3059%" y="255.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (63 samples, 0.14%)</title><rect x="73.0515%" y="261" width="0.1399%" height="15" fill="rgb(246,46,29)" fg:x="32898" fg:w="63"/><text x="73.3015%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="73.1647%" y="245" width="0.0266%" height="15" fill="rgb(246,185,52)" fg:x="32949" fg:w="12"/><text x="73.4147%" y="255.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (66 samples, 0.15%)</title><rect x="73.0470%" y="277" width="0.1466%" height="15" fill="rgb(252,136,11)" fg:x="32896" fg:w="66"/><text x="73.2970%" y="287.50"></text></g><g><title>block_verifier`rocksdb_write (167 samples, 0.37%)</title><rect x="72.8272%" y="357" width="0.3708%" height="15" fill="rgb(219,138,53)" fg:x="32797" fg:w="167"/><text x="73.0772%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (167 samples, 0.37%)</title><rect x="72.8272%" y="341" width="0.3708%" height="15" fill="rgb(211,51,23)" fg:x="32797" fg:w="167"/><text x="73.0772%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (167 samples, 0.37%)</title><rect x="72.8272%" y="325" width="0.3708%" height="15" fill="rgb(247,221,28)" fg:x="32797" fg:w="167"/><text x="73.0772%" y="335.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (144 samples, 0.32%)</title><rect x="72.8783%" y="309" width="0.3198%" height="15" fill="rgb(251,222,45)" fg:x="32820" fg:w="144"/><text x="73.1283%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (142 samples, 0.32%)</title><rect x="72.8827%" y="293" width="0.3153%" height="15" fill="rgb(217,162,53)" fg:x="32822" fg:w="142"/><text x="73.1327%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (168 samples, 0.37%)</title><rect x="72.8272%" y="373" width="0.3731%" height="15" fill="rgb(229,93,14)" fg:x="32797" fg:w="168"/><text x="73.0772%" y="383.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (11 samples, 0.02%)</title><rect x="73.2047%" y="325" width="0.0244%" height="15" fill="rgb(209,67,49)" fg:x="32967" fg:w="11"/><text x="73.4547%" y="335.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Delete (16 samples, 0.04%)</title><rect x="73.2025%" y="341" width="0.0355%" height="15" fill="rgb(213,87,29)" fg:x="32966" fg:w="16"/><text x="73.4525%" y="351.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Delete (20 samples, 0.04%)</title><rect x="73.2002%" y="357" width="0.0444%" height="15" fill="rgb(205,151,52)" fg:x="32965" fg:w="20"/><text x="73.4502%" y="367.50"></text></g><g><title>block_verifier`rocksdb_writebatch_delete_cf (22 samples, 0.05%)</title><rect x="73.2002%" y="373" width="0.0489%" height="15" fill="rgb(253,215,39)" fg:x="32965" fg:w="22"/><text x="73.4502%" y="383.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (36 samples, 0.08%)</title><rect x="73.2802%" y="325" width="0.0799%" height="15" fill="rgb(221,220,41)" fg:x="33001" fg:w="36"/><text x="73.5302%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="73.3290%" y="309" width="0.0311%" height="15" fill="rgb(218,133,21)" fg:x="33023" fg:w="14"/><text x="73.5790%" y="319.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (58 samples, 0.13%)</title><rect x="73.2669%" y="341" width="0.1288%" height="15" fill="rgb(221,193,43)" fg:x="32995" fg:w="58"/><text x="73.5169%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.04%)</title><rect x="73.3601%" y="325" width="0.0355%" height="15" fill="rgb(240,128,52)" fg:x="33037" fg:w="16"/><text x="73.6101%" y="335.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (276 samples, 0.61%)</title><rect x="72.7850%" y="389" width="0.6129%" height="15" fill="rgb(253,114,12)" fg:x="32778" fg:w="276"/><text x="73.0350%" y="399.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (67 samples, 0.15%)</title><rect x="73.2491%" y="373" width="0.1488%" height="15" fill="rgb(215,223,47)" fg:x="32987" fg:w="67"/><text x="73.4991%" y="383.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (67 samples, 0.15%)</title><rect x="73.2491%" y="357" width="0.1488%" height="15" fill="rgb(248,225,23)" fg:x="32987" fg:w="67"/><text x="73.4991%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::commit (503 samples, 1.12%)</title><rect x="72.2965%" y="437" width="1.1169%" height="15" fill="rgb(250,108,0)" fg:x="32558" fg:w="503"/><text x="72.5465%" y="447.50"></text></g><g><title>block_verifier`fuel_core::database::_&lt;impl fuel_core_storage::transactional::Modifiable for fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;&gt;::commit_changes (503 samples, 1.12%)</title><rect x="72.2965%" y="421" width="1.1169%" height="15" fill="rgb(228,208,7)" fg:x="32558" fg:w="503"/><text x="72.5465%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (503 samples, 1.12%)</title><rect x="72.2965%" y="405" width="1.1169%" height="15" fill="rgb(244,45,10)" fg:x="32558" fg:w="503"/><text x="72.5465%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_free (7 samples, 0.02%)</title><rect x="73.3979%" y="389" width="0.0155%" height="15" fill="rgb(207,125,25)" fg:x="33054" fg:w="7"/><text x="73.6479%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.02%)</title><rect x="73.4845%" y="341" width="0.0222%" height="15" fill="rgb(210,195,18)" fg:x="33093" fg:w="10"/><text x="73.7345%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (13 samples, 0.03%)</title><rect x="73.4800%" y="357" width="0.0289%" height="15" fill="rgb(249,80,12)" fg:x="33091" fg:w="13"/><text x="73.7300%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (14 samples, 0.03%)</title><rect x="73.4800%" y="373" width="0.0311%" height="15" fill="rgb(221,65,9)" fg:x="33091" fg:w="14"/><text x="73.7300%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (15 samples, 0.03%)</title><rect x="73.4800%" y="405" width="0.0333%" height="15" fill="rgb(235,49,36)" fg:x="33091" fg:w="15"/><text x="73.7300%" y="415.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (15 samples, 0.03%)</title><rect x="73.4800%" y="389" width="0.0333%" height="15" fill="rgb(225,32,20)" fg:x="33091" fg:w="15"/><text x="73.7300%" y="399.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (45 samples, 0.10%)</title><rect x="73.4223%" y="421" width="0.0999%" height="15" fill="rgb(215,141,46)" fg:x="33065" fg:w="45"/><text x="73.6723%" y="431.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (33 samples, 0.07%)</title><rect x="73.5289%" y="405" width="0.0733%" height="15" fill="rgb(250,160,47)" fg:x="33113" fg:w="33"/><text x="73.7789%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (36 samples, 0.08%)</title><rect x="73.5244%" y="421" width="0.0799%" height="15" fill="rgb(216,222,40)" fg:x="33111" fg:w="36"/><text x="73.7744%" y="431.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="73.6088%" y="405" width="0.0266%" height="15" fill="rgb(234,217,39)" fg:x="33149" fg:w="12"/><text x="73.8588%" y="415.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (9 samples, 0.02%)</title><rect x="73.6355%" y="405" width="0.0200%" height="15" fill="rgb(207,178,40)" fg:x="33161" fg:w="9"/><text x="73.8855%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="73.6599%" y="389" width="0.0133%" height="15" fill="rgb(221,136,13)" fg:x="33172" fg:w="6"/><text x="73.9099%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (9 samples, 0.02%)</title><rect x="73.6555%" y="405" width="0.0200%" height="15" fill="rgb(249,199,10)" fg:x="33170" fg:w="9"/><text x="73.9055%" y="415.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (20 samples, 0.04%)</title><rect x="73.6754%" y="405" width="0.0444%" height="15" fill="rgb(249,222,13)" fg:x="33179" fg:w="20"/><text x="73.9254%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="73.7221%" y="405" width="0.0133%" height="15" fill="rgb(244,185,38)" fg:x="33200" fg:w="6"/><text x="73.9721%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="73.7243%" y="389" width="0.0111%" height="15" fill="rgb(236,202,9)" fg:x="33201" fg:w="5"/><text x="73.9743%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (14 samples, 0.03%)</title><rect x="73.7376%" y="373" width="0.0311%" height="15" fill="rgb(250,229,37)" fg:x="33207" fg:w="14"/><text x="73.9876%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (6 samples, 0.01%)</title><rect x="73.7687%" y="373" width="0.0133%" height="15" fill="rgb(206,174,23)" fg:x="33221" fg:w="6"/><text x="74.0187%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.05%)</title><rect x="73.7354%" y="405" width="0.0511%" height="15" fill="rgb(211,33,43)" fg:x="33206" fg:w="23"/><text x="73.9854%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.05%)</title><rect x="73.7376%" y="389" width="0.0489%" height="15" fill="rgb(245,58,50)" fg:x="33207" fg:w="22"/><text x="73.9876%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (83 samples, 0.18%)</title><rect x="73.6044%" y="421" width="0.1843%" height="15" fill="rgb(244,68,36)" fg:x="33147" fg:w="83"/><text x="73.8544%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.02%)</title><rect x="73.8020%" y="357" width="0.0222%" height="15" fill="rgb(232,229,15)" fg:x="33236" fg:w="10"/><text x="74.0520%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.02%)</title><rect x="73.8020%" y="373" width="0.0244%" height="15" fill="rgb(254,30,23)" fg:x="33236" fg:w="11"/><text x="74.0520%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (15 samples, 0.03%)</title><rect x="73.7976%" y="421" width="0.0333%" height="15" fill="rgb(235,160,14)" fg:x="33234" fg:w="15"/><text x="74.0476%" y="431.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (14 samples, 0.03%)</title><rect x="73.7998%" y="405" width="0.0311%" height="15" fill="rgb(212,155,44)" fg:x="33235" fg:w="14"/><text x="74.0498%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (14 samples, 0.03%)</title><rect x="73.7998%" y="389" width="0.0311%" height="15" fill="rgb(226,2,50)" fg:x="33235" fg:w="14"/><text x="74.0498%" y="399.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="73.8398%" y="389" width="0.0178%" height="15" fill="rgb(234,177,6)" fg:x="33253" fg:w="8"/><text x="74.0898%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="73.8442%" y="373" width="0.0133%" height="15" fill="rgb(217,24,9)" fg:x="33255" fg:w="6"/><text x="74.0942%" y="383.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (6 samples, 0.01%)</title><rect x="73.8620%" y="389" width="0.0133%" height="15" fill="rgb(220,13,46)" fg:x="33263" fg:w="6"/><text x="74.1120%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (16 samples, 0.04%)</title><rect x="73.8775%" y="389" width="0.0355%" height="15" fill="rgb(239,221,27)" fg:x="33270" fg:w="16"/><text x="74.1275%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (41 samples, 0.09%)</title><rect x="73.8353%" y="405" width="0.0910%" height="15" fill="rgb(222,198,25)" fg:x="33251" fg:w="41"/><text x="74.0853%" y="415.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (177 samples, 0.39%)</title><rect x="73.9308%" y="405" width="0.3930%" height="15" fill="rgb(211,99,13)" fg:x="33294" fg:w="177"/><text x="74.1808%" y="415.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::block::Block::compress (224 samples, 0.50%)</title><rect x="73.8331%" y="421" width="0.4974%" height="15" fill="rgb(232,111,31)" fg:x="33250" fg:w="224"/><text x="74.0831%" y="431.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (166 samples, 0.37%)</title><rect x="74.3305%" y="421" width="0.3686%" height="15" fill="rgb(245,82,37)" fg:x="33474" fg:w="166"/><text x="74.5805%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::store_new_block (587 samples, 1.30%)</title><rect x="73.4134%" y="437" width="1.3035%" height="15" fill="rgb(227,149,46)" fg:x="33061" fg:w="587"/><text x="73.6634%" y="447.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="74.7369%" y="373" width="0.0222%" height="15" fill="rgb(218,36,50)" fg:x="33657" fg:w="10"/><text x="74.9869%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="74.7457%" y="357" width="0.0133%" height="15" fill="rgb(226,80,48)" fg:x="33661" fg:w="6"/><text x="74.9957%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (18 samples, 0.04%)</title><rect x="74.7280%" y="389" width="0.0400%" height="15" fill="rgb(238,224,15)" fg:x="33653" fg:w="18"/><text x="74.9780%" y="399.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="74.7258%" y="421" width="0.0466%" height="15" fill="rgb(241,136,10)" fg:x="33652" fg:w="21"/><text x="74.9758%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="74.7258%" y="405" width="0.0466%" height="15" fill="rgb(208,32,45)" fg:x="33652" fg:w="21"/><text x="74.9758%" y="415.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.05%)</title><rect x="74.7879%" y="389" width="0.0489%" height="15" fill="rgb(207,135,9)" fg:x="33680" fg:w="22"/><text x="75.0379%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.05%)</title><rect x="74.7879%" y="373" width="0.0489%" height="15" fill="rgb(206,86,44)" fg:x="33680" fg:w="22"/><text x="75.0379%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.05%)</title><rect x="74.7902%" y="357" width="0.0466%" height="15" fill="rgb(245,177,15)" fg:x="33681" fg:w="21"/><text x="75.0402%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.04%)</title><rect x="74.7946%" y="341" width="0.0422%" height="15" fill="rgb(206,64,50)" fg:x="33683" fg:w="19"/><text x="75.0446%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (5 samples, 0.01%)</title><rect x="74.8368%" y="389" width="0.0111%" height="15" fill="rgb(234,36,40)" fg:x="33702" fg:w="5"/><text x="75.0868%" y="399.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (7 samples, 0.02%)</title><rect x="74.8479%" y="389" width="0.0155%" height="15" fill="rgb(213,64,8)" fg:x="33707" fg:w="7"/><text x="75.0979%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (22 samples, 0.05%)</title><rect x="74.8634%" y="389" width="0.0489%" height="15" fill="rgb(210,75,36)" fg:x="33714" fg:w="22"/><text x="75.1134%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="74.9234%" y="389" width="0.0111%" height="15" fill="rgb(229,88,21)" fg:x="33741" fg:w="5"/><text x="75.1734%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="74.9345%" y="389" width="0.0133%" height="15" fill="rgb(252,204,47)" fg:x="33746" fg:w="6"/><text x="75.1845%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (76 samples, 0.17%)</title><rect x="74.7835%" y="405" width="0.1688%" height="15" fill="rgb(208,77,27)" fg:x="33678" fg:w="76"/><text x="75.0335%" y="415.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="74.9767%" y="389" width="0.0133%" height="15" fill="rgb(221,76,26)" fg:x="33765" fg:w="6"/><text x="75.2267%" y="399.50"></text></g><g><title>block_verifier`core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="74.9989%" y="389" width="0.0155%" height="15" fill="rgb(225,139,18)" fg:x="33775" fg:w="7"/><text x="75.2489%" y="399.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::Bucket::add (8 samples, 0.02%)</title><rect x="75.0144%" y="389" width="0.0178%" height="15" fill="rgb(230,137,11)" fg:x="33782" fg:w="8"/><text x="75.2644%" y="399.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="75.0433%" y="373" width="0.0133%" height="15" fill="rgb(212,28,1)" fg:x="33795" fg:w="6"/><text x="75.2933%" y="383.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="75.0588%" y="373" width="0.0155%" height="15" fill="rgb(248,164,17)" fg:x="33802" fg:w="7"/><text x="75.3088%" y="383.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="75.0633%" y="357" width="0.0111%" height="15" fill="rgb(222,171,42)" fg:x="33804" fg:w="5"/><text x="75.3133%" y="367.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.07%)</title><rect x="75.0344%" y="389" width="0.0666%" height="15" fill="rgb(243,84,45)" fg:x="33791" fg:w="30"/><text x="75.2844%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="75.0744%" y="373" width="0.0266%" height="15" fill="rgb(252,49,23)" fg:x="33809" fg:w="12"/><text x="75.3244%" y="383.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="75.1010%" y="389" width="0.0178%" height="15" fill="rgb(215,19,7)" fg:x="33821" fg:w="8"/><text x="75.3510%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="75.1188%" y="389" width="0.0111%" height="15" fill="rgb(238,81,41)" fg:x="33829" fg:w="5"/><text x="75.3688%" y="399.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::process (81 samples, 0.18%)</title><rect x="74.9567%" y="405" width="0.1799%" height="15" fill="rgb(210,199,37)" fg:x="33756" fg:w="81"/><text x="75.2067%" y="415.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="75.1521%" y="373" width="0.0244%" height="15" fill="rgb(244,192,49)" fg:x="33844" fg:w="11"/><text x="75.4021%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (6 samples, 0.01%)</title><rect x="75.1788%" y="293" width="0.0133%" height="15" fill="rgb(226,211,11)" fg:x="33856" fg:w="6"/><text x="75.4288%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.01%)</title><rect x="75.1788%" y="277" width="0.0133%" height="15" fill="rgb(236,162,54)" fg:x="33856" fg:w="6"/><text x="75.4288%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="75.1788%" y="373" width="0.0155%" height="15" fill="rgb(220,229,9)" fg:x="33856" fg:w="7"/><text x="75.4288%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="75.1788%" y="357" width="0.0155%" height="15" fill="rgb(250,87,22)" fg:x="33856" fg:w="7"/><text x="75.4288%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.02%)</title><rect x="75.1788%" y="341" width="0.0155%" height="15" fill="rgb(239,43,17)" fg:x="33856" fg:w="7"/><text x="75.4288%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (7 samples, 0.02%)</title><rect x="75.1788%" y="325" width="0.0155%" height="15" fill="rgb(231,177,25)" fg:x="33856" fg:w="7"/><text x="75.4288%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (7 samples, 0.02%)</title><rect x="75.1788%" y="309" width="0.0155%" height="15" fill="rgb(219,179,1)" fg:x="33856" fg:w="7"/><text x="75.4288%" y="319.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.04%)</title><rect x="75.1521%" y="389" width="0.0444%" height="15" fill="rgb(238,219,53)" fg:x="33844" fg:w="20"/><text x="75.4021%" y="399.50"></text></g><g><title>block_verifier`core::slice::sort::stable::driftsort_main (5 samples, 0.01%)</title><rect x="75.2054%" y="389" width="0.0111%" height="15" fill="rgb(232,167,36)" fg:x="33868" fg:w="5"/><text x="75.4554%" y="399.50"></text></g><g><title>block_verifier`core::slice::sort::stable::quicksort::quicksort (5 samples, 0.01%)</title><rect x="75.2054%" y="373" width="0.0111%" height="15" fill="rgb(244,19,51)" fg:x="33868" fg:w="5"/><text x="75.4554%" y="383.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::split_equally (48 samples, 0.11%)</title><rect x="75.1366%" y="405" width="0.1066%" height="15" fill="rgb(224,6,22)" fg:x="33837" fg:w="48"/><text x="75.3866%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="75.2187%" y="389" width="0.0244%" height="15" fill="rgb(224,145,5)" fg:x="33874" fg:w="11"/><text x="75.4687%" y="399.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (7 samples, 0.02%)</title><rect x="75.3808%" y="373" width="0.0155%" height="15" fill="rgb(234,130,49)" fg:x="33947" fg:w="7"/><text x="75.6308%" y="383.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (17 samples, 0.04%)</title><rect x="75.3964%" y="373" width="0.0377%" height="15" fill="rgb(254,6,2)" fg:x="33954" fg:w="17"/><text x="75.6464%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="75.4230%" y="357" width="0.0111%" height="15" fill="rgb(208,96,46)" fg:x="33966" fg:w="5"/><text x="75.6730%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="75.4230%" y="341" width="0.0111%" height="15" fill="rgb(239,3,39)" fg:x="33966" fg:w="5"/><text x="75.6730%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (5 samples, 0.01%)</title><rect x="75.4452%" y="325" width="0.0111%" height="15" fill="rgb(233,210,1)" fg:x="33976" fg:w="5"/><text x="75.6952%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (14 samples, 0.03%)</title><rect x="75.4341%" y="373" width="0.0311%" height="15" fill="rgb(244,137,37)" fg:x="33971" fg:w="14"/><text x="75.6841%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="75.4363%" y="357" width="0.0289%" height="15" fill="rgb(240,136,2)" fg:x="33972" fg:w="13"/><text x="75.6863%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.03%)</title><rect x="75.4363%" y="341" width="0.0289%" height="15" fill="rgb(239,18,37)" fg:x="33972" fg:w="13"/><text x="75.6863%" y="351.50"></text></g><g><title>block_verifier`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (7 samples, 0.02%)</title><rect x="75.4763%" y="357" width="0.0155%" height="15" fill="rgb(218,185,22)" fg:x="33990" fg:w="7"/><text x="75.7263%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="75.4785%" y="341" width="0.0133%" height="15" fill="rgb(225,218,4)" fg:x="33991" fg:w="6"/><text x="75.7285%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="75.4807%" y="325" width="0.0111%" height="15" fill="rgb(230,182,32)" fg:x="33992" fg:w="5"/><text x="75.7307%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (13 samples, 0.03%)</title><rect x="75.4652%" y="373" width="0.0289%" height="15" fill="rgb(242,56,43)" fg:x="33985" fg:w="13"/><text x="75.7152%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.03%)</title><rect x="75.4985%" y="373" width="0.0333%" height="15" fill="rgb(233,99,24)" fg:x="34000" fg:w="15"/><text x="75.7485%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="75.5141%" y="357" width="0.0178%" height="15" fill="rgb(234,209,42)" fg:x="34007" fg:w="8"/><text x="75.7641%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.03%)</title><rect x="75.5340%" y="373" width="0.0289%" height="15" fill="rgb(227,7,12)" fg:x="34016" fg:w="13"/><text x="75.7840%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt; as fuel_core_storage::transactional::Modifiable&gt;::commit_changes (151 samples, 0.34%)</title><rect x="75.2431%" y="389" width="0.3353%" height="15" fill="rgb(245,203,43)" fg:x="33885" fg:w="151"/><text x="75.4931%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="75.5629%" y="373" width="0.0155%" height="15" fill="rgb(238,205,33)" fg:x="34029" fg:w="7"/><text x="75.8129%" y="383.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (8 samples, 0.02%)</title><rect x="75.5807%" y="389" width="0.0178%" height="15" fill="rgb(231,56,7)" fg:x="34037" fg:w="8"/><text x="75.8307%" y="399.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (5 samples, 0.01%)</title><rect x="75.6073%" y="357" width="0.0111%" height="15" fill="rgb(244,186,29)" fg:x="34049" fg:w="5"/><text x="75.8573%" y="367.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (245 samples, 0.54%)</title><rect x="75.6229%" y="357" width="0.5440%" height="15" fill="rgb(234,111,31)" fg:x="34056" fg:w="245"/><text x="75.8729%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (241 samples, 0.54%)</title><rect x="75.6317%" y="341" width="0.5352%" height="15" fill="rgb(241,149,10)" fg:x="34060" fg:w="241"/><text x="75.8817%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="76.1691%" y="357" width="0.0311%" height="15" fill="rgb(249,206,44)" fg:x="34302" fg:w="14"/><text x="76.4191%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="76.1780%" y="341" width="0.0222%" height="15" fill="rgb(251,153,30)" fg:x="34306" fg:w="10"/><text x="76.4280%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="76.1802%" y="325" width="0.0200%" height="15" fill="rgb(239,152,38)" fg:x="34307" fg:w="9"/><text x="76.4302%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.02%)</title><rect x="76.1847%" y="309" width="0.0155%" height="15" fill="rgb(249,139,47)" fg:x="34309" fg:w="7"/><text x="76.4347%" y="319.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::generate_txns_root (269 samples, 0.60%)</title><rect x="75.6073%" y="373" width="0.5973%" height="15" fill="rgb(244,64,35)" fg:x="34049" fg:w="269"/><text x="75.8573%" y="383.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::PartialBlockHeader::generate (272 samples, 0.60%)</title><rect x="75.6029%" y="389" width="0.6040%" height="15" fill="rgb(216,46,15)" fg:x="34047" fg:w="272"/><text x="75.8529%" y="399.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results (451 samples, 1.00%)</title><rect x="75.2431%" y="405" width="1.0015%" height="15" fill="rgb(250,74,19)" fg:x="33885" fg:w="451"/><text x="75.4931%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.03%)</title><rect x="76.2157%" y="389" width="0.0289%" height="15" fill="rgb(249,42,33)" fg:x="34323" fg:w="13"/><text x="76.4657%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (167 samples, 0.37%)</title><rect x="76.2446%" y="405" width="0.3708%" height="15" fill="rgb(242,149,17)" fg:x="34336" fg:w="167"/><text x="76.4946%" y="415.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da (845 samples, 1.88%)</title><rect x="74.7746%" y="421" width="1.8764%" height="15" fill="rgb(244,29,21)" fg:x="33674" fg:w="845"/><text x="75.0246%" y="431.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="76.6221%" y="405" width="0.0289%" height="15" fill="rgb(220,130,37)" fg:x="34506" fg:w="13"/><text x="76.8721%" y="415.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (7 samples, 0.02%)</title><rect x="76.6554%" y="373" width="0.0155%" height="15" fill="rgb(211,67,2)" fg:x="34521" fg:w="7"/><text x="76.9054%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="76.6576%" y="357" width="0.0133%" height="15" fill="rgb(235,68,52)" fg:x="34522" fg:w="6"/><text x="76.9076%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="76.6599%" y="341" width="0.0111%" height="15" fill="rgb(246,142,3)" fg:x="34523" fg:w="5"/><text x="76.9099%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (12 samples, 0.03%)</title><rect x="76.7154%" y="341" width="0.0266%" height="15" fill="rgb(241,25,7)" fg:x="34548" fg:w="12"/><text x="76.9654%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="76.7420%" y="341" width="0.0133%" height="15" fill="rgb(242,119,39)" fg:x="34560" fg:w="6"/><text x="76.9920%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="76.7553%" y="341" width="0.0111%" height="15" fill="rgb(241,98,45)" fg:x="34566" fg:w="5"/><text x="77.0053%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (5 samples, 0.01%)</title><rect x="76.7664%" y="341" width="0.0111%" height="15" fill="rgb(254,28,30)" fg:x="34571" fg:w="5"/><text x="77.0164%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (10 samples, 0.02%)</title><rect x="76.7775%" y="341" width="0.0222%" height="15" fill="rgb(241,142,54)" fg:x="34576" fg:w="10"/><text x="77.0275%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (57 samples, 0.13%)</title><rect x="76.6754%" y="373" width="0.1266%" height="15" fill="rgb(222,85,15)" fg:x="34530" fg:w="57"/><text x="76.9254%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (50 samples, 0.11%)</title><rect x="76.6909%" y="357" width="0.1110%" height="15" fill="rgb(210,85,47)" fg:x="34537" fg:w="50"/><text x="76.9409%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (71 samples, 0.16%)</title><rect x="76.6510%" y="389" width="0.1577%" height="15" fill="rgb(224,206,25)" fg:x="34519" fg:w="71"/><text x="76.9010%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.01%)</title><rect x="76.8109%" y="389" width="0.0111%" height="15" fill="rgb(243,201,19)" fg:x="34591" fg:w="5"/><text x="77.0609%" y="399.50"></text></g><g><title>block_verifier`fuel_core_types::services::executor::_&lt;impl fuel_core_types::services::Uncommitted&lt;fuel_core_types::services::executor::ProductionResult,DatabaseTransaction&gt;&gt;::into_validation_result (80 samples, 0.18%)</title><rect x="76.6510%" y="421" width="0.1776%" height="15" fill="rgb(236,59,4)" fg:x="34519" fg:w="80"/><text x="76.9010%" y="431.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;[fuel_tx::transaction::Transaction]&gt; (80 samples, 0.18%)</title><rect x="76.6510%" y="405" width="0.1776%" height="15" fill="rgb(254,179,45)" fg:x="34519" fg:w="80"/><text x="76.9010%" y="415.50"></text></g><g><title>block_verifier`fuel_core::service::adapters::block_importer::_&lt;impl fuel_core_importer::ports::Validator for fuel_core::service::adapters::ExecutorAdapter&gt;::validate (959 samples, 2.13%)</title><rect x="74.7258%" y="437" width="2.1295%" height="15" fill="rgb(226,14,10)" fg:x="33652" fg:w="959"/><text x="74.9758%" y="447.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="76.8286%" y="421" width="0.0266%" height="15" fill="rgb(244,27,41)" fg:x="34599" fg:w="12"/><text x="77.0786%" y="431.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (244 samples, 0.54%)</title><rect x="76.8841%" y="389" width="0.5418%" height="15" fill="rgb(235,35,32)" fg:x="34624" fg:w="244"/><text x="77.1341%" y="399.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (247 samples, 0.55%)</title><rect x="76.8797%" y="405" width="0.5485%" height="15" fill="rgb(218,68,31)" fg:x="34622" fg:w="247"/><text x="77.1297%" y="415.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::generate_txns_root (262 samples, 0.58%)</title><rect x="76.8597%" y="421" width="0.5818%" height="15" fill="rgb(207,120,37)" fg:x="34613" fg:w="262"/><text x="77.1097%" y="431.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::BlockHeader::validate_transactions (265 samples, 0.59%)</title><rect x="76.8553%" y="437" width="0.5884%" height="15" fill="rgb(227,98,0)" fg:x="34611" fg:w="265"/><text x="77.1053%" y="447.50"></text></g><g><title>block_verifier`rayon_core::registry::WorkerThread::wait_until_cold (2,321 samples, 5.15%)</title><rect x="72.2943%" y="485" width="5.1539%" height="15" fill="rgb(207,7,3)" fg:x="32557" fg:w="2321"/><text x="72.5443%" y="495.50">block_..</text></g><g><title>block_verifier`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,321 samples, 5.15%)</title><rect x="72.2943%" y="469" width="5.1539%" height="15" fill="rgb(206,98,19)" fg:x="32557" fg:w="2321"/><text x="72.5443%" y="479.50">block_..</text></g><g><title>block_verifier`rayon_core::scope::scope_fifo::_{{closure}} (2,320 samples, 5.15%)</title><rect x="72.2965%" y="453" width="5.1517%" height="15" fill="rgb(217,5,26)" fg:x="32558" fg:w="2320"/><text x="72.5465%" y="463.50">block_..</text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.04%)</title><rect x="77.5236%" y="405" width="0.0400%" height="15" fill="rgb(235,190,38)" fg:x="34912" fg:w="18"/><text x="77.7736%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="77.5503%" y="389" width="0.0133%" height="15" fill="rgb(247,86,24)" fg:x="34924" fg:w="6"/><text x="77.8003%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="77.5503%" y="373" width="0.0133%" height="15" fill="rgb(205,101,16)" fg:x="34924" fg:w="6"/><text x="77.8003%" y="383.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (19 samples, 0.04%)</title><rect x="77.5792%" y="405" width="0.0422%" height="15" fill="rgb(246,168,33)" fg:x="34937" fg:w="19"/><text x="77.8292%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="77.6280%" y="405" width="0.0111%" height="15" fill="rgb(231,114,1)" fg:x="34959" fg:w="5"/><text x="77.8780%" y="415.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.14%)</title><rect x="77.5103%" y="421" width="0.1377%" height="15" fill="rgb(207,184,53)" fg:x="34906" fg:w="62"/><text x="77.7603%" y="431.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (5 samples, 0.01%)</title><rect x="77.6524%" y="405" width="0.0111%" height="15" fill="rgb(224,95,51)" fg:x="34970" fg:w="5"/><text x="77.9024%" y="415.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (18 samples, 0.04%)</title><rect x="77.6635%" y="405" width="0.0400%" height="15" fill="rgb(212,188,45)" fg:x="34975" fg:w="18"/><text x="77.9135%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (37 samples, 0.08%)</title><rect x="77.6480%" y="421" width="0.0822%" height="15" fill="rgb(223,154,38)" fg:x="34968" fg:w="37"/><text x="77.8980%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="77.7168%" y="405" width="0.0133%" height="15" fill="rgb(251,22,52)" fg:x="34999" fg:w="6"/><text x="77.9668%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="77.8057%" y="325" width="0.0155%" height="15" fill="rgb(229,209,22)" fg:x="35039" fg:w="7"/><text x="78.0557%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="77.8212%" y="325" width="0.0222%" height="15" fill="rgb(234,138,34)" fg:x="35046" fg:w="10"/><text x="78.0712%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="77.8323%" y="309" width="0.0111%" height="15" fill="rgb(212,95,11)" fg:x="35051" fg:w="5"/><text x="78.0823%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="77.8434%" y="325" width="0.0155%" height="15" fill="rgb(240,179,47)" fg:x="35056" fg:w="7"/><text x="78.0934%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="77.8434%" y="309" width="0.0155%" height="15" fill="rgb(240,163,11)" fg:x="35056" fg:w="7"/><text x="78.0934%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (29 samples, 0.06%)</title><rect x="77.7990%" y="357" width="0.0644%" height="15" fill="rgb(236,37,12)" fg:x="35036" fg:w="29"/><text x="78.0490%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (27 samples, 0.06%)</title><rect x="77.8034%" y="341" width="0.0600%" height="15" fill="rgb(232,164,16)" fg:x="35038" fg:w="27"/><text x="78.0534%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (42 samples, 0.09%)</title><rect x="77.7812%" y="389" width="0.0933%" height="15" fill="rgb(244,205,15)" fg:x="35028" fg:w="42"/><text x="78.0312%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (40 samples, 0.09%)</title><rect x="77.7857%" y="373" width="0.0888%" height="15" fill="rgb(223,117,47)" fg:x="35030" fg:w="40"/><text x="78.0357%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (45 samples, 0.10%)</title><rect x="77.7768%" y="405" width="0.0999%" height="15" fill="rgb(244,107,35)" fg:x="35026" fg:w="45"/><text x="78.0268%" y="415.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="77.8767%" y="389" width="0.0178%" height="15" fill="rgb(205,140,8)" fg:x="35071" fg:w="8"/><text x="78.1267%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="77.8767%" y="373" width="0.0178%" height="15" fill="rgb(228,84,46)" fg:x="35071" fg:w="8"/><text x="78.1267%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="77.8767%" y="357" width="0.0178%" height="15" fill="rgb(254,188,9)" fg:x="35071" fg:w="8"/><text x="78.1267%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="77.8834%" y="341" width="0.0111%" height="15" fill="rgb(206,112,54)" fg:x="35074" fg:w="5"/><text x="78.1334%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.02%)</title><rect x="77.8767%" y="405" width="0.0200%" height="15" fill="rgb(216,84,49)" fg:x="35071" fg:w="9"/><text x="78.1267%" y="415.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (87 samples, 0.19%)</title><rect x="77.7302%" y="421" width="0.1932%" height="15" fill="rgb(214,194,35)" fg:x="35005" fg:w="87"/><text x="77.9802%" y="431.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results::_{{closure}}::_{{closure}} (220 samples, 0.49%)</title><rect x="77.4504%" y="437" width="0.4885%" height="15" fill="rgb(249,28,3)" fg:x="34879" fg:w="220"/><text x="77.7004%" y="447.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_core_executor::ports::TransactionExt&gt;::max_gas (16 samples, 0.04%)</title><rect x="77.9567%" y="405" width="0.0355%" height="15" fill="rgb(222,56,52)" fg:x="35107" fg:w="16"/><text x="78.2067%" y="415.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.02%)</title><rect x="77.9766%" y="389" width="0.0155%" height="15" fill="rgb(245,217,50)" fg:x="35116" fg:w="7"/><text x="78.2266%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="78.0299%" y="373" width="0.0244%" height="15" fill="rgb(213,201,24)" fg:x="35140" fg:w="11"/><text x="78.2799%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="78.0322%" y="357" width="0.0222%" height="15" fill="rgb(248,116,28)" fg:x="35141" fg:w="10"/><text x="78.2822%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="78.0433%" y="341" width="0.0111%" height="15" fill="rgb(219,72,43)" fg:x="35146" fg:w="5"/><text x="78.2933%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="78.0211%" y="389" width="0.0355%" height="15" fill="rgb(209,138,14)" fg:x="35136" fg:w="16"/><text x="78.2711%" y="399.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (15 samples, 0.03%)</title><rect x="78.0566%" y="389" width="0.0333%" height="15" fill="rgb(222,18,33)" fg:x="35152" fg:w="15"/><text x="78.3066%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (6 samples, 0.01%)</title><rect x="78.1232%" y="357" width="0.0133%" height="15" fill="rgb(213,199,7)" fg:x="35182" fg:w="6"/><text x="78.3732%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="78.1454%" y="341" width="0.0111%" height="15" fill="rgb(250,110,10)" fg:x="35192" fg:w="5"/><text x="78.3954%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (28 samples, 0.06%)</title><rect x="78.0965%" y="389" width="0.0622%" height="15" fill="rgb(248,123,6)" fg:x="35170" fg:w="28"/><text x="78.3465%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.04%)</title><rect x="78.1143%" y="373" width="0.0444%" height="15" fill="rgb(206,91,31)" fg:x="35178" fg:w="20"/><text x="78.3643%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="78.1365%" y="357" width="0.0222%" height="15" fill="rgb(211,154,13)" fg:x="35188" fg:w="10"/><text x="78.3865%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (34 samples, 0.08%)</title><rect x="78.1587%" y="389" width="0.0755%" height="15" fill="rgb(225,148,7)" fg:x="35198" fg:w="34"/><text x="78.4087%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="78.2342%" y="389" width="0.0222%" height="15" fill="rgb(220,160,43)" fg:x="35232" fg:w="10"/><text x="78.4842%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="78.2387%" y="373" width="0.0178%" height="15" fill="rgb(213,52,39)" fg:x="35234" fg:w="8"/><text x="78.4887%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="78.2764%" y="357" width="0.0111%" height="15" fill="rgb(243,137,7)" fg:x="35251" fg:w="5"/><text x="78.5264%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="78.2564%" y="389" width="0.0333%" height="15" fill="rgb(230,79,13)" fg:x="35242" fg:w="15"/><text x="78.5064%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.03%)</title><rect x="78.2586%" y="373" width="0.0311%" height="15" fill="rgb(247,105,23)" fg:x="35243" fg:w="14"/><text x="78.5086%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (140 samples, 0.31%)</title><rect x="77.9944%" y="405" width="0.3109%" height="15" fill="rgb(223,179,41)" fg:x="35124" fg:w="140"/><text x="78.2444%" y="415.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="78.3830%" y="373" width="0.0355%" height="15" fill="rgb(218,9,34)" fg:x="35299" fg:w="16"/><text x="78.6330%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="78.3941%" y="357" width="0.0244%" height="15" fill="rgb(222,106,8)" fg:x="35304" fg:w="11"/><text x="78.6441%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="78.3963%" y="341" width="0.0222%" height="15" fill="rgb(211,220,0)" fg:x="35305" fg:w="10"/><text x="78.6463%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="78.4008%" y="325" width="0.0178%" height="15" fill="rgb(229,52,16)" fg:x="35307" fg:w="8"/><text x="78.6508%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (5 samples, 0.01%)</title><rect x="78.4319%" y="357" width="0.0111%" height="15" fill="rgb(212,155,18)" fg:x="35321" fg:w="5"/><text x="78.6819%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="78.4319%" y="341" width="0.0111%" height="15" fill="rgb(242,21,14)" fg:x="35321" fg:w="5"/><text x="78.6819%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="78.4474%" y="357" width="0.0244%" height="15" fill="rgb(222,19,48)" fg:x="35328" fg:w="11"/><text x="78.6974%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="78.4585%" y="341" width="0.0133%" height="15" fill="rgb(232,45,27)" fg:x="35333" fg:w="6"/><text x="78.7085%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (19 samples, 0.04%)</title><rect x="78.4319%" y="373" width="0.0422%" height="15" fill="rgb(249,103,42)" fg:x="35321" fg:w="19"/><text x="78.6819%" y="383.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (19 samples, 0.04%)</title><rect x="78.4740%" y="373" width="0.0422%" height="15" fill="rgb(246,81,33)" fg:x="35340" fg:w="19"/><text x="78.7240%" y="383.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (82 samples, 0.18%)</title><rect x="78.3541%" y="389" width="0.1821%" height="15" fill="rgb(252,33,42)" fg:x="35286" fg:w="82"/><text x="78.6041%" y="399.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (6 samples, 0.01%)</title><rect x="78.5384%" y="389" width="0.0133%" height="15" fill="rgb(209,212,41)" fg:x="35369" fg:w="6"/><text x="78.7884%" y="399.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (11 samples, 0.02%)</title><rect x="78.7494%" y="373" width="0.0244%" height="15" fill="rgb(207,154,6)" fg:x="35464" fg:w="11"/><text x="78.9994%" y="383.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (107 samples, 0.24%)</title><rect x="78.5562%" y="389" width="0.2376%" height="15" fill="rgb(223,64,47)" fg:x="35377" fg:w="107"/><text x="78.8062%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.02%)</title><rect x="78.7738%" y="373" width="0.0200%" height="15" fill="rgb(211,161,38)" fg:x="35475" fg:w="9"/><text x="79.0238%" y="383.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.04%)</title><rect x="78.7938%" y="389" width="0.0422%" height="15" fill="rgb(219,138,40)" fg:x="35484" fg:w="19"/><text x="79.0438%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="78.8049%" y="373" width="0.0311%" height="15" fill="rgb(241,228,46)" fg:x="35489" fg:w="14"/><text x="79.0549%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.03%)</title><rect x="78.8071%" y="357" width="0.0289%" height="15" fill="rgb(223,209,38)" fg:x="35490" fg:w="13"/><text x="79.0571%" y="367.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_types::services::executor::Error&gt; (6 samples, 0.01%)</title><rect x="78.8449%" y="389" width="0.0133%" height="15" fill="rgb(236,164,45)" fg:x="35507" fg:w="6"/><text x="79.0949%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (8 samples, 0.02%)</title><rect x="78.9070%" y="341" width="0.0178%" height="15" fill="rgb(231,15,5)" fg:x="35535" fg:w="8"/><text x="79.1570%" y="351.50"></text></g><g><title>block_verifier`fuel_tx::transaction::Executable::input_asset_ids (8 samples, 0.02%)</title><rect x="78.9359%" y="325" width="0.0178%" height="15" fill="rgb(252,35,15)" fg:x="35548" fg:w="8"/><text x="79.1859%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="78.9404%" y="309" width="0.0133%" height="15" fill="rgb(248,181,18)" fg:x="35550" fg:w="6"/><text x="79.1904%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="78.9404%" y="293" width="0.0133%" height="15" fill="rgb(233,39,42)" fg:x="35550" fg:w="6"/><text x="79.1904%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="78.9426%" y="277" width="0.0111%" height="15" fill="rgb(238,110,33)" fg:x="35551" fg:w="5"/><text x="79.1926%" y="287.50"></text></g><g><title>block_verifier`core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.03%)</title><rect x="78.9337%" y="341" width="0.0289%" height="15" fill="rgb(233,195,10)" fg:x="35547" fg:w="13"/><text x="79.1837%" y="351.50"></text></g><g><title>block_verifier`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="78.9781%" y="293" width="0.0133%" height="15" fill="rgb(254,105,3)" fg:x="35567" fg:w="6"/><text x="79.2281%" y="303.50"></text></g><g><title>block_verifier`core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="78.9914%" y="293" width="0.0111%" height="15" fill="rgb(221,225,9)" fg:x="35573" fg:w="5"/><text x="79.2414%" y="303.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="79.0025%" y="293" width="0.0133%" height="15" fill="rgb(224,227,45)" fg:x="35578" fg:w="6"/><text x="79.2525%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="79.0025%" y="277" width="0.0133%" height="15" fill="rgb(229,198,43)" fg:x="35578" fg:w="6"/><text x="79.2525%" y="287.50"></text></g><g><title>block_verifier`&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.05%)</title><rect x="78.9670%" y="309" width="0.0533%" height="15" fill="rgb(206,209,35)" fg:x="35562" fg:w="24"/><text x="79.2170%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.07%)</title><rect x="78.9670%" y="325" width="0.0711%" height="15" fill="rgb(245,195,53)" fg:x="35562" fg:w="32"/><text x="79.2170%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::Executable::input_asset_ids_unique (37 samples, 0.08%)</title><rect x="78.9648%" y="341" width="0.0822%" height="15" fill="rgb(240,92,26)" fg:x="35561" fg:w="37"/><text x="79.2148%" y="351.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (8 samples, 0.02%)</title><rect x="79.0758%" y="325" width="0.0178%" height="15" fill="rgb(207,40,23)" fg:x="35611" fg:w="8"/><text x="79.3258%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="79.1047%" y="277" width="0.0133%" height="15" fill="rgb(223,111,35)" fg:x="35624" fg:w="6"/><text x="79.3547%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.1069%" y="261" width="0.0111%" height="15" fill="rgb(229,147,28)" fg:x="35625" fg:w="5"/><text x="79.3569%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.03%)</title><rect x="79.0936%" y="309" width="0.0266%" height="15" fill="rgb(211,29,28)" fg:x="35619" fg:w="12"/><text x="79.3436%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (10 samples, 0.02%)</title><rect x="79.0980%" y="293" width="0.0222%" height="15" fill="rgb(228,72,33)" fg:x="35621" fg:w="10"/><text x="79.3480%" y="303.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.03%)</title><rect x="79.0936%" y="325" width="0.0289%" height="15" fill="rgb(205,214,31)" fg:x="35619" fg:w="13"/><text x="79.3436%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (38 samples, 0.08%)</title><rect x="79.0469%" y="341" width="0.0844%" height="15" fill="rgb(224,111,15)" fg:x="35598" fg:w="38"/><text x="79.2969%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="79.1713%" y="309" width="0.0289%" height="15" fill="rgb(253,21,26)" fg:x="35654" fg:w="13"/><text x="79.4213%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="79.1780%" y="293" width="0.0222%" height="15" fill="rgb(245,139,43)" fg:x="35657" fg:w="10"/><text x="79.4280%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="79.1824%" y="277" width="0.0178%" height="15" fill="rgb(252,170,7)" fg:x="35659" fg:w="8"/><text x="79.4324%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="79.1846%" y="261" width="0.0155%" height="15" fill="rgb(231,118,14)" fg:x="35660" fg:w="7"/><text x="79.4346%" y="271.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (6 samples, 0.01%)</title><rect x="79.2002%" y="309" width="0.0133%" height="15" fill="rgb(238,83,0)" fg:x="35667" fg:w="6"/><text x="79.4502%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="79.2157%" y="277" width="0.0155%" height="15" fill="rgb(221,39,39)" fg:x="35674" fg:w="7"/><text x="79.4657%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (9 samples, 0.02%)</title><rect x="79.2135%" y="293" width="0.0200%" height="15" fill="rgb(222,119,46)" fg:x="35673" fg:w="9"/><text x="79.4635%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="79.2379%" y="293" width="0.0311%" height="15" fill="rgb(222,165,49)" fg:x="35684" fg:w="14"/><text x="79.4879%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="79.2512%" y="277" width="0.0178%" height="15" fill="rgb(219,113,52)" fg:x="35690" fg:w="8"/><text x="79.5012%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (27 samples, 0.06%)</title><rect x="79.2135%" y="309" width="0.0600%" height="15" fill="rgb(214,7,15)" fg:x="35673" fg:w="27"/><text x="79.4635%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (31 samples, 0.07%)</title><rect x="79.2734%" y="309" width="0.0688%" height="15" fill="rgb(235,32,4)" fg:x="35700" fg:w="31"/><text x="79.5234%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="79.3534%" y="309" width="0.0178%" height="15" fill="rgb(238,90,54)" fg:x="35736" fg:w="8"/><text x="79.6034%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="79.3600%" y="293" width="0.0111%" height="15" fill="rgb(213,208,19)" fg:x="35739" fg:w="5"/><text x="79.6100%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="79.3734%" y="309" width="0.0244%" height="15" fill="rgb(233,156,4)" fg:x="35745" fg:w="11"/><text x="79.6234%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="79.3800%" y="293" width="0.0178%" height="15" fill="rgb(207,194,5)" fg:x="35748" fg:w="8"/><text x="79.6300%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (112 samples, 0.25%)</title><rect x="79.1535%" y="325" width="0.2487%" height="15" fill="rgb(206,111,30)" fg:x="35646" fg:w="112"/><text x="79.4035%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (9 samples, 0.02%)</title><rect x="79.4067%" y="309" width="0.0200%" height="15" fill="rgb(243,70,54)" fg:x="35760" fg:w="9"/><text x="79.6567%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="79.4067%" y="293" width="0.0200%" height="15" fill="rgb(242,28,8)" fg:x="35760" fg:w="9"/><text x="79.6567%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="79.4089%" y="277" width="0.0178%" height="15" fill="rgb(219,106,18)" fg:x="35761" fg:w="8"/><text x="79.6589%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.03%)</title><rect x="79.4022%" y="325" width="0.0289%" height="15" fill="rgb(244,222,10)" fg:x="35758" fg:w="13"/><text x="79.6522%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (232 samples, 0.52%)</title><rect x="79.4311%" y="325" width="0.5152%" height="15" fill="rgb(236,179,52)" fg:x="35771" fg:w="232"/><text x="79.6811%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.9529%" y="325" width="0.0111%" height="15" fill="rgb(213,23,39)" fg:x="36006" fg:w="5"/><text x="80.2029%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.9529%" y="309" width="0.0111%" height="15" fill="rgb(238,48,10)" fg:x="36006" fg:w="5"/><text x="80.2029%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::script::_&lt;impl fuel_tx::transaction::metadata::Cacheable for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::precompute (378 samples, 0.84%)</title><rect x="79.1313%" y="341" width="0.8394%" height="15" fill="rgb(251,196,23)" fg:x="35636" fg:w="378"/><text x="79.3813%" y="351.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="79.9840%" y="309" width="0.0155%" height="15" fill="rgb(250,152,24)" fg:x="36020" fg:w="7"/><text x="80.2340%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="79.9862%" y="293" width="0.0133%" height="15" fill="rgb(209,150,17)" fg:x="36021" fg:w="6"/><text x="80.2362%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="79.9862%" y="277" width="0.0133%" height="15" fill="rgb(234,202,34)" fg:x="36021" fg:w="6"/><text x="80.2362%" y="287.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.02%)</title><rect x="79.9774%" y="325" width="0.0244%" height="15" fill="rgb(253,148,53)" fg:x="36017" fg:w="11"/><text x="80.2274%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::next_duplicate (18 samples, 0.04%)</title><rect x="79.9707%" y="341" width="0.0400%" height="15" fill="rgb(218,129,16)" fg:x="36014" fg:w="18"/><text x="80.2207%" y="351.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.01%)</title><rect x="80.0129%" y="341" width="0.0111%" height="15" fill="rgb(216,85,19)" fg:x="36033" fg:w="5"/><text x="80.2629%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::types::script::_&lt;impl fuel_vm::checked_transaction::IntoChecked for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::into_checked_basic (518 samples, 1.15%)</title><rect x="78.8915%" y="357" width="1.1502%" height="15" fill="rgb(235,228,7)" fg:x="35528" fg:w="518"/><text x="79.1415%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_vm::checked_transaction::IntoChecked&gt;::into_checked_basic (530 samples, 1.18%)</title><rect x="78.8671%" y="373" width="1.1769%" height="15" fill="rgb(245,175,0)" fg:x="35517" fg:w="530"/><text x="79.1171%" y="383.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::convert_maybe_checked_tx_to_checked_tx (535 samples, 1.19%)</title><rect x="78.8604%" y="389" width="1.1880%" height="15" fill="rgb(208,168,36)" fg:x="35514" fg:w="535"/><text x="79.1104%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (7 samples, 0.02%)</title><rect x="80.1195%" y="373" width="0.0155%" height="15" fill="rgb(246,171,24)" fg:x="36081" fg:w="7"/><text x="80.3695%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.1239%" y="357" width="0.0111%" height="15" fill="rgb(215,142,24)" fg:x="36083" fg:w="5"/><text x="80.3739%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (45 samples, 0.10%)</title><rect x="80.1417%" y="357" width="0.0999%" height="15" fill="rgb(250,187,7)" fg:x="36091" fg:w="45"/><text x="80.3917%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.08%)</title><rect x="80.1572%" y="341" width="0.0844%" height="15" fill="rgb(228,66,33)" fg:x="36098" fg:w="38"/><text x="80.4072%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (34 samples, 0.08%)</title><rect x="80.1661%" y="325" width="0.0755%" height="15" fill="rgb(234,215,21)" fg:x="36102" fg:w="34"/><text x="80.4161%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.05%)</title><rect x="80.1927%" y="309" width="0.0489%" height="15" fill="rgb(222,191,20)" fg:x="36114" fg:w="22"/><text x="80.4427%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.07%)</title><rect x="80.2483%" y="341" width="0.0733%" height="15" fill="rgb(245,79,54)" fg:x="36139" fg:w="33"/><text x="80.4983%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.06%)</title><rect x="80.2571%" y="325" width="0.0644%" height="15" fill="rgb(240,10,37)" fg:x="36143" fg:w="29"/><text x="80.5071%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.05%)</title><rect x="80.2705%" y="309" width="0.0511%" height="15" fill="rgb(214,192,32)" fg:x="36149" fg:w="23"/><text x="80.5205%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (37 samples, 0.08%)</title><rect x="80.2416%" y="357" width="0.0822%" height="15" fill="rgb(209,36,54)" fg:x="36136" fg:w="37"/><text x="80.4916%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="80.3238%" y="357" width="0.0222%" height="15" fill="rgb(220,10,11)" fg:x="36173" fg:w="10"/><text x="80.5738%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="80.3460%" y="357" width="0.0200%" height="15" fill="rgb(221,106,17)" fg:x="36183" fg:w="9"/><text x="80.5960%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.3504%" y="341" width="0.0155%" height="15" fill="rgb(251,142,44)" fg:x="36185" fg:w="7"/><text x="80.6004%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="80.3504%" y="325" width="0.0155%" height="15" fill="rgb(238,13,15)" fg:x="36185" fg:w="7"/><text x="80.6004%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (107 samples, 0.24%)</title><rect x="80.1372%" y="373" width="0.2376%" height="15" fill="rgb(208,107,27)" fg:x="36089" fg:w="107"/><text x="80.3872%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.06%)</title><rect x="80.4148%" y="357" width="0.0555%" height="15" fill="rgb(205,136,37)" fg:x="36214" fg:w="25"/><text x="80.6648%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.03%)</title><rect x="80.4437%" y="341" width="0.0266%" height="15" fill="rgb(250,205,27)" fg:x="36227" fg:w="12"/><text x="80.6937%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (34 samples, 0.08%)</title><rect x="80.4059%" y="373" width="0.0755%" height="15" fill="rgb(210,80,43)" fg:x="36210" fg:w="34"/><text x="80.6559%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.07%)</title><rect x="80.5081%" y="341" width="0.0711%" height="15" fill="rgb(247,160,36)" fg:x="36256" fg:w="32"/><text x="80.7581%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.04%)</title><rect x="80.5414%" y="325" width="0.0377%" height="15" fill="rgb(234,13,49)" fg:x="36271" fg:w="17"/><text x="80.7914%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (45 samples, 0.10%)</title><rect x="80.4903%" y="357" width="0.0999%" height="15" fill="rgb(234,122,0)" fg:x="36248" fg:w="45"/><text x="80.7403%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.04%)</title><rect x="80.5969%" y="357" width="0.0444%" height="15" fill="rgb(207,146,38)" fg:x="36296" fg:w="20"/><text x="80.8469%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.03%)</title><rect x="80.6124%" y="341" width="0.0289%" height="15" fill="rgb(207,177,25)" fg:x="36303" fg:w="13"/><text x="80.8624%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_vm::storage::predicate::PredicateStorage&lt;&amp;fuel_core::graphql_api::database::ReadView&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (76 samples, 0.17%)</title><rect x="80.4814%" y="373" width="0.1688%" height="15" fill="rgb(211,178,42)" fg:x="36244" fg:w="76"/><text x="80.7314%" y="383.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.02%)</title><rect x="80.7124%" y="357" width="0.0244%" height="15" fill="rgb(230,69,54)" fg:x="36348" fg:w="11"/><text x="80.9624%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="80.7146%" y="341" width="0.0222%" height="15" fill="rgb(214,135,41)" fg:x="36349" fg:w="10"/><text x="80.9646%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="80.7190%" y="325" width="0.0178%" height="15" fill="rgb(237,67,25)" fg:x="36351" fg:w="8"/><text x="80.9690%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (6 samples, 0.01%)</title><rect x="80.7634%" y="341" width="0.0133%" height="15" fill="rgb(222,189,50)" fg:x="36371" fg:w="6"/><text x="81.0134%" y="351.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="80.7767%" y="341" width="0.0133%" height="15" fill="rgb(245,148,34)" fg:x="36377" fg:w="6"/><text x="81.0267%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="80.7923%" y="341" width="0.0111%" height="15" fill="rgb(222,29,6)" fg:x="36384" fg:w="5"/><text x="81.0423%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="80.7923%" y="325" width="0.0111%" height="15" fill="rgb(221,189,43)" fg:x="36384" fg:w="5"/><text x="81.0423%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (28 samples, 0.06%)</title><rect x="80.7568%" y="357" width="0.0622%" height="15" fill="rgb(207,36,27)" fg:x="36368" fg:w="28"/><text x="81.0068%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.8034%" y="341" width="0.0155%" height="15" fill="rgb(217,90,24)" fg:x="36389" fg:w="7"/><text x="81.0534%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="80.8034%" y="325" width="0.0155%" height="15" fill="rgb(224,66,35)" fg:x="36389" fg:w="7"/><text x="81.0534%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="80.8078%" y="309" width="0.0111%" height="15" fill="rgb(221,13,50)" fg:x="36391" fg:w="5"/><text x="81.0578%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="80.8389%" y="309" width="0.0311%" height="15" fill="rgb(236,68,49)" fg:x="36405" fg:w="14"/><text x="81.0889%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.03%)</title><rect x="80.8434%" y="293" width="0.0266%" height="15" fill="rgb(229,146,28)" fg:x="36407" fg:w="12"/><text x="81.0934%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="80.8456%" y="277" width="0.0244%" height="15" fill="rgb(225,31,38)" fg:x="36408" fg:w="11"/><text x="81.0956%" y="287.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.05%)</title><rect x="80.8234%" y="325" width="0.0489%" height="15" fill="rgb(250,208,3)" fg:x="36398" fg:w="22"/><text x="81.0734%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (13 samples, 0.03%)</title><rect x="80.8722%" y="325" width="0.0289%" height="15" fill="rgb(246,54,23)" fg:x="36420" fg:w="13"/><text x="81.1222%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="80.8745%" y="309" width="0.0266%" height="15" fill="rgb(243,76,11)" fg:x="36421" fg:w="12"/><text x="81.1245%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="80.8833%" y="293" width="0.0178%" height="15" fill="rgb(245,21,50)" fg:x="36425" fg:w="8"/><text x="81.1333%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="80.9055%" y="325" width="0.0133%" height="15" fill="rgb(228,9,43)" fg:x="36435" fg:w="6"/><text x="81.1555%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.9189%" y="325" width="0.0133%" height="15" fill="rgb(208,100,47)" fg:x="36441" fg:w="6"/><text x="81.1689%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.9189%" y="309" width="0.0133%" height="15" fill="rgb(232,26,8)" fg:x="36441" fg:w="6"/><text x="81.1689%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (51 samples, 0.11%)</title><rect x="80.8234%" y="341" width="0.1132%" height="15" fill="rgb(216,166,38)" fg:x="36398" fg:w="51"/><text x="81.0734%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_vm::state::StateTransition&lt;Tx&gt; as core::convert::From&lt;fuel_vm::state::StateTransitionRef&lt;Tx&gt;&gt;&gt;::from (57 samples, 0.13%)</title><rect x="80.8212%" y="357" width="0.1266%" height="15" fill="rgb(251,202,51)" fg:x="36397" fg:w="57"/><text x="81.0712%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="80.9366%" y="341" width="0.0111%" height="15" fill="rgb(254,216,34)" fg:x="36449" fg:w="5"/><text x="81.1866%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (10 samples, 0.02%)</title><rect x="80.9544%" y="357" width="0.0222%" height="15" fill="rgb(251,32,27)" fg:x="36457" fg:w="10"/><text x="81.2044%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="80.9611%" y="341" width="0.0155%" height="15" fill="rgb(208,127,28)" fg:x="36460" fg:w="7"/><text x="81.2111%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="80.9655%" y="325" width="0.0111%" height="15" fill="rgb(224,137,22)" fg:x="36462" fg:w="5"/><text x="81.2155%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (15 samples, 0.03%)</title><rect x="80.9788%" y="309" width="0.0333%" height="15" fill="rgb(254,70,32)" fg:x="36468" fg:w="15"/><text x="81.2288%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (8 samples, 0.02%)</title><rect x="81.0254%" y="293" width="0.0178%" height="15" fill="rgb(229,75,37)" fg:x="36489" fg:w="8"/><text x="81.2754%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (38 samples, 0.08%)</title><rect x="80.9788%" y="325" width="0.0844%" height="15" fill="rgb(252,64,23)" fg:x="36468" fg:w="38"/><text x="81.2288%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.05%)</title><rect x="81.0143%" y="309" width="0.0489%" height="15" fill="rgb(232,162,48)" fg:x="36484" fg:w="22"/><text x="81.2643%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (5 samples, 0.01%)</title><rect x="81.0521%" y="293" width="0.0111%" height="15" fill="rgb(246,160,12)" fg:x="36501" fg:w="5"/><text x="81.3021%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (27 samples, 0.06%)</title><rect x="81.0632%" y="325" width="0.0600%" height="15" fill="rgb(247,166,0)" fg:x="36506" fg:w="27"/><text x="81.3132%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.01%)</title><rect x="81.1232%" y="325" width="0.0133%" height="15" fill="rgb(249,219,21)" fg:x="36533" fg:w="6"/><text x="81.3732%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (27 samples, 0.06%)</title><rect x="81.1875%" y="309" width="0.0600%" height="15" fill="rgb(205,209,3)" fg:x="36562" fg:w="27"/><text x="81.4375%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="81.2897%" y="293" width="0.0178%" height="15" fill="rgb(243,44,1)" fg:x="36608" fg:w="8"/><text x="81.5397%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (26 samples, 0.06%)</title><rect x="81.2542%" y="309" width="0.0577%" height="15" fill="rgb(206,159,16)" fg:x="36592" fg:w="26"/><text x="81.5042%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (86 samples, 0.19%)</title><rect x="81.1365%" y="325" width="0.1910%" height="15" fill="rgb(244,77,30)" fg:x="36539" fg:w="86"/><text x="81.3865%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (7 samples, 0.02%)</title><rect x="81.3119%" y="309" width="0.0155%" height="15" fill="rgb(218,69,12)" fg:x="36618" fg:w="7"/><text x="81.5619%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (165 samples, 0.37%)</title><rect x="80.9788%" y="341" width="0.3664%" height="15" fill="rgb(212,87,7)" fg:x="36468" fg:w="165"/><text x="81.2288%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="81.3341%" y="325" width="0.0111%" height="15" fill="rgb(245,114,25)" fg:x="36628" fg:w="5"/><text x="81.5841%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.02%)</title><rect x="81.3452%" y="341" width="0.0178%" height="15" fill="rgb(210,61,42)" fg:x="36633" fg:w="8"/><text x="81.5952%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (5 samples, 0.01%)</title><rect x="81.3830%" y="325" width="0.0111%" height="15" fill="rgb(211,52,33)" fg:x="36650" fg:w="5"/><text x="81.6330%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.06%)</title><rect x="81.3696%" y="341" width="0.0600%" height="15" fill="rgb(234,58,33)" fg:x="36644" fg:w="27"/><text x="81.6196%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.04%)</title><rect x="81.3941%" y="325" width="0.0355%" height="15" fill="rgb(220,115,36)" fg:x="36655" fg:w="16"/><text x="81.6441%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_core_storage::vm_storage::VmStorage&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::key_value_view::KeyValueViewWrapper&lt;fuel_core_storage::column::Column&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (207 samples, 0.46%)</title><rect x="80.9766%" y="357" width="0.4597%" height="15" fill="rgb(243,153,54)" fg:x="36467" fg:w="207"/><text x="81.2266%" y="367.50"></text></g><g><title>block_verifier`core::fmt::write (10 samples, 0.02%)</title><rect x="81.5029%" y="261" width="0.0222%" height="15" fill="rgb(251,47,18)" fg:x="36704" fg:w="10"/><text x="81.7529%" y="271.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (7 samples, 0.02%)</title><rect x="81.5095%" y="245" width="0.0155%" height="15" fill="rgb(242,102,42)" fg:x="36707" fg:w="7"/><text x="81.7595%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="81.5251%" y="261" width="0.0133%" height="15" fill="rgb(234,31,38)" fg:x="36714" fg:w="6"/><text x="81.7751%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="81.5251%" y="245" width="0.0133%" height="15" fill="rgb(221,117,51)" fg:x="36714" fg:w="6"/><text x="81.7751%" y="255.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (25 samples, 0.06%)</title><rect x="81.4895%" y="277" width="0.0555%" height="15" fill="rgb(212,20,18)" fg:x="36698" fg:w="25"/><text x="81.7395%" y="287.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (18 samples, 0.04%)</title><rect x="81.5473%" y="277" width="0.0400%" height="15" fill="rgb(245,133,36)" fg:x="36724" fg:w="18"/><text x="81.7973%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="81.6006%" y="245" width="0.0111%" height="15" fill="rgb(212,6,19)" fg:x="36748" fg:w="5"/><text x="81.8506%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="81.5872%" y="277" width="0.0266%" height="15" fill="rgb(218,1,36)" fg:x="36742" fg:w="12"/><text x="81.8372%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="81.5917%" y="261" width="0.0222%" height="15" fill="rgb(246,84,54)" fg:x="36744" fg:w="10"/><text x="81.8417%" y="271.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (60 samples, 0.13%)</title><rect x="81.4873%" y="293" width="0.1332%" height="15" fill="rgb(242,110,6)" fg:x="36697" fg:w="60"/><text x="81.7373%" y="303.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9 samples, 0.02%)</title><rect x="81.7382%" y="181" width="0.0200%" height="15" fill="rgb(214,47,5)" fg:x="36810" fg:w="9"/><text x="81.9882%" y="191.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (6 samples, 0.01%)</title><rect x="81.8359%" y="165" width="0.0133%" height="15" fill="rgb(218,159,25)" fg:x="36854" fg:w="6"/><text x="82.0859%" y="175.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (5 samples, 0.01%)</title><rect x="81.8493%" y="165" width="0.0111%" height="15" fill="rgb(215,211,28)" fg:x="36860" fg:w="5"/><text x="82.0993%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (26 samples, 0.06%)</title><rect x="81.8604%" y="165" width="0.0577%" height="15" fill="rgb(238,59,32)" fg:x="36865" fg:w="26"/><text x="82.1104%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (94 samples, 0.21%)</title><rect x="81.7582%" y="181" width="0.2087%" height="15" fill="rgb(226,82,3)" fg:x="36819" fg:w="94"/><text x="82.0082%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.05%)</title><rect x="81.9181%" y="165" width="0.0489%" height="15" fill="rgb(240,164,32)" fg:x="36891" fg:w="22"/><text x="82.1681%" y="175.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (133 samples, 0.30%)</title><rect x="81.6738%" y="197" width="0.2953%" height="15" fill="rgb(232,46,7)" fg:x="36781" fg:w="133"/><text x="81.9238%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (8 samples, 0.02%)</title><rect x="81.9914%" y="149" width="0.0178%" height="15" fill="rgb(229,129,53)" fg:x="36924" fg:w="8"/><text x="82.2414%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="81.9914%" y="133" width="0.0178%" height="15" fill="rgb(234,188,29)" fg:x="36924" fg:w="8"/><text x="82.2414%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="81.9936%" y="117" width="0.0155%" height="15" fill="rgb(246,141,4)" fg:x="36925" fg:w="7"/><text x="82.2436%" y="127.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (9 samples, 0.02%)</title><rect x="81.9914%" y="165" width="0.0200%" height="15" fill="rgb(229,23,39)" fg:x="36924" fg:w="9"/><text x="82.2414%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (12 samples, 0.03%)</title><rect x="81.9869%" y="181" width="0.0266%" height="15" fill="rgb(206,12,3)" fg:x="36922" fg:w="12"/><text x="82.2369%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (155 samples, 0.34%)</title><rect x="81.6716%" y="213" width="0.3442%" height="15" fill="rgb(252,226,20)" fg:x="36780" fg:w="155"/><text x="81.9216%" y="223.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (18 samples, 0.04%)</title><rect x="81.9758%" y="197" width="0.0400%" height="15" fill="rgb(216,123,35)" fg:x="36917" fg:w="18"/><text x="82.2258%" y="207.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (159 samples, 0.35%)</title><rect x="81.6694%" y="229" width="0.3531%" height="15" fill="rgb(212,68,40)" fg:x="36779" fg:w="159"/><text x="81.9194%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.02%)</title><rect x="82.0291%" y="229" width="0.0155%" height="15" fill="rgb(254,125,32)" fg:x="36941" fg:w="7"/><text x="82.2791%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (187 samples, 0.42%)</title><rect x="81.6339%" y="261" width="0.4152%" height="15" fill="rgb(253,97,22)" fg:x="36763" fg:w="187"/><text x="81.8839%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (187 samples, 0.42%)</title><rect x="81.6339%" y="245" width="0.4152%" height="15" fill="rgb(241,101,14)" fg:x="36763" fg:w="187"/><text x="81.8839%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="82.0513%" y="245" width="0.0244%" height="15" fill="rgb(238,103,29)" fg:x="36951" fg:w="11"/><text x="82.3013%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="82.0558%" y="229" width="0.0200%" height="15" fill="rgb(233,195,47)" fg:x="36953" fg:w="9"/><text x="82.3058%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="82.0647%" y="213" width="0.0111%" height="15" fill="rgb(246,218,30)" fg:x="36957" fg:w="5"/><text x="82.3147%" y="223.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (204 samples, 0.45%)</title><rect x="81.6317%" y="277" width="0.4530%" height="15" fill="rgb(219,145,47)" fg:x="36762" fg:w="204"/><text x="81.8817%" y="287.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (15 samples, 0.03%)</title><rect x="82.0513%" y="261" width="0.0333%" height="15" fill="rgb(243,12,26)" fg:x="36951" fg:w="15"/><text x="82.3013%" y="271.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (10 samples, 0.02%)</title><rect x="82.0846%" y="277" width="0.0222%" height="15" fill="rgb(214,87,16)" fg:x="36966" fg:w="10"/><text x="82.3346%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="82.0869%" y="261" width="0.0200%" height="15" fill="rgb(208,99,42)" fg:x="36967" fg:w="9"/><text x="82.3369%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="82.0957%" y="245" width="0.0111%" height="15" fill="rgb(253,99,2)" fg:x="36971" fg:w="5"/><text x="82.3457%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="82.1180%" y="277" width="0.0111%" height="15" fill="rgb(220,168,23)" fg:x="36981" fg:w="5"/><text x="82.3680%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.1291%" y="277" width="0.0111%" height="15" fill="rgb(242,38,24)" fg:x="36986" fg:w="5"/><text x="82.3791%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.1291%" y="261" width="0.0111%" height="15" fill="rgb(225,182,9)" fg:x="36986" fg:w="5"/><text x="82.3791%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="82.1291%" y="245" width="0.0111%" height="15" fill="rgb(243,178,37)" fg:x="36986" fg:w="5"/><text x="82.3791%" y="255.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (236 samples, 0.52%)</title><rect x="81.6206%" y="293" width="0.5240%" height="15" fill="rgb(232,139,19)" fg:x="36757" fg:w="236"/><text x="81.8706%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (328 samples, 0.73%)</title><rect x="81.4607%" y="309" width="0.7283%" height="15" fill="rgb(225,201,24)" fg:x="36685" fg:w="328"/><text x="81.7107%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="82.1668%" y="293" width="0.0222%" height="15" fill="rgb(221,47,46)" fg:x="37003" fg:w="10"/><text x="82.4168%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="82.1712%" y="277" width="0.0178%" height="15" fill="rgb(249,23,13)" fg:x="37005" fg:w="8"/><text x="82.4212%" y="287.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (5 samples, 0.01%)</title><rect x="82.1979%" y="293" width="0.0111%" height="15" fill="rgb(219,9,5)" fg:x="37017" fg:w="5"/><text x="82.4479%" y="303.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (37 samples, 0.08%)</title><rect x="82.2090%" y="293" width="0.0822%" height="15" fill="rgb(254,171,16)" fg:x="37022" fg:w="37"/><text x="82.4590%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (48 samples, 0.11%)</title><rect x="82.1979%" y="309" width="0.1066%" height="15" fill="rgb(230,171,20)" fg:x="37017" fg:w="48"/><text x="82.4479%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="82.2912%" y="293" width="0.0133%" height="15" fill="rgb(210,71,41)" fg:x="37059" fg:w="6"/><text x="82.5412%" y="303.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (17 samples, 0.04%)</title><rect x="82.3089%" y="309" width="0.0377%" height="15" fill="rgb(206,173,20)" fg:x="37067" fg:w="17"/><text x="82.5589%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="82.3511%" y="309" width="0.0266%" height="15" fill="rgb(233,88,34)" fg:x="37086" fg:w="12"/><text x="82.6011%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="82.3600%" y="293" width="0.0178%" height="15" fill="rgb(223,209,46)" fg:x="37090" fg:w="8"/><text x="82.6100%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (415 samples, 0.92%)</title><rect x="81.4585%" y="325" width="0.9215%" height="15" fill="rgb(250,43,18)" fg:x="36684" fg:w="415"/><text x="81.7085%" y="335.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::compute_inputs (429 samples, 0.95%)</title><rect x="81.4362%" y="357" width="0.9526%" height="15" fill="rgb(208,13,10)" fg:x="36674" fg:w="429"/><text x="81.6862%" y="367.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::get_coin_or_default (422 samples, 0.94%)</title><rect x="81.4518%" y="341" width="0.9371%" height="15" fill="rgb(212,200,36)" fg:x="36681" fg:w="422"/><text x="81.7018%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (15 samples, 0.03%)</title><rect x="82.4111%" y="325" width="0.0333%" height="15" fill="rgb(225,90,30)" fg:x="37113" fg:w="15"/><text x="82.6611%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (20 samples, 0.04%)</title><rect x="82.4066%" y="341" width="0.0444%" height="15" fill="rgb(236,182,39)" fg:x="37111" fg:w="20"/><text x="82.6566%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.4555%" y="341" width="0.0111%" height="15" fill="rgb(212,144,35)" fg:x="37133" fg:w="5"/><text x="82.7055%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.4555%" y="325" width="0.0111%" height="15" fill="rgb(228,63,44)" fg:x="37133" fg:w="5"/><text x="82.7055%" y="335.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (30 samples, 0.07%)</title><rect x="82.4022%" y="357" width="0.0666%" height="15" fill="rgb(228,109,6)" fg:x="37109" fg:w="30"/><text x="82.6522%" y="367.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (8 samples, 0.02%)</title><rect x="82.4888%" y="325" width="0.0178%" height="15" fill="rgb(238,117,24)" fg:x="37148" fg:w="8"/><text x="82.7388%" y="335.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (13 samples, 0.03%)</title><rect x="82.5066%" y="325" width="0.0289%" height="15" fill="rgb(242,26,26)" fg:x="37156" fg:w="13"/><text x="82.7566%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="82.5510%" y="277" width="0.0200%" height="15" fill="rgb(221,92,48)" fg:x="37176" fg:w="9"/><text x="82.8010%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="82.5554%" y="261" width="0.0155%" height="15" fill="rgb(209,209,32)" fg:x="37178" fg:w="7"/><text x="82.8054%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (11 samples, 0.02%)</title><rect x="82.5487%" y="293" width="0.0244%" height="15" fill="rgb(221,70,22)" fg:x="37175" fg:w="11"/><text x="82.7987%" y="303.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.04%)</title><rect x="82.5354%" y="325" width="0.0400%" height="15" fill="rgb(248,145,5)" fg:x="37169" fg:w="18"/><text x="82.7854%" y="335.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.03%)</title><rect x="82.5421%" y="309" width="0.0333%" height="15" fill="rgb(226,116,26)" fg:x="37172" fg:w="15"/><text x="82.7921%" y="319.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (57 samples, 0.13%)</title><rect x="82.4710%" y="341" width="0.1266%" height="15" fill="rgb(244,5,17)" fg:x="37140" fg:w="57"/><text x="82.7210%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="82.5754%" y="325" width="0.0222%" height="15" fill="rgb(252,159,33)" fg:x="37187" fg:w="10"/><text x="82.8254%" y="335.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::into_ready (64 samples, 0.14%)</title><rect x="82.4688%" y="357" width="0.1421%" height="15" fill="rgb(206,71,0)" fg:x="37139" fg:w="64"/><text x="82.7188%" y="367.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (8 samples, 0.02%)</title><rect x="82.6220%" y="341" width="0.0178%" height="15" fill="rgb(233,118,54)" fg:x="37208" fg:w="8"/><text x="82.8720%" y="351.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (5 samples, 0.01%)</title><rect x="82.6287%" y="325" width="0.0111%" height="15" fill="rgb(234,83,48)" fg:x="37211" fg:w="5"/><text x="82.8787%" y="335.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::ExecutableTransaction::update_outputs (15 samples, 0.03%)</title><rect x="82.6109%" y="357" width="0.0333%" height="15" fill="rgb(228,3,54)" fg:x="37203" fg:w="15"/><text x="82.8609%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (9 samples, 0.02%)</title><rect x="82.6575%" y="277" width="0.0200%" height="15" fill="rgb(226,155,13)" fg:x="37224" fg:w="9"/><text x="82.9075%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="82.6598%" y="261" width="0.0178%" height="15" fill="rgb(241,28,37)" fg:x="37225" fg:w="8"/><text x="82.9098%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="82.6598%" y="245" width="0.0178%" height="15" fill="rgb(233,93,10)" fg:x="37225" fg:w="8"/><text x="82.9098%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="82.6664%" y="229" width="0.0111%" height="15" fill="rgb(225,113,19)" fg:x="37228" fg:w="5"/><text x="82.9164%" y="239.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.02%)</title><rect x="82.6575%" y="293" width="0.0222%" height="15" fill="rgb(241,2,18)" fg:x="37224" fg:w="10"/><text x="82.9075%" y="303.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (62 samples, 0.14%)</title><rect x="82.6553%" y="309" width="0.1377%" height="15" fill="rgb(228,207,21)" fg:x="37223" fg:w="62"/><text x="82.9053%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (50 samples, 0.11%)</title><rect x="82.6820%" y="293" width="0.1110%" height="15" fill="rgb(213,211,35)" fg:x="37235" fg:w="50"/><text x="82.9320%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="82.7952%" y="309" width="0.0111%" height="15" fill="rgb(209,83,10)" fg:x="37286" fg:w="5"/><text x="83.0452%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="82.7952%" y="293" width="0.0111%" height="15" fill="rgb(209,164,1)" fg:x="37286" fg:w="5"/><text x="83.0452%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (77 samples, 0.17%)</title><rect x="82.6464%" y="341" width="0.1710%" height="15" fill="rgb(213,184,43)" fg:x="37219" fg:w="77"/><text x="82.8964%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (77 samples, 0.17%)</title><rect x="82.6464%" y="325" width="0.1710%" height="15" fill="rgb(231,61,34)" fg:x="37219" fg:w="77"/><text x="82.8964%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.8063%" y="309" width="0.0111%" height="15" fill="rgb(235,75,3)" fg:x="37291" fg:w="5"/><text x="83.0563%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::ret (80 samples, 0.18%)</title><rect x="82.6442%" y="357" width="0.1776%" height="15" fill="rgb(220,106,47)" fg:x="37218" fg:w="80"/><text x="82.8942%" y="367.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::internal::update_memory_output (5 samples, 0.01%)</title><rect x="82.8219%" y="357" width="0.0111%" height="15" fill="rgb(210,196,33)" fg:x="37298" fg:w="5"/><text x="83.0719%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (75 samples, 0.17%)</title><rect x="82.8552%" y="325" width="0.1665%" height="15" fill="rgb(229,154,42)" fg:x="37313" fg:w="75"/><text x="83.1052%" y="335.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (79 samples, 0.18%)</title><rect x="82.8485%" y="341" width="0.1754%" height="15" fill="rgb(228,114,26)" fg:x="37310" fg:w="79"/><text x="83.0985%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="83.0239%" y="341" width="0.0133%" height="15" fill="rgb(208,144,1)" fg:x="37389" fg:w="6"/><text x="83.2739%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (92 samples, 0.20%)</title><rect x="82.8441%" y="357" width="0.2043%" height="15" fill="rgb(239,112,37)" fg:x="37308" fg:w="92"/><text x="83.0941%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="83.0484%" y="341" width="0.0133%" height="15" fill="rgb(210,96,50)" fg:x="37400" fg:w="6"/><text x="83.2984%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::root (10 samples, 0.02%)</title><rect x="83.0484%" y="357" width="0.0222%" height="15" fill="rgb(222,178,2)" fg:x="37400" fg:w="10"/><text x="83.2984%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="83.0883%" y="357" width="0.0311%" height="15" fill="rgb(226,74,18)" fg:x="37418" fg:w="14"/><text x="83.3383%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="83.0972%" y="341" width="0.0222%" height="15" fill="rgb(225,67,54)" fg:x="37422" fg:w="10"/><text x="83.3472%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="83.1216%" y="357" width="0.0178%" height="15" fill="rgb(251,92,32)" fg:x="37433" fg:w="8"/><text x="83.3716%" y="367.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::attempt_tx_execution_with_vm (1,126 samples, 2.50%)</title><rect x="80.6502%" y="373" width="2.5003%" height="15" fill="rgb(228,149,22)" fg:x="36320" fg:w="1126"/><text x="80.9002%" y="383.50">bl..</text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (5 samples, 0.01%)</title><rect x="83.2149%" y="277" width="0.0111%" height="15" fill="rgb(243,54,13)" fg:x="37475" fg:w="5"/><text x="83.4649%" y="287.50"></text></g><g><title>block_verifier`core::fmt::write (11 samples, 0.02%)</title><rect x="83.2038%" y="293" width="0.0244%" height="15" fill="rgb(243,180,28)" fg:x="37470" fg:w="11"/><text x="83.4538%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="83.2282%" y="293" width="0.0289%" height="15" fill="rgb(208,167,24)" fg:x="37481" fg:w="13"/><text x="83.4782%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="83.2349%" y="277" width="0.0222%" height="15" fill="rgb(245,73,45)" fg:x="37484" fg:w="10"/><text x="83.4849%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="83.2393%" y="261" width="0.0178%" height="15" fill="rgb(237,203,48)" fg:x="37486" fg:w="8"/><text x="83.4893%" y="271.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (35 samples, 0.08%)</title><rect x="83.2038%" y="309" width="0.0777%" height="15" fill="rgb(211,197,16)" fg:x="37470" fg:w="35"/><text x="83.4538%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="83.2571%" y="293" width="0.0244%" height="15" fill="rgb(243,99,51)" fg:x="37494" fg:w="11"/><text x="83.5071%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (20 samples, 0.04%)</title><rect x="83.2815%" y="309" width="0.0444%" height="15" fill="rgb(215,123,29)" fg:x="37505" fg:w="20"/><text x="83.5315%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="83.3282%" y="309" width="0.0133%" height="15" fill="rgb(239,186,37)" fg:x="37526" fg:w="6"/><text x="83.5782%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="83.3282%" y="293" width="0.0133%" height="15" fill="rgb(252,136,39)" fg:x="37526" fg:w="6"/><text x="83.5782%" y="303.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (67 samples, 0.15%)</title><rect x="83.1994%" y="325" width="0.1488%" height="15" fill="rgb(223,213,32)" fg:x="37468" fg:w="67"/><text x="83.4494%" y="335.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (12 samples, 0.03%)</title><rect x="83.5546%" y="213" width="0.0266%" height="15" fill="rgb(233,115,5)" fg:x="37628" fg:w="12"/><text x="83.8046%" y="223.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (5 samples, 0.01%)</title><rect x="83.6857%" y="197" width="0.0111%" height="15" fill="rgb(207,226,44)" fg:x="37687" fg:w="5"/><text x="83.9357%" y="207.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (6 samples, 0.01%)</title><rect x="83.6968%" y="197" width="0.0133%" height="15" fill="rgb(208,126,0)" fg:x="37692" fg:w="6"/><text x="83.9468%" y="207.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (6 samples, 0.01%)</title><rect x="83.7101%" y="197" width="0.0133%" height="15" fill="rgb(244,66,21)" fg:x="37698" fg:w="6"/><text x="83.9601%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (27 samples, 0.06%)</title><rect x="83.7234%" y="197" width="0.0600%" height="15" fill="rgb(222,97,12)" fg:x="37704" fg:w="27"/><text x="83.9734%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (203 samples, 0.45%)</title><rect x="83.3837%" y="229" width="0.4508%" height="15" fill="rgb(219,213,19)" fg:x="37551" fg:w="203"/><text x="83.6337%" y="239.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (114 samples, 0.25%)</title><rect x="83.5813%" y="213" width="0.2531%" height="15" fill="rgb(252,169,30)" fg:x="37640" fg:w="114"/><text x="83.8313%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (23 samples, 0.05%)</title><rect x="83.7834%" y="197" width="0.0511%" height="15" fill="rgb(206,32,51)" fg:x="37731" fg:w="23"/><text x="84.0334%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (210 samples, 0.47%)</title><rect x="83.3792%" y="245" width="0.4663%" height="15" fill="rgb(250,172,42)" fg:x="37549" fg:w="210"/><text x="83.6292%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (216 samples, 0.48%)</title><rect x="83.3770%" y="261" width="0.4796%" height="15" fill="rgb(209,34,43)" fg:x="37548" fg:w="216"/><text x="83.6270%" y="271.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.02%)</title><rect x="83.8566%" y="261" width="0.0200%" height="15" fill="rgb(223,11,35)" fg:x="37764" fg:w="9"/><text x="84.1066%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (245 samples, 0.54%)</title><rect x="83.3481%" y="277" width="0.5440%" height="15" fill="rgb(251,219,26)" fg:x="37535" fg:w="245"/><text x="83.5981%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (247 samples, 0.55%)</title><rect x="83.3481%" y="293" width="0.5485%" height="15" fill="rgb(231,119,3)" fg:x="37535" fg:w="247"/><text x="83.5981%" y="303.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (9 samples, 0.02%)</title><rect x="83.8966%" y="293" width="0.0200%" height="15" fill="rgb(216,97,11)" fg:x="37782" fg:w="9"/><text x="84.1466%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="83.8966%" y="277" width="0.0200%" height="15" fill="rgb(223,59,9)" fg:x="37782" fg:w="9"/><text x="84.1466%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="83.8988%" y="261" width="0.0178%" height="15" fill="rgb(233,93,31)" fg:x="37783" fg:w="8"/><text x="84.1488%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="83.9055%" y="245" width="0.0111%" height="15" fill="rgb(239,81,33)" fg:x="37786" fg:w="5"/><text x="84.1555%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="83.9166%" y="293" width="0.0111%" height="15" fill="rgb(213,120,34)" fg:x="37791" fg:w="5"/><text x="84.1666%" y="303.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (262 samples, 0.58%)</title><rect x="83.3481%" y="309" width="0.5818%" height="15" fill="rgb(243,49,53)" fg:x="37535" fg:w="262"/><text x="83.5981%" y="319.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (264 samples, 0.59%)</title><rect x="83.3481%" y="325" width="0.5862%" height="15" fill="rgb(247,216,33)" fg:x="37535" fg:w="264"/><text x="83.5981%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (347 samples, 0.77%)</title><rect x="83.1727%" y="341" width="0.7705%" height="15" fill="rgb(226,26,14)" fg:x="37456" fg:w="347"/><text x="83.4227%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (60 samples, 0.13%)</title><rect x="83.9566%" y="325" width="0.1332%" height="15" fill="rgb(215,49,53)" fg:x="37809" fg:w="60"/><text x="84.2066%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="84.0898%" y="325" width="0.0111%" height="15" fill="rgb(245,162,40)" fg:x="37869" fg:w="5"/><text x="84.3398%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.04%)</title><rect x="84.1009%" y="325" width="0.0422%" height="15" fill="rgb(229,68,17)" fg:x="37874" fg:w="19"/><text x="84.3509%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (93 samples, 0.21%)</title><rect x="83.9432%" y="341" width="0.2065%" height="15" fill="rgb(213,182,10)" fg:x="37803" fg:w="93"/><text x="84.1932%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.03%)</title><rect x="84.2230%" y="245" width="0.0311%" height="15" fill="rgb(245,125,30)" fg:x="37929" fg:w="14"/><text x="84.4730%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="84.2386%" y="229" width="0.0155%" height="15" fill="rgb(232,202,2)" fg:x="37936" fg:w="7"/><text x="84.4886%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.04%)</title><rect x="84.2541%" y="245" width="0.0377%" height="15" fill="rgb(237,140,51)" fg:x="37943" fg:w="17"/><text x="84.5041%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="84.2630%" y="229" width="0.0289%" height="15" fill="rgb(236,157,25)" fg:x="37947" fg:w="13"/><text x="84.5130%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="84.2674%" y="213" width="0.0244%" height="15" fill="rgb(219,209,0)" fg:x="37949" fg:w="11"/><text x="84.5174%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="84.2919%" y="245" width="0.0155%" height="15" fill="rgb(240,116,54)" fg:x="37960" fg:w="7"/><text x="84.5419%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.02%)</title><rect x="84.2919%" y="229" width="0.0155%" height="15" fill="rgb(216,10,36)" fg:x="37960" fg:w="7"/><text x="84.5419%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (51 samples, 0.11%)</title><rect x="84.2141%" y="261" width="0.1132%" height="15" fill="rgb(222,72,44)" fg:x="37925" fg:w="51"/><text x="84.4641%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (8 samples, 0.02%)</title><rect x="84.3096%" y="245" width="0.0178%" height="15" fill="rgb(232,159,9)" fg:x="37968" fg:w="8"/><text x="84.5596%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (62 samples, 0.14%)</title><rect x="84.1964%" y="277" width="0.1377%" height="15" fill="rgb(210,39,32)" fg:x="37917" fg:w="62"/><text x="84.4464%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (70 samples, 0.16%)</title><rect x="84.1942%" y="293" width="0.1554%" height="15" fill="rgb(216,194,45)" fg:x="37916" fg:w="70"/><text x="84.4442%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.02%)</title><rect x="84.3341%" y="277" width="0.0155%" height="15" fill="rgb(218,18,35)" fg:x="37979" fg:w="7"/><text x="84.5841%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.01%)</title><rect x="84.3385%" y="261" width="0.0111%" height="15" fill="rgb(207,83,51)" fg:x="37981" fg:w="5"/><text x="84.5885%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (75 samples, 0.17%)</title><rect x="84.1853%" y="309" width="0.1665%" height="15" fill="rgb(225,63,43)" fg:x="37912" fg:w="75"/><text x="84.4353%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (78 samples, 0.17%)</title><rect x="84.1808%" y="325" width="0.1732%" height="15" fill="rgb(207,57,36)" fg:x="37910" fg:w="78"/><text x="84.4308%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="84.3540%" y="309" width="0.0133%" height="15" fill="rgb(216,99,33)" fg:x="37988" fg:w="6"/><text x="84.6040%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.3540%" y="293" width="0.0133%" height="15" fill="rgb(225,42,16)" fg:x="37988" fg:w="6"/><text x="84.6040%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.3540%" y="277" width="0.0133%" height="15" fill="rgb(220,201,45)" fg:x="37988" fg:w="6"/><text x="84.6040%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="84.3563%" y="261" width="0.0111%" height="15" fill="rgb(225,33,4)" fg:x="37989" fg:w="5"/><text x="84.6063%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.02%)</title><rect x="84.3540%" y="325" width="0.0222%" height="15" fill="rgb(224,33,50)" fg:x="37988" fg:w="10"/><text x="84.6040%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="84.3785%" y="325" width="0.0133%" height="15" fill="rgb(246,198,51)" fg:x="37999" fg:w="6"/><text x="84.6285%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="84.3807%" y="309" width="0.0111%" height="15" fill="rgb(205,22,4)" fg:x="38000" fg:w="5"/><text x="84.6307%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.3918%" y="325" width="0.0133%" height="15" fill="rgb(206,3,8)" fg:x="38005" fg:w="6"/><text x="84.6418%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="84.3940%" y="309" width="0.0111%" height="15" fill="rgb(251,23,15)" fg:x="38006" fg:w="5"/><text x="84.6440%" y="319.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (116 samples, 0.26%)</title><rect x="84.1498%" y="341" width="0.2576%" height="15" fill="rgb(252,88,28)" fg:x="37896" fg:w="116"/><text x="84.3998%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.01%)</title><rect x="84.4096%" y="341" width="0.0111%" height="15" fill="rgb(212,127,14)" fg:x="38013" fg:w="5"/><text x="84.6596%" y="351.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::insert_coin (572 samples, 1.27%)</title><rect x="83.1616%" y="357" width="1.2702%" height="15" fill="rgb(247,145,37)" fg:x="37451" fg:w="572"/><text x="83.4116%" y="367.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::persist_output_utxos (577 samples, 1.28%)</title><rect x="83.1527%" y="373" width="1.2813%" height="15" fill="rgb(209,117,53)" fg:x="37447" fg:w="577"/><text x="83.4027%" y="383.50"></text></g><g><title>block_verifier`core::fmt::write (8 samples, 0.02%)</title><rect x="84.5184%" y="309" width="0.0178%" height="15" fill="rgb(212,90,42)" fg:x="38062" fg:w="8"/><text x="84.7684%" y="319.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (5 samples, 0.01%)</title><rect x="84.5250%" y="293" width="0.0111%" height="15" fill="rgb(218,164,37)" fg:x="38065" fg:w="5"/><text x="84.7750%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="84.5539%" y="277" width="0.0133%" height="15" fill="rgb(246,65,34)" fg:x="38078" fg:w="6"/><text x="84.8039%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="84.5361%" y="309" width="0.0333%" height="15" fill="rgb(231,100,33)" fg:x="38070" fg:w="15"/><text x="84.7861%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.03%)</title><rect x="84.5428%" y="293" width="0.0266%" height="15" fill="rgb(228,126,14)" fg:x="38073" fg:w="12"/><text x="84.7928%" y="303.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (28 samples, 0.06%)</title><rect x="84.5117%" y="325" width="0.0622%" height="15" fill="rgb(215,173,21)" fg:x="38059" fg:w="28"/><text x="84.7617%" y="335.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (15 samples, 0.03%)</title><rect x="84.5761%" y="325" width="0.0333%" height="15" fill="rgb(210,6,40)" fg:x="38088" fg:w="15"/><text x="84.8261%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.04%)</title><rect x="84.6116%" y="325" width="0.0355%" height="15" fill="rgb(212,48,18)" fg:x="38104" fg:w="16"/><text x="84.8616%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="84.6250%" y="309" width="0.0222%" height="15" fill="rgb(230,214,11)" fg:x="38110" fg:w="10"/><text x="84.8750%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (65 samples, 0.14%)</title><rect x="84.5095%" y="341" width="0.1443%" height="15" fill="rgb(254,105,39)" fg:x="38058" fg:w="65"/><text x="84.7595%" y="351.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (5 samples, 0.01%)</title><rect x="84.7671%" y="229" width="0.0111%" height="15" fill="rgb(245,158,5)" fg:x="38174" fg:w="5"/><text x="85.0171%" y="239.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.02%)</title><rect x="84.8625%" y="213" width="0.0178%" height="15" fill="rgb(249,208,11)" fg:x="38217" fg:w="8"/><text x="85.1125%" y="223.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (11 samples, 0.02%)</title><rect x="84.8803%" y="213" width="0.0244%" height="15" fill="rgb(210,39,28)" fg:x="38225" fg:w="11"/><text x="85.1303%" y="223.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (8 samples, 0.02%)</title><rect x="84.9047%" y="213" width="0.0178%" height="15" fill="rgb(211,56,53)" fg:x="38236" fg:w="8"/><text x="85.1547%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (19 samples, 0.04%)</title><rect x="84.9225%" y="213" width="0.0422%" height="15" fill="rgb(226,201,30)" fg:x="38244" fg:w="19"/><text x="85.1725%" y="223.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (151 samples, 0.34%)</title><rect x="84.6827%" y="245" width="0.3353%" height="15" fill="rgb(239,101,34)" fg:x="38136" fg:w="151"/><text x="84.9327%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (108 samples, 0.24%)</title><rect x="84.7782%" y="229" width="0.2398%" height="15" fill="rgb(226,209,5)" fg:x="38179" fg:w="108"/><text x="85.0282%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (24 samples, 0.05%)</title><rect x="84.9647%" y="213" width="0.0533%" height="15" fill="rgb(250,105,47)" fg:x="38263" fg:w="24"/><text x="85.2147%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="85.0402%" y="149" width="0.0155%" height="15" fill="rgb(230,72,3)" fg:x="38297" fg:w="7"/><text x="85.2902%" y="159.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (13 samples, 0.03%)</title><rect x="85.0291%" y="197" width="0.0289%" height="15" fill="rgb(232,218,39)" fg:x="38292" fg:w="13"/><text x="85.2791%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="85.0291%" y="181" width="0.0289%" height="15" fill="rgb(248,166,6)" fg:x="38292" fg:w="13"/><text x="85.2791%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="85.0335%" y="165" width="0.0244%" height="15" fill="rgb(247,89,20)" fg:x="38294" fg:w="11"/><text x="85.2835%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (18 samples, 0.04%)</title><rect x="85.0246%" y="213" width="0.0400%" height="15" fill="rgb(248,130,54)" fg:x="38290" fg:w="18"/><text x="85.2746%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (20 samples, 0.04%)</title><rect x="85.0246%" y="229" width="0.0444%" height="15" fill="rgb(234,196,4)" fg:x="38290" fg:w="20"/><text x="85.2746%" y="239.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (176 samples, 0.39%)</title><rect x="84.6805%" y="261" width="0.3908%" height="15" fill="rgb(250,143,31)" fg:x="38135" fg:w="176"/><text x="84.9305%" y="271.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (21 samples, 0.05%)</title><rect x="85.0246%" y="245" width="0.0466%" height="15" fill="rgb(211,110,34)" fg:x="38290" fg:w="21"/><text x="85.2746%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (181 samples, 0.40%)</title><rect x="84.6805%" y="277" width="0.4019%" height="15" fill="rgb(215,124,48)" fg:x="38135" fg:w="181"/><text x="84.9305%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (192 samples, 0.43%)</title><rect x="84.6583%" y="309" width="0.4263%" height="15" fill="rgb(216,46,13)" fg:x="38125" fg:w="192"/><text x="84.9083%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (190 samples, 0.42%)</title><rect x="84.6627%" y="293" width="0.4219%" height="15" fill="rgb(205,184,25)" fg:x="38127" fg:w="190"/><text x="84.9127%" y="303.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (5 samples, 0.01%)</title><rect x="85.0868%" y="309" width="0.0111%" height="15" fill="rgb(228,1,10)" fg:x="38318" fg:w="5"/><text x="85.3368%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.0868%" y="293" width="0.0111%" height="15" fill="rgb(213,116,27)" fg:x="38318" fg:w="5"/><text x="85.3368%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.0868%" y="277" width="0.0111%" height="15" fill="rgb(241,95,50)" fg:x="38318" fg:w="5"/><text x="85.3368%" y="287.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (202 samples, 0.45%)</title><rect x="84.6560%" y="325" width="0.4485%" height="15" fill="rgb(238,48,32)" fg:x="38124" fg:w="202"/><text x="84.9060%" y="335.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (7 samples, 0.02%)</title><rect x="85.1046%" y="325" width="0.0155%" height="15" fill="rgb(235,113,49)" fg:x="38326" fg:w="7"/><text x="85.3546%" y="335.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (222 samples, 0.49%)</title><rect x="84.6538%" y="341" width="0.4930%" height="15" fill="rgb(205,127,43)" fg:x="38123" fg:w="222"/><text x="84.9038%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.1335%" y="325" width="0.0133%" height="15" fill="rgb(250,162,2)" fg:x="38339" fg:w="6"/><text x="85.3835%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.1335%" y="309" width="0.0133%" height="15" fill="rgb(220,13,41)" fg:x="38339" fg:w="6"/><text x="85.3835%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="85.1335%" y="293" width="0.0133%" height="15" fill="rgb(249,221,25)" fg:x="38339" fg:w="6"/><text x="85.3835%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (325 samples, 0.72%)</title><rect x="84.4651%" y="357" width="0.7217%" height="15" fill="rgb(215,208,19)" fg:x="38038" fg:w="325"/><text x="84.7151%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="85.1645%" y="341" width="0.0222%" height="15" fill="rgb(236,175,2)" fg:x="38353" fg:w="10"/><text x="85.4145%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="85.1645%" y="325" width="0.0222%" height="15" fill="rgb(241,52,2)" fg:x="38353" fg:w="10"/><text x="85.4145%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (7 samples, 0.02%)</title><rect x="85.1867%" y="357" width="0.0155%" height="15" fill="rgb(248,140,14)" fg:x="38363" fg:w="7"/><text x="85.4367%" y="367.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.02%)</title><rect x="85.2245%" y="341" width="0.0155%" height="15" fill="rgb(253,22,42)" fg:x="38380" fg:w="7"/><text x="85.4745%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.2289%" y="325" width="0.0111%" height="15" fill="rgb(234,61,47)" fg:x="38382" fg:w="5"/><text x="85.4789%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (25 samples, 0.06%)</title><rect x="85.2423%" y="341" width="0.0555%" height="15" fill="rgb(208,226,15)" fg:x="38388" fg:w="25"/><text x="85.4923%" y="351.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="85.2978%" y="341" width="0.0155%" height="15" fill="rgb(217,221,4)" fg:x="38413" fg:w="7"/><text x="85.5478%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.2978%" y="325" width="0.0155%" height="15" fill="rgb(212,174,34)" fg:x="38413" fg:w="7"/><text x="85.5478%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.2978%" y="309" width="0.0155%" height="15" fill="rgb(253,83,4)" fg:x="38413" fg:w="7"/><text x="85.5478%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="85.3133%" y="341" width="0.0311%" height="15" fill="rgb(250,195,49)" fg:x="38420" fg:w="14"/><text x="85.5633%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.03%)</title><rect x="85.3133%" y="325" width="0.0311%" height="15" fill="rgb(241,192,25)" fg:x="38420" fg:w="14"/><text x="85.5633%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="85.3289%" y="309" width="0.0155%" height="15" fill="rgb(208,124,10)" fg:x="38427" fg:w="7"/><text x="85.5789%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.02%)</title><rect x="85.3444%" y="341" width="0.0200%" height="15" fill="rgb(222,33,0)" fg:x="38434" fg:w="9"/><text x="85.5944%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::take (74 samples, 0.16%)</title><rect x="85.2023%" y="357" width="0.1643%" height="15" fill="rgb(234,209,28)" fg:x="38370" fg:w="74"/><text x="85.4523%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (8 samples, 0.02%)</title><rect x="85.3688%" y="277" width="0.0178%" height="15" fill="rgb(224,11,23)" fg:x="38445" fg:w="8"/><text x="85.6188%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.02%)</title><rect x="85.3688%" y="261" width="0.0178%" height="15" fill="rgb(232,99,1)" fg:x="38445" fg:w="8"/><text x="85.6188%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.02%)</title><rect x="85.3688%" y="293" width="0.0222%" height="15" fill="rgb(237,95,45)" fg:x="38445" fg:w="10"/><text x="85.6188%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.03%)</title><rect x="85.3688%" y="357" width="0.0289%" height="15" fill="rgb(208,109,11)" fg:x="38445" fg:w="13"/><text x="85.6188%" y="367.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (13 samples, 0.03%)</title><rect x="85.3688%" y="341" width="0.0289%" height="15" fill="rgb(216,190,48)" fg:x="38445" fg:w="13"/><text x="85.6188%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (13 samples, 0.03%)</title><rect x="85.3688%" y="325" width="0.0289%" height="15" fill="rgb(251,171,36)" fg:x="38445" fg:w="13"/><text x="85.6188%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (13 samples, 0.03%)</title><rect x="85.3688%" y="309" width="0.0289%" height="15" fill="rgb(230,62,22)" fg:x="38445" fg:w="13"/><text x="85.6188%" y="319.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (14 samples, 0.03%)</title><rect x="85.4044%" y="357" width="0.0311%" height="15" fill="rgb(225,114,35)" fg:x="38461" fg:w="14"/><text x="85.6544%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="85.4377%" y="357" width="0.0155%" height="15" fill="rgb(215,118,42)" fg:x="38476" fg:w="7"/><text x="85.6877%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="85.4399%" y="341" width="0.0133%" height="15" fill="rgb(243,119,21)" fg:x="38477" fg:w="6"/><text x="85.6899%" y="351.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::spend_input_utxos (460 samples, 1.02%)</title><rect x="84.4340%" y="373" width="1.0215%" height="15" fill="rgb(252,177,53)" fg:x="38024" fg:w="460"/><text x="84.6840%" y="383.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="85.4932%" y="341" width="0.0111%" height="15" fill="rgb(237,209,29)" fg:x="38501" fg:w="5"/><text x="85.7432%" y="351.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="85.4932%" y="325" width="0.0111%" height="15" fill="rgb(212,65,23)" fg:x="38501" fg:w="5"/><text x="85.7432%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="85.5065%" y="341" width="0.0155%" height="15" fill="rgb(230,222,46)" fg:x="38507" fg:w="7"/><text x="85.7565%" y="351.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (26 samples, 0.06%)</title><rect x="85.4665%" y="357" width="0.0577%" height="15" fill="rgb(215,135,32)" fg:x="38489" fg:w="26"/><text x="85.7165%" y="367.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::update_execution_data (39 samples, 0.09%)</title><rect x="85.4554%" y="373" width="0.0866%" height="15" fill="rgb(246,101,22)" fg:x="38484" fg:w="39"/><text x="85.7054%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="85.5287%" y="357" width="0.0133%" height="15" fill="rgb(206,107,13)" fg:x="38517" fg:w="6"/><text x="85.7787%" y="367.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (5 samples, 0.01%)</title><rect x="85.6242%" y="277" width="0.0111%" height="15" fill="rgb(250,100,44)" fg:x="38560" fg:w="5"/><text x="85.8742%" y="287.50"></text></g><g><title>block_verifier`core::fmt::Formatter::pad_integral (5 samples, 0.01%)</title><rect x="85.6242%" y="261" width="0.0111%" height="15" fill="rgb(231,147,38)" fg:x="38560" fg:w="5"/><text x="85.8742%" y="271.50"></text></g><g><title>block_verifier`core::fmt::write (15 samples, 0.03%)</title><rect x="85.6064%" y="293" width="0.0333%" height="15" fill="rgb(229,8,40)" fg:x="38552" fg:w="15"/><text x="85.8564%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.6397%" y="293" width="0.0178%" height="15" fill="rgb(221,135,30)" fg:x="38567" fg:w="8"/><text x="85.8897%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.6420%" y="277" width="0.0155%" height="15" fill="rgb(249,193,18)" fg:x="38568" fg:w="7"/><text x="85.8920%" y="287.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (44 samples, 0.10%)</title><rect x="85.5909%" y="309" width="0.0977%" height="15" fill="rgb(209,133,39)" fg:x="38545" fg:w="44"/><text x="85.8409%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.03%)</title><rect x="85.6575%" y="293" width="0.0311%" height="15" fill="rgb(232,100,14)" fg:x="38575" fg:w="14"/><text x="85.9075%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (17 samples, 0.04%)</title><rect x="85.6886%" y="309" width="0.0377%" height="15" fill="rgb(224,185,1)" fg:x="38589" fg:w="17"/><text x="85.9386%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="85.7308%" y="309" width="0.0244%" height="15" fill="rgb(223,139,8)" fg:x="38608" fg:w="11"/><text x="85.9808%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="85.7397%" y="293" width="0.0155%" height="15" fill="rgb(232,213,38)" fg:x="38612" fg:w="7"/><text x="85.9897%" y="303.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (79 samples, 0.18%)</title><rect x="85.5887%" y="325" width="0.1754%" height="15" fill="rgb(207,94,22)" fg:x="38544" fg:w="79"/><text x="85.8387%" y="335.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.02%)</title><rect x="85.9662%" y="213" width="0.0178%" height="15" fill="rgb(219,183,54)" fg:x="38714" fg:w="8"/><text x="86.2162%" y="223.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.02%)</title><rect x="86.1682%" y="197" width="0.0178%" height="15" fill="rgb(216,185,54)" fg:x="38805" fg:w="8"/><text x="86.4182%" y="207.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (11 samples, 0.02%)</title><rect x="86.1860%" y="197" width="0.0244%" height="15" fill="rgb(254,217,39)" fg:x="38813" fg:w="11"/><text x="86.4360%" y="207.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (11 samples, 0.02%)</title><rect x="86.2104%" y="197" width="0.0244%" height="15" fill="rgb(240,178,23)" fg:x="38824" fg:w="11"/><text x="86.4604%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (22 samples, 0.05%)</title><rect x="86.2348%" y="197" width="0.0489%" height="15" fill="rgb(218,11,47)" fg:x="38835" fg:w="22"/><text x="86.4848%" y="207.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (180 samples, 0.40%)</title><rect x="85.9839%" y="213" width="0.3997%" height="15" fill="rgb(218,51,51)" fg:x="38722" fg:w="180"/><text x="86.2339%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (45 samples, 0.10%)</title><rect x="86.2837%" y="197" width="0.0999%" height="15" fill="rgb(238,126,27)" fg:x="38857" fg:w="45"/><text x="86.5337%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (259 samples, 0.58%)</title><rect x="85.8107%" y="229" width="0.5751%" height="15" fill="rgb(249,202,22)" fg:x="38644" fg:w="259"/><text x="86.0607%" y="239.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.01%)</title><rect x="86.4103%" y="181" width="0.0133%" height="15" fill="rgb(254,195,49)" fg:x="38914" fg:w="6"/><text x="86.6603%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="86.4103%" y="165" width="0.0133%" height="15" fill="rgb(208,123,14)" fg:x="38914" fg:w="6"/><text x="86.6603%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="86.4125%" y="149" width="0.0111%" height="15" fill="rgb(224,200,8)" fg:x="38915" fg:w="5"/><text x="86.6625%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (10 samples, 0.02%)</title><rect x="86.4058%" y="197" width="0.0222%" height="15" fill="rgb(217,61,36)" fg:x="38912" fg:w="10"/><text x="86.6558%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (13 samples, 0.03%)</title><rect x="86.4014%" y="213" width="0.0289%" height="15" fill="rgb(206,35,45)" fg:x="38910" fg:w="13"/><text x="86.6514%" y="223.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (19 samples, 0.04%)</title><rect x="86.3947%" y="229" width="0.0422%" height="15" fill="rgb(217,65,33)" fg:x="38907" fg:w="19"/><text x="86.6447%" y="239.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (285 samples, 0.63%)</title><rect x="85.8085%" y="245" width="0.6329%" height="15" fill="rgb(222,158,48)" fg:x="38643" fg:w="285"/><text x="86.0585%" y="255.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (291 samples, 0.65%)</title><rect x="85.7996%" y="261" width="0.6462%" height="15" fill="rgb(254,2,54)" fg:x="38639" fg:w="291"/><text x="86.0496%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (310 samples, 0.69%)</title><rect x="85.7685%" y="293" width="0.6884%" height="15" fill="rgb(250,143,38)" fg:x="38625" fg:w="310"/><text x="86.0185%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (309 samples, 0.69%)</title><rect x="85.7708%" y="277" width="0.6861%" height="15" fill="rgb(248,25,0)" fg:x="38626" fg:w="309"/><text x="86.0208%" y="287.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.02%)</title><rect x="86.4569%" y="293" width="0.0155%" height="15" fill="rgb(206,152,27)" fg:x="38935" fg:w="7"/><text x="86.7069%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="86.4569%" y="277" width="0.0155%" height="15" fill="rgb(240,77,30)" fg:x="38935" fg:w="7"/><text x="86.7069%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="86.4591%" y="261" width="0.0133%" height="15" fill="rgb(231,5,3)" fg:x="38936" fg:w="6"/><text x="86.7091%" y="271.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (319 samples, 0.71%)</title><rect x="85.7685%" y="309" width="0.7084%" height="15" fill="rgb(207,226,32)" fg:x="38625" fg:w="319"/><text x="86.0185%" y="319.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (13 samples, 0.03%)</title><rect x="86.4769%" y="309" width="0.0289%" height="15" fill="rgb(222,207,47)" fg:x="38944" fg:w="13"/><text x="86.7269%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="86.4791%" y="293" width="0.0266%" height="15" fill="rgb(229,115,45)" fg:x="38945" fg:w="12"/><text x="86.7291%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="86.4924%" y="277" width="0.0133%" height="15" fill="rgb(224,191,6)" fg:x="38951" fg:w="6"/><text x="86.7424%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="86.5146%" y="309" width="0.0155%" height="15" fill="rgb(230,227,24)" fg:x="38961" fg:w="7"/><text x="86.7646%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="86.5191%" y="293" width="0.0111%" height="15" fill="rgb(228,80,19)" fg:x="38963" fg:w="5"/><text x="86.7691%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="86.5302%" y="309" width="0.0178%" height="15" fill="rgb(247,229,0)" fg:x="38968" fg:w="8"/><text x="86.7802%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="86.5324%" y="293" width="0.0155%" height="15" fill="rgb(237,194,15)" fg:x="38969" fg:w="7"/><text x="86.7824%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="86.5368%" y="277" width="0.0111%" height="15" fill="rgb(219,203,20)" fg:x="38971" fg:w="5"/><text x="86.7868%" y="287.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (354 samples, 0.79%)</title><rect x="85.7641%" y="325" width="0.7861%" height="15" fill="rgb(234,128,8)" fg:x="38623" fg:w="354"/><text x="86.0141%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (464 samples, 1.03%)</title><rect x="85.5509%" y="341" width="1.0303%" height="15" fill="rgb(248,202,8)" fg:x="38527" fg:w="464"/><text x="85.8009%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="86.5657%" y="325" width="0.0155%" height="15" fill="rgb(206,104,37)" fg:x="38984" fg:w="7"/><text x="86.8157%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="86.5657%" y="309" width="0.0155%" height="15" fill="rgb(223,8,27)" fg:x="38984" fg:w="7"/><text x="86.8157%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (7 samples, 0.02%)</title><rect x="86.5812%" y="341" width="0.0155%" height="15" fill="rgb(216,217,28)" fg:x="38991" fg:w="7"/><text x="86.8312%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (95 samples, 0.21%)</title><rect x="86.6012%" y="325" width="0.2110%" height="15" fill="rgb(249,199,1)" fg:x="39000" fg:w="95"/><text x="86.8512%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (142 samples, 0.32%)</title><rect x="86.5968%" y="341" width="0.3153%" height="15" fill="rgb(240,85,17)" fg:x="38998" fg:w="142"/><text x="86.8468%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (45 samples, 0.10%)</title><rect x="86.8122%" y="325" width="0.0999%" height="15" fill="rgb(206,108,45)" fg:x="39095" fg:w="45"/><text x="87.0622%" y="335.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (24 samples, 0.05%)</title><rect x="86.9143%" y="341" width="0.0533%" height="15" fill="rgb(245,210,41)" fg:x="39141" fg:w="24"/><text x="87.1643%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="86.9743%" y="341" width="0.0200%" height="15" fill="rgb(206,13,37)" fg:x="39168" fg:w="9"/><text x="87.2243%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="86.9809%" y="325" width="0.0133%" height="15" fill="rgb(250,61,18)" fg:x="39171" fg:w="6"/><text x="87.2309%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (651 samples, 1.45%)</title><rect x="85.5509%" y="357" width="1.4456%" height="15" fill="rgb(235,172,48)" fg:x="38527" fg:w="651"/><text x="85.8009%" y="367.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::verify_inputs_exist_and_values_match (656 samples, 1.46%)</title><rect x="85.5420%" y="373" width="1.4567%" height="15" fill="rgb(249,201,17)" fg:x="38523" fg:w="656"/><text x="85.7920%" y="383.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="87.0254%" y="341" width="0.0111%" height="15" fill="rgb(219,208,6)" fg:x="39191" fg:w="5"/><text x="87.2754%" y="351.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="87.0209%" y="357" width="0.0178%" height="15" fill="rgb(248,31,23)" fg:x="39189" fg:w="8"/><text x="87.2709%" y="367.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (19 samples, 0.04%)</title><rect x="87.0009%" y="373" width="0.0422%" height="15" fill="rgb(245,15,42)" fg:x="39180" fg:w="19"/><text x="87.2509%" y="383.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.02%)</title><rect x="87.0498%" y="341" width="0.0178%" height="15" fill="rgb(222,217,39)" fg:x="39202" fg:w="8"/><text x="87.2998%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="87.0498%" y="325" width="0.0178%" height="15" fill="rgb(210,219,27)" fg:x="39202" fg:w="8"/><text x="87.2998%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="87.0498%" y="309" width="0.0178%" height="15" fill="rgb(252,166,36)" fg:x="39202" fg:w="8"/><text x="87.2998%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="87.0520%" y="293" width="0.0155%" height="15" fill="rgb(245,132,34)" fg:x="39203" fg:w="7"/><text x="87.3020%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (30 samples, 0.07%)</title><rect x="87.0720%" y="341" width="0.0666%" height="15" fill="rgb(236,54,3)" fg:x="39212" fg:w="30"/><text x="87.3220%" y="351.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (42 samples, 0.09%)</title><rect x="87.0498%" y="357" width="0.0933%" height="15" fill="rgb(241,173,43)" fg:x="39202" fg:w="42"/><text x="87.2998%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (17 samples, 0.04%)</title><rect x="87.1430%" y="357" width="0.0377%" height="15" fill="rgb(215,190,9)" fg:x="39244" fg:w="17"/><text x="87.3930%" y="367.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (64 samples, 0.14%)</title><rect x="87.0431%" y="373" width="0.1421%" height="15" fill="rgb(242,101,16)" fg:x="39199" fg:w="64"/><text x="87.2931%" y="383.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (14 samples, 0.03%)</title><rect x="87.1986%" y="357" width="0.0311%" height="15" fill="rgb(223,190,21)" fg:x="39269" fg:w="14"/><text x="87.4486%" y="367.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (12 samples, 0.03%)</title><rect x="87.2030%" y="341" width="0.0266%" height="15" fill="rgb(215,228,25)" fg:x="39271" fg:w="12"/><text x="87.4530%" y="351.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (26 samples, 0.06%)</title><rect x="87.1875%" y="373" width="0.0577%" height="15" fill="rgb(225,36,22)" fg:x="39264" fg:w="26"/><text x="87.4375%" y="383.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ec_pubkey_serialize (10 samples, 0.02%)</title><rect x="87.2741%" y="325" width="0.0222%" height="15" fill="rgb(251,106,46)" fg:x="39303" fg:w="10"/><text x="87.5241%" y="335.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_get_b32 (8 samples, 0.02%)</title><rect x="87.2785%" y="309" width="0.0178%" height="15" fill="rgb(208,90,1)" fg:x="39305" fg:w="8"/><text x="87.5285%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_odd_multiples_table (23 samples, 0.05%)</title><rect x="87.6205%" y="293" width="0.0511%" height="15" fill="rgb(243,10,4)" fg:x="39459" fg:w="23"/><text x="87.8705%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (12 samples, 0.03%)</title><rect x="87.6449%" y="277" width="0.0266%" height="15" fill="rgb(212,137,27)" fg:x="39470" fg:w="12"/><text x="87.8949%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_wnaf (92 samples, 0.20%)</title><rect x="87.6715%" y="293" width="0.2043%" height="15" fill="rgb(231,220,49)" fg:x="39482" fg:w="92"/><text x="87.9215%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_mul (303 samples, 0.67%)</title><rect x="87.8758%" y="293" width="0.6728%" height="15" fill="rgb(237,96,20)" fg:x="39574" fg:w="303"/><text x="88.1258%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (192 samples, 0.43%)</title><rect x="88.5487%" y="293" width="0.4263%" height="15" fill="rgb(239,229,30)" fg:x="39877" fg:w="192"/><text x="88.7987%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (1,506 samples, 3.34%)</title><rect x="88.9750%" y="293" width="3.3441%" height="15" fill="rgb(219,65,33)" fg:x="40069" fg:w="1506"/><text x="89.2250%" y="303.50">blo..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul (7 samples, 0.02%)</title><rect x="92.3347%" y="277" width="0.0155%" height="15" fill="rgb(243,134,7)" fg:x="41582" fg:w="7"/><text x="92.5847%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_split_lambda (15 samples, 0.03%)</title><rect x="92.3258%" y="293" width="0.0333%" height="15" fill="rgb(216,177,54)" fg:x="41578" fg:w="15"/><text x="92.5758%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult (2,281 samples, 5.07%)</title><rect x="87.3118%" y="309" width="5.0651%" height="15" fill="rgb(211,160,20)" fg:x="39320" fg:w="2281"/><text x="87.5618%" y="319.50">block_..</text></g><g><title>libsystem_platform.dylib`_platform_memset (7 samples, 0.02%)</title><rect x="92.3613%" y="293" width="0.0155%" height="15" fill="rgb(239,85,39)" fg:x="41594" fg:w="7"/><text x="92.6113%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_table_get_ge_storage (10 samples, 0.02%)</title><rect x="92.3791%" y="309" width="0.0222%" height="15" fill="rgb(232,125,22)" fg:x="41602" fg:w="10"/><text x="92.6291%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_sqrt (520 samples, 1.15%)</title><rect x="92.4013%" y="309" width="1.1547%" height="15" fill="rgb(244,57,34)" fg:x="41612" fg:w="520"/><text x="92.6513%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (18 samples, 0.04%)</title><rect x="93.5871%" y="277" width="0.0400%" height="15" fill="rgb(214,203,32)" fg:x="42146" fg:w="18"/><text x="93.8371%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_gej_var (148 samples, 0.33%)</title><rect x="93.5560%" y="309" width="0.3286%" height="15" fill="rgb(207,58,43)" fg:x="42132" fg:w="148"/><text x="93.8060%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_inv_var (135 samples, 0.30%)</title><rect x="93.5848%" y="293" width="0.2998%" height="15" fill="rgb(215,193,15)" fg:x="42145" fg:w="135"/><text x="93.8348%" y="303.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (116 samples, 0.26%)</title><rect x="93.6270%" y="277" width="0.2576%" height="15" fill="rgb(232,15,44)" fg:x="42164" fg:w="116"/><text x="93.8770%" y="287.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_xo_var (6 samples, 0.01%)</title><rect x="93.8846%" y="309" width="0.0133%" height="15" fill="rgb(212,3,48)" fg:x="42280" fg:w="6"/><text x="94.1346%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_table_set_globalz (82 samples, 0.18%)</title><rect x="93.8979%" y="309" width="0.1821%" height="15" fill="rgb(218,128,7)" fg:x="42286" fg:w="82"/><text x="94.1479%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (871 samples, 1.93%)</title><rect x="94.0800%" y="309" width="1.9341%" height="15" fill="rgb(226,216,39)" fg:x="42368" fg:w="871"/><text x="94.3300%" y="319.50">b..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_zinv_var (469 samples, 1.04%)</title><rect x="96.0141%" y="309" width="1.0414%" height="15" fill="rgb(243,47,51)" fg:x="43239" fg:w="469"/><text x="96.2641%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (40 samples, 0.09%)</title><rect x="97.0556%" y="309" width="0.0888%" height="15" fill="rgb(241,183,40)" fg:x="43708" fg:w="40"/><text x="97.3056%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (22 samples, 0.05%)</title><rect x="97.1444%" y="309" width="0.0489%" height="15" fill="rgb(231,217,32)" fg:x="43748" fg:w="22"/><text x="97.3944%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (130 samples, 0.29%)</title><rect x="97.1932%" y="309" width="0.2887%" height="15" fill="rgb(229,61,38)" fg:x="43770" fg:w="130"/><text x="97.4432%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul (10 samples, 0.02%)</title><rect x="97.4819%" y="309" width="0.0222%" height="15" fill="rgb(225,210,5)" fg:x="43900" fg:w="10"/><text x="97.7319%" y="319.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecdsa_recover (4,599 samples, 10.21%)</title><rect x="87.2963%" y="325" width="10.2123%" height="15" fill="rgb(231,79,45)" fg:x="39313" fg:w="4599"/><text x="87.5463%" y="335.50">block_verifier`..</text></g><g><title>block_verifier`fuel_crypto::secp256::signature::Signature::recover (4,620 samples, 10.26%)</title><rect x="87.2630%" y="341" width="10.2589%" height="15" fill="rgb(224,100,7)" fg:x="39298" fg:w="4620"/><text x="87.5130%" y="351.50">block_verifier`..</text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="97.5241%" y="293" width="0.0133%" height="15" fill="rgb(241,198,18)" fg:x="43919" fg:w="6"/><text x="97.7741%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="97.5263%" y="277" width="0.0111%" height="15" fill="rgb(252,97,53)" fg:x="43920" fg:w="5"/><text x="97.7763%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="97.5263%" y="261" width="0.0111%" height="15" fill="rgb(220,88,7)" fg:x="43920" fg:w="5"/><text x="97.7763%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="97.5241%" y="309" width="0.0155%" height="15" fill="rgb(213,176,14)" fg:x="43919" fg:w="7"/><text x="97.7741%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (17 samples, 0.04%)</title><rect x="97.5419%" y="309" width="0.0377%" height="15" fill="rgb(246,73,7)" fg:x="43927" fg:w="17"/><text x="97.7919%" y="319.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (26 samples, 0.06%)</title><rect x="97.5241%" y="325" width="0.0577%" height="15" fill="rgb(245,64,36)" fg:x="43919" fg:w="26"/><text x="97.7741%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (37 samples, 0.08%)</title><rect x="97.5840%" y="325" width="0.0822%" height="15" fill="rgb(245,80,10)" fg:x="43946" fg:w="37"/><text x="97.8340%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (70 samples, 0.16%)</title><rect x="97.5241%" y="341" width="0.1554%" height="15" fill="rgb(232,107,50)" fg:x="43919" fg:w="70"/><text x="97.7741%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="97.6662%" y="325" width="0.0133%" height="15" fill="rgb(253,3,0)" fg:x="43983" fg:w="6"/><text x="97.9162%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (63 samples, 0.14%)</title><rect x="97.6840%" y="341" width="0.1399%" height="15" fill="rgb(212,99,53)" fg:x="43991" fg:w="63"/><text x="97.9340%" y="351.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::_&lt;impl fuel_tx::transaction::types::input::Input&gt;::check_signature (4,798 samples, 10.65%)</title><rect x="87.2474%" y="357" width="10.6542%" height="15" fill="rgb(249,111,54)" fg:x="39291" fg:w="4798"/><text x="87.4974%" y="367.50">block_verifier`f..</text></g><g><title>libsystem_platform.dylib`_platform_memset (35 samples, 0.08%)</title><rect x="97.8239%" y="341" width="0.0777%" height="15" fill="rgb(249,55,30)" fg:x="44054" fg:w="35"/><text x="98.0739%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="97.9105%" y="357" width="0.0111%" height="15" fill="rgb(237,47,42)" fg:x="44093" fg:w="5"/><text x="98.1605%" y="367.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::check_signatures (4,810 samples, 10.68%)</title><rect x="87.2452%" y="373" width="10.6808%" height="15" fill="rgb(211,20,18)" fg:x="39290" fg:w="4810"/><text x="87.4952%" y="383.50">block_verifier`f..</text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.01%)</title><rect x="97.9393%" y="309" width="0.0133%" height="15" fill="rgb(231,203,46)" fg:x="44106" fg:w="6"/><text x="98.1893%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="97.9393%" y="293" width="0.0133%" height="15" fill="rgb(237,142,3)" fg:x="44106" fg:w="6"/><text x="98.1893%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="97.9527%" y="293" width="0.0155%" height="15" fill="rgb(241,107,1)" fg:x="44112" fg:w="7"/><text x="98.2027%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="97.9527%" y="277" width="0.0155%" height="15" fill="rgb(229,83,13)" fg:x="44112" fg:w="7"/><text x="98.2027%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="97.9527%" y="261" width="0.0155%" height="15" fill="rgb(241,91,40)" fg:x="44112" fg:w="7"/><text x="98.2027%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="97.9549%" y="245" width="0.0133%" height="15" fill="rgb(225,3,45)" fg:x="44113" fg:w="6"/><text x="98.2049%" y="255.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (48 samples, 0.11%)</title><rect x="97.9726%" y="293" width="0.1066%" height="15" fill="rgb(244,223,14)" fg:x="44121" fg:w="48"/><text x="98.2226%" y="303.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (58 samples, 0.13%)</title><rect x="97.9527%" y="309" width="0.1288%" height="15" fill="rgb(224,124,37)" fg:x="44112" fg:w="58"/><text x="98.2027%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::ret (70 samples, 0.16%)</title><rect x="97.9371%" y="357" width="0.1554%" height="15" fill="rgb(251,171,30)" fg:x="44105" fg:w="70"/><text x="98.1871%" y="367.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (70 samples, 0.16%)</title><rect x="97.9371%" y="341" width="0.1554%" height="15" fill="rgb(236,46,54)" fg:x="44105" fg:w="70"/><text x="98.1871%" y="351.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (70 samples, 0.16%)</title><rect x="97.9371%" y="325" width="0.1554%" height="15" fill="rgb(245,213,5)" fg:x="44105" fg:w="70"/><text x="98.1871%" y="335.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::instruction::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::instruction_inner (75 samples, 0.17%)</title><rect x="97.9282%" y="373" width="0.1665%" height="15" fill="rgb(230,144,27)" fg:x="44101" fg:w="75"/><text x="98.1782%" y="383.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="98.1059%" y="325" width="0.0155%" height="15" fill="rgb(220,86,6)" fg:x="44181" fg:w="7"/><text x="98.3559%" y="335.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (6 samples, 0.01%)</title><rect x="98.1081%" y="309" width="0.0133%" height="15" fill="rgb(240,20,13)" fg:x="44182" fg:w="6"/><text x="98.3581%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.1103%" y="293" width="0.0111%" height="15" fill="rgb(217,89,34)" fg:x="44183" fg:w="5"/><text x="98.3603%" y="303.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="98.1037%" y="341" width="0.0200%" height="15" fill="rgb(229,13,5)" fg:x="44180" fg:w="9"/><text x="98.3537%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="98.1259%" y="341" width="0.0155%" height="15" fill="rgb(244,67,35)" fg:x="44190" fg:w="7"/><text x="98.3759%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="98.1303%" y="325" width="0.0111%" height="15" fill="rgb(221,40,2)" fg:x="44192" fg:w="5"/><text x="98.3803%" y="335.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (22 samples, 0.05%)</title><rect x="98.0948%" y="357" width="0.0489%" height="15" fill="rgb(237,157,21)" fg:x="44176" fg:w="22"/><text x="98.3448%" y="367.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::main::predicates::finalize_check_predicate (26 samples, 0.06%)</title><rect x="98.0948%" y="373" width="0.0577%" height="15" fill="rgb(222,94,11)" fg:x="44176" fg:w="26"/><text x="98.3448%" y="383.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::memory::MemoryInstance::write_noownerchecks (5 samples, 0.01%)</title><rect x="98.1592%" y="373" width="0.0111%" height="15" fill="rgb(249,113,6)" fg:x="44205" fg:w="5"/><text x="98.4092%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_free (10 samples, 0.02%)</title><rect x="98.1747%" y="373" width="0.0222%" height="15" fill="rgb(238,137,36)" fg:x="44212" fg:w="10"/><text x="98.4247%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="98.2102%" y="373" width="0.0289%" height="15" fill="rgb(210,102,26)" fg:x="44228" fg:w="13"/><text x="98.4602%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="98.2236%" y="357" width="0.0155%" height="15" fill="rgb(218,30,30)" fg:x="44234" fg:w="7"/><text x="98.4736%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="98.2413%" y="373" width="0.0155%" height="15" fill="rgb(214,67,26)" fg:x="44242" fg:w="7"/><text x="98.4913%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.2458%" y="357" width="0.0111%" height="15" fill="rgb(251,9,53)" fg:x="44244" fg:w="5"/><text x="98.4958%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.03%)</title><rect x="98.2591%" y="373" width="0.0289%" height="15" fill="rgb(228,204,25)" fg:x="44250" fg:w="13"/><text x="98.5091%" y="383.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_chargeable_transaction (8,265 samples, 18.35%)</title><rect x="80.0484%" y="389" width="18.3528%" height="15" fill="rgb(207,153,8)" fg:x="36049" fg:w="8265"/><text x="80.2984%" y="399.50">block_verifier`fuel_core_exec..</text></g><g><title>libsystem_platform.dylib`_platform_memset (51 samples, 0.11%)</title><rect x="98.2880%" y="373" width="0.1132%" height="15" fill="rgb(242,9,16)" fg:x="44263" fg:w="51"/><text x="98.5380%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.4390%" y="325" width="0.0133%" height="15" fill="rgb(217,211,10)" fg:x="44331" fg:w="6"/><text x="98.6890%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.4390%" y="309" width="0.0133%" height="15" fill="rgb(219,228,52)" fg:x="44331" fg:w="6"/><text x="98.6890%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="98.4390%" y="293" width="0.0133%" height="15" fill="rgb(231,92,29)" fg:x="44331" fg:w="6"/><text x="98.6890%" y="303.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (14 samples, 0.03%)</title><rect x="98.4279%" y="341" width="0.0311%" height="15" fill="rgb(232,8,23)" fg:x="44326" fg:w="14"/><text x="98.6779%" y="351.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (13 samples, 0.03%)</title><rect x="98.4634%" y="341" width="0.0289%" height="15" fill="rgb(216,211,34)" fg:x="44342" fg:w="13"/><text x="98.7134%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="98.4945%" y="341" width="0.0178%" height="15" fill="rgb(236,151,0)" fg:x="44356" fg:w="8"/><text x="98.7445%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="98.5011%" y="325" width="0.0111%" height="15" fill="rgb(209,168,3)" fg:x="44359" fg:w="5"/><text x="98.7511%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="98.5011%" y="309" width="0.0111%" height="15" fill="rgb(208,129,28)" fg:x="44359" fg:w="5"/><text x="98.7511%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (40 samples, 0.09%)</title><rect x="98.4279%" y="357" width="0.0888%" height="15" fill="rgb(229,78,22)" fg:x="44326" fg:w="40"/><text x="98.6779%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.03%)</title><rect x="98.5189%" y="341" width="0.0266%" height="15" fill="rgb(228,187,13)" fg:x="44367" fg:w="12"/><text x="98.7689%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (12 samples, 0.03%)</title><rect x="98.5189%" y="325" width="0.0266%" height="15" fill="rgb(240,119,24)" fg:x="44367" fg:w="12"/><text x="98.7689%" y="335.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (27 samples, 0.06%)</title><rect x="98.5167%" y="357" width="0.0600%" height="15" fill="rgb(209,194,42)" fg:x="44366" fg:w="27"/><text x="98.7667%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="98.5544%" y="341" width="0.0222%" height="15" fill="rgb(247,200,46)" fg:x="44383" fg:w="10"/><text x="98.8044%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="98.5589%" y="325" width="0.0178%" height="15" fill="rgb(218,76,16)" fg:x="44385" fg:w="8"/><text x="98.8089%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::kv_store::KeyValueInspect::exists (82 samples, 0.18%)</title><rect x="98.4034%" y="389" width="0.1821%" height="15" fill="rgb(225,21,48)" fg:x="44315" fg:w="82"/><text x="98.6534%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::size_of_value (81 samples, 0.18%)</title><rect x="98.4056%" y="373" width="0.1799%" height="15" fill="rgb(239,223,50)" fg:x="44316" fg:w="81"/><text x="98.6556%" y="383.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (50 samples, 0.11%)</title><rect x="98.5855%" y="389" width="0.1110%" height="15" fill="rgb(244,45,21)" fg:x="44397" fg:w="50"/><text x="98.8355%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (253 samples, 0.56%)</title><rect x="98.7076%" y="389" width="0.5618%" height="15" fill="rgb(232,33,43)" fg:x="44452" fg:w="253"/><text x="98.9576%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="99.2783%" y="389" width="0.0111%" height="15" fill="rgb(209,8,3)" fg:x="44709" fg:w="5"/><text x="99.5283%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (41 samples, 0.09%)</title><rect x="99.2916%" y="389" width="0.0910%" height="15" fill="rgb(214,25,53)" fg:x="44715" fg:w="41"/><text x="99.5416%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="99.3827%" y="389" width="0.0311%" height="15" fill="rgb(254,186,54)" fg:x="44756" fg:w="14"/><text x="99.6327%" y="399.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_transaction_and_commit (9,518 samples, 21.14%)</title><rect x="78.3230%" y="405" width="21.1351%" height="15" fill="rgb(208,174,49)" fg:x="35272" fg:w="9518"/><text x="78.5730%" y="415.50">block_verifier`fuel_core_executor..</text></g><g><title>libsystem_platform.dylib`_platform_memset (20 samples, 0.04%)</title><rect x="99.4138%" y="389" width="0.0444%" height="15" fill="rgb(233,191,51)" fg:x="44770" fg:w="20"/><text x="99.6638%" y="399.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (209 samples, 0.46%)</title><rect x="99.4626%" y="405" width="0.4641%" height="15" fill="rgb(222,134,10)" fg:x="44792" fg:w="209"/><text x="99.7126%" y="415.50"></text></g><g><title>block_verifier`fuel_core_upgradable_executor::executor::Executor&lt;S,R&gt;::dry_run (9,915 samples, 22.02%)</title><rect x="77.9478%" y="421" width="22.0167%" height="15" fill="rgb(230,226,20)" fg:x="35103" fg:w="9915"/><text x="78.1978%" y="431.50">block_verifier`fuel_core_upgradable..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="99.9378%" y="405" width="0.0266%" height="15" fill="rgb(251,111,25)" fg:x="45006" fg:w="12"/><text x="100.1878%" y="415.50"></text></g><g><title>block_verifier`std::sys::pal::unix::thread::Thread::new::thread_start (12,475 samples, 27.70%)</title><rect x="72.2943%" y="533" width="27.7013%" height="15" fill="rgb(224,40,46)" fg:x="32557" fg:w="12475"/><text x="72.5443%" y="543.50">block_verifier`std::sys::pal::unix::thread::..</text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (12,475 samples, 27.70%)</title><rect x="72.2943%" y="517" width="27.7013%" height="15" fill="rgb(236,108,47)" fg:x="32557" fg:w="12475"/><text x="72.5443%" y="527.50">block_verifier`core::ops::function::FnOnce::..</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (12,475 samples, 27.70%)</title><rect x="72.2943%" y="501" width="27.7013%" height="15" fill="rgb(234,93,0)" fg:x="32557" fg:w="12475"/><text x="72.5443%" y="511.50">block_verifier`std::sys::backtrace::__rust_b..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10,154 samples, 22.55%)</title><rect x="77.4482%" y="485" width="22.5474%" height="15" fill="rgb(224,213,32)" fg:x="34878" fg:w="10154"/><text x="77.6982%" y="495.50">block_verifier`tokio::runtime::task:..</text></g><g><title>block_verifier`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (10,154 samples, 22.55%)</title><rect x="77.4482%" y="469" width="22.5474%" height="15" fill="rgb(251,11,48)" fg:x="34878" fg:w="10154"/><text x="77.6982%" y="479.50">block_verifier`tokio::runtime::sched..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10,154 samples, 22.55%)</title><rect x="77.4482%" y="453" width="22.5474%" height="15" fill="rgb(236,173,5)" fg:x="34878" fg:w="10154"/><text x="77.6982%" y="463.50">block_verifier`tokio::runtime::task:..</text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da::_{{closure}}::_{{closure}} (9,933 samples, 22.06%)</title><rect x="77.9389%" y="437" width="22.0567%" height="15" fill="rgb(230,95,12)" fg:x="35099" fg:w="9933"/><text x="78.1889%" y="447.50">block_verifier`fuel_core_parallel_e..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="99.9645%" y="421" width="0.0311%" height="15" fill="rgb(232,209,1)" fg:x="45018" fg:w="14"/><text x="100.2145%" y="431.50"></text></g><g><title>all (45,034 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(232,6,1)" fg:x="0" fg:w="45034"/><text x="0.2500%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (12,477 samples, 27.71%)</title><rect x="72.2943%" y="565" width="27.7057%" height="15" fill="rgb(210,224,50)" fg:x="32557" fg:w="12477"/><text x="72.5443%" y="575.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (12,477 samples, 27.71%)</title><rect x="72.2943%" y="549" width="27.7057%" height="15" fill="rgb(228,127,35)" fg:x="32557" fg:w="12477"/><text x="72.5443%" y="559.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>