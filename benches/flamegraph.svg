<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="390" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="373.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="373.00"> </text><svg id="frames" x="10" width="1180" total_samples="8702"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 0.01%)</title><rect x="0.0000%" y="309" width="0.0115%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.01%)</title><rect x="0.0000%" y="293" width="0.0115%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.10%)</title><rect x="0.0115%" y="245" width="0.1034%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="9"/><text x="0.2615%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_free (10 samples, 0.11%)</title><rect x="0.1379%" y="229" width="0.1149%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="10"/><text x="0.3879%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="0.2528%" y="229" width="0.0115%" height="15" fill="rgb(208,68,35)" fg:x="22" fg:w="1"/><text x="0.5028%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="0.2643%" y="229" width="0.0115%" height="15" fill="rgb(232,128,0)" fg:x="23" fg:w="1"/><text x="0.5143%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="0.2758%" y="229" width="0.0115%" height="15" fill="rgb(207,160,47)" fg:x="24" fg:w="1"/><text x="0.5258%" y="239.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="0.2873%" y="229" width="0.0115%" height="15" fill="rgb(228,23,34)" fg:x="25" fg:w="1"/><text x="0.5373%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.16%)</title><rect x="0.2988%" y="229" width="0.1609%" height="15" fill="rgb(218,30,26)" fg:x="26" fg:w="14"/><text x="0.5488%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (15 samples, 0.17%)</title><rect x="0.4597%" y="229" width="0.1724%" height="15" fill="rgb(220,122,19)" fg:x="40" fg:w="15"/><text x="0.7097%" y="239.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (3 samples, 0.03%)</title><rect x="0.6320%" y="229" width="0.0345%" height="15" fill="rgb(250,228,42)" fg:x="55" fg:w="3"/><text x="0.8820%" y="239.50"></text></g><g><title>transaction_splitter`&lt;fuel_vm::checked_transaction::CheckPredicateParams as core::convert::From&lt;&amp;fuel_tx::transaction::consensus_parameters::ConsensusParameters&gt;&gt;::from (1 samples, 0.01%)</title><rect x="0.6665%" y="229" width="0.0115%" height="15" fill="rgb(240,193,28)" fg:x="58" fg:w="1"/><text x="0.9165%" y="239.50"></text></g><g><title>transaction_splitter`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="0.6780%" y="229" width="0.0115%" height="15" fill="rgb(216,20,37)" fg:x="59" fg:w="1"/><text x="0.9280%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="0.7240%" y="213" width="0.0115%" height="15" fill="rgb(206,188,39)" fg:x="63" fg:w="1"/><text x="0.9740%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.01%)</title><rect x="0.7699%" y="197" width="0.0115%" height="15" fill="rgb(217,207,13)" fg:x="67" fg:w="1"/><text x="1.0199%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="0.7814%" y="197" width="0.0115%" height="15" fill="rgb(231,73,38)" fg:x="68" fg:w="1"/><text x="1.0314%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_plat (1 samples, 0.01%)</title><rect x="0.9308%" y="181" width="0.0115%" height="15" fill="rgb(225,20,46)" fg:x="81" fg:w="1"/><text x="1.1808%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.01%)</title><rect x="0.9308%" y="165" width="0.0115%" height="15" fill="rgb(210,31,41)" fg:x="81" fg:w="1"/><text x="1.1808%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (7 samples, 0.08%)</title><rect x="0.9423%" y="181" width="0.0804%" height="15" fill="rgb(221,200,47)" fg:x="82" fg:w="7"/><text x="1.1923%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="1.0113%" y="165" width="0.0115%" height="15" fill="rgb(226,26,5)" fg:x="88" fg:w="1"/><text x="1.2613%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.05%)</title><rect x="1.0228%" y="181" width="0.0460%" height="15" fill="rgb(249,33,26)" fg:x="89" fg:w="4"/><text x="1.2728%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (7 samples, 0.08%)</title><rect x="1.0687%" y="181" width="0.0804%" height="15" fill="rgb(235,183,28)" fg:x="93" fg:w="7"/><text x="1.3187%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (4 samples, 0.05%)</title><rect x="1.1492%" y="181" width="0.0460%" height="15" fill="rgb(221,5,38)" fg:x="100" fg:w="4"/><text x="1.3992%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (4 samples, 0.05%)</title><rect x="1.1951%" y="181" width="0.0460%" height="15" fill="rgb(247,18,42)" fg:x="104" fg:w="4"/><text x="1.4451%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (46 samples, 0.53%)</title><rect x="0.7355%" y="213" width="0.5286%" height="15" fill="rgb(241,131,45)" fg:x="64" fg:w="46"/><text x="0.9855%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (41 samples, 0.47%)</title><rect x="0.7929%" y="197" width="0.4712%" height="15" fill="rgb(249,31,29)" fg:x="69" fg:w="41"/><text x="1.0429%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (2 samples, 0.02%)</title><rect x="1.2411%" y="181" width="0.0230%" height="15" fill="rgb(225,111,53)" fg:x="108" fg:w="2"/><text x="1.4911%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="1.2526%" y="165" width="0.0115%" height="15" fill="rgb(238,160,17)" fg:x="109" fg:w="1"/><text x="1.5026%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="1.2641%" y="213" width="0.0115%" height="15" fill="rgb(214,148,48)" fg:x="110" fg:w="1"/><text x="1.5141%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="1.2871%" y="181" width="0.0115%" height="15" fill="rgb(232,36,49)" fg:x="112" fg:w="1"/><text x="1.5371%" y="191.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (56 samples, 0.64%)</title><rect x="0.6895%" y="229" width="0.6435%" height="15" fill="rgb(209,103,24)" fg:x="60" fg:w="56"/><text x="0.9395%" y="239.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (5 samples, 0.06%)</title><rect x="1.2756%" y="213" width="0.0575%" height="15" fill="rgb(229,88,8)" fg:x="111" fg:w="5"/><text x="1.5256%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.06%)</title><rect x="1.2756%" y="197" width="0.0575%" height="15" fill="rgb(213,181,19)" fg:x="111" fg:w="5"/><text x="1.5256%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.03%)</title><rect x="1.2986%" y="181" width="0.0345%" height="15" fill="rgb(254,191,54)" fg:x="113" fg:w="3"/><text x="1.5486%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.03%)</title><rect x="1.2986%" y="165" width="0.0345%" height="15" fill="rgb(241,83,37)" fg:x="113" fg:w="3"/><text x="1.5486%" y="175.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_vm::storage::predicate::PredicateStorage&lt;&amp;fuel_vm::storage::predicate::EmptyStorage&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="1.3330%" y="229" width="0.0115%" height="15" fill="rgb(233,36,39)" fg:x="116" fg:w="1"/><text x="1.5830%" y="239.50"></text></g><g><title>transaction_splitter`curve25519_dalek::edwards::EdwardsPoint::compress (1 samples, 0.01%)</title><rect x="1.3445%" y="229" width="0.0115%" height="15" fill="rgb(226,3,54)" fg:x="117" fg:w="1"/><text x="1.5945%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="1.4135%" y="213" width="0.0115%" height="15" fill="rgb(245,192,40)" fg:x="123" fg:w="1"/><text x="1.6635%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.05%)</title><rect x="1.4250%" y="213" width="0.0460%" height="15" fill="rgb(238,167,29)" fg:x="124" fg:w="4"/><text x="1.6750%" y="223.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (1 samples, 0.01%)</title><rect x="1.4824%" y="197" width="0.0115%" height="15" fill="rgb(232,182,51)" fg:x="129" fg:w="1"/><text x="1.7324%" y="207.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_static (5 samples, 0.06%)</title><rect x="1.4939%" y="197" width="0.0575%" height="15" fill="rgb(231,60,39)" fg:x="130" fg:w="5"/><text x="1.7439%" y="207.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::Transaction as fuel_core_executor::ports::TransactionExt&gt;::max_gas (9 samples, 0.10%)</title><rect x="1.4709%" y="213" width="0.1034%" height="15" fill="rgb(208,69,12)" fg:x="128" fg:w="9"/><text x="1.7209%" y="223.50"></text></g><g><title>transaction_splitter`fuel_types::canonical::Serialize::size (2 samples, 0.02%)</title><rect x="1.5514%" y="197" width="0.0230%" height="15" fill="rgb(235,93,37)" fg:x="135" fg:w="2"/><text x="1.8014%" y="207.50"></text></g><g><title>transaction_splitter`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="1.5744%" y="213" width="0.0460%" height="15" fill="rgb(213,116,39)" fg:x="137" fg:w="4"/><text x="1.8244%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="1.6203%" y="181" width="0.0115%" height="15" fill="rgb(222,207,29)" fg:x="141" fg:w="1"/><text x="1.8703%" y="191.50"></text></g><g><title>transaction_splitter`alloc::fmt::format::format_inner (2 samples, 0.02%)</title><rect x="1.6203%" y="213" width="0.0230%" height="15" fill="rgb(206,96,30)" fg:x="141" fg:w="2"/><text x="1.8703%" y="223.50"></text></g><g><title>transaction_splitter`core::fmt::write (2 samples, 0.02%)</title><rect x="1.6203%" y="197" width="0.0230%" height="15" fill="rgb(218,138,4)" fg:x="141" fg:w="2"/><text x="1.8703%" y="207.50"></text></g><g><title>transaction_splitter`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="1.6318%" y="181" width="0.0115%" height="15" fill="rgb(250,191,14)" fg:x="142" fg:w="1"/><text x="1.8818%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="1.6318%" y="165" width="0.0115%" height="15" fill="rgb(239,60,40)" fg:x="142" fg:w="1"/><text x="1.8818%" y="175.50"></text></g><g><title>transaction_splitter`core::hash::BuildHasher::hash_one (5 samples, 0.06%)</title><rect x="1.6433%" y="213" width="0.0575%" height="15" fill="rgb(206,27,48)" fg:x="143" fg:w="5"/><text x="1.8933%" y="223.50"></text></g><g><title>transaction_splitter`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1.7467%" y="197" width="0.0115%" height="15" fill="rgb(225,35,8)" fg:x="152" fg:w="1"/><text x="1.9967%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="1.7697%" y="181" width="0.0115%" height="15" fill="rgb(250,213,24)" fg:x="154" fg:w="1"/><text x="2.0197%" y="191.50"></text></g><g><title>transaction_splitter`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="1.7812%" y="181" width="0.0115%" height="15" fill="rgb(247,123,22)" fg:x="155" fg:w="1"/><text x="2.0312%" y="191.50"></text></g><g><title>transaction_splitter`fuel_core_parallel_executor::dependency_splitter::Bucket::add (9 samples, 0.10%)</title><rect x="1.7008%" y="213" width="0.1034%" height="15" fill="rgb(231,138,38)" fg:x="148" fg:w="9"/><text x="1.9508%" y="223.50"></text></g><g><title>transaction_splitter`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.05%)</title><rect x="1.7582%" y="197" width="0.0460%" height="15" fill="rgb(231,145,46)" fg:x="153" fg:w="4"/><text x="2.0082%" y="207.50"></text></g><g><title>transaction_splitter`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="1.7927%" y="181" width="0.0115%" height="15" fill="rgb(251,118,11)" fg:x="156" fg:w="1"/><text x="2.0427%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.16%)</title><rect x="1.8501%" y="197" width="0.1609%" height="15" fill="rgb(217,147,25)" fg:x="161" fg:w="14"/><text x="2.1001%" y="207.50"></text></g><g><title>transaction_splitter`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="2.0110%" y="197" width="0.0345%" height="15" fill="rgb(247,81,37)" fg:x="175" fg:w="3"/><text x="2.2610%" y="207.50"></text></g><g><title>transaction_splitter`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="2.0455%" y="197" width="0.0230%" height="15" fill="rgb(209,12,38)" fg:x="178" fg:w="2"/><text x="2.2955%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="2.0685%" y="181" width="0.0115%" height="15" fill="rgb(227,1,9)" fg:x="180" fg:w="1"/><text x="2.3185%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="2.0685%" y="165" width="0.0115%" height="15" fill="rgb(248,47,43)" fg:x="180" fg:w="1"/><text x="2.3185%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.01%)</title><rect x="2.0800%" y="181" width="0.0115%" height="15" fill="rgb(221,10,30)" fg:x="181" fg:w="1"/><text x="2.3300%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="2.0800%" y="165" width="0.0115%" height="15" fill="rgb(210,229,1)" fg:x="181" fg:w="1"/><text x="2.3300%" y="175.50"></text></g><g><title>transaction_splitter`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="2.0915%" y="181" width="0.0230%" height="15" fill="rgb(222,148,37)" fg:x="182" fg:w="2"/><text x="2.3415%" y="191.50"></text></g><g><title>transaction_splitter`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (29 samples, 0.33%)</title><rect x="1.8042%" y="213" width="0.3333%" height="15" fill="rgb(234,67,33)" fg:x="157" fg:w="29"/><text x="2.0542%" y="223.50"></text></g><g><title>transaction_splitter`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.07%)</title><rect x="2.0685%" y="197" width="0.0689%" height="15" fill="rgb(247,98,35)" fg:x="180" fg:w="6"/><text x="2.3185%" y="207.50"></text></g><g><title>transaction_splitter`core::hash::BuildHasher::hash_one (2 samples, 0.02%)</title><rect x="2.1145%" y="181" width="0.0230%" height="15" fill="rgb(247,138,52)" fg:x="184" fg:w="2"/><text x="2.3645%" y="191.50"></text></g><g><title>transaction_splitter`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::process (72 samples, 0.83%)</title><rect x="1.3560%" y="229" width="0.8274%" height="15" fill="rgb(213,79,30)" fg:x="118" fg:w="72"/><text x="1.6060%" y="239.50"></text></g><g><title>transaction_splitter`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.05%)</title><rect x="2.1374%" y="213" width="0.0460%" height="15" fill="rgb(246,177,23)" fg:x="186" fg:w="4"/><text x="2.3874%" y="223.50"></text></g><g><title>transaction_splitter`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="2.1604%" y="197" width="0.0230%" height="15" fill="rgb(230,62,27)" fg:x="188" fg:w="2"/><text x="2.4104%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="2.2753%" y="213" width="0.0115%" height="15" fill="rgb(216,154,8)" fg:x="198" fg:w="1"/><text x="2.5253%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="2.2753%" y="197" width="0.0115%" height="15" fill="rgb(244,35,45)" fg:x="198" fg:w="1"/><text x="2.5253%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.15%)</title><rect x="2.2868%" y="213" width="0.1494%" height="15" fill="rgb(251,115,12)" fg:x="199" fg:w="13"/><text x="2.5368%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.06%)</title><rect x="2.4362%" y="197" width="0.0575%" height="15" fill="rgb(240,54,50)" fg:x="212" fg:w="5"/><text x="2.6862%" y="207.50"></text></g><g><title>transaction_splitter`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="2.5626%" y="181" width="0.0230%" height="15" fill="rgb(233,84,52)" fg:x="223" fg:w="2"/><text x="2.8126%" y="191.50"></text></g><g><title>transaction_splitter`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.10%)</title><rect x="2.4937%" y="197" width="0.1034%" height="15" fill="rgb(207,117,47)" fg:x="217" fg:w="9"/><text x="2.7437%" y="207.50"></text></g><g><title>transaction_splitter`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.01%)</title><rect x="2.5856%" y="181" width="0.0115%" height="15" fill="rgb(249,43,39)" fg:x="225" fg:w="1"/><text x="2.8356%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (4 samples, 0.05%)</title><rect x="2.5971%" y="117" width="0.0460%" height="15" fill="rgb(209,38,44)" fg:x="226" fg:w="4"/><text x="2.8471%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.05%)</title><rect x="2.5971%" y="101" width="0.0460%" height="15" fill="rgb(236,212,23)" fg:x="226" fg:w="4"/><text x="2.8471%" y="111.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.07%)</title><rect x="2.5971%" y="197" width="0.0689%" height="15" fill="rgb(242,79,21)" fg:x="226" fg:w="6"/><text x="2.8471%" y="207.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (6 samples, 0.07%)</title><rect x="2.5971%" y="181" width="0.0689%" height="15" fill="rgb(211,96,35)" fg:x="226" fg:w="6"/><text x="2.8471%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (6 samples, 0.07%)</title><rect x="2.5971%" y="165" width="0.0689%" height="15" fill="rgb(253,215,40)" fg:x="226" fg:w="6"/><text x="2.8471%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.07%)</title><rect x="2.5971%" y="149" width="0.0689%" height="15" fill="rgb(211,81,21)" fg:x="226" fg:w="6"/><text x="2.8471%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.07%)</title><rect x="2.5971%" y="133" width="0.0689%" height="15" fill="rgb(208,190,38)" fg:x="226" fg:w="6"/><text x="2.8471%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.02%)</title><rect x="2.6431%" y="117" width="0.0230%" height="15" fill="rgb(235,213,38)" fg:x="230" fg:w="2"/><text x="2.8931%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.02%)</title><rect x="2.6431%" y="101" width="0.0230%" height="15" fill="rgb(237,122,38)" fg:x="230" fg:w="2"/><text x="2.8931%" y="111.50"></text></g><g><title>transaction_splitter`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.24%)</title><rect x="2.4362%" y="213" width="0.2413%" height="15" fill="rgb(244,218,35)" fg:x="212" fg:w="21"/><text x="2.6862%" y="223.50"></text></g><g><title>transaction_splitter`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="2.6661%" y="197" width="0.0115%" height="15" fill="rgb(240,68,47)" fg:x="232" fg:w="1"/><text x="2.9161%" y="207.50"></text></g><g><title>transaction_splitter`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.01%)</title><rect x="2.6775%" y="213" width="0.0115%" height="15" fill="rgb(210,16,53)" fg:x="233" fg:w="1"/><text x="2.9275%" y="223.50"></text></g><g><title>transaction_splitter`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;::split (1 samples, 0.01%)</title><rect x="2.6890%" y="213" width="0.0115%" height="15" fill="rgb(235,124,12)" fg:x="234" fg:w="1"/><text x="2.9390%" y="223.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="2.7005%" y="213" width="0.0115%" height="15" fill="rgb(224,169,11)" fg:x="235" fg:w="1"/><text x="2.9505%" y="223.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="2.7005%" y="197" width="0.0115%" height="15" fill="rgb(250,166,2)" fg:x="235" fg:w="1"/><text x="2.9505%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (1 samples, 0.01%)</title><rect x="2.7005%" y="181" width="0.0115%" height="15" fill="rgb(242,216,29)" fg:x="235" fg:w="1"/><text x="2.9505%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (1 samples, 0.01%)</title><rect x="2.7005%" y="165" width="0.0115%" height="15" fill="rgb(230,116,27)" fg:x="235" fg:w="1"/><text x="2.9505%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="2.7005%" y="149" width="0.0115%" height="15" fill="rgb(228,99,48)" fg:x="235" fg:w="1"/><text x="2.9505%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (1 samples, 0.01%)</title><rect x="2.7005%" y="133" width="0.0115%" height="15" fill="rgb(253,11,6)" fg:x="235" fg:w="1"/><text x="2.9505%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1 samples, 0.01%)</title><rect x="2.7005%" y="117" width="0.0115%" height="15" fill="rgb(247,143,39)" fg:x="235" fg:w="1"/><text x="2.9505%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="2.7235%" y="181" width="0.0115%" height="15" fill="rgb(236,97,10)" fg:x="237" fg:w="1"/><text x="2.9735%" y="191.50"></text></g><g><title>transaction_splitter`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::split_equally (51 samples, 0.59%)</title><rect x="2.1834%" y="229" width="0.5861%" height="15" fill="rgb(233,208,19)" fg:x="190" fg:w="51"/><text x="2.4334%" y="239.50"></text></g><g><title>transaction_splitter`core::slice::sort::stable::driftsort_main (5 samples, 0.06%)</title><rect x="2.7120%" y="213" width="0.0575%" height="15" fill="rgb(216,164,2)" fg:x="236" fg:w="5"/><text x="2.9620%" y="223.50"></text></g><g><title>transaction_splitter`core::slice::sort::stable::quicksort::quicksort (5 samples, 0.06%)</title><rect x="2.7120%" y="197" width="0.0575%" height="15" fill="rgb(220,129,5)" fg:x="236" fg:w="5"/><text x="2.9620%" y="207.50"></text></g><g><title>transaction_splitter`core::slice::sort::stable::quicksort::quicksort (3 samples, 0.03%)</title><rect x="2.7350%" y="181" width="0.0345%" height="15" fill="rgb(242,17,10)" fg:x="238" fg:w="3"/><text x="2.9850%" y="191.50"></text></g><g><title>transaction_splitter`core::slice::sort::stable::quicksort::quicksort (2 samples, 0.02%)</title><rect x="2.7465%" y="165" width="0.0230%" height="15" fill="rgb(242,107,0)" fg:x="239" fg:w="2"/><text x="2.9965%" y="175.50"></text></g><g><title>transaction_splitter`core::slice::sort::stable::quicksort::quicksort (1 samples, 0.01%)</title><rect x="2.7580%" y="149" width="0.0115%" height="15" fill="rgb(251,28,31)" fg:x="240" fg:w="1"/><text x="3.0080%" y="159.50"></text></g><g><title>transaction_splitter`core::slice::sort::stable::quicksort::quicksort (1 samples, 0.01%)</title><rect x="2.7580%" y="133" width="0.0115%" height="15" fill="rgb(233,223,10)" fg:x="240" fg:w="1"/><text x="3.0080%" y="143.50"></text></g><g><title>transaction_splitter`fuel_tx::transaction::fee::min_gas (1 samples, 0.01%)</title><rect x="2.7695%" y="229" width="0.0115%" height="15" fill="rgb(215,21,27)" fg:x="241" fg:w="1"/><text x="3.0195%" y="239.50"></text></g><g><title>transaction_splitter`fuel_tx::transaction::types::script::_&lt;impl fuel_tx::transaction::metadata::Cacheable for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::precompute (1 samples, 0.01%)</title><rect x="2.7810%" y="229" width="0.0115%" height="15" fill="rgb(232,23,21)" fg:x="242" fg:w="1"/><text x="3.0310%" y="239.50"></text></g><g><title>transaction_splitter`fuel_vm::interpreter::executors::instruction::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::instruction_inner (2 samples, 0.02%)</title><rect x="2.7925%" y="229" width="0.0230%" height="15" fill="rgb(244,5,23)" fg:x="243" fg:w="2"/><text x="3.0425%" y="239.50"></text></g><g><title>transaction_splitter`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="2.8154%" y="229" width="0.0115%" height="15" fill="rgb(226,81,46)" fg:x="245" fg:w="1"/><text x="3.0654%" y="239.50"></text></g><g><title>transaction_splitter`rand_core::block::BlockRng&lt;R&gt;::generate_and_set (22 samples, 0.25%)</title><rect x="2.8269%" y="229" width="0.2528%" height="15" fill="rgb(247,70,30)" fg:x="246" fg:w="22"/><text x="3.0769%" y="239.50"></text></g><g><title>transaction_splitter`sha2::sha256::compress256 (44 samples, 0.51%)</title><rect x="3.0798%" y="229" width="0.5056%" height="15" fill="rgb(212,68,19)" fg:x="268" fg:w="44"/><text x="3.3298%" y="239.50"></text></g><g><title>transaction_splitter`tracing_core::event::Event::dispatch (1 samples, 0.01%)</title><rect x="3.5854%" y="229" width="0.0115%" height="15" fill="rgb(240,187,13)" fg:x="312" fg:w="1"/><text x="3.8354%" y="239.50"></text></g><g><title>transaction_splitter`&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (1 samples, 0.01%)</title><rect x="3.5854%" y="213" width="0.0115%" height="15" fill="rgb(223,113,26)" fg:x="312" fg:w="1"/><text x="3.8354%" y="223.50"></text></g><g><title>transaction_splitter`&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="3.5854%" y="197" width="0.0115%" height="15" fill="rgb(206,192,2)" fg:x="312" fg:w="1"/><text x="3.8354%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`write (1 samples, 0.01%)</title><rect x="3.5854%" y="181" width="0.0115%" height="15" fill="rgb(241,108,4)" fg:x="312" fg:w="1"/><text x="3.8354%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`close (42 samples, 0.48%)</title><rect x="3.8842%" y="213" width="0.4826%" height="15" fill="rgb(247,173,49)" fg:x="338" fg:w="42"/><text x="4.1342%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_free (4 samples, 0.05%)</title><rect x="4.3668%" y="213" width="0.0460%" height="15" fill="rgb(224,114,35)" fg:x="380" fg:w="4"/><text x="4.6168%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.06%)</title><rect x="4.4128%" y="213" width="0.0575%" height="15" fill="rgb(245,159,27)" fg:x="384" fg:w="5"/><text x="4.6628%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.03%)</title><rect x="4.4702%" y="213" width="0.0345%" height="15" fill="rgb(245,172,44)" fg:x="389" fg:w="3"/><text x="4.7202%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.03%)</title><rect x="4.5277%" y="197" width="0.0345%" height="15" fill="rgb(236,23,11)" fg:x="394" fg:w="3"/><text x="4.7777%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.07%)</title><rect x="4.5047%" y="213" width="0.0689%" height="15" fill="rgb(205,117,38)" fg:x="392" fg:w="6"/><text x="4.7547%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="4.5622%" y="197" width="0.0115%" height="15" fill="rgb(237,72,25)" fg:x="397" fg:w="1"/><text x="4.8122%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.10%)</title><rect x="4.5737%" y="213" width="0.1034%" height="15" fill="rgb(244,70,9)" fg:x="398" fg:w="9"/><text x="4.8237%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.05%)</title><rect x="4.6311%" y="197" width="0.0460%" height="15" fill="rgb(217,125,39)" fg:x="403" fg:w="4"/><text x="4.8811%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="4.6541%" y="181" width="0.0230%" height="15" fill="rgb(235,36,10)" fg:x="405" fg:w="2"/><text x="4.9041%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="4.7001%" y="197" width="0.0115%" height="15" fill="rgb(251,123,47)" fg:x="409" fg:w="1"/><text x="4.9501%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.01%)</title><rect x="4.7116%" y="181" width="0.0115%" height="15" fill="rgb(221,13,13)" fg:x="410" fg:w="1"/><text x="4.9616%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="4.7231%" y="181" width="0.0230%" height="15" fill="rgb(238,131,9)" fg:x="411" fg:w="2"/><text x="4.9731%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.01%)</title><rect x="4.7805%" y="165" width="0.0115%" height="15" fill="rgb(211,50,8)" fg:x="416" fg:w="1"/><text x="5.0305%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.13%)</title><rect x="4.6771%" y="213" width="0.1264%" height="15" fill="rgb(245,182,24)" fg:x="407" fg:w="11"/><text x="4.9271%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.09%)</title><rect x="4.7116%" y="197" width="0.0919%" height="15" fill="rgb(242,14,37)" fg:x="410" fg:w="8"/><text x="4.9616%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.06%)</title><rect x="4.7460%" y="181" width="0.0575%" height="15" fill="rgb(246,228,12)" fg:x="413" fg:w="5"/><text x="4.9960%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="4.7920%" y="165" width="0.0115%" height="15" fill="rgb(213,55,15)" fg:x="417" fg:w="1"/><text x="5.0420%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="4.8035%" y="213" width="0.0115%" height="15" fill="rgb(209,9,3)" fg:x="418" fg:w="1"/><text x="5.0535%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="4.8150%" y="213" width="0.0115%" height="15" fill="rgb(230,59,30)" fg:x="419" fg:w="1"/><text x="5.0650%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.05%)</title><rect x="4.8265%" y="213" width="0.0460%" height="15" fill="rgb(209,121,21)" fg:x="420" fg:w="4"/><text x="5.0765%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="4.8724%" y="213" width="0.0230%" height="15" fill="rgb(220,109,13)" fg:x="424" fg:w="2"/><text x="5.1224%" y="223.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (291 samples, 3.34%)</title><rect x="4.8954%" y="213" width="3.3441%" height="15" fill="rgb(232,18,1)" fg:x="426" fg:w="291"/><text x="5.1454%" y="223.50">tra..</text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::scalar::Scalar as core::ops::arith::Add&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::add (3 samples, 0.03%)</title><rect x="8.2395%" y="213" width="0.0345%" height="15" fill="rgb(215,41,42)" fg:x="717" fg:w="3"/><text x="8.4895%" y="223.50"></text></g><g><title>transaction_splitter`&lt;&amp;std::fs::File as std::io::Read&gt;::read_to_string (1 samples, 0.01%)</title><rect x="8.2740%" y="213" width="0.0115%" height="15" fill="rgb(224,123,36)" fg:x="720" fg:w="1"/><text x="8.5240%" y="223.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.01%)</title><rect x="8.2855%" y="213" width="0.0115%" height="15" fill="rgb(240,125,3)" fg:x="721" fg:w="1"/><text x="8.5355%" y="223.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (223 samples, 2.56%)</title><rect x="8.6302%" y="197" width="2.5626%" height="15" fill="rgb(205,98,50)" fg:x="751" fg:w="223"/><text x="8.8802%" y="207.50">tr..</text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (1 samples, 0.01%)</title><rect x="11.1928%" y="197" width="0.0115%" height="15" fill="rgb(205,185,37)" fg:x="974" fg:w="1"/><text x="11.4428%" y="207.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (64 samples, 0.74%)</title><rect x="11.2043%" y="197" width="0.7355%" height="15" fill="rgb(238,207,15)" fg:x="975" fg:w="64"/><text x="11.4543%" y="207.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (3 samples, 0.03%)</title><rect x="11.9743%" y="181" width="0.0345%" height="15" fill="rgb(213,199,42)" fg:x="1042" fg:w="3"/><text x="12.2243%" y="191.50"></text></g><g><title>transaction_splitter`curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (22 samples, 0.25%)</title><rect x="11.9398%" y="197" width="0.2528%" height="15" fill="rgb(235,201,11)" fg:x="1039" fg:w="22"/><text x="12.1898%" y="207.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (16 samples, 0.18%)</title><rect x="12.0087%" y="181" width="0.1839%" height="15" fill="rgb(207,46,11)" fg:x="1045" fg:w="16"/><text x="12.2587%" y="191.50"></text></g><g><title>transaction_splitter`curve25519_dalek::window::LookupTable&lt;T&gt;::select (155 samples, 1.78%)</title><rect x="12.1926%" y="197" width="1.7812%" height="15" fill="rgb(241,35,35)" fg:x="1061" fg:w="155"/><text x="12.4426%" y="207.50">t..</text></g><g><title>transaction_splitter`&lt;curve25519_dalek::edwards::EdwardsBasepointTable as curve25519_dalek::traits::BasepointTable&gt;::mul_base (512 samples, 5.88%)</title><rect x="8.2969%" y="213" width="5.8837%" height="15" fill="rgb(243,32,47)" fg:x="722" fg:w="512"/><text x="8.5469%" y="223.50">transac..</text></g><g><title>transaction_splitter`subtle::black_box (18 samples, 0.21%)</title><rect x="13.9738%" y="197" width="0.2068%" height="15" fill="rgb(247,202,23)" fg:x="1216" fg:w="18"/><text x="14.2238%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="14.2266%" y="197" width="0.0115%" height="15" fill="rgb(219,102,11)" fg:x="1238" fg:w="1"/><text x="14.4766%" y="207.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (323 samples, 3.71%)</title><rect x="14.2381%" y="197" width="3.7118%" height="15" fill="rgb(243,110,44)" fg:x="1239" fg:w="323"/><text x="14.4881%" y="207.50">tran..</text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (216 samples, 2.48%)</title><rect x="18.3981%" y="181" width="2.4822%" height="15" fill="rgb(222,74,54)" fg:x="1601" fg:w="216"/><text x="18.6481%" y="191.50">tr..</text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (46 samples, 0.53%)</title><rect x="20.8803%" y="181" width="0.5286%" height="15" fill="rgb(216,99,12)" fg:x="1817" fg:w="46"/><text x="21.1303%" y="191.50"></text></g><g><title>transaction_splitter`curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (12 samples, 0.14%)</title><rect x="21.4089%" y="181" width="0.1379%" height="15" fill="rgb(226,22,26)" fg:x="1863" fg:w="12"/><text x="21.6589%" y="191.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (12 samples, 0.14%)</title><rect x="21.4089%" y="165" width="0.1379%" height="15" fill="rgb(217,163,10)" fg:x="1863" fg:w="12"/><text x="21.6589%" y="175.50"></text></g><g><title>transaction_splitter`curve25519_dalek::window::LookupTable&lt;T&gt;::select (175 samples, 2.01%)</title><rect x="21.5468%" y="181" width="2.0110%" height="15" fill="rgb(213,25,53)" fg:x="1875" fg:w="175"/><text x="21.7968%" y="191.50">t..</text></g><g><title>transaction_splitter`&lt;curve25519_dalek::edwards::EdwardsBasepointTable as curve25519_dalek::traits::BasepointTable&gt;::mul_base (504 samples, 5.79%)</title><rect x="17.9499%" y="197" width="5.7918%" height="15" fill="rgb(252,105,26)" fg:x="1562" fg:w="504"/><text x="18.1999%" y="207.50">transac..</text></g><g><title>transaction_splitter`subtle::black_box (16 samples, 0.18%)</title><rect x="23.5578%" y="181" width="0.1839%" height="15" fill="rgb(220,39,43)" fg:x="2050" fg:w="16"/><text x="23.8078%" y="191.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (19 samples, 0.22%)</title><rect x="23.7417%" y="197" width="0.2183%" height="15" fill="rgb(229,68,48)" fg:x="2066" fg:w="19"/><text x="23.9917%" y="207.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (7 samples, 0.08%)</title><rect x="23.9600%" y="197" width="0.0804%" height="15" fill="rgb(252,8,32)" fg:x="2085" fg:w="7"/><text x="24.2100%" y="207.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::scalar::Scalar52::mul (5 samples, 0.06%)</title><rect x="24.0405%" y="197" width="0.0575%" height="15" fill="rgb(223,20,43)" fg:x="2092" fg:w="5"/><text x="24.2905%" y="207.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (19 samples, 0.22%)</title><rect x="24.1209%" y="181" width="0.2183%" height="15" fill="rgb(229,81,49)" fg:x="2099" fg:w="19"/><text x="24.3709%" y="191.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (320 samples, 3.68%)</title><rect x="24.3392%" y="181" width="3.6773%" height="15" fill="rgb(236,28,36)" fg:x="2118" fg:w="320"/><text x="24.5892%" y="191.50">tran..</text></g><g><title>transaction_splitter`curve25519_dalek::edwards::EdwardsPoint::compress (343 samples, 3.94%)</title><rect x="24.0979%" y="197" width="3.9416%" height="15" fill="rgb(249,185,26)" fg:x="2097" fg:w="343"/><text x="24.3479%" y="207.50">tran..</text></g><g><title>transaction_splitter`curve25519_dalek::field::_&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (2 samples, 0.02%)</title><rect x="28.0165%" y="181" width="0.0230%" height="15" fill="rgb(249,174,33)" fg:x="2438" fg:w="2"/><text x="28.2665%" y="191.50"></text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::as_radix_16 (2 samples, 0.02%)</title><rect x="28.0395%" y="197" width="0.0230%" height="15" fill="rgb(233,201,37)" fg:x="2440" fg:w="2"/><text x="28.2895%" y="207.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (19 samples, 0.22%)</title><rect x="28.0970%" y="181" width="0.2183%" height="15" fill="rgb(221,78,26)" fg:x="2445" fg:w="19"/><text x="28.3470%" y="191.50"></text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::from_hash (27 samples, 0.31%)</title><rect x="28.0625%" y="197" width="0.3103%" height="15" fill="rgb(250,127,30)" fg:x="2442" fg:w="27"/><text x="28.3125%" y="207.50"></text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (5 samples, 0.06%)</title><rect x="28.3153%" y="181" width="0.0575%" height="15" fill="rgb(230,49,44)" fg:x="2464" fg:w="5"/><text x="28.5653%" y="191.50"></text></g><g><title>transaction_splitter`curve25519_dalek::window::LookupTable&lt;T&gt;::select (9 samples, 0.10%)</title><rect x="28.3728%" y="197" width="0.1034%" height="15" fill="rgb(229,67,23)" fg:x="2469" fg:w="9"/><text x="28.6228%" y="207.50"></text></g><g><title>transaction_splitter`&lt;ed25519_dalek::signing::SigningKey as signature::signer::Signer&lt;ed25519::Signature&gt;&gt;::try_sign (1,285 samples, 14.77%)</title><rect x="14.1806%" y="213" width="14.7667%" height="15" fill="rgb(249,83,47)" fg:x="1234" fg:w="1285"/><text x="14.4306%" y="223.50">transaction_splitter`&lt;e..</text></g><g><title>transaction_splitter`sha2::sha512::compress512 (41 samples, 0.47%)</title><rect x="28.4762%" y="197" width="0.4712%" height="15" fill="rgb(215,43,3)" fg:x="2478" fg:w="41"/><text x="28.7262%" y="207.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::consensus_parameters::gas::GasCosts as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="28.9474%" y="213" width="0.0230%" height="15" fill="rgb(238,154,13)" fg:x="2519" fg:w="2"/><text x="29.1974%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (5 samples, 0.06%)</title><rect x="29.0738%" y="181" width="0.0575%" height="15" fill="rgb(219,56,2)" fg:x="2530" fg:w="5"/><text x="29.3238%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="29.1542%" y="165" width="0.0230%" height="15" fill="rgb(233,0,4)" fg:x="2537" fg:w="2"/><text x="29.4042%" y="175.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (23 samples, 0.26%)</title><rect x="28.9704%" y="213" width="0.2643%" height="15" fill="rgb(235,30,7)" fg:x="2521" fg:w="23"/><text x="29.2204%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.17%)</title><rect x="29.0623%" y="197" width="0.1724%" height="15" fill="rgb(250,79,13)" fg:x="2529" fg:w="15"/><text x="29.3123%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.10%)</title><rect x="29.1312%" y="181" width="0.1034%" height="15" fill="rgb(211,146,34)" fg:x="2535" fg:w="9"/><text x="29.3812%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.06%)</title><rect x="29.1772%" y="165" width="0.0575%" height="15" fill="rgb(228,22,38)" fg:x="2539" fg:w="5"/><text x="29.4272%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="29.2232%" y="149" width="0.0115%" height="15" fill="rgb(235,168,5)" fg:x="2543" fg:w="1"/><text x="29.4732%" y="159.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (1 samples, 0.01%)</title><rect x="29.2347%" y="213" width="0.0115%" height="15" fill="rgb(221,155,16)" fg:x="2544" fg:w="1"/><text x="29.4847%" y="223.50"></text></g><g><title>transaction_splitter`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (2 samples, 0.02%)</title><rect x="29.2462%" y="213" width="0.0230%" height="15" fill="rgb(215,215,53)" fg:x="2545" fg:w="2"/><text x="29.4962%" y="223.50"></text></g><g><title>transaction_splitter`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="29.2691%" y="213" width="0.0115%" height="15" fill="rgb(223,4,10)" fg:x="2547" fg:w="1"/><text x="29.5191%" y="223.50"></text></g><g><title>transaction_splitter`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="29.2806%" y="213" width="0.0115%" height="15" fill="rgb(234,103,6)" fg:x="2548" fg:w="1"/><text x="29.5306%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="29.2921%" y="197" width="0.0115%" height="15" fill="rgb(227,97,0)" fg:x="2549" fg:w="1"/><text x="29.5421%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="29.3266%" y="165" width="0.0115%" height="15" fill="rgb(234,150,53)" fg:x="2552" fg:w="1"/><text x="29.5766%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.03%)</title><rect x="29.3496%" y="149" width="0.0345%" height="15" fill="rgb(228,201,54)" fg:x="2554" fg:w="3"/><text x="29.5996%" y="159.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.13%)</title><rect x="29.2921%" y="213" width="0.1264%" height="15" fill="rgb(222,22,37)" fg:x="2549" fg:w="11"/><text x="29.5421%" y="223.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (10 samples, 0.11%)</title><rect x="29.3036%" y="197" width="0.1149%" height="15" fill="rgb(237,53,32)" fg:x="2550" fg:w="10"/><text x="29.5536%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.10%)</title><rect x="29.3151%" y="181" width="0.1034%" height="15" fill="rgb(233,25,53)" fg:x="2551" fg:w="9"/><text x="29.5651%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.08%)</title><rect x="29.3381%" y="165" width="0.0804%" height="15" fill="rgb(210,40,34)" fg:x="2553" fg:w="7"/><text x="29.5881%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="29.3840%" y="149" width="0.0345%" height="15" fill="rgb(241,220,44)" fg:x="2557" fg:w="3"/><text x="29.6340%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="29.3955%" y="133" width="0.0230%" height="15" fill="rgb(235,28,35)" fg:x="2558" fg:w="2"/><text x="29.6455%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="29.5105%" y="149" width="0.0115%" height="15" fill="rgb(210,56,17)" fg:x="2568" fg:w="1"/><text x="29.7605%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="29.5219%" y="133" width="0.0230%" height="15" fill="rgb(224,130,29)" fg:x="2569" fg:w="2"/><text x="29.7719%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="29.5219%" y="117" width="0.0230%" height="15" fill="rgb(235,212,8)" fg:x="2569" fg:w="2"/><text x="29.7719%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (2 samples, 0.02%)</title><rect x="29.5449%" y="133" width="0.0230%" height="15" fill="rgb(223,33,50)" fg:x="2571" fg:w="2"/><text x="29.7949%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="29.5794%" y="117" width="0.0115%" height="15" fill="rgb(219,149,13)" fg:x="2574" fg:w="1"/><text x="29.8294%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (7 samples, 0.08%)</title><rect x="29.5219%" y="149" width="0.0804%" height="15" fill="rgb(250,156,29)" fg:x="2569" fg:w="7"/><text x="29.7719%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="29.5679%" y="133" width="0.0345%" height="15" fill="rgb(216,193,19)" fg:x="2573" fg:w="3"/><text x="29.8179%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="29.5909%" y="117" width="0.0115%" height="15" fill="rgb(216,135,14)" fg:x="2575" fg:w="1"/><text x="29.8409%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="29.5909%" y="101" width="0.0115%" height="15" fill="rgb(241,47,5)" fg:x="2575" fg:w="1"/><text x="29.8409%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="29.5909%" y="85" width="0.0115%" height="15" fill="rgb(233,42,35)" fg:x="2575" fg:w="1"/><text x="29.8409%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (12 samples, 0.14%)</title><rect x="29.4875%" y="165" width="0.1379%" height="15" fill="rgb(231,13,6)" fg:x="2566" fg:w="12"/><text x="29.7375%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (2 samples, 0.02%)</title><rect x="29.6024%" y="149" width="0.0230%" height="15" fill="rgb(207,181,40)" fg:x="2576" fg:w="2"/><text x="29.8524%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="29.6254%" y="165" width="0.0115%" height="15" fill="rgb(254,173,49)" fg:x="2578" fg:w="1"/><text x="29.8754%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (16 samples, 0.18%)</title><rect x="29.4645%" y="181" width="0.1839%" height="15" fill="rgb(221,1,38)" fg:x="2564" fg:w="16"/><text x="29.7145%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="29.6369%" y="165" width="0.0115%" height="15" fill="rgb(206,124,46)" fg:x="2579" fg:w="1"/><text x="29.8869%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="29.6369%" y="149" width="0.0115%" height="15" fill="rgb(249,21,11)" fg:x="2579" fg:w="1"/><text x="29.8869%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="29.6484%" y="149" width="0.0230%" height="15" fill="rgb(222,201,40)" fg:x="2580" fg:w="2"/><text x="29.8984%" y="159.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.29%)</title><rect x="29.4185%" y="213" width="0.2873%" height="15" fill="rgb(235,61,29)" fg:x="2560" fg:w="25"/><text x="29.6685%" y="223.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (23 samples, 0.26%)</title><rect x="29.4415%" y="197" width="0.2643%" height="15" fill="rgb(219,207,3)" fg:x="2562" fg:w="23"/><text x="29.6915%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.06%)</title><rect x="29.6484%" y="181" width="0.0575%" height="15" fill="rgb(222,56,46)" fg:x="2580" fg:w="5"/><text x="29.8984%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.06%)</title><rect x="29.6484%" y="165" width="0.0575%" height="15" fill="rgb(239,76,54)" fg:x="2580" fg:w="5"/><text x="29.8984%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="29.6713%" y="149" width="0.0345%" height="15" fill="rgb(231,124,27)" fg:x="2582" fg:w="3"/><text x="29.9213%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="29.6828%" y="133" width="0.0230%" height="15" fill="rgb(249,195,6)" fg:x="2583" fg:w="2"/><text x="29.9328%" y="143.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u16,u16&gt;&gt; (2 samples, 0.02%)</title><rect x="29.7058%" y="213" width="0.0230%" height="15" fill="rgb(237,174,47)" fg:x="2585" fg:w="2"/><text x="29.9558%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.01%)</title><rect x="29.7403%" y="197" width="0.0115%" height="15" fill="rgb(206,201,31)" fg:x="2588" fg:w="1"/><text x="29.9903%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="29.7518%" y="197" width="0.0115%" height="15" fill="rgb(231,57,52)" fg:x="2589" fg:w="1"/><text x="30.0018%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.02%)</title><rect x="29.7633%" y="197" width="0.0230%" height="15" fill="rgb(248,177,22)" fg:x="2590" fg:w="2"/><text x="30.0133%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.05%)</title><rect x="29.7863%" y="197" width="0.0460%" height="15" fill="rgb(215,211,37)" fg:x="2592" fg:w="4"/><text x="30.0363%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="29.8092%" y="181" width="0.0230%" height="15" fill="rgb(241,128,51)" fg:x="2594" fg:w="2"/><text x="30.0592%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="29.8207%" y="165" width="0.0115%" height="15" fill="rgb(227,165,31)" fg:x="2595" fg:w="1"/><text x="30.0707%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="29.8322%" y="197" width="0.0115%" height="15" fill="rgb(228,167,24)" fg:x="2596" fg:w="1"/><text x="30.0822%" y="207.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (11 samples, 0.13%)</title><rect x="29.7288%" y="213" width="0.1264%" height="15" fill="rgb(228,143,12)" fg:x="2587" fg:w="11"/><text x="29.9788%" y="223.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (1 samples, 0.01%)</title><rect x="29.8437%" y="197" width="0.0115%" height="15" fill="rgb(249,149,8)" fg:x="2597" fg:w="1"/><text x="30.0937%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="29.8437%" y="181" width="0.0115%" height="15" fill="rgb(243,35,44)" fg:x="2597" fg:w="1"/><text x="30.0937%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="29.8437%" y="165" width="0.0115%" height="15" fill="rgb(246,89,9)" fg:x="2597" fg:w="1"/><text x="30.0937%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="29.8552%" y="197" width="0.0230%" height="15" fill="rgb(233,213,13)" fg:x="2598" fg:w="2"/><text x="30.1052%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="29.8782%" y="197" width="0.0115%" height="15" fill="rgb(233,141,41)" fg:x="2600" fg:w="1"/><text x="30.1282%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="29.8897%" y="197" width="0.0230%" height="15" fill="rgb(239,167,4)" fg:x="2601" fg:w="2"/><text x="30.1397%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="29.8897%" y="181" width="0.0230%" height="15" fill="rgb(209,217,16)" fg:x="2601" fg:w="2"/><text x="30.1397%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="29.9127%" y="181" width="0.0115%" height="15" fill="rgb(219,88,35)" fg:x="2603" fg:w="1"/><text x="30.1627%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="30.0276%" y="149" width="0.0230%" height="15" fill="rgb(220,193,23)" fg:x="2613" fg:w="2"/><text x="30.2776%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.14%)</title><rect x="29.9242%" y="181" width="0.1379%" height="15" fill="rgb(230,90,52)" fg:x="2604" fg:w="12"/><text x="30.1742%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.11%)</title><rect x="29.9471%" y="165" width="0.1149%" height="15" fill="rgb(252,106,19)" fg:x="2606" fg:w="10"/><text x="30.1971%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="30.0506%" y="149" width="0.0115%" height="15" fill="rgb(206,74,20)" fg:x="2615" fg:w="1"/><text x="30.3006%" y="159.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (14 samples, 0.16%)</title><rect x="29.9127%" y="197" width="0.1609%" height="15" fill="rgb(230,138,44)" fg:x="2603" fg:w="14"/><text x="30.1627%" y="207.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (1 samples, 0.01%)</title><rect x="30.0621%" y="181" width="0.0115%" height="15" fill="rgb(235,182,43)" fg:x="2616" fg:w="1"/><text x="30.3121%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="30.0621%" y="165" width="0.0115%" height="15" fill="rgb(242,16,51)" fg:x="2616" fg:w="1"/><text x="30.3121%" y="175.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_vm::storage::predicate::PredicateStorage&lt;&amp;fuel_vm::storage::predicate::EmptyStorage&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (23 samples, 0.26%)</title><rect x="29.8552%" y="213" width="0.2643%" height="15" fill="rgb(248,9,4)" fg:x="2598" fg:w="23"/><text x="30.1052%" y="223.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_vm::interpreter::receipts::ReceiptsCtx&gt; (4 samples, 0.05%)</title><rect x="30.0735%" y="197" width="0.0460%" height="15" fill="rgb(210,31,22)" fg:x="2617" fg:w="4"/><text x="30.3235%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="30.0850%" y="181" width="0.0345%" height="15" fill="rgb(239,54,39)" fg:x="2618" fg:w="3"/><text x="30.3350%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="30.0965%" y="165" width="0.0230%" height="15" fill="rgb(230,99,41)" fg:x="2619" fg:w="2"/><text x="30.3465%" y="175.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (16 samples, 0.18%)</title><rect x="30.1195%" y="213" width="0.1839%" height="15" fill="rgb(253,106,12)" fg:x="2621" fg:w="16"/><text x="30.3695%" y="223.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (7 samples, 0.08%)</title><rect x="30.3034%" y="213" width="0.0804%" height="15" fill="rgb(213,46,41)" fg:x="2637" fg:w="7"/><text x="30.5534%" y="223.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (19 samples, 0.22%)</title><rect x="30.4413%" y="197" width="0.2183%" height="15" fill="rgb(215,133,35)" fg:x="2649" fg:w="19"/><text x="30.6913%" y="207.50"></text></g><g><title>transaction_splitter`curve25519_dalek::edwards::EdwardsPoint::compress (315 samples, 3.62%)</title><rect x="30.3838%" y="213" width="3.6199%" height="15" fill="rgb(213,28,5)" fg:x="2644" fg:w="315"/><text x="30.6338%" y="223.50">tran..</text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (291 samples, 3.34%)</title><rect x="30.6596%" y="197" width="3.3441%" height="15" fill="rgb(215,77,49)" fg:x="2668" fg:w="291"/><text x="30.9096%" y="207.50">tra..</text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::as_radix_16 (10 samples, 0.11%)</title><rect x="34.0037%" y="213" width="0.1149%" height="15" fill="rgb(248,100,22)" fg:x="2959" fg:w="10"/><text x="34.2537%" y="223.50"></text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::from_hash (1 samples, 0.01%)</title><rect x="34.1186%" y="213" width="0.0115%" height="15" fill="rgb(208,67,9)" fg:x="2969" fg:w="1"/><text x="34.3686%" y="223.50"></text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::reduce (6 samples, 0.07%)</title><rect x="34.1301%" y="213" width="0.0689%" height="15" fill="rgb(219,133,21)" fg:x="2970" fg:w="6"/><text x="34.3801%" y="223.50"></text></g><g><title>transaction_splitter`curve25519_dalek::window::LookupTable&lt;T&gt;::select (8 samples, 0.09%)</title><rect x="34.1990%" y="213" width="0.0919%" height="15" fill="rgb(246,46,29)" fg:x="2976" fg:w="8"/><text x="34.4490%" y="223.50"></text></g><g><title>transaction_splitter`fuel_asm::Instruction::opcode (1 samples, 0.01%)</title><rect x="34.2910%" y="213" width="0.0115%" height="15" fill="rgb(246,185,52)" fg:x="2984" fg:w="1"/><text x="34.5410%" y="223.50"></text></g><g><title>transaction_splitter`fuel_asm::_op::CCP::unpack (2 samples, 0.02%)</title><rect x="34.3025%" y="213" width="0.0230%" height="15" fill="rgb(252,136,11)" fg:x="2985" fg:w="2"/><text x="34.5525%" y="223.50"></text></g><g><title>transaction_splitter`fuel_merkle::binary::hash::leaf_sum (1 samples, 0.01%)</title><rect x="34.3254%" y="213" width="0.0115%" height="15" fill="rgb(219,138,53)" fg:x="2987" fg:w="1"/><text x="34.5754%" y="223.50"></text></g><g><title>transaction_splitter`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (1 samples, 0.01%)</title><rect x="34.3369%" y="213" width="0.0115%" height="15" fill="rgb(211,51,23)" fg:x="2988" fg:w="1"/><text x="34.5869%" y="223.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (5 samples, 0.06%)</title><rect x="34.3599%" y="197" width="0.0575%" height="15" fill="rgb(247,221,28)" fg:x="2990" fg:w="5"/><text x="34.6099%" y="207.50"></text></g><g><title>transaction_splitter`fuel_tx::transaction::fee::min_gas (13 samples, 0.15%)</title><rect x="34.3484%" y="213" width="0.1494%" height="15" fill="rgb(251,222,45)" fg:x="2989" fg:w="13"/><text x="34.5984%" y="223.50"></text></g><g><title>transaction_splitter`fuel_types::canonical::Serialize::size (7 samples, 0.08%)</title><rect x="34.4174%" y="197" width="0.0804%" height="15" fill="rgb(217,162,53)" fg:x="2995" fg:w="7"/><text x="34.6674%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.01%)</title><rect x="34.5208%" y="197" width="0.0115%" height="15" fill="rgb(229,93,14)" fg:x="3004" fg:w="1"/><text x="34.7708%" y="207.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.05%)</title><rect x="34.5438%" y="181" width="0.0460%" height="15" fill="rgb(209,67,49)" fg:x="3006" fg:w="4"/><text x="34.7938%" y="191.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="34.5553%" y="165" width="0.0345%" height="15" fill="rgb(213,87,29)" fg:x="3007" fg:w="3"/><text x="34.8053%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="34.5553%" y="149" width="0.0345%" height="15" fill="rgb(205,151,52)" fg:x="3007" fg:w="3"/><text x="34.8053%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.03%)</title><rect x="34.5553%" y="133" width="0.0345%" height="15" fill="rgb(253,215,39)" fg:x="3007" fg:w="3"/><text x="34.8053%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="34.5553%" y="117" width="0.0345%" height="15" fill="rgb(221,220,41)" fg:x="3007" fg:w="3"/><text x="34.8053%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.01%)</title><rect x="34.5783%" y="101" width="0.0115%" height="15" fill="rgb(218,133,21)" fg:x="3009" fg:w="1"/><text x="34.8283%" y="111.50"></text></g><g><title>transaction_splitter`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (28 samples, 0.32%)</title><rect x="34.5323%" y="197" width="0.3218%" height="15" fill="rgb(221,193,43)" fg:x="3005" fg:w="28"/><text x="34.7823%" y="207.50"></text></g><g><title>transaction_splitter`sha2::sha256::compress256 (23 samples, 0.26%)</title><rect x="34.5897%" y="181" width="0.2643%" height="15" fill="rgb(240,128,52)" fg:x="3010" fg:w="23"/><text x="34.8397%" y="191.50"></text></g><g><title>transaction_splitter`fuel_tx::transaction::types::input::Input::predicate_owner (52 samples, 0.60%)</title><rect x="34.4978%" y="213" width="0.5976%" height="15" fill="rgb(253,114,12)" fg:x="3002" fg:w="52"/><text x="34.7478%" y="223.50"></text></g><g><title>transaction_splitter`sha2::sha256::compress256 (21 samples, 0.24%)</title><rect x="34.8541%" y="197" width="0.2413%" height="15" fill="rgb(215,223,47)" fg:x="3033" fg:w="21"/><text x="35.1041%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="35.1988%" y="197" width="0.0230%" height="15" fill="rgb(248,225,23)" fg:x="3063" fg:w="2"/><text x="35.4488%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="35.2218%" y="197" width="0.0115%" height="15" fill="rgb(250,108,0)" fg:x="3065" fg:w="1"/><text x="35.4718%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="35.2333%" y="197" width="0.0230%" height="15" fill="rgb(228,208,7)" fg:x="3066" fg:w="2"/><text x="35.4833%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="35.2563%" y="165" width="0.0230%" height="15" fill="rgb(244,45,10)" fg:x="3068" fg:w="2"/><text x="35.5063%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="35.2563%" y="197" width="0.0345%" height="15" fill="rgb(207,125,25)" fg:x="3068" fg:w="3"/><text x="35.5063%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.03%)</title><rect x="35.2563%" y="181" width="0.0345%" height="15" fill="rgb(210,195,18)" fg:x="3068" fg:w="3"/><text x="35.5063%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="35.2792%" y="165" width="0.0115%" height="15" fill="rgb(249,80,12)" fg:x="3070" fg:w="1"/><text x="35.5292%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="35.2907%" y="197" width="0.0115%" height="15" fill="rgb(221,65,9)" fg:x="3071" fg:w="1"/><text x="35.5407%" y="207.50"></text></g><g><title>transaction_splitter`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="35.3022%" y="197" width="0.0115%" height="15" fill="rgb(235,49,36)" fg:x="3072" fg:w="1"/><text x="35.5522%" y="207.50"></text></g><g><title>transaction_splitter`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (2 samples, 0.02%)</title><rect x="35.3137%" y="197" width="0.0230%" height="15" fill="rgb(225,32,20)" fg:x="3073" fg:w="2"/><text x="35.5637%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="35.4516%" y="181" width="0.0230%" height="15" fill="rgb(215,141,46)" fg:x="3085" fg:w="2"/><text x="35.7016%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.02%)</title><rect x="35.4746%" y="181" width="0.0230%" height="15" fill="rgb(250,160,47)" fg:x="3087" fg:w="2"/><text x="35.7246%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.09%)</title><rect x="35.4976%" y="181" width="0.0919%" height="15" fill="rgb(216,222,40)" fg:x="3089" fg:w="8"/><text x="35.7476%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.06%)</title><rect x="35.5321%" y="165" width="0.0575%" height="15" fill="rgb(234,217,39)" fg:x="3092" fg:w="5"/><text x="35.7821%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="35.5780%" y="149" width="0.0115%" height="15" fill="rgb(207,178,40)" fg:x="3096" fg:w="1"/><text x="35.8280%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.09%)</title><rect x="35.5895%" y="181" width="0.0919%" height="15" fill="rgb(221,136,13)" fg:x="3097" fg:w="8"/><text x="35.8395%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.07%)</title><rect x="35.6125%" y="165" width="0.0689%" height="15" fill="rgb(249,199,10)" fg:x="3099" fg:w="6"/><text x="35.8625%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.07%)</title><rect x="35.6125%" y="149" width="0.0689%" height="15" fill="rgb(249,222,13)" fg:x="3099" fg:w="6"/><text x="35.8625%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="35.6700%" y="133" width="0.0115%" height="15" fill="rgb(244,185,38)" fg:x="3104" fg:w="1"/><text x="35.9200%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="35.6815%" y="181" width="0.0115%" height="15" fill="rgb(236,202,9)" fg:x="3105" fg:w="1"/><text x="35.9315%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="35.6929%" y="181" width="0.0115%" height="15" fill="rgb(250,229,37)" fg:x="3106" fg:w="1"/><text x="35.9429%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="35.7044%" y="181" width="0.0230%" height="15" fill="rgb(206,174,23)" fg:x="3107" fg:w="2"/><text x="35.9544%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="35.8653%" y="149" width="0.0115%" height="15" fill="rgb(211,33,43)" fg:x="3121" fg:w="1"/><text x="36.1153%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.01%)</title><rect x="35.8998%" y="133" width="0.0115%" height="15" fill="rgb(245,58,50)" fg:x="3124" fg:w="1"/><text x="36.1498%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="35.9113%" y="133" width="0.0230%" height="15" fill="rgb(244,68,36)" fg:x="3125" fg:w="2"/><text x="36.1613%" y="143.50"></text></g><g><title>transaction_splitter`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.24%)</title><rect x="35.7274%" y="181" width="0.2413%" height="15" fill="rgb(232,229,15)" fg:x="3109" fg:w="21"/><text x="35.9774%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.10%)</title><rect x="35.8653%" y="165" width="0.1034%" height="15" fill="rgb(254,30,23)" fg:x="3121" fg:w="9"/><text x="36.1153%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.09%)</title><rect x="35.8768%" y="149" width="0.0919%" height="15" fill="rgb(235,160,14)" fg:x="3122" fg:w="8"/><text x="36.1268%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="35.9343%" y="133" width="0.0345%" height="15" fill="rgb(212,155,44)" fg:x="3127" fg:w="3"/><text x="36.1843%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.01%)</title><rect x="35.9573%" y="117" width="0.0115%" height="15" fill="rgb(226,2,50)" fg:x="3129" fg:w="1"/><text x="36.2073%" y="127.50"></text></g><g><title>transaction_splitter`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (6 samples, 0.07%)</title><rect x="35.9687%" y="181" width="0.0689%" height="15" fill="rgb(234,177,6)" fg:x="3130" fg:w="6"/><text x="36.2187%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.01%)</title><rect x="36.0377%" y="165" width="0.0115%" height="15" fill="rgb(217,24,9)" fg:x="3136" fg:w="1"/><text x="36.2877%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (2 samples, 0.02%)</title><rect x="36.0952%" y="149" width="0.0230%" height="15" fill="rgb(220,13,46)" fg:x="3141" fg:w="2"/><text x="36.3452%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="36.1641%" y="133" width="0.0230%" height="15" fill="rgb(239,221,27)" fg:x="3147" fg:w="2"/><text x="36.4141%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.15%)</title><rect x="36.0492%" y="165" width="0.1494%" height="15" fill="rgb(222,198,25)" fg:x="3137" fg:w="13"/><text x="36.2992%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.08%)</title><rect x="36.1181%" y="149" width="0.0804%" height="15" fill="rgb(211,99,13)" fg:x="3143" fg:w="7"/><text x="36.3681%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="36.1871%" y="133" width="0.0115%" height="15" fill="rgb(232,111,31)" fg:x="3149" fg:w="1"/><text x="36.4371%" y="143.50"></text></g><g><title>transaction_splitter`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="36.1986%" y="165" width="0.0115%" height="15" fill="rgb(245,82,37)" fg:x="3150" fg:w="1"/><text x="36.4486%" y="175.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (17 samples, 0.20%)</title><rect x="36.0377%" y="181" width="0.1954%" height="15" fill="rgb(227,149,46)" fg:x="3136" fg:w="17"/><text x="36.2877%" y="191.50"></text></g><g><title>transaction_splitter`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (2 samples, 0.02%)</title><rect x="36.2101%" y="165" width="0.0230%" height="15" fill="rgb(218,36,50)" fg:x="3151" fg:w="2"/><text x="36.4601%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="36.2101%" y="149" width="0.0230%" height="15" fill="rgb(226,80,48)" fg:x="3151" fg:w="2"/><text x="36.4601%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="36.2216%" y="133" width="0.0115%" height="15" fill="rgb(238,224,15)" fg:x="3152" fg:w="1"/><text x="36.4716%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="36.2216%" y="117" width="0.0115%" height="15" fill="rgb(241,136,10)" fg:x="3152" fg:w="1"/><text x="36.4716%" y="127.50"></text></g><g><title>transaction_splitter`fuel_crypto::hasher::Hasher::finalize (5 samples, 0.06%)</title><rect x="36.2330%" y="181" width="0.0575%" height="15" fill="rgb(208,32,45)" fg:x="3153" fg:w="5"/><text x="36.4830%" y="191.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (119 samples, 1.37%)</title><rect x="35.3367%" y="197" width="1.3675%" height="15" fill="rgb(207,135,9)" fg:x="3075" fg:w="119"/><text x="35.5867%" y="207.50"></text></g><g><title>transaction_splitter`sha2::sha256::compress256 (36 samples, 0.41%)</title><rect x="36.2905%" y="181" width="0.4137%" height="15" fill="rgb(206,86,44)" fg:x="3158" fg:w="36"/><text x="36.5405%" y="191.50"></text></g><g><title>transaction_splitter`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="36.7042%" y="197" width="0.0115%" height="15" fill="rgb(245,177,15)" fg:x="3194" fg:w="1"/><text x="36.9542%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="36.7157%" y="181" width="0.0115%" height="15" fill="rgb(206,64,50)" fg:x="3195" fg:w="1"/><text x="36.9657%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.02%)</title><rect x="36.7846%" y="133" width="0.0230%" height="15" fill="rgb(234,36,40)" fg:x="3201" fg:w="2"/><text x="37.0346%" y="143.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.11%)</title><rect x="36.7157%" y="197" width="0.1149%" height="15" fill="rgb(213,64,8)" fg:x="3195" fg:w="10"/><text x="36.9657%" y="207.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (9 samples, 0.10%)</title><rect x="36.7272%" y="181" width="0.1034%" height="15" fill="rgb(210,75,36)" fg:x="3196" fg:w="9"/><text x="36.9772%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.10%)</title><rect x="36.7272%" y="165" width="0.1034%" height="15" fill="rgb(229,88,21)" fg:x="3196" fg:w="9"/><text x="36.9772%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.09%)</title><rect x="36.7387%" y="149" width="0.0919%" height="15" fill="rgb(252,204,47)" fg:x="3197" fg:w="8"/><text x="36.9887%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="36.8076%" y="133" width="0.0230%" height="15" fill="rgb(208,77,27)" fg:x="3203" fg:w="2"/><text x="37.0576%" y="143.50"></text></g><g><title>transaction_splitter`fuel_crypto::hasher::Hasher::finalize (1 samples, 0.01%)</title><rect x="36.8306%" y="197" width="0.0115%" height="15" fill="rgb(221,76,26)" fg:x="3205" fg:w="1"/><text x="37.0806%" y="207.50"></text></g><g><title>transaction_splitter`fuel_tx::transaction::types::script::_&lt;impl fuel_tx::transaction::metadata::Cacheable for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::precompute (468 samples, 5.38%)</title><rect x="35.0954%" y="213" width="5.3781%" height="15" fill="rgb(225,139,18)" fg:x="3054" fg:w="468"/><text x="35.3454%" y="223.50">transac..</text></g><g><title>transaction_splitter`sha2::sha256::compress256 (316 samples, 3.63%)</title><rect x="36.8421%" y="197" width="3.6313%" height="15" fill="rgb(230,137,11)" fg:x="3206" fg:w="316"/><text x="37.0921%" y="207.50">tran..</text></g><g><title>transaction_splitter`fuel_types::canonical::Serialize::size (3 samples, 0.03%)</title><rect x="40.4735%" y="213" width="0.0345%" height="15" fill="rgb(212,28,1)" fg:x="3522" fg:w="3"/><text x="40.7235%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="40.5309%" y="197" width="0.0345%" height="15" fill="rgb(248,164,17)" fg:x="3527" fg:w="3"/><text x="40.7809%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="40.5424%" y="181" width="0.0230%" height="15" fill="rgb(222,171,42)" fg:x="3528" fg:w="2"/><text x="40.7924%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="40.5424%" y="165" width="0.0230%" height="15" fill="rgb(243,84,45)" fg:x="3528" fg:w="2"/><text x="40.7924%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="40.5539%" y="149" width="0.0115%" height="15" fill="rgb(252,49,23)" fg:x="3529" fg:w="1"/><text x="40.8039%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="40.5654%" y="197" width="0.0115%" height="15" fill="rgb(215,19,7)" fg:x="3530" fg:w="1"/><text x="40.8154%" y="207.50"></text></g><g><title>transaction_splitter`&lt;alloc::vec::Vec&lt;u8&gt; as fuel_types::canonical::Output&gt;::write (3 samples, 0.03%)</title><rect x="40.5769%" y="197" width="0.0345%" height="15" fill="rgb(238,81,41)" fg:x="3531" fg:w="3"/><text x="40.8269%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.05%)</title><rect x="40.6343%" y="181" width="0.0460%" height="15" fill="rgb(210,199,37)" fg:x="3536" fg:w="4"/><text x="40.8843%" y="191.50"></text></g><g><title>transaction_splitter`&lt;alloc::vec::Vec&lt;u8&gt; as fuel_types::canonical::Output&gt;::write (3 samples, 0.03%)</title><rect x="40.6803%" y="181" width="0.0345%" height="15" fill="rgb(244,192,49)" fg:x="3540" fg:w="3"/><text x="40.9303%" y="191.50"></text></g><g><title>transaction_splitter`fuel_types::canonical::Serialize::to_bytes (20 samples, 0.23%)</title><rect x="40.5079%" y="213" width="0.2298%" height="15" fill="rgb(226,211,11)" fg:x="3525" fg:w="20"/><text x="40.7579%" y="223.50"></text></g><g><title>transaction_splitter`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (11 samples, 0.13%)</title><rect x="40.6114%" y="197" width="0.1264%" height="15" fill="rgb(236,162,54)" fg:x="3534" fg:w="11"/><text x="40.8614%" y="207.50"></text></g><g><title>transaction_splitter`DYLD-STUB$$memcpy (2 samples, 0.02%)</title><rect x="40.7148%" y="181" width="0.0230%" height="15" fill="rgb(220,229,9)" fg:x="3543" fg:w="2"/><text x="40.9648%" y="191.50"></text></g><g><title>transaction_splitter`&lt;fuel_asm::Instruction as core::convert::TryFrom&lt;[u8 (1 samples, 0.01%)</title><rect x="40.7607%" y="197" width="0.0115%" height="15" fill="rgb(250,87,22)" fg:x="3547" fg:w="1"/><text x="41.0107%" y="207.50"></text></g><g><title> 4]&gt;&gt;::try_from (1 samples, 0.01%)</title><rect x="40.7607%" y="181" width="0.0115%" height="15" fill="rgb(239,43,17)" fg:x="3547" fg:w="1"/><text x="41.0107%" y="191.50"></text></g><g><title>transaction_splitter`&lt;fuel_asm::Opcode as core::convert::TryFrom&lt;u8&gt;&gt;::try_from (1 samples, 0.01%)</title><rect x="40.7722%" y="197" width="0.0115%" height="15" fill="rgb(231,177,25)" fg:x="3548" fg:w="1"/><text x="41.0222%" y="207.50"></text></g><g><title>transaction_splitter`fuel_crypto::ed25519::verify (1 samples, 0.01%)</title><rect x="40.7837%" y="197" width="0.0115%" height="15" fill="rgb(219,179,1)" fg:x="3549" fg:w="1"/><text x="41.0337%" y="207.50"></text></g><g><title>transaction_splitter`fuel_tx::transaction::types::input::Input::predicate_data_offset (1 samples, 0.01%)</title><rect x="40.7952%" y="197" width="0.0115%" height="15" fill="rgb(238,219,53)" fg:x="3550" fg:w="1"/><text x="41.0452%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="40.8182%" y="181" width="0.0115%" height="15" fill="rgb(232,167,36)" fg:x="3552" fg:w="1"/><text x="41.0682%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="40.8412%" y="165" width="0.0115%" height="15" fill="rgb(244,19,51)" fg:x="3554" fg:w="1"/><text x="41.0912%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="40.8527%" y="165" width="0.0115%" height="15" fill="rgb(224,6,22)" fg:x="3555" fg:w="1"/><text x="41.1027%" y="175.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (12 samples, 0.14%)</title><rect x="40.8642%" y="165" width="0.1379%" height="15" fill="rgb(224,145,5)" fg:x="3556" fg:w="12"/><text x="41.1142%" y="175.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (8 samples, 0.09%)</title><rect x="41.0021%" y="165" width="0.0919%" height="15" fill="rgb(234,130,49)" fg:x="3568" fg:w="8"/><text x="41.2521%" y="175.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (20 samples, 0.23%)</title><rect x="41.1974%" y="149" width="0.2298%" height="15" fill="rgb(254,6,2)" fg:x="3585" fg:w="20"/><text x="41.4474%" y="159.50"></text></g><g><title>transaction_splitter`&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (5 samples, 0.06%)</title><rect x="41.4273%" y="149" width="0.0575%" height="15" fill="rgb(208,96,46)" fg:x="3605" fg:w="5"/><text x="41.6773%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (315 samples, 3.62%)</title><rect x="41.4847%" y="149" width="3.6199%" height="15" fill="rgb(239,3,39)" fg:x="3610" fg:w="315"/><text x="41.7347%" y="159.50">tran..</text></g><g><title>transaction_splitter`curve25519_dalek::field::_&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (1 samples, 0.01%)</title><rect x="45.1046%" y="149" width="0.0115%" height="15" fill="rgb(233,210,1)" fg:x="3925" fg:w="1"/><text x="45.3546%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::edwards::CompressedEdwardsY::decompress (354 samples, 4.07%)</title><rect x="41.0940%" y="165" width="4.0680%" height="15" fill="rgb(244,137,37)" fg:x="3576" fg:w="354"/><text x="41.3440%" y="175.50">tran..</text></g><g><title>transaction_splitter`subtle::black_box (4 samples, 0.05%)</title><rect x="45.1161%" y="149" width="0.0460%" height="15" fill="rgb(240,136,2)" fg:x="3926" fg:w="4"/><text x="45.3661%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::edwards::EdwardsPoint::compress (1 samples, 0.01%)</title><rect x="45.1620%" y="165" width="0.0115%" height="15" fill="rgb(239,18,37)" fg:x="3930" fg:w="1"/><text x="45.4120%" y="175.50"></text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::reduce (4 samples, 0.05%)</title><rect x="45.1735%" y="165" width="0.0460%" height="15" fill="rgb(218,185,22)" fg:x="3931" fg:w="4"/><text x="45.4235%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="45.2769%" y="149" width="0.0115%" height="15" fill="rgb(225,218,4)" fg:x="3940" fg:w="1"/><text x="45.5269%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="45.2769%" y="133" width="0.0115%" height="15" fill="rgb(230,182,32)" fg:x="3940" fg:w="1"/><text x="45.5269%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="45.2769%" y="117" width="0.0115%" height="15" fill="rgb(242,56,43)" fg:x="3940" fg:w="1"/><text x="45.5269%" y="127.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (629 samples, 7.23%)</title><rect x="45.2884%" y="149" width="7.2282%" height="15" fill="rgb(233,99,24)" fg:x="3941" fg:w="629"/><text x="45.5384%" y="159.50">transactio..</text></g><g><title>transaction_splitter`&lt;curve25519_dalek::edwards::EdwardsPoint as subtle::ConstantTimeEq&gt;::ct_eq (9 samples, 0.10%)</title><rect x="52.5167%" y="149" width="0.1034%" height="15" fill="rgb(234,209,42)" fg:x="4570" fg:w="9"/><text x="52.7667%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (19 samples, 0.22%)</title><rect x="52.6201%" y="149" width="0.2183%" height="15" fill="rgb(227,7,12)" fg:x="4579" fg:w="19"/><text x="52.8701%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (1 samples, 0.01%)</title><rect x="52.8384%" y="149" width="0.0115%" height="15" fill="rgb(245,203,43)" fg:x="4598" fg:w="1"/><text x="53.0884%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (2 samples, 0.02%)</title><rect x="52.8499%" y="149" width="0.0230%" height="15" fill="rgb(238,205,33)" fg:x="4599" fg:w="2"/><text x="53.0999%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (3 samples, 0.03%)</title><rect x="52.8729%" y="149" width="0.0345%" height="15" fill="rgb(231,56,7)" fg:x="4601" fg:w="3"/><text x="53.1229%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (18 samples, 0.21%)</title><rect x="52.9074%" y="149" width="0.2068%" height="15" fill="rgb(244,186,29)" fg:x="4604" fg:w="18"/><text x="53.1574%" y="159.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (19 samples, 0.22%)</title><rect x="53.2981%" y="133" width="0.2183%" height="15" fill="rgb(234,111,31)" fg:x="4638" fg:w="19"/><text x="53.5481%" y="143.50"></text></g><g><title>transaction_splitter`&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (6 samples, 0.07%)</title><rect x="53.5164%" y="133" width="0.0689%" height="15" fill="rgb(241,149,10)" fg:x="4657" fg:w="6"/><text x="53.7664%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (324 samples, 3.72%)</title><rect x="53.5854%" y="133" width="3.7233%" height="15" fill="rgb(249,206,44)" fg:x="4663" fg:w="324"/><text x="53.8354%" y="143.50">tran..</text></g><g><title>transaction_splitter`curve25519_dalek::field::_&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (1 samples, 0.01%)</title><rect x="57.3087%" y="133" width="0.0115%" height="15" fill="rgb(251,153,30)" fg:x="4987" fg:w="1"/><text x="57.5587%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::edwards::CompressedEdwardsY::decompress (367 samples, 4.22%)</title><rect x="53.1142%" y="149" width="4.2174%" height="15" fill="rgb(239,152,38)" fg:x="4622" fg:w="367"/><text x="53.3642%" y="159.50">trans..</text></g><g><title>transaction_splitter`subtle::black_box (1 samples, 0.01%)</title><rect x="57.3202%" y="133" width="0.0115%" height="15" fill="rgb(249,139,47)" fg:x="4988" fg:w="1"/><text x="57.5702%" y="143.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (9 samples, 0.10%)</title><rect x="57.3431%" y="133" width="0.1034%" height="15" fill="rgb(244,64,35)" fg:x="4990" fg:w="9"/><text x="57.5931%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (185 samples, 2.13%)</title><rect x="57.4466%" y="133" width="2.1259%" height="15" fill="rgb(216,46,15)" fg:x="4999" fg:w="185"/><text x="57.6966%" y="143.50">t..</text></g><g><title>transaction_splitter`curve25519_dalek::edwards::EdwardsPoint::compress (196 samples, 2.25%)</title><rect x="57.3316%" y="149" width="2.2524%" height="15" fill="rgb(250,74,19)" fg:x="4989" fg:w="196"/><text x="57.5816%" y="159.50">t..</text></g><g><title>transaction_splitter`curve25519_dalek::field::_&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::pow22501 (1 samples, 0.01%)</title><rect x="59.5725%" y="133" width="0.0115%" height="15" fill="rgb(249,42,33)" fg:x="5184" fg:w="1"/><text x="59.8225%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (13 samples, 0.15%)</title><rect x="59.5840%" y="149" width="0.1494%" height="15" fill="rgb(242,149,17)" fg:x="5185" fg:w="13"/><text x="59.8340%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (12 samples, 0.14%)</title><rect x="59.5955%" y="133" width="0.1379%" height="15" fill="rgb(244,29,21)" fg:x="5186" fg:w="12"/><text x="59.8455%" y="143.50"></text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (171 samples, 1.97%)</title><rect x="61.1584%" y="133" width="1.9651%" height="15" fill="rgb(220,130,37)" fg:x="5322" fg:w="171"/><text x="61.4084%" y="143.50">t..</text></g><g><title>transaction_splitter`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (6 samples, 0.07%)</title><rect x="63.1694%" y="117" width="0.0689%" height="15" fill="rgb(211,67,2)" fg:x="5497" fg:w="6"/><text x="63.4194%" y="127.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (3 samples, 0.03%)</title><rect x="63.2383%" y="117" width="0.0345%" height="15" fill="rgb(235,68,52)" fg:x="5503" fg:w="3"/><text x="63.4883%" y="127.50"></text></g><g><title>transaction_splitter`&lt;curve25519_dalek::window::NafLookupTable5&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (15 samples, 0.17%)</title><rect x="63.1234%" y="133" width="0.1724%" height="15" fill="rgb(246,142,3)" fg:x="5493" fg:w="15"/><text x="63.3734%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2 samples, 0.02%)</title><rect x="63.2728%" y="117" width="0.0230%" height="15" fill="rgb(241,25,7)" fg:x="5506" fg:w="2"/><text x="63.5228%" y="127.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (68 samples, 0.78%)</title><rect x="63.2958%" y="133" width="0.7814%" height="15" fill="rgb(242,119,39)" fg:x="5508" fg:w="68"/><text x="63.5458%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (3 samples, 0.03%)</title><rect x="64.0772%" y="133" width="0.0345%" height="15" fill="rgb(241,98,45)" fg:x="5576" fg:w="3"/><text x="64.3272%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (15 samples, 0.17%)</title><rect x="64.1117%" y="133" width="0.1724%" height="15" fill="rgb(254,28,30)" fg:x="5579" fg:w="15"/><text x="64.3617%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (9 samples, 0.10%)</title><rect x="64.2841%" y="133" width="0.1034%" height="15" fill="rgb(241,142,54)" fg:x="5594" fg:w="9"/><text x="64.5341%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (9 samples, 0.10%)</title><rect x="64.3875%" y="133" width="0.1034%" height="15" fill="rgb(222,85,15)" fg:x="5603" fg:w="9"/><text x="64.6375%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::edwards::EdwardsPoint::vartime_double_scalar_mul_basepoint (874 samples, 10.04%)</title><rect x="59.7334%" y="149" width="10.0437%" height="15" fill="rgb(210,85,47)" fg:x="5198" fg:w="874"/><text x="59.9834%" y="159.50">transaction_spl..</text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (460 samples, 5.29%)</title><rect x="64.4909%" y="133" width="5.2861%" height="15" fill="rgb(224,206,25)" fg:x="5612" fg:w="460"/><text x="64.7409%" y="143.50">transa..</text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (1 samples, 0.01%)</title><rect x="69.7771%" y="149" width="0.0115%" height="15" fill="rgb(243,201,19)" fg:x="6072" fg:w="1"/><text x="70.0271%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (2 samples, 0.02%)</title><rect x="69.7886%" y="133" width="0.0230%" height="15" fill="rgb(236,59,4)" fg:x="6073" fg:w="2"/><text x="70.0386%" y="143.50"></text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::from_hash (3 samples, 0.03%)</title><rect x="69.7886%" y="149" width="0.0345%" height="15" fill="rgb(254,179,45)" fg:x="6073" fg:w="3"/><text x="70.0386%" y="159.50"></text></g><g><title>transaction_splitter`curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (1 samples, 0.01%)</title><rect x="69.8115%" y="133" width="0.0115%" height="15" fill="rgb(226,14,10)" fg:x="6075" fg:w="1"/><text x="70.0615%" y="143.50"></text></g><g><title>transaction_splitter`sha2::sha512::compress512 (18 samples, 0.21%)</title><rect x="69.8230%" y="149" width="0.2068%" height="15" fill="rgb(244,27,41)" fg:x="6076" fg:w="18"/><text x="70.0730%" y="159.50"></text></g><g><title>transaction_splitter`fuel_vm::interpreter::crypto::ed25519_verify (2,544 samples, 29.23%)</title><rect x="40.8067%" y="197" width="29.2347%" height="15" fill="rgb(235,35,32)" fg:x="3551" fg:w="2544"/><text x="41.0567%" y="207.50">transaction_splitter`fuel_vm::interpreter::cryp..</text></g><g><title>transaction_splitter`fuel_crypto::ed25519::verify (2,542 samples, 29.21%)</title><rect x="40.8297%" y="181" width="29.2117%" height="15" fill="rgb(218,68,31)" fg:x="3553" fg:w="2542"/><text x="41.0797%" y="191.50">transaction_splitter`fuel_crypto::ed25519::veri..</text></g><g><title>transaction_splitter`ed25519_dalek::verifying::VerifyingKey::verify_strict (2,160 samples, 24.82%)</title><rect x="45.2195%" y="165" width="24.8219%" height="15" fill="rgb(207,120,37)" fg:x="3935" fg:w="2160"/><text x="45.4695%" y="175.50">transaction_splitter`ed25519_dalek::veri..</text></g><g><title>transaction_splitter`subtle::black_box (1 samples, 0.01%)</title><rect x="70.0299%" y="149" width="0.0115%" height="15" fill="rgb(227,98,0)" fg:x="6094" fg:w="1"/><text x="70.2799%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="70.0644%" y="165" width="0.0115%" height="15" fill="rgb(207,7,3)" fg:x="6097" fg:w="1"/><text x="70.3144%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="70.1103%" y="117" width="0.0115%" height="15" fill="rgb(206,98,19)" fg:x="6101" fg:w="1"/><text x="70.3603%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.06%)</title><rect x="70.0758%" y="149" width="0.0575%" height="15" fill="rgb(217,5,26)" fg:x="6098" fg:w="5"/><text x="70.3258%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.06%)</title><rect x="70.0758%" y="133" width="0.0575%" height="15" fill="rgb(235,190,38)" fg:x="6098" fg:w="5"/><text x="70.3258%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="70.1218%" y="117" width="0.0115%" height="15" fill="rgb(247,86,24)" fg:x="6102" fg:w="1"/><text x="70.3718%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="70.1333%" y="149" width="0.0115%" height="15" fill="rgb(205,101,16)" fg:x="6103" fg:w="1"/><text x="70.3833%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="70.1333%" y="133" width="0.0115%" height="15" fill="rgb(246,168,33)" fg:x="6103" fg:w="1"/><text x="70.3833%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="70.1333%" y="117" width="0.0115%" height="15" fill="rgb(231,114,1)" fg:x="6103" fg:w="1"/><text x="70.3833%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="70.1448%" y="101" width="0.0115%" height="15" fill="rgb(207,184,53)" fg:x="6104" fg:w="1"/><text x="70.3948%" y="111.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.03%)</title><rect x="70.1448%" y="149" width="0.0345%" height="15" fill="rgb(224,95,51)" fg:x="6104" fg:w="3"/><text x="70.3948%" y="159.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="70.1448%" y="133" width="0.0345%" height="15" fill="rgb(212,188,45)" fg:x="6104" fg:w="3"/><text x="70.3948%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="70.1448%" y="117" width="0.0345%" height="15" fill="rgb(223,154,38)" fg:x="6104" fg:w="3"/><text x="70.3948%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="70.1563%" y="101" width="0.0230%" height="15" fill="rgb(251,22,52)" fg:x="6105" fg:w="2"/><text x="70.4063%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="70.1563%" y="85" width="0.0230%" height="15" fill="rgb(229,209,22)" fg:x="6105" fg:w="2"/><text x="70.4063%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="70.1793%" y="133" width="0.0230%" height="15" fill="rgb(234,138,34)" fg:x="6107" fg:w="2"/><text x="70.4293%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="70.2252%" y="85" width="0.0115%" height="15" fill="rgb(212,95,11)" fg:x="6111" fg:w="1"/><text x="70.4752%" y="95.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.05%)</title><rect x="70.2023%" y="133" width="0.0460%" height="15" fill="rgb(240,179,47)" fg:x="6109" fg:w="4"/><text x="70.4523%" y="143.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="70.2137%" y="117" width="0.0345%" height="15" fill="rgb(240,163,11)" fg:x="6110" fg:w="3"/><text x="70.4637%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="70.2252%" y="101" width="0.0230%" height="15" fill="rgb(236,37,12)" fg:x="6111" fg:w="2"/><text x="70.4752%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="70.2367%" y="85" width="0.0115%" height="15" fill="rgb(232,164,16)" fg:x="6112" fg:w="1"/><text x="70.4867%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="70.2367%" y="69" width="0.0115%" height="15" fill="rgb(244,205,15)" fg:x="6112" fg:w="1"/><text x="70.4867%" y="79.50"></text></g><g><title>transaction_splitter`fuel_vm::interpreter::executors::instruction::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::instruction_inner (2,607 samples, 29.96%)</title><rect x="40.7378%" y="213" width="29.9586%" height="15" fill="rgb(223,117,47)" fg:x="3545" fg:w="2607"/><text x="40.9878%" y="223.50">transaction_splitter`fuel_vm::interpreter::execu..</text></g><g><title>transaction_splitter`fuel_vm::interpreter::flow::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::ret (57 samples, 0.66%)</title><rect x="70.0414%" y="197" width="0.6550%" height="15" fill="rgb(244,107,35)" fg:x="6095" fg:w="57"/><text x="70.2914%" y="207.50"></text></g><g><title>transaction_splitter`fuel_vm::interpreter::flow::RetCtx::return_from_context (57 samples, 0.66%)</title><rect x="70.0414%" y="181" width="0.6550%" height="15" fill="rgb(205,140,8)" fg:x="6095" fg:w="57"/><text x="70.2914%" y="191.50"></text></g><g><title>transaction_splitter`fuel_vm::interpreter::receipts::ReceiptsCtx::push (54 samples, 0.62%)</title><rect x="70.0758%" y="165" width="0.6205%" height="15" fill="rgb(228,84,46)" fg:x="6098" fg:w="54"/><text x="70.3258%" y="175.50"></text></g><g><title>transaction_splitter`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (45 samples, 0.52%)</title><rect x="70.1793%" y="149" width="0.5171%" height="15" fill="rgb(254,188,9)" fg:x="6107" fg:w="45"/><text x="70.4293%" y="159.50"></text></g><g><title>transaction_splitter`sha2::sha256::compress256 (39 samples, 0.45%)</title><rect x="70.2482%" y="133" width="0.4482%" height="15" fill="rgb(206,112,54)" fg:x="6113" fg:w="39"/><text x="70.4982%" y="143.50"></text></g><g><title>transaction_splitter`fuel_vm::interpreter::gas::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::gas_charge (1 samples, 0.01%)</title><rect x="70.6964%" y="213" width="0.0115%" height="15" fill="rgb(216,84,49)" fg:x="6152" fg:w="1"/><text x="70.9464%" y="223.50"></text></g><g><title>transaction_splitter`fuel_vm::interpreter::gas::dependent_gas_charge (1 samples, 0.01%)</title><rect x="70.7079%" y="213" width="0.0115%" height="15" fill="rgb(214,194,35)" fg:x="6153" fg:w="1"/><text x="70.9579%" y="223.50"></text></g><g><title>transaction_splitter`sha2::sha256::compress256 (28 samples, 0.32%)</title><rect x="70.7194%" y="213" width="0.3218%" height="15" fill="rgb(249,28,3)" fg:x="6154" fg:w="28"/><text x="70.9694%" y="223.50"></text></g><g><title>transaction_splitter`sha2::sha512::compress512 (52 samples, 0.60%)</title><rect x="71.0411%" y="213" width="0.5976%" height="15" fill="rgb(222,56,52)" fg:x="6182" fg:w="52"/><text x="71.2911%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__lseek (29 samples, 0.33%)</title><rect x="71.6732%" y="197" width="0.3333%" height="15" fill="rgb(245,217,50)" fg:x="6237" fg:w="29"/><text x="71.9232%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`close (37 samples, 0.43%)</title><rect x="72.0064%" y="197" width="0.4252%" height="15" fill="rgb(213,201,24)" fg:x="6266" fg:w="37"/><text x="72.2564%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`fstat (54 samples, 0.62%)</title><rect x="72.4316%" y="197" width="0.6205%" height="15" fill="rgb(248,116,28)" fg:x="6303" fg:w="54"/><text x="72.6816%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`open (1 samples, 0.01%)</title><rect x="73.0522%" y="197" width="0.0115%" height="15" fill="rgb(219,72,43)" fg:x="6357" fg:w="1"/><text x="73.3022%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="73.0637%" y="197" width="0.0115%" height="15" fill="rgb(209,138,14)" fg:x="6358" fg:w="1"/><text x="73.3137%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="73.0752%" y="197" width="0.0115%" height="15" fill="rgb(222,18,33)" fg:x="6359" fg:w="1"/><text x="73.3252%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.01%)</title><rect x="73.1556%" y="181" width="0.0115%" height="15" fill="rgb(213,199,7)" fg:x="6366" fg:w="1"/><text x="73.4056%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.02%)</title><rect x="73.2245%" y="165" width="0.0230%" height="15" fill="rgb(250,110,10)" fg:x="6372" fg:w="2"/><text x="73.4745%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.18%)</title><rect x="73.0866%" y="197" width="0.1839%" height="15" fill="rgb(248,123,6)" fg:x="6360" fg:w="16"/><text x="73.3366%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.10%)</title><rect x="73.1671%" y="181" width="0.1034%" height="15" fill="rgb(206,91,31)" fg:x="6367" fg:w="9"/><text x="73.4171%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.02%)</title><rect x="73.2475%" y="165" width="0.0230%" height="15" fill="rgb(211,154,13)" fg:x="6374" fg:w="2"/><text x="73.4975%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="73.2705%" y="197" width="0.0345%" height="15" fill="rgb(225,148,7)" fg:x="6376" fg:w="3"/><text x="73.5205%" y="207.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.01%)</title><rect x="73.3050%" y="197" width="0.0115%" height="15" fill="rgb(220,160,43)" fg:x="6379" fg:w="1"/><text x="73.5550%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`read (59 samples, 0.68%)</title><rect x="73.3165%" y="181" width="0.6780%" height="15" fill="rgb(213,52,39)" fg:x="6380" fg:w="59"/><text x="73.5665%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="73.9945%" y="181" width="0.0115%" height="15" fill="rgb(243,137,7)" fg:x="6439" fg:w="1"/><text x="74.2445%" y="191.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="74.0060%" y="181" width="0.0115%" height="15" fill="rgb(230,79,13)" fg:x="6440" fg:w="1"/><text x="74.2560%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="74.0060%" y="165" width="0.0115%" height="15" fill="rgb(247,105,23)" fg:x="6440" fg:w="1"/><text x="74.2560%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="74.0060%" y="149" width="0.0115%" height="15" fill="rgb(223,179,41)" fg:x="6440" fg:w="1"/><text x="74.2560%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="74.0060%" y="133" width="0.0115%" height="15" fill="rgb(218,9,34)" fg:x="6440" fg:w="1"/><text x="74.2560%" y="143.50"></text></g><g><title>transaction_splitter`core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="74.0175%" y="181" width="0.0115%" height="15" fill="rgb(222,106,8)" fg:x="6441" fg:w="1"/><text x="74.2675%" y="191.50"></text></g><g><title>transaction_splitter`std::io::default_read_to_end::small_probe_read (1 samples, 0.01%)</title><rect x="74.0290%" y="181" width="0.0115%" height="15" fill="rgb(211,220,0)" fg:x="6442" fg:w="1"/><text x="74.2790%" y="191.50"></text></g><g><title>transaction_splitter`&lt;&amp;std::fs::File as std::io::Read&gt;::read_to_string (99 samples, 1.14%)</title><rect x="73.3165%" y="197" width="1.1377%" height="15" fill="rgb(229,52,16)" fg:x="6380" fg:w="99"/><text x="73.5665%" y="207.50"></text></g><g><title>transaction_splitter`std::io::default_read_to_end (36 samples, 0.41%)</title><rect x="74.0405%" y="181" width="0.4137%" height="15" fill="rgb(212,155,18)" fg:x="6443" fg:w="36"/><text x="74.2905%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`read (36 samples, 0.41%)</title><rect x="74.0405%" y="165" width="0.4137%" height="15" fill="rgb(242,21,14)" fg:x="6443" fg:w="36"/><text x="74.2905%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="74.5116%" y="181" width="0.0230%" height="15" fill="rgb(222,19,48)" fg:x="6484" fg:w="2"/><text x="74.7616%" y="191.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.05%)</title><rect x="74.5346%" y="181" width="0.0460%" height="15" fill="rgb(232,45,27)" fg:x="6486" fg:w="4"/><text x="74.7846%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="74.5576%" y="165" width="0.0230%" height="15" fill="rgb(249,103,42)" fg:x="6488" fg:w="2"/><text x="74.8076%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="74.5576%" y="149" width="0.0230%" height="15" fill="rgb(246,81,33)" fg:x="6488" fg:w="2"/><text x="74.8076%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="74.5576%" y="133" width="0.0230%" height="15" fill="rgb(252,33,42)" fg:x="6488" fg:w="2"/><text x="74.8076%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="74.5691%" y="117" width="0.0115%" height="15" fill="rgb(209,212,41)" fg:x="6489" fg:w="1"/><text x="74.8191%" y="127.50"></text></g><g><title>transaction_splitter`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (2 samples, 0.02%)</title><rect x="74.5806%" y="181" width="0.0230%" height="15" fill="rgb(207,154,6)" fg:x="6490" fg:w="2"/><text x="74.8306%" y="191.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15 samples, 0.17%)</title><rect x="74.4541%" y="197" width="0.1724%" height="15" fill="rgb(223,64,47)" fg:x="6479" fg:w="15"/><text x="74.7041%" y="207.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.02%)</title><rect x="74.6035%" y="181" width="0.0230%" height="15" fill="rgb(211,161,38)" fg:x="6492" fg:w="2"/><text x="74.8535%" y="191.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="74.6265%" y="197" width="0.0115%" height="15" fill="rgb(219,138,40)" fg:x="6494" fg:w="1"/><text x="74.8765%" y="207.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="74.6380%" y="197" width="0.0115%" height="15" fill="rgb(241,228,46)" fg:x="6495" fg:w="1"/><text x="74.8880%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__lseek (25 samples, 0.29%)</title><rect x="74.7299%" y="181" width="0.2873%" height="15" fill="rgb(223,209,38)" fg:x="6503" fg:w="25"/><text x="74.9799%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`fstat (45 samples, 0.52%)</title><rect x="75.0172%" y="181" width="0.5171%" height="15" fill="rgb(236,164,45)" fg:x="6528" fg:w="45"/><text x="75.2672%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`open (1 samples, 0.01%)</title><rect x="75.5344%" y="181" width="0.0115%" height="15" fill="rgb(231,15,5)" fg:x="6573" fg:w="1"/><text x="75.7844%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`stat (83 samples, 0.95%)</title><rect x="75.5459%" y="181" width="0.9538%" height="15" fill="rgb(252,35,15)" fg:x="6574" fg:w="83"/><text x="75.7959%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.01%)</title><rect x="76.4997%" y="181" width="0.0115%" height="15" fill="rgb(248,181,18)" fg:x="6657" fg:w="1"/><text x="76.7497%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="76.5111%" y="181" width="0.0230%" height="15" fill="rgb(233,39,42)" fg:x="6658" fg:w="2"/><text x="76.7611%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.02%)</title><rect x="76.5341%" y="181" width="0.0230%" height="15" fill="rgb(238,110,33)" fg:x="6660" fg:w="2"/><text x="76.7841%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="76.5801%" y="149" width="0.0115%" height="15" fill="rgb(233,195,10)" fg:x="6664" fg:w="1"/><text x="76.8301%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.05%)</title><rect x="76.5571%" y="181" width="0.0460%" height="15" fill="rgb(254,105,3)" fg:x="6662" fg:w="4"/><text x="76.8071%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.03%)</title><rect x="76.5686%" y="165" width="0.0345%" height="15" fill="rgb(221,225,9)" fg:x="6663" fg:w="3"/><text x="76.8186%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="76.5916%" y="149" width="0.0115%" height="15" fill="rgb(224,227,45)" fg:x="6665" fg:w="1"/><text x="76.8416%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="76.6031%" y="181" width="0.0115%" height="15" fill="rgb(229,198,43)" fg:x="6666" fg:w="1"/><text x="76.8531%" y="191.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (3 samples, 0.03%)</title><rect x="76.6146%" y="181" width="0.0345%" height="15" fill="rgb(206,209,35)" fg:x="6667" fg:w="3"/><text x="76.8646%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="76.6146%" y="165" width="0.0345%" height="15" fill="rgb(245,195,53)" fg:x="6667" fg:w="3"/><text x="76.8646%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="76.6376%" y="149" width="0.0115%" height="15" fill="rgb(240,92,26)" fg:x="6669" fg:w="1"/><text x="76.8876%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="76.6376%" y="133" width="0.0115%" height="15" fill="rgb(207,40,23)" fg:x="6669" fg:w="1"/><text x="76.8876%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`read (68 samples, 0.78%)</title><rect x="76.6490%" y="165" width="0.7814%" height="15" fill="rgb(223,111,35)" fg:x="6670" fg:w="68"/><text x="76.8990%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="77.4305%" y="165" width="0.0115%" height="15" fill="rgb(229,147,28)" fg:x="6738" fg:w="1"/><text x="77.6805%" y="175.50"></text></g><g><title>transaction_splitter`DYLD-STUB$$read (1 samples, 0.01%)</title><rect x="77.4420%" y="165" width="0.0115%" height="15" fill="rgb(211,29,28)" fg:x="6739" fg:w="1"/><text x="77.6920%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="77.4535%" y="149" width="0.0115%" height="15" fill="rgb(228,72,33)" fg:x="6740" fg:w="1"/><text x="77.7035%" y="159.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="77.4535%" y="165" width="0.0345%" height="15" fill="rgb(205,214,31)" fg:x="6740" fg:w="3"/><text x="77.7035%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="77.4650%" y="149" width="0.0230%" height="15" fill="rgb(224,111,15)" fg:x="6741" fg:w="2"/><text x="77.7150%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="77.4764%" y="133" width="0.0115%" height="15" fill="rgb(253,21,26)" fg:x="6742" fg:w="1"/><text x="77.7264%" y="143.50"></text></g><g><title>transaction_splitter`core::str::converts::from_utf8 (21 samples, 0.24%)</title><rect x="77.4879%" y="165" width="0.2413%" height="15" fill="rgb(245,139,43)" fg:x="6743" fg:w="21"/><text x="77.7379%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`read (54 samples, 0.62%)</title><rect x="77.7293%" y="149" width="0.6205%" height="15" fill="rgb(252,170,7)" fg:x="6764" fg:w="54"/><text x="77.9793%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="78.3498%" y="149" width="0.0115%" height="15" fill="rgb(231,118,14)" fg:x="6818" fg:w="1"/><text x="78.5998%" y="159.50"></text></g><g><title>transaction_splitter`&lt;&amp;std::fs::File as std::io::Read&gt;::read_to_string (150 samples, 1.72%)</title><rect x="76.6490%" y="181" width="1.7237%" height="15" fill="rgb(238,83,0)" fg:x="6670" fg:w="150"/><text x="76.8990%" y="191.50"></text></g><g><title>transaction_splitter`std::io::default_read_to_end (56 samples, 0.64%)</title><rect x="77.7293%" y="165" width="0.6435%" height="15" fill="rgb(221,39,39)" fg:x="6764" fg:w="56"/><text x="77.9793%" y="175.50"></text></g><g><title>transaction_splitter`DYLD-STUB$$read (1 samples, 0.01%)</title><rect x="78.3613%" y="149" width="0.0115%" height="15" fill="rgb(222,119,46)" fg:x="6819" fg:w="1"/><text x="78.6113%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.02%)</title><rect x="78.3958%" y="165" width="0.0230%" height="15" fill="rgb(222,165,49)" fg:x="6822" fg:w="2"/><text x="78.6458%" y="175.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.02%)</title><rect x="78.4188%" y="165" width="0.0230%" height="15" fill="rgb(219,113,52)" fg:x="6824" fg:w="2"/><text x="78.6688%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (1 samples, 0.01%)</title><rect x="78.5222%" y="133" width="0.0115%" height="15" fill="rgb(214,7,15)" fg:x="6833" fg:w="1"/><text x="78.7722%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="78.5222%" y="149" width="0.0230%" height="15" fill="rgb(235,32,4)" fg:x="6833" fg:w="2"/><text x="78.7722%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="78.5337%" y="133" width="0.0115%" height="15" fill="rgb(238,90,54)" fg:x="6834" fg:w="1"/><text x="78.7837%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="78.5337%" y="117" width="0.0115%" height="15" fill="rgb(213,208,19)" fg:x="6834" fg:w="1"/><text x="78.7837%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="78.5452%" y="149" width="0.0230%" height="15" fill="rgb(233,156,4)" fg:x="6835" fg:w="2"/><text x="78.7952%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.09%)</title><rect x="78.5681%" y="149" width="0.0919%" height="15" fill="rgb(207,194,5)" fg:x="6837" fg:w="8"/><text x="78.8181%" y="159.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (4 samples, 0.05%)</title><rect x="78.6601%" y="149" width="0.0460%" height="15" fill="rgb(206,111,30)" fg:x="6845" fg:w="4"/><text x="78.9101%" y="159.50"></text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.01%)</title><rect x="78.6946%" y="133" width="0.0115%" height="15" fill="rgb(243,70,54)" fg:x="6848" fg:w="1"/><text x="78.9446%" y="143.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (7 samples, 0.08%)</title><rect x="78.8669%" y="133" width="0.0804%" height="15" fill="rgb(242,28,8)" fg:x="6863" fg:w="7"/><text x="79.1169%" y="143.50"></text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::parse_integer (6 samples, 0.07%)</title><rect x="78.8784%" y="117" width="0.0689%" height="15" fill="rgb(219,106,18)" fg:x="6864" fg:w="6"/><text x="79.1284%" y="127.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.02%)</title><rect x="78.9818%" y="117" width="0.0230%" height="15" fill="rgb(244,222,10)" fg:x="6873" fg:w="2"/><text x="79.2318%" y="127.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.07%)</title><rect x="78.9474%" y="133" width="0.0689%" height="15" fill="rgb(236,179,52)" fg:x="6870" fg:w="6"/><text x="79.1974%" y="143.50"></text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.01%)</title><rect x="79.0048%" y="117" width="0.0115%" height="15" fill="rgb(213,23,39)" fg:x="6875" fg:w="1"/><text x="79.2548%" y="127.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (1 samples, 0.01%)</title><rect x="79.0508%" y="117" width="0.0115%" height="15" fill="rgb(238,48,10)" fg:x="6879" fg:w="1"/><text x="79.3008%" y="127.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.03%)</title><rect x="79.0623%" y="117" width="0.0345%" height="15" fill="rgb(251,196,23)" fg:x="6880" fg:w="3"/><text x="79.3123%" y="127.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (37 samples, 0.43%)</title><rect x="80.3264%" y="101" width="0.4252%" height="15" fill="rgb(250,152,24)" fg:x="6990" fg:w="37"/><text x="80.5764%" y="111.50"></text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::parse_integer (15 samples, 0.17%)</title><rect x="80.5792%" y="85" width="0.1724%" height="15" fill="rgb(209,150,17)" fg:x="7012" fg:w="15"/><text x="80.8292%" y="95.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_u64 (27 samples, 0.31%)</title><rect x="81.3376%" y="85" width="0.3103%" height="15" fill="rgb(234,202,34)" fg:x="7078" fg:w="27"/><text x="81.5876%" y="95.50"></text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::parse_integer (20 samples, 0.23%)</title><rect x="81.4181%" y="69" width="0.2298%" height="15" fill="rgb(253,148,53)" fg:x="7085" fg:w="20"/><text x="81.6681%" y="79.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.33%)</title><rect x="81.6479%" y="85" width="0.3333%" height="15" fill="rgb(218,129,16)" fg:x="7105" fg:w="29"/><text x="81.8979%" y="95.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (7 samples, 0.08%)</title><rect x="81.9007%" y="69" width="0.0804%" height="15" fill="rgb(216,85,19)" fg:x="7127" fg:w="7"/><text x="82.1507%" y="79.50"></text></g><g><title>transaction_splitter`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (108 samples, 1.24%)</title><rect x="81.9812%" y="85" width="1.2411%" height="15" fill="rgb(235,228,7)" fg:x="7134" fg:w="108"/><text x="82.2312%" y="95.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (19 samples, 0.22%)</title><rect x="83.2222%" y="85" width="0.2183%" height="15" fill="rgb(245,175,0)" fg:x="7242" fg:w="19"/><text x="83.4722%" y="95.50"></text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::end_map (4 samples, 0.05%)</title><rect x="83.4406%" y="85" width="0.0460%" height="15" fill="rgb(208,168,36)" fg:x="7261" fg:w="4"/><text x="83.6906%" y="95.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (240 samples, 2.76%)</title><rect x="80.7516%" y="101" width="2.7580%" height="15" fill="rgb(246,171,24)" fg:x="7027" fg:w="240"/><text x="81.0016%" y="111.50">tr..</text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::parse_integer (2 samples, 0.02%)</title><rect x="83.4866%" y="85" width="0.0230%" height="15" fill="rgb(215,142,24)" fg:x="7265" fg:w="2"/><text x="83.7366%" y="95.50"></text></g><g><title>transaction_splitter`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (121 samples, 1.39%)</title><rect x="83.5095%" y="101" width="1.3905%" height="15" fill="rgb(250,187,7)" fg:x="7267" fg:w="121"/><text x="83.7595%" y="111.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (34 samples, 0.39%)</title><rect x="84.9000%" y="101" width="0.3907%" height="15" fill="rgb(228,66,33)" fg:x="7388" fg:w="34"/><text x="85.1500%" y="111.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::consensus_parameters::gas::_::&lt;impl serde::de::Deserialize for fuel_tx::transaction::consensus_parameters::gas::GasCostsValuesV4&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (540 samples, 6.21%)</title><rect x="79.0968%" y="117" width="6.2055%" height="15" fill="rgb(234,215,21)" fg:x="6883" fg:w="540"/><text x="79.3468%" y="127.50">transact..</text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.01%)</title><rect x="85.2907%" y="101" width="0.0115%" height="15" fill="rgb(222,191,20)" fg:x="7422" fg:w="1"/><text x="85.5407%" y="111.50"></text></g><g><title>transaction_splitter`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (2 samples, 0.02%)</title><rect x="85.3022%" y="117" width="0.0230%" height="15" fill="rgb(245,79,54)" fg:x="7423" fg:w="2"/><text x="85.5522%" y="127.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::consensus_parameters::gas::_::&lt;impl serde::de::Deserialize for fuel_tx::transaction::consensus_parameters::gas::GasCostsValues&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (552 samples, 6.34%)</title><rect x="79.0163%" y="133" width="6.3434%" height="15" fill="rgb(240,10,37)" fg:x="6876" fg:w="552"/><text x="79.2663%" y="143.50">transact..</text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.03%)</title><rect x="85.3252%" y="117" width="0.0345%" height="15" fill="rgb(214,192,32)" fg:x="7425" fg:w="3"/><text x="85.5752%" y="127.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::consensus_parameters::gas::_::&lt;impl serde::de::Deserialize for fuel_tx::transaction::consensus_parameters::gas::GasCostsValuesV4&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.01%)</title><rect x="85.3597%" y="133" width="0.0115%" height="15" fill="rgb(209,36,54)" fg:x="7428" fg:w="1"/><text x="85.6097%" y="143.50"></text></g><g><title>transaction_splitter`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (27 samples, 0.31%)</title><rect x="85.3712%" y="133" width="0.3103%" height="15" fill="rgb(220,10,11)" fg:x="7429" fg:w="27"/><text x="85.6212%" y="143.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (4 samples, 0.05%)</title><rect x="85.6815%" y="133" width="0.0460%" height="15" fill="rgb(221,106,17)" fg:x="7456" fg:w="4"/><text x="85.9315%" y="143.50"></text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::deserialize_number (2 samples, 0.02%)</title><rect x="85.7274%" y="133" width="0.0230%" height="15" fill="rgb(251,142,44)" fg:x="7460" fg:w="2"/><text x="85.9774%" y="143.50"></text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.01%)</title><rect x="85.7389%" y="117" width="0.0115%" height="15" fill="rgb(238,13,15)" fg:x="7461" fg:w="1"/><text x="85.9889%" y="127.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (616 samples, 7.08%)</title><rect x="78.7060%" y="149" width="7.0788%" height="15" fill="rgb(208,107,27)" fg:x="6849" fg:w="616"/><text x="78.9560%" y="159.50">transacti..</text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::end_map (3 samples, 0.03%)</title><rect x="85.7504%" y="133" width="0.0345%" height="15" fill="rgb(205,136,37)" fg:x="7462" fg:w="3"/><text x="86.0004%" y="143.50"></text></g><g><title>transaction_splitter`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (9 samples, 0.10%)</title><rect x="85.7849%" y="149" width="0.1034%" height="15" fill="rgb(250,205,27)" fg:x="7465" fg:w="9"/><text x="86.0349%" y="159.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.01%)</title><rect x="85.9228%" y="133" width="0.0115%" height="15" fill="rgb(210,80,43)" fg:x="7477" fg:w="1"/><text x="86.1728%" y="143.50"></text></g><g><title>transaction_splitter`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (13 samples, 0.15%)</title><rect x="85.8883%" y="149" width="0.1494%" height="15" fill="rgb(247,160,36)" fg:x="7474" fg:w="13"/><text x="86.1383%" y="159.50"></text></g><g><title>transaction_splitter`hex::decode_to_slice (9 samples, 0.10%)</title><rect x="85.9343%" y="133" width="0.1034%" height="15" fill="rgb(234,13,49)" fg:x="7478" fg:w="9"/><text x="86.1843%" y="143.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (5 samples, 0.06%)</title><rect x="86.0377%" y="149" width="0.0575%" height="15" fill="rgb(234,122,0)" fg:x="7487" fg:w="5"/><text x="86.2877%" y="159.50"></text></g><g><title>transaction_splitter`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="86.0952%" y="149" width="0.0115%" height="15" fill="rgb(207,146,38)" fg:x="7492" fg:w="1"/><text x="86.3452%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="86.1066%" y="117" width="0.0115%" height="15" fill="rgb(207,177,25)" fg:x="7493" fg:w="1"/><text x="86.3566%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="86.1066%" y="101" width="0.0115%" height="15" fill="rgb(211,178,42)" fg:x="7493" fg:w="1"/><text x="86.3566%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="86.1066%" y="85" width="0.0115%" height="15" fill="rgb(230,69,54)" fg:x="7493" fg:w="1"/><text x="86.3566%" y="95.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2 samples, 0.02%)</title><rect x="86.1066%" y="133" width="0.0230%" height="15" fill="rgb(214,135,41)" fg:x="7493" fg:w="2"/><text x="86.3566%" y="143.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.01%)</title><rect x="86.1181%" y="117" width="0.0115%" height="15" fill="rgb(237,67,25)" fg:x="7494" fg:w="1"/><text x="86.3681%" y="127.50"></text></g><g><title>transaction_splitter`serde::de::MapAccess::next_value (11 samples, 0.13%)</title><rect x="86.1066%" y="149" width="0.1264%" height="15" fill="rgb(222,189,50)" fg:x="7493" fg:w="11"/><text x="86.3566%" y="159.50"></text></g><g><title>transaction_splitter`hex::decode_to_slice (9 samples, 0.10%)</title><rect x="86.1296%" y="133" width="0.1034%" height="15" fill="rgb(245,148,34)" fg:x="7495" fg:w="9"/><text x="86.3796%" y="143.50"></text></g><g><title>transaction_splitter`&lt;fuel_tx::transaction::consensus_parameters::_::&lt;impl serde::de::Deserialize for fuel_tx::transaction::consensus_parameters::ConsensusParameters&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (679 samples, 7.80%)</title><rect x="78.4417%" y="165" width="7.8028%" height="15" fill="rgb(222,29,6)" fg:x="6826" fg:w="679"/><text x="78.6917%" y="175.50">transaction..</text></g><g><title>transaction_splitter`serde_json::de::Deserializer&lt;R&gt;::deserialize_number (1 samples, 0.01%)</title><rect x="86.2330%" y="149" width="0.0115%" height="15" fill="rgb(221,189,43)" fg:x="7504" fg:w="1"/><text x="86.4830%" y="159.50"></text></g><g><title>transaction_splitter`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (2 samples, 0.02%)</title><rect x="86.2445%" y="165" width="0.0230%" height="15" fill="rgb(207,36,27)" fg:x="7505" fg:w="2"/><text x="86.4945%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.01%)</title><rect x="86.2790%" y="133" width="0.0115%" height="15" fill="rgb(217,90,24)" fg:x="7508" fg:w="1"/><text x="86.5290%" y="143.50"></text></g><g><title>transaction_splitter`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (5 samples, 0.06%)</title><rect x="86.2790%" y="149" width="0.0575%" height="15" fill="rgb(224,66,35)" fg:x="7508" fg:w="5"/><text x="86.5290%" y="159.50"></text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (4 samples, 0.05%)</title><rect x="86.2905%" y="133" width="0.0460%" height="15" fill="rgb(221,13,50)" fg:x="7509" fg:w="4"/><text x="86.5405%" y="143.50"></text></g><g><title>transaction_splitter`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (13 samples, 0.15%)</title><rect x="86.2675%" y="165" width="0.1494%" height="15" fill="rgb(236,68,49)" fg:x="7507" fg:w="13"/><text x="86.5175%" y="175.50"></text></g><g><title>transaction_splitter`hex::decode_to_slice (7 samples, 0.08%)</title><rect x="86.3365%" y="149" width="0.0804%" height="15" fill="rgb(229,146,28)" fg:x="7513" fg:w="7"/><text x="86.5865%" y="159.50"></text></g><g><title>transaction_splitter`&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (703 samples, 8.08%)</title><rect x="78.3728%" y="181" width="8.0786%" height="15" fill="rgb(225,31,38)" fg:x="6820" fg:w="703"/><text x="78.6228%" y="191.50">transaction..</text></g><g><title>transaction_splitter`&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.03%)</title><rect x="86.4169%" y="165" width="0.0345%" height="15" fill="rgb(250,208,3)" fg:x="7520" fg:w="3"/><text x="86.6669%" y="175.50"></text></g><g><title>transaction_splitter`core::ffi::c_str::CStr::from_bytes_with_nul (2 samples, 0.02%)</title><rect x="86.4514%" y="181" width="0.0230%" height="15" fill="rgb(246,54,23)" fg:x="7523" fg:w="2"/><text x="86.7014%" y="191.50"></text></g><g><title>transaction_splitter`std::io::default_read_to_end (1 samples, 0.01%)</title><rect x="86.4744%" y="181" width="0.0115%" height="15" fill="rgb(243,76,11)" fg:x="7525" fg:w="1"/><text x="86.7244%" y="191.50"></text></g><g><title>transaction_splitter`&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (4 samples, 0.05%)</title><rect x="86.4859%" y="149" width="0.0460%" height="15" fill="rgb(245,21,50)" fg:x="7526" fg:w="4"/><text x="86.7359%" y="159.50"></text></g><g><title>transaction_splitter`std::path::Components::parse_next_component_back (3 samples, 0.03%)</title><rect x="86.4974%" y="133" width="0.0345%" height="15" fill="rgb(228,9,43)" fg:x="7527" fg:w="3"/><text x="86.7474%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="86.5663%" y="69" width="0.0115%" height="15" fill="rgb(208,100,47)" fg:x="7533" fg:w="1"/><text x="86.8163%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="86.5778%" y="53" width="0.0115%" height="15" fill="rgb(232,26,8)" fg:x="7534" fg:w="1"/><text x="86.8278%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="86.5893%" y="37" width="0.0115%" height="15" fill="rgb(216,166,38)" fg:x="7535" fg:w="1"/><text x="86.8393%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="86.5778%" y="69" width="0.0345%" height="15" fill="rgb(251,202,51)" fg:x="7534" fg:w="3"/><text x="86.8278%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="86.5893%" y="53" width="0.0230%" height="15" fill="rgb(254,216,34)" fg:x="7535" fg:w="2"/><text x="86.8393%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="86.6008%" y="37" width="0.0115%" height="15" fill="rgb(251,32,27)" fg:x="7536" fg:w="1"/><text x="86.8508%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="86.6123%" y="69" width="0.0115%" height="15" fill="rgb(208,127,28)" fg:x="7537" fg:w="1"/><text x="86.8623%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="86.6123%" y="53" width="0.0115%" height="15" fill="rgb(224,137,22)" fg:x="7537" fg:w="1"/><text x="86.8623%" y="63.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.11%)</title><rect x="86.5318%" y="149" width="0.1149%" height="15" fill="rgb(254,70,32)" fg:x="7530" fg:w="10"/><text x="86.7818%" y="159.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (10 samples, 0.11%)</title><rect x="86.5318%" y="133" width="0.1149%" height="15" fill="rgb(229,75,37)" fg:x="7530" fg:w="10"/><text x="86.7818%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (10 samples, 0.11%)</title><rect x="86.5318%" y="117" width="0.1149%" height="15" fill="rgb(252,64,23)" fg:x="7530" fg:w="10"/><text x="86.7818%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9 samples, 0.10%)</title><rect x="86.5433%" y="101" width="0.1034%" height="15" fill="rgb(232,162,48)" fg:x="7531" fg:w="9"/><text x="86.7933%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.09%)</title><rect x="86.5548%" y="85" width="0.0919%" height="15" fill="rgb(246,160,12)" fg:x="7532" fg:w="8"/><text x="86.8048%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.02%)</title><rect x="86.6238%" y="69" width="0.0230%" height="15" fill="rgb(247,166,0)" fg:x="7538" fg:w="2"/><text x="86.8738%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="86.6353%" y="53" width="0.0115%" height="15" fill="rgb(249,219,21)" fg:x="7539" fg:w="1"/><text x="86.8853%" y="63.50"></text></g><g><title>transaction_splitter`std::path::Components::as_path (2 samples, 0.02%)</title><rect x="86.6467%" y="149" width="0.0230%" height="15" fill="rgb(205,209,3)" fg:x="7540" fg:w="2"/><text x="86.8967%" y="159.50"></text></g><g><title>transaction_splitter`std::path::Components::parse_next_component_back (2 samples, 0.02%)</title><rect x="86.6467%" y="133" width="0.0230%" height="15" fill="rgb(243,44,1)" fg:x="7540" fg:w="2"/><text x="86.8967%" y="143.50"></text></g><g><title>transaction_splitter`std::path::Path::_with_file_name (17 samples, 0.20%)</title><rect x="86.4859%" y="181" width="0.1954%" height="15" fill="rgb(206,159,16)" fg:x="7526" fg:w="17"/><text x="86.7359%" y="191.50"></text></g><g><title>transaction_splitter`std::path::PathBuf::_set_file_name (17 samples, 0.20%)</title><rect x="86.4859%" y="165" width="0.1954%" height="15" fill="rgb(244,77,30)" fg:x="7526" fg:w="17"/><text x="86.7359%" y="175.50"></text></g><g><title>transaction_splitter`std::path::Components::parse_next_component_back (1 samples, 0.01%)</title><rect x="86.6697%" y="149" width="0.0115%" height="15" fill="rgb(218,69,12)" fg:x="7542" fg:w="1"/><text x="86.9197%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__open (519 samples, 5.96%)</title><rect x="86.6812%" y="165" width="5.9641%" height="15" fill="rgb(212,87,7)" fg:x="7543" fg:w="519"/><text x="86.9312%" y="175.50">libsyste..</text></g><g><title>transaction_splitter`fuel_core_chain_config::config::chain::ChainConfig::from_snapshot_metadata (1,567 samples, 18.01%)</title><rect x="74.6495%" y="197" width="18.0074%" height="15" fill="rgb(245,114,25)" fg:x="6496" fg:w="1567"/><text x="74.8995%" y="207.50">transaction_splitter`fuel_co..</text></g><g><title>transaction_splitter`std::sys::pal::unix::fs::File::open_c (520 samples, 5.98%)</title><rect x="86.6812%" y="181" width="5.9756%" height="15" fill="rgb(210,61,42)" fg:x="7543" fg:w="520"/><text x="86.9312%" y="191.50">transact..</text></g><g><title>libsystem_kernel.dylib`open (1 samples, 0.01%)</title><rect x="92.6454%" y="165" width="0.0115%" height="15" fill="rgb(211,52,33)" fg:x="8062" fg:w="1"/><text x="92.8954%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.06%)</title><rect x="92.6569%" y="181" width="0.0575%" height="15" fill="rgb(234,58,33)" fg:x="8063" fg:w="5"/><text x="92.9069%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.06%)</title><rect x="92.6569%" y="165" width="0.0575%" height="15" fill="rgb(220,115,36)" fg:x="8063" fg:w="5"/><text x="92.9069%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (2 samples, 0.02%)</title><rect x="92.7143%" y="149" width="0.0230%" height="15" fill="rgb(243,153,54)" fg:x="8068" fg:w="2"/><text x="92.9643%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="92.7143%" y="165" width="0.0345%" height="15" fill="rgb(251,47,18)" fg:x="8068" fg:w="3"/><text x="92.9643%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="92.7373%" y="149" width="0.0115%" height="15" fill="rgb(242,102,42)" fg:x="8070" fg:w="1"/><text x="92.9873%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.02%)</title><rect x="92.7603%" y="85" width="0.0230%" height="15" fill="rgb(234,31,38)" fg:x="8072" fg:w="2"/><text x="93.0103%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="92.7948%" y="69" width="0.0115%" height="15" fill="rgb(221,117,51)" fg:x="8075" fg:w="1"/><text x="93.0448%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="92.8063%" y="53" width="0.0115%" height="15" fill="rgb(212,20,18)" fg:x="8076" fg:w="1"/><text x="93.0563%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.06%)</title><rect x="92.7833%" y="85" width="0.0575%" height="15" fill="rgb(245,133,36)" fg:x="8074" fg:w="5"/><text x="93.0333%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.03%)</title><rect x="92.8063%" y="69" width="0.0345%" height="15" fill="rgb(212,6,19)" fg:x="8076" fg:w="3"/><text x="93.0563%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="92.8177%" y="53" width="0.0230%" height="15" fill="rgb(218,1,36)" fg:x="8077" fg:w="2"/><text x="93.0677%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="92.8292%" y="37" width="0.0115%" height="15" fill="rgb(246,84,54)" fg:x="8078" fg:w="1"/><text x="93.0792%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (3 samples, 0.03%)</title><rect x="92.8407%" y="85" width="0.0345%" height="15" fill="rgb(242,110,6)" fg:x="8079" fg:w="3"/><text x="93.0907%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (12 samples, 0.14%)</title><rect x="92.7488%" y="101" width="0.1379%" height="15" fill="rgb(214,47,5)" fg:x="8071" fg:w="12"/><text x="92.9988%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="92.8752%" y="85" width="0.0115%" height="15" fill="rgb(218,159,25)" fg:x="8082" fg:w="1"/><text x="93.1252%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (13 samples, 0.15%)</title><rect x="92.7488%" y="133" width="0.1494%" height="15" fill="rgb(215,211,28)" fg:x="8071" fg:w="13"/><text x="92.9988%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (13 samples, 0.15%)</title><rect x="92.7488%" y="117" width="0.1494%" height="15" fill="rgb(238,59,32)" fg:x="8071" fg:w="13"/><text x="92.9988%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="92.8867%" y="101" width="0.0115%" height="15" fill="rgb(226,82,3)" fg:x="8083" fg:w="1"/><text x="93.1367%" y="111.50"></text></g><g><title>transaction_splitter`fuel_core_chain_config::config::snapshot_metadata::SnapshotMetadata::prepend_path (22 samples, 0.25%)</title><rect x="92.6569%" y="197" width="0.2528%" height="15" fill="rgb(240,164,32)" fg:x="8063" fg:w="22"/><text x="92.9069%" y="207.50"></text></g><g><title>transaction_splitter`std::path::Path::_join (17 samples, 0.20%)</title><rect x="92.7143%" y="181" width="0.1954%" height="15" fill="rgb(232,46,7)" fg:x="8068" fg:w="17"/><text x="92.9643%" y="191.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.16%)</title><rect x="92.7488%" y="165" width="0.1609%" height="15" fill="rgb(229,129,53)" fg:x="8071" fg:w="14"/><text x="92.9988%" y="175.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (14 samples, 0.16%)</title><rect x="92.7488%" y="149" width="0.1609%" height="15" fill="rgb(234,188,29)" fg:x="8071" fg:w="14"/><text x="92.9988%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="92.8982%" y="133" width="0.0115%" height="15" fill="rgb(246,141,4)" fg:x="8084" fg:w="1"/><text x="93.1482%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="92.9097%" y="149" width="0.0115%" height="15" fill="rgb(229,23,39)" fg:x="8085" fg:w="1"/><text x="93.1597%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="92.9097%" y="181" width="0.0230%" height="15" fill="rgb(206,12,3)" fg:x="8085" fg:w="2"/><text x="93.1597%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="92.9097%" y="165" width="0.0230%" height="15" fill="rgb(252,226,20)" fg:x="8085" fg:w="2"/><text x="93.1597%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="92.9212%" y="149" width="0.0115%" height="15" fill="rgb(216,123,35)" fg:x="8086" fg:w="1"/><text x="93.1712%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="92.9327%" y="117" width="0.0115%" height="15" fill="rgb(212,68,40)" fg:x="8087" fg:w="1"/><text x="93.1827%" y="127.50"></text></g><g><title>transaction_splitter`std::path::Path::_join (4 samples, 0.05%)</title><rect x="92.9097%" y="197" width="0.0460%" height="15" fill="rgb(254,125,32)" fg:x="8085" fg:w="4"/><text x="93.1597%" y="207.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="92.9327%" y="181" width="0.0230%" height="15" fill="rgb(253,97,22)" fg:x="8087" fg:w="2"/><text x="93.1827%" y="191.50"></text></g><g><title>transaction_splitter`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="92.9327%" y="165" width="0.0230%" height="15" fill="rgb(241,101,14)" fg:x="8087" fg:w="2"/><text x="93.1827%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="92.9327%" y="149" width="0.0230%" height="15" fill="rgb(238,103,29)" fg:x="8087" fg:w="2"/><text x="93.1827%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="92.9327%" y="133" width="0.0230%" height="15" fill="rgb(233,195,47)" fg:x="8087" fg:w="2"/><text x="93.1827%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="92.9442%" y="117" width="0.0115%" height="15" fill="rgb(246,218,30)" fg:x="8088" fg:w="1"/><text x="93.1942%" y="127.50"></text></g><g><title>dyld`start (8,699 samples, 99.97%)</title><rect x="0.0000%" y="325" width="99.9655%" height="15" fill="rgb(219,145,47)" fg:x="0" fg:w="8699"/><text x="0.2500%" y="335.50">dyld`start</text></g><g><title>transaction_splitter`main (8,698 samples, 99.95%)</title><rect x="0.0115%" y="309" width="99.9540%" height="15" fill="rgb(243,12,26)" fg:x="1" fg:w="8698"/><text x="0.2615%" y="319.50">transaction_splitter`main</text></g><g><title>transaction_splitter`std::rt::lang_start_internal (8,698 samples, 99.95%)</title><rect x="0.0115%" y="293" width="99.9540%" height="15" fill="rgb(214,87,16)" fg:x="1" fg:w="8698"/><text x="0.2615%" y="303.50">transaction_splitter`std::rt::lang_start_internal</text></g><g><title>transaction_splitter`std::rt::lang_start::_{{closure}} (8,698 samples, 99.95%)</title><rect x="0.0115%" y="277" width="99.9540%" height="15" fill="rgb(208,99,42)" fg:x="1" fg:w="8698"/><text x="0.2615%" y="287.50">transaction_splitter`std::rt::lang_start::_{{closure}}</text></g><g><title>transaction_splitter`std::sys::backtrace::__rust_begin_short_backtrace (8,698 samples, 99.95%)</title><rect x="0.0115%" y="261" width="99.9540%" height="15" fill="rgb(253,99,2)" fg:x="1" fg:w="8698"/><text x="0.2615%" y="271.50">transaction_splitter`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>transaction_splitter`transaction_splitter::main (8,689 samples, 99.85%)</title><rect x="0.1149%" y="245" width="99.8506%" height="15" fill="rgb(220,168,23)" fg:x="10" fg:w="8689"/><text x="0.3649%" y="255.50">transaction_splitter`transaction_splitter::main</text></g><g><title>transaction_splitter`transaction_splitter::generate_transactions (8,386 samples, 96.37%)</title><rect x="3.5969%" y="229" width="96.3687%" height="15" fill="rgb(242,38,24)" fg:x="313" fg:w="8386"/><text x="3.8469%" y="239.50">transaction_splitter`transaction_splitter::generate_transactions</text></g><g><title>transaction_splitter`test_helpers::builder::local_chain_config (2,465 samples, 28.33%)</title><rect x="71.6387%" y="213" width="28.3268%" height="15" fill="rgb(225,182,9)" fg:x="6234" fg:w="2465"/><text x="71.8887%" y="223.50">transaction_splitter`test_helpers::builder::lo..</text></g><g><title>transaction_splitter`std::sys::pal::unix::fs::File::open_c (610 samples, 7.01%)</title><rect x="92.9556%" y="197" width="7.0099%" height="15" fill="rgb(243,178,37)" fg:x="8089" fg:w="610"/><text x="93.2056%" y="207.50">transacti..</text></g><g><title>libsystem_kernel.dylib`__open (608 samples, 6.99%)</title><rect x="92.9786%" y="181" width="6.9869%" height="15" fill="rgb(232,139,19)" fg:x="8091" fg:w="608"/><text x="93.2286%" y="191.50">libsystem..</text></g><g><title>all (8,702 samples, 100%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(225,201,24)" fg:x="0" fg:w="8702"/><text x="0.2500%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.03%)</title><rect x="99.9655%" y="325" width="0.0345%" height="15" fill="rgb(221,47,46)" fg:x="8699" fg:w="3"/><text x="100.2155%" y="335.50"></text></g></svg></svg>