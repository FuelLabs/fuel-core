<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="550" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="533.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="533.00"> </text><svg id="frames" x="10" width="1180" total_samples="45737"><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (40 samples, 0.09%)</title><rect x="0.0175%" y="389" width="0.0875%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="40"/><text x="0.2675%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (57 samples, 0.12%)</title><rect x="0.0066%" y="405" width="0.1246%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="57"/><text x="0.2566%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.03%)</title><rect x="0.1049%" y="389" width="0.0262%" height="15" fill="rgb(221,193,54)" fg:x="48" fg:w="12"/><text x="0.3549%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (6 samples, 0.01%)</title><rect x="0.1334%" y="389" width="0.0131%" height="15" fill="rgb(248,212,6)" fg:x="61" fg:w="6"/><text x="0.3834%" y="399.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (6 samples, 0.01%)</title><rect x="0.1552%" y="389" width="0.0131%" height="15" fill="rgb(208,68,35)" fg:x="71" fg:w="6"/><text x="0.4052%" y="399.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::indexation::process_balances_update (20 samples, 0.04%)</title><rect x="0.1312%" y="405" width="0.0437%" height="15" fill="rgb(232,128,0)" fg:x="60" fg:w="20"/><text x="0.3812%" y="415.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (5 samples, 0.01%)</title><rect x="0.1968%" y="309" width="0.0109%" height="15" fill="rgb(207,160,47)" fg:x="90" fg:w="5"/><text x="0.4468%" y="319.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (20 samples, 0.04%)</title><rect x="0.1749%" y="405" width="0.0437%" height="15" fill="rgb(228,23,34)" fg:x="80" fg:w="20"/><text x="0.4249%" y="415.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (20 samples, 0.04%)</title><rect x="0.1749%" y="389" width="0.0437%" height="15" fill="rgb(218,30,26)" fg:x="80" fg:w="20"/><text x="0.4249%" y="399.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (20 samples, 0.04%)</title><rect x="0.1749%" y="373" width="0.0437%" height="15" fill="rgb(220,122,19)" fg:x="80" fg:w="20"/><text x="0.4249%" y="383.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (16 samples, 0.03%)</title><rect x="0.1837%" y="357" width="0.0350%" height="15" fill="rgb(250,228,42)" fg:x="84" fg:w="16"/><text x="0.4337%" y="367.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (16 samples, 0.03%)</title><rect x="0.1837%" y="341" width="0.0350%" height="15" fill="rgb(240,193,28)" fg:x="84" fg:w="16"/><text x="0.4337%" y="351.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (11 samples, 0.02%)</title><rect x="0.1946%" y="325" width="0.0241%" height="15" fill="rgb(216,20,37)" fg:x="89" fg:w="11"/><text x="0.4446%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="0.2077%" y="309" width="0.0109%" height="15" fill="rgb(206,188,39)" fg:x="95" fg:w="5"/><text x="0.4577%" y="319.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (107 samples, 0.23%)</title><rect x="0.0000%" y="485" width="0.2339%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="107"/><text x="0.2500%" y="495.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (107 samples, 0.23%)</title><rect x="0.0000%" y="469" width="0.2339%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="107"/><text x="0.2500%" y="479.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (107 samples, 0.23%)</title><rect x="0.0000%" y="453" width="0.2339%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="107"/><text x="0.2500%" y="463.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain (107 samples, 0.23%)</title><rect x="0.0000%" y="437" width="0.2339%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="107"/><text x="0.2500%" y="447.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain::_{{closure}} (107 samples, 0.23%)</title><rect x="0.0000%" y="421" width="0.2339%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="107"/><text x="0.2500%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="0.2208%" y="405" width="0.0131%" height="15" fill="rgb(226,26,5)" fg:x="101" fg:w="6"/><text x="0.4708%" y="415.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (101 samples, 0.22%)</title><rect x="0.2974%" y="405" width="0.2208%" height="15" fill="rgb(249,33,26)" fg:x="136" fg:w="101"/><text x="0.5474%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`read (99 samples, 0.22%)</title><rect x="0.3017%" y="389" width="0.2165%" height="15" fill="rgb(235,183,28)" fg:x="138" fg:w="99"/><text x="0.5517%" y="399.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (15 samples, 0.03%)</title><rect x="0.6209%" y="373" width="0.0328%" height="15" fill="rgb(221,5,38)" fg:x="284" fg:w="15"/><text x="0.8709%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`read (3,246 samples, 7.10%)</title><rect x="0.6537%" y="373" width="7.0971%" height="15" fill="rgb(247,18,42)" fg:x="299" fg:w="3246"/><text x="0.9037%" y="383.50">libsystem_..</text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (3,276 samples, 7.16%)</title><rect x="0.5947%" y="389" width="7.1627%" height="15" fill="rgb(241,131,45)" fg:x="272" fg:w="3276"/><text x="0.8447%" y="399.50">block_veri..</text></g><g><title>block_verifier`DYLD-STUB$$read (18 samples, 0.04%)</title><rect x="7.7574%" y="389" width="0.0394%" height="15" fill="rgb(249,31,29)" fg:x="3548" fg:w="18"/><text x="8.0074%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`read (305 samples, 0.67%)</title><rect x="7.8077%" y="357" width="0.6669%" height="15" fill="rgb(225,111,53)" fg:x="3571" fg:w="305"/><text x="8.0577%" y="367.50"></text></g><g><title>block_verifier`&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_seq (311 samples, 0.68%)</title><rect x="7.7968%" y="373" width="0.6800%" height="15" fill="rgb(238,160,17)" fg:x="3566" fg:w="311"/><text x="8.0468%" y="383.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (364 samples, 0.80%)</title><rect x="7.7968%" y="389" width="0.7959%" height="15" fill="rgb(214,148,48)" fg:x="3566" fg:w="364"/><text x="8.0468%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`read (53 samples, 0.12%)</title><rect x="8.4767%" y="373" width="0.1159%" height="15" fill="rgb(232,36,49)" fg:x="3877" fg:w="53"/><text x="8.7267%" y="383.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (65 samples, 0.14%)</title><rect x="8.5926%" y="389" width="0.1421%" height="15" fill="rgb(209,103,24)" fg:x="3930" fg:w="65"/><text x="8.8426%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`read (17,189 samples, 37.58%)</title><rect x="8.7347%" y="389" width="37.5823%" height="15" fill="rgb(229,88,8)" fg:x="3995" fg:w="17189"/><text x="8.9847%" y="399.50">libsystem_kernel.dylib`read</text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (20,951 samples, 45.81%)</title><rect x="0.5204%" y="405" width="45.8076%" height="15" fill="rgb(213,181,19)" fg:x="238" fg:w="20951"/><text x="0.7704%" y="415.50">block_verifier`serde::de::SeqAccess::next_element</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="46.3170%" y="389" width="0.0109%" height="15" fill="rgb(254,191,54)" fg:x="21184" fg:w="5"/><text x="46.5670%" y="399.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (25 samples, 0.05%)</title><rect x="46.3279%" y="405" width="0.0547%" height="15" fill="rgb(241,83,37)" fg:x="21189" fg:w="25"/><text x="46.5779%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`read (1,678 samples, 3.67%)</title><rect x="46.3826%" y="405" width="3.6688%" height="15" fill="rgb(233,36,39)" fg:x="21214" fg:w="1678"/><text x="46.6326%" y="415.50">libs..</text></g><g><title>block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserialize for fuel_core_types::blockchain::block::BlockV1&lt;TransactionRepresentation&gt;&gt;::deserialize::__Visitor&lt;TransactionRepresentation&gt; as serde::de::Visitor&gt;::visit_seq (22,765 samples, 49.77%)</title><rect x="0.2799%" y="421" width="49.7737%" height="15" fill="rgb(226,3,54)" fg:x="128" fg:w="22765"/><text x="0.5299%" y="431.50">block_verifier`&lt;fuel_core_types::blockchain::block::_::&lt;impl serde::de::Deserializ..</text></g><g><title>block_verifier`DYLD-STUB$$read (6 samples, 0.01%)</title><rect x="50.0536%" y="421" width="0.0131%" height="15" fill="rgb(245,192,40)" fg:x="22893" fg:w="6"/><text x="50.3036%" y="431.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Recover(std::__1::vector&lt;rocksdb::ColumnFamilyDescriptor, std::__1::allocator (5 samples, 0.01%)</title><rect x="50.0820%" y="309" width="0.0109%" height="15" fill="rgb(238,167,29)" fg:x="22906" fg:w="5"/><text x="50.3320%" y="319.50"></text></g><g><title>block_verifier`core::ops::function::Fn::call (10 samples, 0.02%)</title><rect x="50.0798%" y="373" width="0.0219%" height="15" fill="rgb(232,182,51)" fg:x="22905" fg:w="10"/><text x="50.3298%" y="383.50"></text></g><g><title>block_verifier`rocksdb_open (10 samples, 0.02%)</title><rect x="50.0798%" y="357" width="0.0219%" height="15" fill="rgb(231,60,39)" fg:x="22905" fg:w="10"/><text x="50.3298%" y="367.50"></text></g><g><title>block_verifier`rocksdb::DB::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (10 samples, 0.02%)</title><rect x="50.0798%" y="341" width="0.0219%" height="15" fill="rgb(208,69,12)" fg:x="22905" fg:w="10"/><text x="50.3298%" y="351.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Open(rocksdb::DBOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyDescriptor, std::__1::allocator&lt;rocksdb::ColumnFamilyDescriptor&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator (10 samples, 0.02%)</title><rect x="50.0798%" y="325" width="0.0219%" height="15" fill="rgb(235,93,37)" fg:x="22905" fg:w="10"/><text x="50.3298%" y="335.50"></text></g><g><title>block_verifier`fuel_core::combined_database::CombinedDatabase::from_config (12 samples, 0.03%)</title><rect x="50.0776%" y="405" width="0.0262%" height="15" fill="rgb(213,116,39)" fg:x="22904" fg:w="12"/><text x="50.3276%" y="415.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::open_with (11 samples, 0.02%)</title><rect x="50.0798%" y="389" width="0.0241%" height="15" fill="rgb(222,207,29)" fg:x="22905" fg:w="11"/><text x="50.3298%" y="399.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntryInternal (8 samples, 0.02%)</title><rect x="50.1651%" y="277" width="0.0175%" height="15" fill="rgb(206,96,30)" fg:x="22944" fg:w="8"/><text x="50.4151%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBIter::FindNextUserEntry (12 samples, 0.03%)</title><rect x="50.1629%" y="293" width="0.0262%" height="15" fill="rgb(218,138,4)" fg:x="22943" fg:w="12"/><text x="50.4129%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBIter::Next (18 samples, 0.04%)</title><rect x="50.1629%" y="309" width="0.0394%" height="15" fill="rgb(250,191,14)" fg:x="22943" fg:w="18"/><text x="50.4129%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db_key_iterator::RocksDBKeyIterator&lt;D,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.04%)</title><rect x="50.1629%" y="325" width="0.0415%" height="15" fill="rgb(239,60,40)" fg:x="22943" fg:w="19"/><text x="50.4129%" y="335.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.05%)</title><rect x="50.1629%" y="341" width="0.0525%" height="15" fill="rgb(206,27,48)" fg:x="22943" fg:w="24"/><text x="50.4129%" y="351.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (6 samples, 0.01%)</title><rect x="50.2175%" y="341" width="0.0131%" height="15" fill="rgb(225,35,8)" fg:x="22968" fg:w="6"/><text x="50.4675%" y="351.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.08%)</title><rect x="50.1607%" y="357" width="0.0831%" height="15" fill="rgb(250,213,24)" fg:x="22942" fg:w="38"/><text x="50.4107%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (104 samples, 0.23%)</title><rect x="50.2656%" y="341" width="0.2274%" height="15" fill="rgb(247,123,22)" fg:x="22990" fg:w="104"/><text x="50.5156%" y="351.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (114 samples, 0.25%)</title><rect x="50.2482%" y="357" width="0.2493%" height="15" fill="rgb(231,138,38)" fg:x="22982" fg:w="114"/><text x="50.4982%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (30 samples, 0.07%)</title><rect x="50.4974%" y="357" width="0.0656%" height="15" fill="rgb(231,145,46)" fg:x="23096" fg:w="30"/><text x="50.7474%" y="367.50"></text></g><g><title>block_verifier`fuel_core::database::genesis_progress::_&lt;impl fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::GenesisStage&gt;&gt;&gt;::genesis_coins_root (194 samples, 0.42%)</title><rect x="50.1410%" y="373" width="0.4242%" height="15" fill="rgb(251,118,11)" fg:x="22933" fg:w="194"/><text x="50.3910%" y="383.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.02%)</title><rect x="50.5980%" y="309" width="0.0197%" height="15" fill="rgb(217,147,25)" fg:x="23142" fg:w="9"/><text x="50.8480%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (15 samples, 0.03%)</title><rect x="50.5936%" y="325" width="0.0328%" height="15" fill="rgb(247,81,37)" fg:x="23140" fg:w="15"/><text x="50.8436%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (9 samples, 0.02%)</title><rect x="50.6286%" y="309" width="0.0197%" height="15" fill="rgb(209,12,38)" fg:x="23156" fg:w="9"/><text x="50.8786%" y="319.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (5 samples, 0.01%)</title><rect x="50.6548%" y="309" width="0.0109%" height="15" fill="rgb(227,1,9)" fg:x="23168" fg:w="5"/><text x="50.9048%" y="319.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::indexation::process_balances_update (20 samples, 0.04%)</title><rect x="50.6264%" y="325" width="0.0437%" height="15" fill="rgb(248,47,43)" fg:x="23155" fg:w="20"/><text x="50.8764%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.05%)</title><rect x="50.6898%" y="261" width="0.0481%" height="15" fill="rgb(221,10,30)" fg:x="23184" fg:w="22"/><text x="50.9398%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.07%)</title><rect x="50.6745%" y="277" width="0.0656%" height="15" fill="rgb(210,229,1)" fg:x="23177" fg:w="30"/><text x="50.9245%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (33 samples, 0.07%)</title><rect x="50.6701%" y="293" width="0.0722%" height="15" fill="rgb(222,148,37)" fg:x="23175" fg:w="33"/><text x="50.9201%" y="303.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (9 samples, 0.02%)</title><rect x="50.7576%" y="149" width="0.0197%" height="15" fill="rgb(234,67,33)" fg:x="23215" fg:w="9"/><text x="51.0076%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (13 samples, 0.03%)</title><rect x="50.7532%" y="181" width="0.0284%" height="15" fill="rgb(247,98,35)" fg:x="23213" fg:w="13"/><text x="51.0032%" y="191.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (11 samples, 0.02%)</title><rect x="50.7576%" y="165" width="0.0241%" height="15" fill="rgb(247,138,52)" fg:x="23215" fg:w="11"/><text x="51.0076%" y="175.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (19 samples, 0.04%)</title><rect x="50.7423%" y="293" width="0.0415%" height="15" fill="rgb(213,79,30)" fg:x="23208" fg:w="19"/><text x="50.9923%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (19 samples, 0.04%)</title><rect x="50.7423%" y="277" width="0.0415%" height="15" fill="rgb(246,177,23)" fg:x="23208" fg:w="19"/><text x="50.9923%" y="287.50"></text></g><g><title>block_verifier`rocksdb_write (19 samples, 0.04%)</title><rect x="50.7423%" y="261" width="0.0415%" height="15" fill="rgb(230,62,27)" fg:x="23208" fg:w="19"/><text x="50.9923%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (19 samples, 0.04%)</title><rect x="50.7423%" y="245" width="0.0415%" height="15" fill="rgb(216,154,8)" fg:x="23208" fg:w="19"/><text x="50.9923%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (19 samples, 0.04%)</title><rect x="50.7423%" y="229" width="0.0415%" height="15" fill="rgb(244,35,45)" fg:x="23208" fg:w="19"/><text x="50.9923%" y="239.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (17 samples, 0.04%)</title><rect x="50.7467%" y="213" width="0.0372%" height="15" fill="rgb(251,115,12)" fg:x="23210" fg:w="17"/><text x="50.9967%" y="223.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (15 samples, 0.03%)</title><rect x="50.7510%" y="197" width="0.0328%" height="15" fill="rgb(240,54,50)" fg:x="23212" fg:w="15"/><text x="51.0010%" y="207.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain::_{{closure}} (89 samples, 0.19%)</title><rect x="50.5914%" y="341" width="0.1946%" height="15" fill="rgb(233,84,52)" fg:x="23139" fg:w="89"/><text x="50.8414%" y="351.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (53 samples, 0.12%)</title><rect x="50.6701%" y="325" width="0.1159%" height="15" fill="rgb(207,117,47)" fg:x="23175" fg:w="53"/><text x="50.9201%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (53 samples, 0.12%)</title><rect x="50.6701%" y="309" width="0.1159%" height="15" fill="rgb(249,43,39)" fg:x="23175" fg:w="53"/><text x="50.9201%" y="319.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="50.7948%" y="325" width="0.0109%" height="15" fill="rgb(209,38,44)" fg:x="23232" fg:w="5"/><text x="51.0448%" y="335.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_off_chain (101 samples, 0.22%)</title><rect x="50.5871%" y="357" width="0.2208%" height="15" fill="rgb(236,212,23)" fg:x="23137" fg:w="101"/><text x="50.8371%" y="367.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (10 samples, 0.02%)</title><rect x="50.7860%" y="341" width="0.0219%" height="15" fill="rgb(242,79,21)" fg:x="23228" fg:w="10"/><text x="51.0360%" y="351.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (6 samples, 0.01%)</title><rect x="50.8144%" y="309" width="0.0131%" height="15" fill="rgb(211,96,35)" fg:x="23241" fg:w="6"/><text x="51.0644%" y="319.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (13 samples, 0.03%)</title><rect x="50.8144%" y="325" width="0.0284%" height="15" fill="rgb(253,215,40)" fg:x="23241" fg:w="13"/><text x="51.0644%" y="335.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="50.8735%" y="261" width="0.0109%" height="15" fill="rgb(211,81,21)" fg:x="23268" fg:w="5"/><text x="51.1235%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (21 samples, 0.05%)</title><rect x="50.8472%" y="293" width="0.0459%" height="15" fill="rgb(208,190,38)" fg:x="23256" fg:w="21"/><text x="51.0972%" y="303.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (19 samples, 0.04%)</title><rect x="50.8516%" y="277" width="0.0415%" height="15" fill="rgb(235,213,38)" fg:x="23258" fg:w="19"/><text x="51.1016%" y="287.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (32 samples, 0.07%)</title><rect x="50.8450%" y="309" width="0.0700%" height="15" fill="rgb(237,122,38)" fg:x="23255" fg:w="32"/><text x="51.0950%" y="319.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (34 samples, 0.07%)</title><rect x="50.8429%" y="325" width="0.0743%" height="15" fill="rgb(244,218,35)" fg:x="23254" fg:w="34"/><text x="51.0929%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (48 samples, 0.10%)</title><rect x="50.8144%" y="341" width="0.1049%" height="15" fill="rgb(240,68,47)" fg:x="23241" fg:w="48"/><text x="51.0644%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="51.0396%" y="325" width="0.0175%" height="15" fill="rgb(210,16,53)" fg:x="23344" fg:w="8"/><text x="51.2896%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (66 samples, 0.14%)</title><rect x="50.9194%" y="341" width="0.1443%" height="15" fill="rgb(235,124,12)" fg:x="23289" fg:w="66"/><text x="51.1694%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="51.1118%" y="245" width="0.0241%" height="15" fill="rgb(224,169,11)" fg:x="23377" fg:w="11"/><text x="51.3618%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="51.1184%" y="229" width="0.0175%" height="15" fill="rgb(250,166,2)" fg:x="23380" fg:w="8"/><text x="51.3684%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (23 samples, 0.05%)</title><rect x="51.1074%" y="261" width="0.0503%" height="15" fill="rgb(242,216,29)" fg:x="23375" fg:w="23"/><text x="51.3574%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (7 samples, 0.02%)</title><rect x="51.1424%" y="245" width="0.0153%" height="15" fill="rgb(230,116,27)" fg:x="23391" fg:w="7"/><text x="51.3924%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (29 samples, 0.06%)</title><rect x="51.0987%" y="277" width="0.0634%" height="15" fill="rgb(228,99,48)" fg:x="23371" fg:w="29"/><text x="51.3487%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (36 samples, 0.08%)</title><rect x="51.0899%" y="309" width="0.0787%" height="15" fill="rgb(253,11,6)" fg:x="23367" fg:w="36"/><text x="51.3399%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (35 samples, 0.08%)</title><rect x="51.0921%" y="293" width="0.0765%" height="15" fill="rgb(247,143,39)" fg:x="23368" fg:w="35"/><text x="51.3421%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (39 samples, 0.09%)</title><rect x="51.0877%" y="325" width="0.0853%" height="15" fill="rgb(236,97,10)" fg:x="23366" fg:w="39"/><text x="51.3377%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="51.1752%" y="293" width="0.0109%" height="15" fill="rgb(233,208,19)" fg:x="23406" fg:w="5"/><text x="51.4252%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="51.1730%" y="325" width="0.0153%" height="15" fill="rgb(216,164,2)" fg:x="23405" fg:w="7"/><text x="51.4230%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (6 samples, 0.01%)</title><rect x="51.1752%" y="309" width="0.0131%" height="15" fill="rgb(220,129,5)" fg:x="23406" fg:w="6"/><text x="51.4252%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="51.1927%" y="325" width="0.0153%" height="15" fill="rgb(242,17,10)" fg:x="23414" fg:w="7"/><text x="51.4427%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="51.1949%" y="309" width="0.0131%" height="15" fill="rgb(242,107,0)" fg:x="23415" fg:w="6"/><text x="51.4449%" y="319.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (65 samples, 0.14%)</title><rect x="51.0746%" y="341" width="0.1421%" height="15" fill="rgb(251,28,31)" fg:x="23360" fg:w="65"/><text x="51.3246%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.01%)</title><rect x="51.2780%" y="261" width="0.0109%" height="15" fill="rgb(233,223,10)" fg:x="23453" fg:w="5"/><text x="51.5280%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.07%)</title><rect x="51.2277%" y="293" width="0.0678%" height="15" fill="rgb(215,21,27)" fg:x="23430" fg:w="31"/><text x="51.4777%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.06%)</title><rect x="51.2320%" y="277" width="0.0634%" height="15" fill="rgb(232,23,21)" fg:x="23432" fg:w="29"/><text x="51.4820%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (39 samples, 0.09%)</title><rect x="51.2167%" y="309" width="0.0853%" height="15" fill="rgb(244,5,23)" fg:x="23425" fg:w="39"/><text x="51.4667%" y="319.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (6 samples, 0.01%)</title><rect x="51.3042%" y="229" width="0.0131%" height="15" fill="rgb(226,81,46)" fg:x="23465" fg:w="6"/><text x="51.5542%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (6 samples, 0.01%)</title><rect x="51.3042%" y="213" width="0.0131%" height="15" fill="rgb(247,70,30)" fg:x="23465" fg:w="6"/><text x="51.5542%" y="223.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (6 samples, 0.01%)</title><rect x="51.3042%" y="197" width="0.0131%" height="15" fill="rgb(212,68,19)" fg:x="23465" fg:w="6"/><text x="51.5542%" y="207.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::EmitPhysicalRecord (5 samples, 0.01%)</title><rect x="51.3064%" y="181" width="0.0109%" height="15" fill="rgb(240,187,13)" fg:x="23466" fg:w="5"/><text x="51.5564%" y="191.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Append (5 samples, 0.01%)</title><rect x="51.3064%" y="165" width="0.0109%" height="15" fill="rgb(223,113,26)" fg:x="23466" fg:w="5"/><text x="51.5564%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (8 samples, 0.02%)</title><rect x="51.3261%" y="165" width="0.0175%" height="15" fill="rgb(206,192,2)" fg:x="23475" fg:w="8"/><text x="51.5761%" y="175.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (15 samples, 0.03%)</title><rect x="51.3217%" y="197" width="0.0328%" height="15" fill="rgb(241,108,4)" fg:x="23473" fg:w="15"/><text x="51.5717%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (14 samples, 0.03%)</title><rect x="51.3239%" y="181" width="0.0306%" height="15" fill="rgb(247,173,49)" fg:x="23474" fg:w="14"/><text x="51.5739%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="51.3436%" y="165" width="0.0109%" height="15" fill="rgb(224,114,35)" fg:x="23483" fg:w="5"/><text x="51.5936%" y="175.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (25 samples, 0.05%)</title><rect x="51.3042%" y="293" width="0.0547%" height="15" fill="rgb(245,159,27)" fg:x="23465" fg:w="25"/><text x="51.5542%" y="303.50"></text></g><g><title>block_verifier`rocksdb_write (25 samples, 0.05%)</title><rect x="51.3042%" y="277" width="0.0547%" height="15" fill="rgb(245,172,44)" fg:x="23465" fg:w="25"/><text x="51.5542%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (25 samples, 0.05%)</title><rect x="51.3042%" y="261" width="0.0547%" height="15" fill="rgb(236,23,11)" fg:x="23465" fg:w="25"/><text x="51.5542%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (25 samples, 0.05%)</title><rect x="51.3042%" y="245" width="0.0547%" height="15" fill="rgb(205,117,38)" fg:x="23465" fg:w="25"/><text x="51.5542%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (19 samples, 0.04%)</title><rect x="51.3173%" y="229" width="0.0415%" height="15" fill="rgb(237,72,25)" fg:x="23471" fg:w="19"/><text x="51.5673%" y="239.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (18 samples, 0.04%)</title><rect x="51.3195%" y="213" width="0.0394%" height="15" fill="rgb(244,70,9)" fg:x="23472" fg:w="18"/><text x="51.5695%" y="223.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (44 samples, 0.10%)</title><rect x="51.3020%" y="309" width="0.0962%" height="15" fill="rgb(217,125,39)" fg:x="23464" fg:w="44"/><text x="51.5520%" y="319.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (18 samples, 0.04%)</title><rect x="51.3589%" y="293" width="0.0394%" height="15" fill="rgb(235,36,10)" fg:x="23490" fg:w="18"/><text x="51.6089%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (18 samples, 0.04%)</title><rect x="51.3589%" y="277" width="0.0394%" height="15" fill="rgb(251,123,47)" fg:x="23490" fg:w="18"/><text x="51.6089%" y="287.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (16 samples, 0.03%)</title><rect x="51.3632%" y="261" width="0.0350%" height="15" fill="rgb(221,13,13)" fg:x="23492" fg:w="16"/><text x="51.6132%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="51.3829%" y="245" width="0.0153%" height="15" fill="rgb(238,131,9)" fg:x="23501" fg:w="7"/><text x="51.6329%" y="255.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::_&lt;impl fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt;&gt;&gt;::commit (86 samples, 0.19%)</title><rect x="51.2167%" y="341" width="0.1880%" height="15" fill="rgb(211,50,8)" fg:x="23425" fg:w="86"/><text x="51.4667%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (86 samples, 0.19%)</title><rect x="51.2167%" y="325" width="0.1880%" height="15" fill="rgb(245,182,24)" fg:x="23425" fg:w="86"/><text x="51.4667%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="51.4113%" y="341" width="0.0131%" height="15" fill="rgb(242,14,37)" fg:x="23514" fg:w="6"/><text x="51.6613%" y="351.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::spawn_worker_on_chain::_{{closure}} (284 samples, 0.62%)</title><rect x="50.8079%" y="357" width="0.6209%" height="15" fill="rgb(246,228,12)" fg:x="23238" fg:w="284"/><text x="51.0579%" y="367.50"></text></g><g><title>block_verifier`fuel_core::service::genesis::importer::SnapshotImporter::run_workers::_{{closure}} (395 samples, 0.86%)</title><rect x="50.5827%" y="373" width="0.8636%" height="15" fill="rgb(213,55,15)" fg:x="23135" fg:w="395"/><text x="50.8327%" y="383.50"></text></g><g><title>block_verifier`fuel_core_chain_config::config::state::reader::SnapshotReader::read (8 samples, 0.02%)</title><rect x="51.4288%" y="357" width="0.0175%" height="15" fill="rgb(209,9,3)" fg:x="23522" fg:w="8"/><text x="51.6788%" y="367.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (61 samples, 0.13%)</title><rect x="51.4463%" y="373" width="0.1334%" height="15" fill="rgb(230,59,30)" fg:x="23530" fg:w="61"/><text x="51.6963%" y="383.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::prepare_genesis::_{{closure}} (666 samples, 1.46%)</title><rect x="50.1279%" y="389" width="1.4562%" height="15" fill="rgb(209,121,21)" fg:x="22927" fg:w="666"/><text x="50.3779%" y="399.50"></text></g><g><title>block_verifier`&lt;fuel_core::service::config::Config as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="51.5841%" y="373" width="0.0109%" height="15" fill="rgb(220,109,13)" fg:x="23593" fg:w="5"/><text x="51.8341%" y="383.50"></text></g><g><title>block_verifier`fuel_core::service::FuelService::from_combined_database::_{{closure}} (690 samples, 1.51%)</title><rect x="50.1039%" y="405" width="1.5086%" height="15" fill="rgb(232,18,1)" fg:x="22916" fg:w="690"/><text x="50.3539%" y="415.50"></text></g><g><title>block_verifier`fuel_core::service::sub_services::init_sub_services (13 samples, 0.03%)</title><rect x="51.5841%" y="389" width="0.0284%" height="15" fill="rgb(215,41,42)" fg:x="23593" fg:w="13"/><text x="51.8341%" y="399.50"></text></g><g><title>block_verifier`block_verifier::main::_{{closure}} (707 samples, 1.55%)</title><rect x="50.0689%" y="421" width="1.5458%" height="15" fill="rgb(224,123,36)" fg:x="22900" fg:w="707"/><text x="50.3189%" y="431.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$tracing..instrument..Instrumented$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$0 (8 samples, 0.02%)</title><rect x="51.6147%" y="341" width="0.0175%" height="15" fill="rgb(240,125,3)" fg:x="23607" fg:w="8"/><text x="51.8647%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$fuel_core_services..service..initialize_loop$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_desc0 (8 samples, 0.02%)</title><rect x="51.6147%" y="325" width="0.0175%" height="15" fill="rgb(205,98,50)" fg:x="23607" fg:w="8"/><text x="51.8647%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$fuel_core_services..service..run$LT$fuel_core_gas_price_service..v0..uninitialized_task..UninitializedTask$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..on_chain..OnChain$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..on_chain..OnChain$GT$$GT$$GT$$C$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$GT$$GT$$GT$$C$fuel_core_storage..structured_storage..StructuredStorage$LT$fuel_core..state..generic_database..GenericDatabase$LT$fuel_core..state..data_source..DataSource$LT$fuel_core..database..database_description..gas_price..GasPriceDatabase$C$fuel_core..database..RegularStage$LT$0 (8 samples, 0.02%)</title><rect x="51.6147%" y="309" width="0.0175%" height="15" fill="rgb(205,185,37)" fg:x="23607" fg:w="8"/><text x="51.8647%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_gas_price_service::v0::service::GasPriceServiceV0&lt;fuel_core_gas_price_service::common::l2_block_source::FuelL2BlockSource&lt;fuel_core::service::adapters::ConsensusParametersProvider&gt;,fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::gas_price::GasPriceDatabase&gt;&gt;&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="51.6147%" y="293" width="0.0175%" height="15" fill="rgb(238,207,15)" fg:x="23607" fg:w="8"/><text x="51.8647%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::service::adapters::consensus_parameters_provider::SharedState&gt; (8 samples, 0.02%)</title><rect x="51.6147%" y="277" width="0.0175%" height="15" fill="rgb(213,199,42)" fg:x="23607" fg:w="8"/><text x="51.8647%" y="287.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (8 samples, 0.02%)</title><rect x="51.6147%" y="261" width="0.0175%" height="15" fill="rgb(235,201,11)" fg:x="23607" fg:w="8"/><text x="51.8647%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (6 samples, 0.01%)</title><rect x="51.6453%" y="165" width="0.0131%" height="15" fill="rgb(207,46,11)" fg:x="23621" fg:w="6"/><text x="51.8953%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="51.6453%" y="149" width="0.0131%" height="15" fill="rgb(241,35,35)" fg:x="23621" fg:w="6"/><text x="51.8953%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="51.6475%" y="133" width="0.0109%" height="15" fill="rgb(243,32,47)" fg:x="23622" fg:w="5"/><text x="51.8975%" y="143.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (22 samples, 0.05%)</title><rect x="51.6453%" y="181" width="0.0481%" height="15" fill="rgb(247,202,23)" fg:x="23621" fg:w="22"/><text x="51.8953%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.03%)</title><rect x="51.6584%" y="165" width="0.0350%" height="15" fill="rgb(219,102,11)" fg:x="23627" fg:w="16"/><text x="51.9084%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.03%)</title><rect x="51.6628%" y="149" width="0.0306%" height="15" fill="rgb(243,110,44)" fg:x="23629" fg:w="14"/><text x="51.9128%" y="159.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;fuel_tx::transaction::Transaction&gt;&gt; (24 samples, 0.05%)</title><rect x="51.6453%" y="197" width="0.0525%" height="15" fill="rgb(222,74,54)" fg:x="23621" fg:w="24"/><text x="51.8953%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.05%)</title><rect x="51.6999%" y="197" width="0.0503%" height="15" fill="rgb(216,99,12)" fg:x="23646" fg:w="23"/><text x="51.9499%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.05%)</title><rect x="51.7043%" y="181" width="0.0459%" height="15" fill="rgb(226,22,26)" fg:x="23648" fg:w="21"/><text x="51.9543%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (13 samples, 0.03%)</title><rect x="51.7218%" y="165" width="0.0284%" height="15" fill="rgb(217,163,10)" fg:x="23656" fg:w="13"/><text x="51.9718%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.02%)</title><rect x="51.7262%" y="149" width="0.0241%" height="15" fill="rgb(213,25,53)" fg:x="23658" fg:w="11"/><text x="51.9762%" y="159.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_types::services::block_importer::ImportResult&gt; (52 samples, 0.11%)</title><rect x="51.6387%" y="213" width="0.1137%" height="15" fill="rgb(252,105,26)" fg:x="23618" fg:w="52"/><text x="51.8887%" y="223.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tracing::instrument::Instrumented&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (56 samples, 0.12%)</title><rect x="51.6322%" y="341" width="0.1224%" height="15" fill="rgb(220,39,43)" fg:x="23615" fg:w="56"/><text x="51.8822%" y="351.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_services::service::initialize_loop&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt; (56 samples, 0.12%)</title><rect x="51.6322%" y="325" width="0.1224%" height="15" fill="rgb(229,68,48)" fg:x="23615" fg:w="56"/><text x="51.8822%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;fuel_core_services::service::run&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::service::adapters::graphql_api::GraphQLBlockImporter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt; (56 samples, 0.12%)</title><rect x="51.6322%" y="309" width="0.1224%" height="15" fill="rgb(252,8,32)" fg:x="23615" fg:w="56"/><text x="51.8822%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core::graphql_api::worker_service::Task&lt;fuel_core::service::adapters::TxPoolAdapter,fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;&gt; (56 samples, 0.12%)</title><rect x="51.6322%" y="293" width="0.1224%" height="15" fill="rgb(223,20,43)" fg:x="23615" fg:w="56"/><text x="51.8822%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;futures_util::stream::stream::map::Map&lt;futures_util::stream::stream::filter_map::FilterMap&lt;tokio_stream::wrappers::broadcast::BroadcastStream&lt;fuel_core_importer::ImporterResult&gt;,futures_util::future::ready::Ready&lt;core::option::Option&lt;fuel_core_importer::ImporterResult&gt;&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;,fuel_core::service::adapters::BlockImporterAdapter::events_shared_result::{{closure}}&gt;&gt; (54 samples, 0.12%)</title><rect x="51.6365%" y="277" width="0.1181%" height="15" fill="rgb(229,81,49)" fg:x="23617" fg:w="54"/><text x="51.8865%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::sync::broadcast::Receiver&lt;fuel_core_importer::ImporterResult&gt;&gt; (53 samples, 0.12%)</title><rect x="51.6387%" y="261" width="0.1159%" height="15" fill="rgb(236,28,36)" fg:x="23618" fg:w="53"/><text x="51.8887%" y="271.50"></text></g><g><title>block_verifier`alloc::sync::Arc&lt;T,A&gt;::drop_slow (53 samples, 0.12%)</title><rect x="51.6387%" y="245" width="0.1159%" height="15" fill="rgb(249,185,26)" fg:x="23618" fg:w="53"/><text x="51.8887%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_core_importer::importer::Awaiter&gt; (53 samples, 0.12%)</title><rect x="51.6387%" y="229" width="0.1159%" height="15" fill="rgb(249,174,33)" fg:x="23618" fg:w="53"/><text x="51.8887%" y="239.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;tokio::runtime::runtime::Runtime&gt; (66 samples, 0.14%)</title><rect x="51.6147%" y="421" width="0.1443%" height="15" fill="rgb(233,201,37)" fg:x="23607" fg:w="66"/><text x="51.8647%" y="431.50"></text></g><g><title>block_verifier`&lt;tokio::runtime::runtime::Runtime as core::ops::drop::Drop&gt;::drop (66 samples, 0.14%)</title><rect x="51.6147%" y="405" width="0.1443%" height="15" fill="rgb(221,78,26)" fg:x="23607" fg:w="66"/><text x="51.8647%" y="415.50"></text></g><g><title>block_verifier`tokio::runtime::scheduler::current_thread::shutdown2 (66 samples, 0.14%)</title><rect x="51.6147%" y="389" width="0.1443%" height="15" fill="rgb(250,127,30)" fg:x="23607" fg:w="66"/><text x="51.8647%" y="399.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::shutdown (66 samples, 0.14%)</title><rect x="51.6147%" y="373" width="0.1443%" height="15" fill="rgb(230,49,44)" fg:x="23607" fg:w="66"/><text x="51.8647%" y="383.50"></text></g><g><title>block_verifier`tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (66 samples, 0.14%)</title><rect x="51.6147%" y="357" width="0.1443%" height="15" fill="rgb(229,67,23)" fg:x="23607" fg:w="66"/><text x="51.8647%" y="367.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (28 samples, 0.06%)</title><rect x="51.7590%" y="421" width="0.0612%" height="15" fill="rgb(249,83,47)" fg:x="23673" fg:w="28"/><text x="52.0090%" y="431.50"></text></g><g><title>block_verifier`&lt;fuel_core::graphql_api::worker_service::InitializeTask&lt;TxPool,BlockImporter,OnChain,OffChain&gt; as fuel_core_services::service::RunnableService&gt;::into_task::_{{closure}} (8 samples, 0.02%)</title><rect x="51.8224%" y="373" width="0.0175%" height="15" fill="rgb(215,43,3)" fg:x="23702" fg:w="8"/><text x="52.0724%" y="383.50"></text></g><g><title>block_verifier`fuel_core::graphql_api::worker_service::Task&lt;TxPool,D&gt;::process_block (6 samples, 0.01%)</title><rect x="51.8267%" y="357" width="0.0131%" height="15" fill="rgb(238,154,13)" fg:x="23704" fg:w="6"/><text x="52.0767%" y="367.50"></text></g><g><title>block_verifier`fuel_core::database::_&lt;impl fuel_core_storage::transactional::Modifiable for fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::off_chain::OffChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::off_chain::OffChain&gt;&gt;&gt;&gt;::commit_changes (6 samples, 0.01%)</title><rect x="51.8267%" y="341" width="0.0131%" height="15" fill="rgb(219,56,2)" fg:x="23704" fg:w="6"/><text x="52.0767%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (6 samples, 0.01%)</title><rect x="51.8267%" y="325" width="0.0131%" height="15" fill="rgb(233,0,4)" fg:x="23704" fg:w="6"/><text x="52.0767%" y="335.50"></text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (12 samples, 0.03%)</title><rect x="51.8202%" y="421" width="0.0262%" height="15" fill="rgb(235,30,7)" fg:x="23701" fg:w="12"/><text x="52.0702%" y="431.50"></text></g><g><title>block_verifier`&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.03%)</title><rect x="51.8202%" y="405" width="0.0262%" height="15" fill="rgb(250,79,13)" fg:x="23701" fg:w="12"/><text x="52.0702%" y="415.50"></text></g><g><title>block_verifier`fuel_core_services::service::initialize_loop::_{{closure}} (12 samples, 0.03%)</title><rect x="51.8202%" y="389" width="0.0262%" height="15" fill="rgb(211,146,34)" fg:x="23701" fg:w="12"/><text x="52.0702%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`read (6,565 samples, 14.35%)</title><rect x="51.8464%" y="421" width="14.3538%" height="15" fill="rgb(228,22,38)" fg:x="23713" fg:w="6565"/><text x="52.0964%" y="431.50">libsystem_kernel.dylib..</text></g><g><title>block_verifier`block_verifier::main (30,178 samples, 65.98%)</title><rect x="0.2427%" y="437" width="65.9816%" height="15" fill="rgb(235,168,5)" fg:x="111" fg:w="30178"/><text x="0.4927%" y="447.50">block_verifier`block_verifier::main</text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.02%)</title><rect x="66.2024%" y="421" width="0.0219%" height="15" fill="rgb(221,155,16)" fg:x="30279" fg:w="10"/><text x="66.4524%" y="431.50"></text></g><g><title>block_verifier`std::io::Read::read_exact (5 samples, 0.01%)</title><rect x="66.2243%" y="437" width="0.0109%" height="15" fill="rgb(215,215,53)" fg:x="30289" fg:w="5"/><text x="66.4743%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`read (3,136 samples, 6.86%)</title><rect x="66.2352%" y="437" width="6.8566%" height="15" fill="rgb(223,4,10)" fg:x="30294" fg:w="3136"/><text x="66.4852%" y="447.50">libsystem..</text></g><g><title>block_verifier`main (33,324 samples, 72.86%)</title><rect x="0.2383%" y="469" width="72.8600%" height="15" fill="rgb(234,103,6)" fg:x="109" fg:w="33324"/><text x="0.4883%" y="479.50">block_verifier`main</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (33,324 samples, 72.86%)</title><rect x="0.2383%" y="453" width="72.8600%" height="15" fill="rgb(227,97,0)" fg:x="109" fg:w="33324"/><text x="0.4883%" y="463.50">block_verifier`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>dyld`start (33,326 samples, 72.86%)</title><rect x="0.2383%" y="485" width="72.8644%" height="15" fill="rgb(234,150,53)" fg:x="109" fg:w="33326"/><text x="0.4883%" y="495.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__exit (6 samples, 0.01%)</title><rect x="73.1027%" y="485" width="0.0131%" height="15" fill="rgb(228,201,54)" fg:x="33435" fg:w="6"/><text x="73.3527%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (5 samples, 0.01%)</title><rect x="73.2558%" y="261" width="0.0109%" height="15" fill="rgb(222,22,37)" fg:x="33505" fg:w="5"/><text x="73.5058%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="73.2667%" y="261" width="0.0131%" height="15" fill="rgb(237,53,32)" fg:x="33510" fg:w="6"/><text x="73.5167%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (20 samples, 0.04%)</title><rect x="73.2798%" y="261" width="0.0437%" height="15" fill="rgb(233,25,53)" fg:x="33516" fg:w="20"/><text x="73.5298%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (9 samples, 0.02%)</title><rect x="73.3236%" y="261" width="0.0197%" height="15" fill="rgb(210,40,34)" fg:x="33536" fg:w="9"/><text x="73.5736%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (97 samples, 0.21%)</title><rect x="73.1465%" y="293" width="0.2121%" height="15" fill="rgb(241,220,44)" fg:x="33455" fg:w="97"/><text x="73.3965%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (84 samples, 0.18%)</title><rect x="73.1749%" y="277" width="0.1837%" height="15" fill="rgb(235,28,35)" fg:x="33468" fg:w="84"/><text x="73.4249%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (5 samples, 0.01%)</title><rect x="73.3476%" y="261" width="0.0109%" height="15" fill="rgb(210,56,17)" fg:x="33547" fg:w="5"/><text x="73.5976%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (113 samples, 0.25%)</title><rect x="73.1246%" y="309" width="0.2471%" height="15" fill="rgb(224,130,29)" fg:x="33445" fg:w="113"/><text x="73.3746%" y="319.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7 samples, 0.02%)</title><rect x="73.4023%" y="85" width="0.0153%" height="15" fill="rgb(235,212,8)" fg:x="33572" fg:w="7"/><text x="73.6523%" y="95.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableHelper::ConfigureSomeOptions(rocksdb::ConfigOptions const&amp;, rocksdb::Configurable&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, rocksdb::OptionTypeInfo, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, rocksdb::OptionTypeInfo&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7 samples, 0.02%)</title><rect x="73.4023%" y="69" width="0.0153%" height="15" fill="rgb(223,33,50)" fg:x="33572" fg:w="7"/><text x="73.6523%" y="79.50"></text></g><g><title>block_verifier`rocksdb::Configurable::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (9 samples, 0.02%)</title><rect x="73.4023%" y="101" width="0.0197%" height="15" fill="rgb(219,149,13)" fg:x="33572" fg:w="9"/><text x="73.6523%" y="111.50"></text></g><g><title>block_verifier`rocksdb::GetColumnFamilyOptionsFromMap(rocksdb::ConfigOptions const&amp;, rocksdb::ColumnFamilyOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (10 samples, 0.02%)</title><rect x="73.4023%" y="133" width="0.0219%" height="15" fill="rgb(250,156,29)" fg:x="33572" fg:w="10"/><text x="73.6523%" y="143.50"></text></g><g><title>block_verifier`rocksdb::ConfigurableCFOptions::ConfigureOptions(rocksdb::ConfigOptions const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to (10 samples, 0.02%)</title><rect x="73.4023%" y="117" width="0.0219%" height="15" fill="rgb(216,193,19)" fg:x="33572" fg:w="10"/><text x="73.6523%" y="127.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::EndSection(rocksdb::ConfigOptions const&amp;, rocksdb::OptionSection, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const&amp;, std::__1::unordered_map&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::hash&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::equal_to&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt; const, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (13 samples, 0.03%)</title><rect x="73.3979%" y="149" width="0.0284%" height="15" fill="rgb(216,135,14)" fg:x="33570" fg:w="13"/><text x="73.6479%" y="159.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (17 samples, 0.04%)</title><rect x="73.3979%" y="181" width="0.0372%" height="15" fill="rgb(241,47,5)" fg:x="33570" fg:w="17"/><text x="73.6479%" y="191.50"></text></g><g><title>block_verifier`rocksdb::RocksDBOptionsParser::Parse(rocksdb::ConfigOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (17 samples, 0.04%)</title><rect x="73.3979%" y="165" width="0.0372%" height="15" fill="rgb(233,42,35)" fg:x="33570" fg:w="17"/><text x="73.6479%" y="175.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (22 samples, 0.05%)</title><rect x="73.3892%" y="293" width="0.0481%" height="15" fill="rgb(231,13,6)" fg:x="33566" fg:w="22"/><text x="73.6392%" y="303.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::create_cf (22 samples, 0.05%)</title><rect x="73.3892%" y="277" width="0.0481%" height="15" fill="rgb(207,181,40)" fg:x="33566" fg:w="22"/><text x="73.6392%" y="287.50"></text></g><g><title>block_verifier`rocksdb_create_column_family (22 samples, 0.05%)</title><rect x="73.3892%" y="261" width="0.0481%" height="15" fill="rgb(254,173,49)" fg:x="33566" fg:w="22"/><text x="73.6392%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::CreateColumnFamily(rocksdb::ColumnFamilyOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (22 samples, 0.05%)</title><rect x="73.3892%" y="245" width="0.0481%" height="15" fill="rgb(221,1,38)" fg:x="33566" fg:w="22"/><text x="73.6392%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteOptionsFile (21 samples, 0.05%)</title><rect x="73.3913%" y="229" width="0.0459%" height="15" fill="rgb(206,124,46)" fg:x="33567" fg:w="21"/><text x="73.6413%" y="239.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (20 samples, 0.04%)</title><rect x="73.3935%" y="213" width="0.0437%" height="15" fill="rgb(249,21,11)" fg:x="33568" fg:w="20"/><text x="73.6435%" y="223.50"></text></g><g><title>block_verifier`rocksdb::PersistRocksDBOptions(rocksdb::ConfigOptions const&amp;, rocksdb::DBOptions const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&gt;&gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyOptions, std::__1::allocator&lt;rocksdb::ColumnFamilyOptions&gt;&gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (20 samples, 0.04%)</title><rect x="73.3935%" y="197" width="0.0437%" height="15" fill="rgb(222,201,40)" fg:x="33568" fg:w="20"/><text x="73.6435%" y="207.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Append (22 samples, 0.05%)</title><rect x="73.4504%" y="165" width="0.0481%" height="15" fill="rgb(235,61,29)" fg:x="33594" fg:w="22"/><text x="73.7004%" y="175.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::Flush (21 samples, 0.05%)</title><rect x="73.4526%" y="149" width="0.0459%" height="15" fill="rgb(219,207,3)" fg:x="33595" fg:w="21"/><text x="73.7026%" y="159.50"></text></g><g><title>block_verifier`rocksdb::WritableFileWriter::WriteBuffered (21 samples, 0.05%)</title><rect x="73.4526%" y="133" width="0.0459%" height="15" fill="rgb(222,56,46)" fg:x="33595" fg:w="21"/><text x="73.7026%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`write (21 samples, 0.05%)</title><rect x="73.4526%" y="117" width="0.0459%" height="15" fill="rgb(239,76,54)" fg:x="33595" fg:w="21"/><text x="73.7026%" y="127.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (30 samples, 0.07%)</title><rect x="73.4394%" y="229" width="0.0656%" height="15" fill="rgb(231,124,27)" fg:x="33589" fg:w="30"/><text x="73.6894%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteToWAL (30 samples, 0.07%)</title><rect x="73.4394%" y="213" width="0.0656%" height="15" fill="rgb(249,195,6)" fg:x="33589" fg:w="30"/><text x="73.6894%" y="223.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::AddRecord (30 samples, 0.07%)</title><rect x="73.4394%" y="197" width="0.0656%" height="15" fill="rgb(237,174,47)" fg:x="33589" fg:w="30"/><text x="73.6894%" y="207.50"></text></g><g><title>block_verifier`rocksdb::log::Writer::EmitPhysicalRecord (25 samples, 0.05%)</title><rect x="73.4504%" y="181" width="0.0547%" height="15" fill="rgb(206,201,31)" fg:x="33594" fg:w="25"/><text x="73.7004%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (23 samples, 0.05%)</title><rect x="73.5750%" y="117" width="0.0503%" height="15" fill="rgb(231,57,52)" fg:x="33651" fg:w="23"/><text x="73.8250%" y="127.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (36 samples, 0.08%)</title><rect x="73.5575%" y="133" width="0.0787%" height="15" fill="rgb(248,177,22)" fg:x="33643" fg:w="36"/><text x="73.8075%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="73.6253%" y="117" width="0.0109%" height="15" fill="rgb(215,211,37)" fg:x="33674" fg:w="5"/><text x="73.8753%" y="127.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (49 samples, 0.11%)</title><rect x="73.5313%" y="149" width="0.1071%" height="15" fill="rgb(241,128,51)" fg:x="33631" fg:w="49"/><text x="73.7813%" y="159.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (58 samples, 0.13%)</title><rect x="73.5225%" y="165" width="0.1268%" height="15" fill="rgb(227,165,31)" fg:x="33627" fg:w="58"/><text x="73.7725%" y="175.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteCF (63 samples, 0.14%)</title><rect x="73.5160%" y="197" width="0.1377%" height="15" fill="rgb(228,167,24)" fg:x="33624" fg:w="63"/><text x="73.7660%" y="207.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::DeleteImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (62 samples, 0.14%)</title><rect x="73.5182%" y="181" width="0.1356%" height="15" fill="rgb(228,143,12)" fg:x="33625" fg:w="62"/><text x="73.7682%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (18 samples, 0.04%)</title><rect x="73.7368%" y="117" width="0.0394%" height="15" fill="rgb(249,149,8)" fg:x="33725" fg:w="18"/><text x="73.9868%" y="127.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (33 samples, 0.07%)</title><rect x="73.7149%" y="133" width="0.0722%" height="15" fill="rgb(243,35,44)" fg:x="33715" fg:w="33"/><text x="73.9649%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="73.7762%" y="117" width="0.0109%" height="15" fill="rgb(246,89,9)" fg:x="33743" fg:w="5"/><text x="74.0262%" y="127.50"></text></g><g><title>block_verifier`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (49 samples, 0.11%)</title><rect x="73.6821%" y="149" width="0.1071%" height="15" fill="rgb(233,213,13)" fg:x="33700" fg:w="49"/><text x="73.9321%" y="159.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (52 samples, 0.11%)</title><rect x="73.6800%" y="165" width="0.1137%" height="15" fill="rgb(233,141,41)" fg:x="33699" fg:w="52"/><text x="73.9300%" y="175.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (68 samples, 0.15%)</title><rect x="73.6581%" y="181" width="0.1487%" height="15" fill="rgb(239,167,4)" fg:x="33689" fg:w="68"/><text x="73.9081%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.01%)</title><rect x="73.7936%" y="165" width="0.0131%" height="15" fill="rgb(209,217,16)" fg:x="33751" fg:w="6"/><text x="74.0436%" y="175.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (71 samples, 0.16%)</title><rect x="73.6537%" y="197" width="0.1552%" height="15" fill="rgb(219,88,35)" fg:x="33687" fg:w="71"/><text x="73.9037%" y="207.50"></text></g><g><title>block_verifier`rocksdb_write (172 samples, 0.38%)</title><rect x="73.4394%" y="277" width="0.3761%" height="15" fill="rgb(220,193,23)" fg:x="33589" fg:w="172"/><text x="73.6894%" y="287.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Write (172 samples, 0.38%)</title><rect x="73.4394%" y="261" width="0.3761%" height="15" fill="rgb(230,90,52)" fg:x="33589" fg:w="172"/><text x="73.6894%" y="271.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::WriteImpl (172 samples, 0.38%)</title><rect x="73.4394%" y="245" width="0.3761%" height="15" fill="rgb(252,106,19)" fg:x="33589" fg:w="172"/><text x="73.6894%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::InsertInto (142 samples, 0.31%)</title><rect x="73.5050%" y="229" width="0.3105%" height="15" fill="rgb(206,74,20)" fg:x="33619" fg:w="142"/><text x="73.7550%" y="239.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Iterate (140 samples, 0.31%)</title><rect x="73.5094%" y="213" width="0.3061%" height="15" fill="rgb(230,138,44)" fg:x="33621" fg:w="140"/><text x="73.7594%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write (173 samples, 0.38%)</title><rect x="73.4394%" y="293" width="0.3782%" height="15" fill="rgb(235,182,43)" fg:x="33589" fg:w="173"/><text x="73.6894%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Delete (6 samples, 0.01%)</title><rect x="73.8177%" y="277" width="0.0131%" height="15" fill="rgb(242,16,51)" fg:x="33762" fg:w="6"/><text x="74.0677%" y="287.50"></text></g><g><title>block_verifier`rocksdb_writebatch_delete_cf (7 samples, 0.02%)</title><rect x="73.8177%" y="293" width="0.0153%" height="15" fill="rgb(248,9,4)" fg:x="33762" fg:w="7"/><text x="74.0677%" y="303.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::append (16 samples, 0.03%)</title><rect x="73.8571%" y="245" width="0.0350%" height="15" fill="rgb(210,31,22)" fg:x="33780" fg:w="16"/><text x="74.1071%" y="255.50"></text></g><g><title>block_verifier`rocksdb::WriteBatchInternal::Put (38 samples, 0.08%)</title><rect x="73.8483%" y="261" width="0.0831%" height="15" fill="rgb(239,54,39)" fg:x="33776" fg:w="38"/><text x="74.0983%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.04%)</title><rect x="73.8920%" y="245" width="0.0394%" height="15" fill="rgb(230,99,41)" fg:x="33796" fg:w="18"/><text x="74.1420%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::commit_changes (255 samples, 0.56%)</title><rect x="73.3782%" y="309" width="0.5575%" height="15" fill="rgb(253,106,12)" fg:x="33561" fg:w="255"/><text x="73.6282%" y="319.50"></text></g><g><title>block_verifier`rocksdb_writebatch_put_cf (47 samples, 0.10%)</title><rect x="73.8330%" y="293" width="0.1028%" height="15" fill="rgb(213,46,41)" fg:x="33769" fg:w="47"/><text x="74.0830%" y="303.50"></text></g><g><title>block_verifier`rocksdb::WriteBatch::Put (47 samples, 0.10%)</title><rect x="73.8330%" y="277" width="0.1028%" height="15" fill="rgb(215,133,35)" fg:x="33769" fg:w="47"/><text x="74.0830%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (8 samples, 0.02%)</title><rect x="73.9358%" y="309" width="0.0175%" height="15" fill="rgb(213,28,5)" fg:x="33816" fg:w="8"/><text x="74.1858%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::commit (383 samples, 0.84%)</title><rect x="73.1224%" y="357" width="0.8374%" height="15" fill="rgb(215,77,49)" fg:x="33444" fg:w="383"/><text x="73.3724%" y="367.50"></text></g><g><title>block_verifier`fuel_core::database::_&lt;impl fuel_core_storage::transactional::Modifiable for fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::data_source::DataSource&lt;fuel_core::database::database_description::on_chain::OnChain,fuel_core::database::RegularStage&lt;fuel_core::database::database_description::on_chain::OnChain&gt;&gt;&gt;&gt;::commit_changes (383 samples, 0.84%)</title><rect x="73.1224%" y="341" width="0.8374%" height="15" fill="rgb(248,100,22)" fg:x="33444" fg:w="383"/><text x="73.3724%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::historical_rocksdb::HistoricalRocksDB&lt;Description&gt; as fuel_core::state::TransactableStorage&lt;&lt;Description as fuel_core::database::database_description::DatabaseDescription&gt;::Height&gt;&gt;::commit_changes (383 samples, 0.84%)</title><rect x="73.1224%" y="325" width="0.8374%" height="15" fill="rgb(208,67,9)" fg:x="33444" fg:w="383"/><text x="73.3724%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (6 samples, 0.01%)</title><rect x="74.0232%" y="261" width="0.0131%" height="15" fill="rgb(219,133,21)" fg:x="33856" fg:w="6"/><text x="74.2732%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (5 samples, 0.01%)</title><rect x="74.0254%" y="245" width="0.0109%" height="15" fill="rgb(246,46,29)" fg:x="33857" fg:w="5"/><text x="74.2754%" y="255.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.02%)</title><rect x="74.0210%" y="325" width="0.0175%" height="15" fill="rgb(246,185,52)" fg:x="33855" fg:w="8"/><text x="74.2710%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="74.0232%" y="309" width="0.0153%" height="15" fill="rgb(252,136,11)" fg:x="33856" fg:w="7"/><text x="74.2732%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="74.0232%" y="293" width="0.0153%" height="15" fill="rgb(219,138,53)" fg:x="33856" fg:w="7"/><text x="74.2732%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (7 samples, 0.02%)</title><rect x="74.0232%" y="277" width="0.0153%" height="15" fill="rgb(211,51,23)" fg:x="33856" fg:w="7"/><text x="74.2732%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (10 samples, 0.02%)</title><rect x="74.0385%" y="277" width="0.0219%" height="15" fill="rgb(247,221,28)" fg:x="33863" fg:w="10"/><text x="74.2885%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.02%)</title><rect x="74.0429%" y="261" width="0.0175%" height="15" fill="rgb(251,222,45)" fg:x="33865" fg:w="8"/><text x="74.2929%" y="271.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.03%)</title><rect x="74.0385%" y="325" width="0.0284%" height="15" fill="rgb(217,162,53)" fg:x="33863" fg:w="13"/><text x="74.2885%" y="335.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (13 samples, 0.03%)</title><rect x="74.0385%" y="309" width="0.0284%" height="15" fill="rgb(229,93,14)" fg:x="33863" fg:w="13"/><text x="74.2885%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (13 samples, 0.03%)</title><rect x="74.0385%" y="293" width="0.0284%" height="15" fill="rgb(209,67,49)" fg:x="33863" fg:w="13"/><text x="74.2885%" y="303.50"></text></g><g><title>block_verifier`&lt;&amp;mut postcard::ser::serializer::Serializer&lt;F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (49 samples, 0.11%)</title><rect x="73.9620%" y="341" width="0.1071%" height="15" fill="rgb(213,87,29)" fg:x="33828" fg:w="49"/><text x="74.2120%" y="351.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (23 samples, 0.05%)</title><rect x="74.0779%" y="325" width="0.0503%" height="15" fill="rgb(205,151,52)" fg:x="33881" fg:w="23"/><text x="74.3279%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="74.1304%" y="325" width="0.0153%" height="15" fill="rgb(253,215,39)" fg:x="33905" fg:w="7"/><text x="74.3804%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="74.1325%" y="309" width="0.0131%" height="15" fill="rgb(221,220,41)" fg:x="33906" fg:w="6"/><text x="74.3825%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="74.1325%" y="293" width="0.0131%" height="15" fill="rgb(218,133,21)" fg:x="33906" fg:w="6"/><text x="74.3825%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (38 samples, 0.08%)</title><rect x="74.0735%" y="341" width="0.0831%" height="15" fill="rgb(221,193,43)" fg:x="33879" fg:w="38"/><text x="74.3235%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="74.1457%" y="325" width="0.0109%" height="15" fill="rgb(240,128,52)" fg:x="33912" fg:w="5"/><text x="74.3957%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="74.1632%" y="325" width="0.0350%" height="15" fill="rgb(253,114,12)" fg:x="33920" fg:w="16"/><text x="74.4132%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="74.1653%" y="309" width="0.0328%" height="15" fill="rgb(215,223,47)" fg:x="33921" fg:w="15"/><text x="74.4153%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="74.1828%" y="293" width="0.0153%" height="15" fill="rgb(248,225,23)" fg:x="33929" fg:w="7"/><text x="74.4328%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (9 samples, 0.02%)</title><rect x="74.1981%" y="325" width="0.0197%" height="15" fill="rgb(250,108,0)" fg:x="33936" fg:w="9"/><text x="74.4481%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (10 samples, 0.02%)</title><rect x="74.2200%" y="325" width="0.0219%" height="15" fill="rgb(228,208,7)" fg:x="33946" fg:w="10"/><text x="74.4700%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="74.2200%" y="309" width="0.0219%" height="15" fill="rgb(244,45,10)" fg:x="33946" fg:w="10"/><text x="74.4700%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="74.2244%" y="293" width="0.0175%" height="15" fill="rgb(207,125,25)" fg:x="33948" fg:w="8"/><text x="74.4744%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (20 samples, 0.04%)</title><rect x="74.2440%" y="325" width="0.0437%" height="15" fill="rgb(210,195,18)" fg:x="33957" fg:w="20"/><text x="74.4940%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="74.3031%" y="325" width="0.0219%" height="15" fill="rgb(249,80,12)" fg:x="33984" fg:w="10"/><text x="74.5531%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="74.3075%" y="309" width="0.0175%" height="15" fill="rgb(221,65,9)" fg:x="33986" fg:w="8"/><text x="74.5575%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="74.3140%" y="293" width="0.0109%" height="15" fill="rgb(235,49,36)" fg:x="33989" fg:w="5"/><text x="74.5640%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (78 samples, 0.17%)</title><rect x="74.1566%" y="341" width="0.1705%" height="15" fill="rgb(225,32,20)" fg:x="33917" fg:w="78"/><text x="74.4066%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.01%)</title><rect x="74.3359%" y="277" width="0.0131%" height="15" fill="rgb(215,141,46)" fg:x="33999" fg:w="6"/><text x="74.5859%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9 samples, 0.02%)</title><rect x="74.3315%" y="293" width="0.0197%" height="15" fill="rgb(250,160,47)" fg:x="33997" fg:w="9"/><text x="74.5815%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.03%)</title><rect x="74.3293%" y="341" width="0.0262%" height="15" fill="rgb(216,222,40)" fg:x="33996" fg:w="12"/><text x="74.5793%" y="351.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="74.3315%" y="325" width="0.0241%" height="15" fill="rgb(234,217,39)" fg:x="33997" fg:w="11"/><text x="74.5815%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.02%)</title><rect x="74.3315%" y="309" width="0.0241%" height="15" fill="rgb(207,178,40)" fg:x="33997" fg:w="11"/><text x="74.5815%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="74.3709%" y="309" width="0.0175%" height="15" fill="rgb(221,136,13)" fg:x="34015" fg:w="8"/><text x="74.6209%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="74.3730%" y="293" width="0.0153%" height="15" fill="rgb(249,199,10)" fg:x="34016" fg:w="7"/><text x="74.6230%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="74.3774%" y="277" width="0.0109%" height="15" fill="rgb(249,222,13)" fg:x="34018" fg:w="5"/><text x="74.6274%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (11 samples, 0.02%)</title><rect x="74.3949%" y="309" width="0.0241%" height="15" fill="rgb(244,185,38)" fg:x="34026" fg:w="11"/><text x="74.6449%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="74.4058%" y="293" width="0.0131%" height="15" fill="rgb(236,202,9)" fg:x="34031" fg:w="6"/><text x="74.6558%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (15 samples, 0.03%)</title><rect x="74.4211%" y="309" width="0.0328%" height="15" fill="rgb(250,229,37)" fg:x="34038" fg:w="15"/><text x="74.6711%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (53 samples, 0.12%)</title><rect x="74.3643%" y="325" width="0.1159%" height="15" fill="rgb(206,174,23)" fg:x="34012" fg:w="53"/><text x="74.6143%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (168 samples, 0.37%)</title><rect x="74.4802%" y="325" width="0.3673%" height="15" fill="rgb(211,33,43)" fg:x="34065" fg:w="168"/><text x="74.7302%" y="335.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::block::Block::compress (224 samples, 0.49%)</title><rect x="74.3599%" y="341" width="0.4898%" height="15" fill="rgb(245,58,50)" fg:x="34010" fg:w="224"/><text x="74.6099%" y="351.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (166 samples, 0.36%)</title><rect x="74.8497%" y="341" width="0.3629%" height="15" fill="rgb(244,68,36)" fg:x="34234" fg:w="166"/><text x="75.0997%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="75.2148%" y="341" width="0.0175%" height="15" fill="rgb(232,229,15)" fg:x="34401" fg:w="8"/><text x="75.4648%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="75.2192%" y="325" width="0.0131%" height="15" fill="rgb(254,30,23)" fg:x="34403" fg:w="6"/><text x="75.4692%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;&gt; as fuel_core_importer::ports::DatabaseTransaction&gt;::store_new_block (584 samples, 1.28%)</title><rect x="73.9598%" y="357" width="1.2769%" height="15" fill="rgb(235,160,14)" fg:x="33827" fg:w="584"/><text x="74.2098%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="75.2542%" y="277" width="0.0197%" height="15" fill="rgb(212,155,44)" fg:x="34419" fg:w="9"/><text x="75.5042%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="75.2585%" y="261" width="0.0153%" height="15" fill="rgb(226,2,50)" fg:x="34421" fg:w="7"/><text x="75.5085%" y="271.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="75.2498%" y="293" width="0.0262%" height="15" fill="rgb(234,177,6)" fg:x="34417" fg:w="12"/><text x="75.4998%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="75.2432%" y="341" width="0.0459%" height="15" fill="rgb(217,24,9)" fg:x="34414" fg:w="21"/><text x="75.4932%" y="351.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="75.2432%" y="325" width="0.0459%" height="15" fill="rgb(220,13,46)" fg:x="34414" fg:w="21"/><text x="75.4932%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (20 samples, 0.04%)</title><rect x="75.2454%" y="309" width="0.0437%" height="15" fill="rgb(239,221,27)" fg:x="34415" fg:w="20"/><text x="75.4954%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="75.3088%" y="309" width="0.0350%" height="15" fill="rgb(222,198,25)" fg:x="34444" fg:w="16"/><text x="75.5588%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (15 samples, 0.03%)</title><rect x="75.3110%" y="293" width="0.0328%" height="15" fill="rgb(211,99,13)" fg:x="34445" fg:w="15"/><text x="75.5610%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="75.3154%" y="277" width="0.0284%" height="15" fill="rgb(232,111,31)" fg:x="34447" fg:w="13"/><text x="75.5654%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.03%)</title><rect x="75.3176%" y="261" width="0.0262%" height="15" fill="rgb(245,82,37)" fg:x="34448" fg:w="12"/><text x="75.5676%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (10 samples, 0.02%)</title><rect x="75.3547%" y="309" width="0.0219%" height="15" fill="rgb(227,149,46)" fg:x="34465" fg:w="10"/><text x="75.6047%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="75.3613%" y="293" width="0.0153%" height="15" fill="rgb(218,36,50)" fg:x="34468" fg:w="7"/><text x="75.6113%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (18 samples, 0.04%)</title><rect x="75.3788%" y="309" width="0.0394%" height="15" fill="rgb(226,80,48)" fg:x="34476" fg:w="18"/><text x="75.6288%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="75.4291%" y="309" width="0.0175%" height="15" fill="rgb(238,224,15)" fg:x="34499" fg:w="8"/><text x="75.6791%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="75.4356%" y="293" width="0.0109%" height="15" fill="rgb(241,136,10)" fg:x="34502" fg:w="5"/><text x="75.6856%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="75.4466%" y="309" width="0.0131%" height="15" fill="rgb(208,32,45)" fg:x="34507" fg:w="6"/><text x="75.6966%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (76 samples, 0.17%)</title><rect x="75.2957%" y="325" width="0.1662%" height="15" fill="rgb(207,135,9)" fg:x="34438" fg:w="76"/><text x="75.5457%" y="335.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="75.4969%" y="293" width="0.0109%" height="15" fill="rgb(206,86,44)" fg:x="34530" fg:w="5"/><text x="75.7469%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_core_executor::ports::TransactionExt&gt;::max_gas (9 samples, 0.02%)</title><rect x="75.4903%" y="309" width="0.0197%" height="15" fill="rgb(245,177,15)" fg:x="34527" fg:w="9"/><text x="75.7403%" y="319.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="75.5537%" y="293" width="0.0175%" height="15" fill="rgb(206,64,50)" fg:x="34556" fg:w="8"/><text x="75.8037%" y="303.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 0.06%)</title><rect x="75.5450%" y="309" width="0.0568%" height="15" fill="rgb(234,36,40)" fg:x="34552" fg:w="26"/><text x="75.7950%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="75.5712%" y="293" width="0.0306%" height="15" fill="rgb(213,64,8)" fg:x="34564" fg:w="14"/><text x="75.8212%" y="303.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="75.6018%" y="309" width="0.0109%" height="15" fill="rgb(210,75,36)" fg:x="34578" fg:w="5"/><text x="75.8518%" y="319.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::process (71 samples, 0.16%)</title><rect x="75.4706%" y="325" width="0.1552%" height="15" fill="rgb(229,88,21)" fg:x="34518" fg:w="71"/><text x="75.7206%" y="335.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="75.6434%" y="293" width="0.0153%" height="15" fill="rgb(252,204,47)" fg:x="34597" fg:w="7"/><text x="75.8934%" y="303.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="75.6434%" y="309" width="0.0328%" height="15" fill="rgb(208,77,27)" fg:x="34597" fg:w="15"/><text x="75.8934%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="75.6652%" y="293" width="0.0109%" height="15" fill="rgb(221,76,26)" fg:x="34607" fg:w="5"/><text x="75.9152%" y="303.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::dependency_splitter::DependencySplitter::split_equally (46 samples, 0.10%)</title><rect x="75.6259%" y="325" width="0.1006%" height="15" fill="rgb(225,139,18)" fg:x="34589" fg:w="46"/><text x="75.8759%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="75.6958%" y="309" width="0.0306%" height="15" fill="rgb(230,137,11)" fg:x="34621" fg:w="14"/><text x="75.9458%" y="319.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.02%)</title><rect x="75.8161%" y="293" width="0.0175%" height="15" fill="rgb(212,28,1)" fg:x="34676" fg:w="8"/><text x="76.0661%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="75.8183%" y="277" width="0.0153%" height="15" fill="rgb(248,164,17)" fg:x="34677" fg:w="7"/><text x="76.0683%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="75.8205%" y="261" width="0.0131%" height="15" fill="rgb(222,171,42)" fg:x="34678" fg:w="6"/><text x="76.0705%" y="271.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.01%)</title><rect x="75.8336%" y="293" width="0.0131%" height="15" fill="rgb(243,84,45)" fg:x="34684" fg:w="6"/><text x="76.0836%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;Storage&gt; as fuel_core_storage::transactional::Modifiable&gt;::commit_changes (62 samples, 0.14%)</title><rect x="75.7264%" y="309" width="0.1356%" height="15" fill="rgb(252,49,23)" fg:x="34635" fg:w="62"/><text x="75.9764%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="75.8467%" y="293" width="0.0153%" height="15" fill="rgb(215,19,7)" fg:x="34690" fg:w="7"/><text x="76.0967%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (5 samples, 0.01%)</title><rect x="75.8970%" y="277" width="0.0109%" height="15" fill="rgb(238,81,41)" fg:x="34713" fg:w="5"/><text x="76.1470%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.02%)</title><rect x="75.9779%" y="261" width="0.0175%" height="15" fill="rgb(210,199,37)" fg:x="34750" fg:w="8"/><text x="76.2279%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (6 samples, 0.01%)</title><rect x="75.9997%" y="261" width="0.0131%" height="15" fill="rgb(244,192,49)" fg:x="34760" fg:w="6"/><text x="76.2497%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (63 samples, 0.14%)</title><rect x="75.8817%" y="293" width="0.1377%" height="15" fill="rgb(226,211,11)" fg:x="34706" fg:w="63"/><text x="76.1317%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (51 samples, 0.11%)</title><rect x="75.9079%" y="277" width="0.1115%" height="15" fill="rgb(236,162,54)" fg:x="34718" fg:w="51"/><text x="76.1579%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,alloc::collections::btree::map::BTreeMap&lt;fuel_core_storage::transactional::ReferenceBytesKey,fuel_core_storage::kv_store::WriteOperation&gt;)&gt;&gt; (69 samples, 0.15%)</title><rect x="75.8729%" y="309" width="0.1509%" height="15" fill="rgb(220,229,9)" fg:x="34702" fg:w="69"/><text x="76.1229%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (243 samples, 0.53%)</title><rect x="76.0544%" y="261" width="0.5313%" height="15" fill="rgb(250,87,22)" fg:x="34785" fg:w="243"/><text x="76.3044%" y="271.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (246 samples, 0.54%)</title><rect x="76.0522%" y="277" width="0.5379%" height="15" fill="rgb(239,43,17)" fg:x="34784" fg:w="246"/><text x="76.3022%" y="287.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::generate_txns_root (259 samples, 0.57%)</title><rect x="76.0303%" y="293" width="0.5663%" height="15" fill="rgb(231,177,25)" fg:x="34774" fg:w="259"/><text x="76.2803%" y="303.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::PartialBlockHeader::generate (263 samples, 0.58%)</title><rect x="76.0238%" y="309" width="0.5750%" height="15" fill="rgb(219,179,1)" fg:x="34771" fg:w="263"/><text x="76.2738%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (7 samples, 0.02%)</title><rect x="76.6032%" y="309" width="0.0153%" height="15" fill="rgb(238,219,53)" fg:x="35036" fg:w="7"/><text x="76.8532%" y="319.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results (422 samples, 0.92%)</title><rect x="75.7264%" y="325" width="0.9227%" height="15" fill="rgb(232,167,36)" fg:x="34635" fg:w="422"/><text x="75.9764%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.02%)</title><rect x="76.6294%" y="309" width="0.0197%" height="15" fill="rgb(244,19,51)" fg:x="35048" fg:w="9"/><text x="76.8794%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (178 samples, 0.39%)</title><rect x="76.6491%" y="325" width="0.3892%" height="15" fill="rgb(224,6,22)" fg:x="35057" fg:w="178"/><text x="76.8991%" y="335.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da (812 samples, 1.78%)</title><rect x="75.2935%" y="341" width="1.7754%" height="15" fill="rgb(224,145,5)" fg:x="34437" fg:w="812"/><text x="75.5435%" y="351.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="77.0383%" y="325" width="0.0306%" height="15" fill="rgb(234,130,49)" fg:x="35235" fg:w="14"/><text x="77.2883%" y="335.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (10 samples, 0.02%)</title><rect x="77.0689%" y="293" width="0.0219%" height="15" fill="rgb(254,6,2)" fg:x="35249" fg:w="10"/><text x="77.3189%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="77.0711%" y="277" width="0.0197%" height="15" fill="rgb(208,96,46)" fg:x="35250" fg:w="9"/><text x="77.3211%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="77.0711%" y="261" width="0.0197%" height="15" fill="rgb(239,3,39)" fg:x="35250" fg:w="9"/><text x="77.3211%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (9 samples, 0.02%)</title><rect x="77.1498%" y="261" width="0.0197%" height="15" fill="rgb(233,210,1)" fg:x="35286" fg:w="9"/><text x="77.3998%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (5 samples, 0.01%)</title><rect x="77.1848%" y="261" width="0.0109%" height="15" fill="rgb(244,137,37)" fg:x="35302" fg:w="5"/><text x="77.4348%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (44 samples, 0.10%)</title><rect x="77.1082%" y="277" width="0.0962%" height="15" fill="rgb(240,136,2)" fg:x="35267" fg:w="44"/><text x="77.3582%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (50 samples, 0.11%)</title><rect x="77.0973%" y="293" width="0.1093%" height="15" fill="rgb(239,18,37)" fg:x="35262" fg:w="50"/><text x="77.3473%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (64 samples, 0.14%)</title><rect x="77.0689%" y="309" width="0.1399%" height="15" fill="rgb(218,185,22)" fg:x="35249" fg:w="64"/><text x="77.3189%" y="319.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;[fuel_tx::transaction::Transaction]&gt; (72 samples, 0.16%)</title><rect x="77.0689%" y="325" width="0.1574%" height="15" fill="rgb(225,218,4)" fg:x="35249" fg:w="72"/><text x="77.3189%" y="335.50"></text></g><g><title>block_verifier`fuel_core_types::services::executor::_&lt;impl fuel_core_types::services::Uncommitted&lt;fuel_core_types::services::executor::ProductionResult,DatabaseTransaction&gt;&gt;::into_validation_result (74 samples, 0.16%)</title><rect x="77.0689%" y="341" width="0.1618%" height="15" fill="rgb(230,182,32)" fg:x="35249" fg:w="74"/><text x="77.3189%" y="351.50"></text></g><g><title>block_verifier`fuel_core::service::adapters::block_importer::_&lt;impl fuel_core_importer::ports::Validator for fuel_core::service::adapters::ExecutorAdapter&gt;::validate (924 samples, 2.02%)</title><rect x="75.2432%" y="357" width="2.0202%" height="15" fill="rgb(242,56,43)" fg:x="34414" fg:w="924"/><text x="75.4932%" y="367.50">b..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (15 samples, 0.03%)</title><rect x="77.2307%" y="341" width="0.0328%" height="15" fill="rgb(233,99,24)" fg:x="35323" fg:w="15"/><text x="77.4807%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (6 samples, 0.01%)</title><rect x="77.2722%" y="325" width="0.0131%" height="15" fill="rgb(234,209,42)" fg:x="35342" fg:w="6"/><text x="77.5222%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_types::canonical::Serialize&gt;::size_dynamic (6 samples, 0.01%)</title><rect x="77.2853%" y="325" width="0.0131%" height="15" fill="rgb(227,7,12)" fg:x="35348" fg:w="6"/><text x="77.5353%" y="335.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (242 samples, 0.53%)</title><rect x="77.3028%" y="325" width="0.5291%" height="15" fill="rgb(245,203,43)" fg:x="35356" fg:w="242"/><text x="77.5528%" y="335.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (240 samples, 0.52%)</title><rect x="77.3072%" y="309" width="0.5247%" height="15" fill="rgb(238,205,33)" fg:x="35358" fg:w="240"/><text x="77.5572%" y="319.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::BlockHeader::validate_transactions (264 samples, 0.58%)</title><rect x="77.2635%" y="357" width="0.5772%" height="15" fill="rgb(231,56,7)" fg:x="35338" fg:w="264"/><text x="77.5135%" y="367.50"></text></g><g><title>block_verifier`fuel_core_types::blockchain::header::generate_txns_root (263 samples, 0.58%)</title><rect x="77.2657%" y="341" width="0.5750%" height="15" fill="rgb(244,186,29)" fg:x="35339" fg:w="263"/><text x="77.5157%" y="351.50"></text></g><g><title>block_verifier`rayon_core::registry::WorkerThread::wait_until_cold (2,161 samples, 4.72%)</title><rect x="73.1202%" y="405" width="4.7248%" height="15" fill="rgb(234,111,31)" fg:x="33443" fg:w="2161"/><text x="73.3702%" y="415.50">block_..</text></g><g><title>block_verifier`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2,161 samples, 4.72%)</title><rect x="73.1202%" y="389" width="4.7248%" height="15" fill="rgb(241,149,10)" fg:x="33443" fg:w="2161"/><text x="73.3702%" y="399.50">block_..</text></g><g><title>block_verifier`rayon_core::scope::scope_fifo::_{{closure}} (2,161 samples, 4.72%)</title><rect x="73.1202%" y="373" width="4.7248%" height="15" fill="rgb(249,206,44)" fg:x="33443" fg:w="2161"/><text x="73.3702%" y="383.50">block_..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.02%)</title><rect x="78.0112%" y="229" width="0.0153%" height="15" fill="rgb(251,153,30)" fg:x="35680" fg:w="7"/><text x="78.2612%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.07%)</title><rect x="77.9850%" y="261" width="0.0722%" height="15" fill="rgb(239,152,38)" fg:x="35668" fg:w="33"/><text x="78.2350%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.05%)</title><rect x="78.0047%" y="245" width="0.0525%" height="15" fill="rgb(249,139,47)" fg:x="35677" fg:w="24"/><text x="78.2547%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.03%)</title><rect x="78.0265%" y="229" width="0.0306%" height="15" fill="rgb(244,64,35)" fg:x="35687" fg:w="14"/><text x="78.2765%" y="239.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (72 samples, 0.16%)</title><rect x="77.9063%" y="277" width="0.1574%" height="15" fill="rgb(216,46,15)" fg:x="35632" fg:w="72"/><text x="78.1563%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.02%)</title><rect x="78.0637%" y="277" width="0.0153%" height="15" fill="rgb(250,74,19)" fg:x="35704" fg:w="7"/><text x="78.3137%" y="287.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (86 samples, 0.19%)</title><rect x="77.8997%" y="309" width="0.1880%" height="15" fill="rgb(249,42,33)" fg:x="35629" fg:w="86"/><text x="78.1497%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (86 samples, 0.19%)</title><rect x="77.8997%" y="293" width="0.1880%" height="15" fill="rgb(242,149,17)" fg:x="35629" fg:w="86"/><text x="78.1497%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (88 samples, 0.19%)</title><rect x="77.8997%" y="341" width="0.1924%" height="15" fill="rgb(244,29,21)" fg:x="35629" fg:w="88"/><text x="78.1497%" y="351.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (88 samples, 0.19%)</title><rect x="77.8997%" y="325" width="0.1924%" height="15" fill="rgb(220,130,37)" fg:x="35629" fg:w="88"/><text x="78.1497%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="78.1140%" y="309" width="0.0109%" height="15" fill="rgb(211,67,2)" fg:x="35727" fg:w="5"/><text x="78.3640%" y="319.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="78.0987%" y="325" width="0.0306%" height="15" fill="rgb(235,68,52)" fg:x="35720" fg:w="14"/><text x="78.3487%" y="335.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (7 samples, 0.02%)</title><rect x="78.1293%" y="325" width="0.0153%" height="15" fill="rgb(246,142,3)" fg:x="35734" fg:w="7"/><text x="78.3793%" y="335.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (17 samples, 0.04%)</title><rect x="78.1490%" y="325" width="0.0372%" height="15" fill="rgb(241,25,7)" fg:x="35743" fg:w="17"/><text x="78.3990%" y="335.50"></text></g><g><title>block_verifier`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.10%)</title><rect x="78.0921%" y="341" width="0.1049%" height="15" fill="rgb(242,119,39)" fg:x="35717" fg:w="48"/><text x="78.3421%" y="351.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (7 samples, 0.02%)</title><rect x="78.2080%" y="325" width="0.0153%" height="15" fill="rgb(241,98,45)" fg:x="35770" fg:w="7"/><text x="78.4580%" y="335.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (13 samples, 0.03%)</title><rect x="78.2233%" y="325" width="0.0284%" height="15" fill="rgb(254,28,30)" fg:x="35777" fg:w="13"/><text x="78.4733%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="78.2539%" y="325" width="0.0241%" height="15" fill="rgb(241,142,54)" fg:x="35791" fg:w="11"/><text x="78.5039%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="78.2605%" y="309" width="0.0175%" height="15" fill="rgb(222,85,15)" fg:x="35794" fg:w="8"/><text x="78.5105%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (51 samples, 0.11%)</title><rect x="78.1971%" y="341" width="0.1115%" height="15" fill="rgb(210,85,47)" fg:x="35765" fg:w="51"/><text x="78.4471%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (14 samples, 0.03%)</title><rect x="78.2780%" y="325" width="0.0306%" height="15" fill="rgb(224,206,25)" fg:x="35802" fg:w="14"/><text x="78.5280%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="78.3917%" y="213" width="0.0109%" height="15" fill="rgb(243,201,19)" fg:x="35854" fg:w="5"/><text x="78.6417%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="78.3764%" y="245" width="0.0284%" height="15" fill="rgb(236,59,4)" fg:x="35847" fg:w="13"/><text x="78.6264%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="78.3895%" y="229" width="0.0153%" height="15" fill="rgb(254,179,45)" fg:x="35853" fg:w="7"/><text x="78.6395%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="78.4048%" y="245" width="0.0241%" height="15" fill="rgb(226,14,10)" fg:x="35860" fg:w="11"/><text x="78.6548%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="78.4092%" y="229" width="0.0197%" height="15" fill="rgb(244,27,41)" fg:x="35862" fg:w="9"/><text x="78.6592%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (38 samples, 0.08%)</title><rect x="78.3545%" y="277" width="0.0831%" height="15" fill="rgb(235,35,32)" fg:x="35837" fg:w="38"/><text x="78.6045%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (32 samples, 0.07%)</title><rect x="78.3676%" y="261" width="0.0700%" height="15" fill="rgb(218,68,31)" fg:x="35843" fg:w="32"/><text x="78.6176%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (47 samples, 0.10%)</title><rect x="78.3501%" y="293" width="0.1028%" height="15" fill="rgb(207,120,37)" fg:x="35835" fg:w="47"/><text x="78.6001%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (52 samples, 0.11%)</title><rect x="78.3414%" y="309" width="0.1137%" height="15" fill="rgb(227,98,0)" fg:x="35831" fg:w="52"/><text x="78.5914%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (56 samples, 0.12%)</title><rect x="78.3348%" y="325" width="0.1224%" height="15" fill="rgb(207,7,3)" fg:x="35828" fg:w="56"/><text x="78.5848%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="78.4726%" y="325" width="0.0109%" height="15" fill="rgb(206,98,19)" fg:x="35891" fg:w="5"/><text x="78.7226%" y="335.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (81 samples, 0.18%)</title><rect x="78.3086%" y="341" width="0.1771%" height="15" fill="rgb(217,5,26)" fg:x="35816" fg:w="81"/><text x="78.5586%" y="351.50"></text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::merge_execution_results::_{{closure}}::_{{closure}} (298 samples, 0.65%)</title><rect x="77.8494%" y="357" width="0.6516%" height="15" fill="rgb(235,190,38)" fg:x="35606" fg:w="298"/><text x="78.0994%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="78.4901%" y="341" width="0.0109%" height="15" fill="rgb(247,86,24)" fg:x="35899" fg:w="5"/><text x="78.7401%" y="351.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="78.5272%" y="309" width="0.0109%" height="15" fill="rgb(205,101,16)" fg:x="35916" fg:w="5"/><text x="78.7772%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_core_executor::ports::TransactionExt&gt;::max_gas (15 samples, 0.03%)</title><rect x="78.5119%" y="325" width="0.0328%" height="15" fill="rgb(246,168,33)" fg:x="35909" fg:w="15"/><text x="78.7619%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.06%)</title><rect x="78.5841%" y="293" width="0.0590%" height="15" fill="rgb(231,114,1)" fg:x="35942" fg:w="27"/><text x="78.8341%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.05%)</title><rect x="78.5950%" y="277" width="0.0481%" height="15" fill="rgb(207,184,53)" fg:x="35947" fg:w="22"/><text x="78.8450%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.03%)</title><rect x="78.6081%" y="261" width="0.0350%" height="15" fill="rgb(224,95,51)" fg:x="35953" fg:w="16"/><text x="78.8581%" y="271.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.08%)</title><rect x="78.5644%" y="309" width="0.0809%" height="15" fill="rgb(212,188,45)" fg:x="35933" fg:w="37"/><text x="78.8144%" y="319.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (19 samples, 0.04%)</title><rect x="78.6453%" y="309" width="0.0415%" height="15" fill="rgb(223,154,38)" fg:x="35970" fg:w="19"/><text x="78.8953%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="78.6978%" y="277" width="0.0131%" height="15" fill="rgb(251,22,52)" fg:x="35994" fg:w="6"/><text x="78.9478%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (8 samples, 0.02%)</title><rect x="78.6956%" y="293" width="0.0175%" height="15" fill="rgb(229,209,22)" fg:x="35993" fg:w="8"/><text x="78.9456%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.03%)</title><rect x="78.7153%" y="293" width="0.0284%" height="15" fill="rgb(234,138,34)" fg:x="36002" fg:w="13"/><text x="78.9653%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="78.7240%" y="277" width="0.0197%" height="15" fill="rgb(212,95,11)" fg:x="36006" fg:w="9"/><text x="78.9740%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (28 samples, 0.06%)</title><rect x="78.6890%" y="309" width="0.0612%" height="15" fill="rgb(240,179,47)" fg:x="35990" fg:w="28"/><text x="78.9390%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (25 samples, 0.05%)</title><rect x="78.7524%" y="309" width="0.0547%" height="15" fill="rgb(240,163,11)" fg:x="36019" fg:w="25"/><text x="79.0024%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="78.8115%" y="309" width="0.0109%" height="15" fill="rgb(236,37,12)" fg:x="36046" fg:w="5"/><text x="79.0615%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="78.8224%" y="309" width="0.0219%" height="15" fill="rgb(232,164,16)" fg:x="36051" fg:w="10"/><text x="79.0724%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="78.8290%" y="293" width="0.0153%" height="15" fill="rgb(244,205,15)" fg:x="36054" fg:w="7"/><text x="79.0790%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (140 samples, 0.31%)</title><rect x="78.5469%" y="325" width="0.3061%" height="15" fill="rgb(223,117,47)" fg:x="35925" fg:w="140"/><text x="78.7969%" y="335.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.05%)</title><rect x="78.9186%" y="293" width="0.0481%" height="15" fill="rgb(244,107,35)" fg:x="36095" fg:w="22"/><text x="79.1686%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="78.9317%" y="277" width="0.0350%" height="15" fill="rgb(205,140,8)" fg:x="36101" fg:w="16"/><text x="79.1817%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (15 samples, 0.03%)</title><rect x="78.9339%" y="261" width="0.0328%" height="15" fill="rgb(228,84,46)" fg:x="36102" fg:w="15"/><text x="79.1839%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="78.9470%" y="245" width="0.0197%" height="15" fill="rgb(254,188,9)" fg:x="36108" fg:w="9"/><text x="79.1970%" y="255.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (8 samples, 0.02%)</title><rect x="78.9667%" y="293" width="0.0175%" height="15" fill="rgb(206,112,54)" fg:x="36117" fg:w="8"/><text x="79.2167%" y="303.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (5 samples, 0.01%)</title><rect x="78.9864%" y="277" width="0.0109%" height="15" fill="rgb(216,84,49)" fg:x="36126" fg:w="5"/><text x="79.2364%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="78.9864%" y="261" width="0.0109%" height="15" fill="rgb(214,194,35)" fg:x="36126" fg:w="5"/><text x="79.2364%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.03%)</title><rect x="79.0061%" y="277" width="0.0350%" height="15" fill="rgb(249,28,3)" fg:x="36135" fg:w="16"/><text x="79.2561%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="79.0192%" y="261" width="0.0219%" height="15" fill="rgb(222,56,52)" fg:x="36141" fg:w="10"/><text x="79.2692%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (29 samples, 0.06%)</title><rect x="78.9842%" y="293" width="0.0634%" height="15" fill="rgb(245,217,50)" fg:x="36125" fg:w="29"/><text x="79.2342%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (20 samples, 0.04%)</title><rect x="79.0498%" y="293" width="0.0437%" height="15" fill="rgb(213,201,24)" fg:x="36155" fg:w="20"/><text x="79.2998%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (106 samples, 0.23%)</title><rect x="78.9077%" y="309" width="0.2318%" height="15" fill="rgb(248,116,28)" fg:x="36090" fg:w="106"/><text x="79.1577%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="79.1176%" y="293" width="0.0219%" height="15" fill="rgb(219,72,43)" fg:x="36186" fg:w="10"/><text x="79.3676%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="79.1197%" y="277" width="0.0197%" height="15" fill="rgb(209,138,14)" fg:x="36187" fg:w="9"/><text x="79.3697%" y="287.50"></text></g><g><title>block_verifier`DYLD-STUB$$memcmp (5 samples, 0.01%)</title><rect x="79.1438%" y="309" width="0.0109%" height="15" fill="rgb(222,18,33)" fg:x="36198" fg:w="5"/><text x="79.3938%" y="319.50"></text></g><g><title>block_verifier`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (8 samples, 0.02%)</title><rect x="79.2968%" y="277" width="0.0175%" height="15" fill="rgb(213,199,7)" fg:x="36268" fg:w="8"/><text x="79.5468%" y="287.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (17 samples, 0.04%)</title><rect x="79.2794%" y="293" width="0.0372%" height="15" fill="rgb(250,110,10)" fg:x="36260" fg:w="17"/><text x="79.5294%" y="303.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (84 samples, 0.18%)</title><rect x="79.1591%" y="309" width="0.1837%" height="15" fill="rgb(248,123,6)" fg:x="36205" fg:w="84"/><text x="79.4091%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.02%)</title><rect x="79.3187%" y="293" width="0.0241%" height="15" fill="rgb(206,91,31)" fg:x="36278" fg:w="11"/><text x="79.5687%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="79.3624%" y="293" width="0.0219%" height="15" fill="rgb(211,154,13)" fg:x="36298" fg:w="10"/><text x="79.6124%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="79.3668%" y="277" width="0.0175%" height="15" fill="rgb(225,148,7)" fg:x="36300" fg:w="8"/><text x="79.6168%" y="287.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (20 samples, 0.04%)</title><rect x="79.3428%" y="309" width="0.0437%" height="15" fill="rgb(220,160,43)" fg:x="36289" fg:w="20"/><text x="79.5928%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.02%)</title><rect x="79.3865%" y="309" width="0.0175%" height="15" fill="rgb(213,52,39)" fg:x="36309" fg:w="8"/><text x="79.6365%" y="319.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="79.3865%" y="293" width="0.0175%" height="15" fill="rgb(243,137,7)" fg:x="36309" fg:w="8"/><text x="79.6365%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (8 samples, 0.02%)</title><rect x="79.3865%" y="277" width="0.0175%" height="15" fill="rgb(230,79,13)" fg:x="36309" fg:w="8"/><text x="79.6365%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (8 samples, 0.02%)</title><rect x="79.3865%" y="261" width="0.0175%" height="15" fill="rgb(247,105,23)" fg:x="36309" fg:w="8"/><text x="79.6365%" y="271.50"></text></g><g><title>block_verifier`core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.02%)</title><rect x="79.4849%" y="261" width="0.0241%" height="15" fill="rgb(223,179,41)" fg:x="36354" fg:w="11"/><text x="79.7349%" y="271.50"></text></g><g><title>block_verifier`&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="79.5111%" y="229" width="0.0262%" height="15" fill="rgb(218,9,34)" fg:x="36366" fg:w="12"/><text x="79.7611%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="79.5417%" y="229" width="0.0109%" height="15" fill="rgb(222,106,8)" fg:x="36380" fg:w="5"/><text x="79.7917%" y="239.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.05%)</title><rect x="79.5089%" y="245" width="0.0547%" height="15" fill="rgb(211,220,0)" fg:x="36365" fg:w="25"/><text x="79.7589%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::Executable::input_asset_ids_unique (29 samples, 0.06%)</title><rect x="79.5089%" y="261" width="0.0634%" height="15" fill="rgb(229,52,16)" fg:x="36365" fg:w="29"/><text x="79.7589%" y="271.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (13 samples, 0.03%)</title><rect x="79.5986%" y="245" width="0.0284%" height="15" fill="rgb(212,155,18)" fg:x="36406" fg:w="13"/><text x="79.8486%" y="255.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (5 samples, 0.01%)</title><rect x="79.6423%" y="213" width="0.0109%" height="15" fill="rgb(242,21,14)" fg:x="36426" fg:w="5"/><text x="79.8923%" y="223.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.03%)</title><rect x="79.6357%" y="229" width="0.0284%" height="15" fill="rgb(222,19,48)" fg:x="36423" fg:w="13"/><text x="79.8857%" y="239.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.04%)</title><rect x="79.6270%" y="245" width="0.0394%" height="15" fill="rgb(232,45,27)" fg:x="36419" fg:w="18"/><text x="79.8770%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (48 samples, 0.10%)</title><rect x="79.5723%" y="261" width="0.1049%" height="15" fill="rgb(249,103,42)" fg:x="36394" fg:w="48"/><text x="79.8223%" y="271.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.03%)</title><rect x="79.7123%" y="229" width="0.0350%" height="15" fill="rgb(246,81,33)" fg:x="36458" fg:w="16"/><text x="79.9623%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="79.7210%" y="213" width="0.0262%" height="15" fill="rgb(252,33,42)" fg:x="36462" fg:w="12"/><text x="79.9710%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="79.7319%" y="197" width="0.0153%" height="15" fill="rgb(209,212,41)" fg:x="36467" fg:w="7"/><text x="79.9819%" y="207.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (11 samples, 0.02%)</title><rect x="79.7473%" y="229" width="0.0241%" height="15" fill="rgb(207,154,6)" fg:x="36474" fg:w="11"/><text x="79.9973%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="79.7800%" y="213" width="0.0197%" height="15" fill="rgb(223,64,47)" fg:x="36489" fg:w="9"/><text x="80.0300%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="79.7844%" y="197" width="0.0153%" height="15" fill="rgb(211,161,38)" fg:x="36491" fg:w="7"/><text x="80.0344%" y="207.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (16 samples, 0.03%)</title><rect x="79.7713%" y="229" width="0.0350%" height="15" fill="rgb(219,138,40)" fg:x="36485" fg:w="16"/><text x="80.0213%" y="239.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (28 samples, 0.06%)</title><rect x="79.8107%" y="229" width="0.0612%" height="15" fill="rgb(241,228,46)" fg:x="36503" fg:w="28"/><text x="80.0607%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="79.8806%" y="229" width="0.0241%" height="15" fill="rgb(223,209,38)" fg:x="36535" fg:w="11"/><text x="80.1306%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="79.8894%" y="213" width="0.0153%" height="15" fill="rgb(236,164,45)" fg:x="36539" fg:w="7"/><text x="80.1394%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as fuel_tx::transaction::id::UniqueIdentifier&gt;::id (95 samples, 0.21%)</title><rect x="79.7079%" y="245" width="0.2077%" height="15" fill="rgb(231,15,5)" fg:x="36456" fg:w="95"/><text x="79.9579%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="79.9287%" y="229" width="0.0175%" height="15" fill="rgb(252,35,15)" fg:x="36557" fg:w="8"/><text x="80.1787%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="79.9309%" y="213" width="0.0153%" height="15" fill="rgb(248,181,18)" fg:x="36558" fg:w="7"/><text x="80.1809%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="79.9353%" y="197" width="0.0109%" height="15" fill="rgb(233,39,42)" fg:x="36560" fg:w="5"/><text x="80.1853%" y="207.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.03%)</title><rect x="79.9222%" y="245" width="0.0262%" height="15" fill="rgb(238,110,33)" fg:x="36554" fg:w="12"/><text x="80.1722%" y="255.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (249 samples, 0.54%)</title><rect x="79.9484%" y="245" width="0.5444%" height="15" fill="rgb(233,195,10)" fg:x="36566" fg:w="249"/><text x="80.1984%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::script::_&lt;impl fuel_tx::transaction::metadata::Cacheable for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::precompute (377 samples, 0.82%)</title><rect x="79.6773%" y="261" width="0.8243%" height="15" fill="rgb(254,105,3)" fg:x="36442" fg:w="377"/><text x="79.9273%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="80.5256%" y="229" width="0.0109%" height="15" fill="rgb(221,225,9)" fg:x="36830" fg:w="5"/><text x="80.7756%" y="239.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="80.5191%" y="245" width="0.0197%" height="15" fill="rgb(224,227,45)" fg:x="36827" fg:w="9"/><text x="80.7691%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::next_duplicate (23 samples, 0.05%)</title><rect x="80.5081%" y="261" width="0.0503%" height="15" fill="rgb(229,198,43)" fg:x="36822" fg:w="23"/><text x="80.7581%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="80.5409%" y="245" width="0.0175%" height="15" fill="rgb(206,209,35)" fg:x="36837" fg:w="8"/><text x="80.7909%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="80.5409%" y="229" width="0.0175%" height="15" fill="rgb(245,195,53)" fg:x="36837" fg:w="8"/><text x="80.7909%" y="239.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::types::script::_&lt;impl fuel_vm::checked_transaction::IntoChecked for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;::into_checked_basic (518 samples, 1.13%)</title><rect x="79.4543%" y="277" width="1.1326%" height="15" fill="rgb(240,92,26)" fg:x="36340" fg:w="518"/><text x="79.7043%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::Transaction as fuel_vm::checked_transaction::IntoChecked&gt;::into_checked_basic (534 samples, 1.17%)</title><rect x="79.4258%" y="293" width="1.1675%" height="15" fill="rgb(207,40,23)" fg:x="36327" fg:w="534"/><text x="79.6758%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::convert_maybe_checked_tx_to_checked_tx (545 samples, 1.19%)</title><rect x="79.4237%" y="309" width="1.1916%" height="15" fill="rgb(223,111,35)" fg:x="36326" fg:w="545"/><text x="79.6737%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.02%)</title><rect x="80.6000%" y="293" width="0.0153%" height="15" fill="rgb(229,147,28)" fg:x="36864" fg:w="7"/><text x="80.8500%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::put (10 samples, 0.02%)</title><rect x="80.6655%" y="293" width="0.0219%" height="15" fill="rgb(211,29,28)" fg:x="36894" fg:w="10"/><text x="80.9155%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.05%)</title><rect x="80.7333%" y="261" width="0.0503%" height="15" fill="rgb(228,72,33)" fg:x="36925" fg:w="23"/><text x="80.9833%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.04%)</title><rect x="80.7399%" y="245" width="0.0437%" height="15" fill="rgb(205,214,31)" fg:x="36928" fg:w="20"/><text x="80.9899%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="80.7596%" y="229" width="0.0241%" height="15" fill="rgb(224,111,15)" fg:x="36937" fg:w="11"/><text x="81.0096%" y="239.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.08%)</title><rect x="80.7049%" y="277" width="0.0809%" height="15" fill="rgb(253,21,26)" fg:x="36912" fg:w="37"/><text x="80.9549%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.06%)</title><rect x="80.7880%" y="261" width="0.0590%" height="15" fill="rgb(245,139,43)" fg:x="36950" fg:w="27"/><text x="81.0380%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.05%)</title><rect x="80.7989%" y="245" width="0.0481%" height="15" fill="rgb(252,170,7)" fg:x="36955" fg:w="22"/><text x="81.0489%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.03%)</title><rect x="80.8120%" y="229" width="0.0350%" height="15" fill="rgb(231,118,14)" fg:x="36961" fg:w="16"/><text x="81.0620%" y="239.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (29 samples, 0.06%)</title><rect x="80.7858%" y="277" width="0.0634%" height="15" fill="rgb(238,83,0)" fg:x="36949" fg:w="29"/><text x="81.0358%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="80.8536%" y="277" width="0.0131%" height="15" fill="rgb(221,39,39)" fg:x="36980" fg:w="6"/><text x="81.1036%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="80.8667%" y="277" width="0.0131%" height="15" fill="rgb(222,119,46)" fg:x="36986" fg:w="6"/><text x="81.1167%" y="287.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (85 samples, 0.19%)</title><rect x="80.6983%" y="293" width="0.1858%" height="15" fill="rgb(222,165,49)" fg:x="36909" fg:w="85"/><text x="80.9483%" y="303.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.01%)</title><rect x="80.8951%" y="293" width="0.0109%" height="15" fill="rgb(219,113,52)" fg:x="36999" fg:w="5"/><text x="81.1451%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="80.9585%" y="245" width="0.0131%" height="15" fill="rgb(214,7,15)" fg:x="37028" fg:w="6"/><text x="81.2085%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.05%)</title><rect x="80.9214%" y="277" width="0.0547%" height="15" fill="rgb(235,32,4)" fg:x="37011" fg:w="25"/><text x="81.1714%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.03%)</title><rect x="80.9410%" y="261" width="0.0350%" height="15" fill="rgb(238,90,54)" fg:x="37020" fg:w="16"/><text x="81.1910%" y="271.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (44 samples, 0.10%)</title><rect x="80.9082%" y="293" width="0.0962%" height="15" fill="rgb(213,208,19)" fg:x="37005" fg:w="44"/><text x="81.1582%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (10 samples, 0.02%)</title><rect x="80.9826%" y="277" width="0.0219%" height="15" fill="rgb(233,156,4)" fg:x="37039" fg:w="10"/><text x="81.2326%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (5 samples, 0.01%)</title><rect x="81.0088%" y="261" width="0.0109%" height="15" fill="rgb(207,194,5)" fg:x="37051" fg:w="5"/><text x="81.2588%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.07%)</title><rect x="81.0219%" y="261" width="0.0678%" height="15" fill="rgb(206,111,30)" fg:x="37057" fg:w="31"/><text x="81.2719%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.05%)</title><rect x="81.0438%" y="245" width="0.0459%" height="15" fill="rgb(243,70,54)" fg:x="37067" fg:w="21"/><text x="81.2938%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (39 samples, 0.09%)</title><rect x="81.0088%" y="277" width="0.0853%" height="15" fill="rgb(242,28,8)" fg:x="37051" fg:w="39"/><text x="81.2588%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (5 samples, 0.01%)</title><rect x="81.0963%" y="277" width="0.0109%" height="15" fill="rgb(219,106,18)" fg:x="37091" fg:w="5"/><text x="81.3463%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_vm::storage::predicate::PredicateStorage&lt;&amp;fuel_core::graphql_api::database::ReadView&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (59 samples, 0.13%)</title><rect x="81.0044%" y="293" width="0.1290%" height="15" fill="rgb(244,222,10)" fg:x="37049" fg:w="59"/><text x="81.2544%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="81.1094%" y="277" width="0.0241%" height="15" fill="rgb(236,179,52)" fg:x="37097" fg:w="11"/><text x="81.3594%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="81.1159%" y="261" width="0.0175%" height="15" fill="rgb(213,23,39)" fg:x="37100" fg:w="8"/><text x="81.3659%" y="271.50"></text></g><g><title>block_verifier`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11 samples, 0.02%)</title><rect x="81.1968%" y="277" width="0.0241%" height="15" fill="rgb(238,48,10)" fg:x="37137" fg:w="11"/><text x="81.4468%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="81.1968%" y="261" width="0.0241%" height="15" fill="rgb(251,196,23)" fg:x="37137" fg:w="11"/><text x="81.4468%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="81.2012%" y="245" width="0.0197%" height="15" fill="rgb(250,152,24)" fg:x="37139" fg:w="9"/><text x="81.4512%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="81.2515%" y="245" width="0.0109%" height="15" fill="rgb(209,150,17)" fg:x="37162" fg:w="5"/><text x="81.5015%" y="255.50"></text></g><g><title>block_verifier`alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (8 samples, 0.02%)</title><rect x="81.2471%" y="261" width="0.0175%" height="15" fill="rgb(234,202,34)" fg:x="37160" fg:w="8"/><text x="81.4971%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.2799%" y="261" width="0.0109%" height="15" fill="rgb(253,148,53)" fg:x="37175" fg:w="5"/><text x="81.5299%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_vm::interpreter::balances::RuntimeBalances as core::convert::TryFrom&lt;fuel_vm::interpreter::InitialBalances&gt;&gt;::try_from (30 samples, 0.07%)</title><rect x="81.2275%" y="277" width="0.0656%" height="15" fill="rgb(218,129,16)" fg:x="37151" fg:w="30"/><text x="81.4775%" y="287.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="81.3040%" y="245" width="0.0372%" height="15" fill="rgb(216,85,19)" fg:x="37186" fg:w="17"/><text x="81.5540%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="81.3105%" y="229" width="0.0306%" height="15" fill="rgb(235,228,7)" fg:x="37189" fg:w="14"/><text x="81.5605%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.03%)</title><rect x="81.3105%" y="213" width="0.0306%" height="15" fill="rgb(245,175,0)" fg:x="37189" fg:w="14"/><text x="81.5605%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="81.3193%" y="197" width="0.0219%" height="15" fill="rgb(208,168,36)" fg:x="37193" fg:w="10"/><text x="81.5693%" y="207.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::metadata::CommonMetadata as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="81.3411%" y="245" width="0.0175%" height="15" fill="rgb(246,171,24)" fg:x="37203" fg:w="8"/><text x="81.5911%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="81.3411%" y="229" width="0.0175%" height="15" fill="rgb(215,142,24)" fg:x="37203" fg:w="8"/><text x="81.5911%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="81.3411%" y="213" width="0.0175%" height="15" fill="rgb(250,187,7)" fg:x="37203" fg:w="8"/><text x="81.5911%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt; as core::clone::Clone&gt;::clone (38 samples, 0.08%)</title><rect x="81.2974%" y="261" width="0.0831%" height="15" fill="rgb(228,66,33)" fg:x="37183" fg:w="38"/><text x="81.5474%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="81.3827%" y="261" width="0.0131%" height="15" fill="rgb(234,215,21)" fg:x="37222" fg:w="6"/><text x="81.6327%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="81.3849%" y="245" width="0.0109%" height="15" fill="rgb(222,191,20)" fg:x="37223" fg:w="5"/><text x="81.6349%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_vm::state::StateTransition&lt;Tx&gt; as core::convert::From&lt;fuel_vm::state::StateTransitionRef&lt;Tx&gt;&gt;&gt;::from (48 samples, 0.10%)</title><rect x="81.2930%" y="277" width="0.1049%" height="15" fill="rgb(245,79,54)" fg:x="37181" fg:w="48"/><text x="81.5430%" y="287.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (6 samples, 0.01%)</title><rect x="81.4089%" y="277" width="0.0131%" height="15" fill="rgb(240,10,37)" fg:x="37234" fg:w="6"/><text x="81.6589%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="81.4089%" y="261" width="0.0131%" height="15" fill="rgb(214,192,32)" fg:x="37234" fg:w="6"/><text x="81.6589%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (8 samples, 0.02%)</title><rect x="81.4439%" y="213" width="0.0175%" height="15" fill="rgb(209,36,54)" fg:x="37250" fg:w="8"/><text x="81.6939%" y="223.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::input::Input&gt; (21 samples, 0.05%)</title><rect x="81.4242%" y="245" width="0.0459%" height="15" fill="rgb(220,10,11)" fg:x="37241" fg:w="21"/><text x="81.6742%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.04%)</title><rect x="81.4330%" y="229" width="0.0372%" height="15" fill="rgb(221,106,17)" fg:x="37245" fg:w="17"/><text x="81.6830%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (12 samples, 0.03%)</title><rect x="81.4701%" y="245" width="0.0262%" height="15" fill="rgb(251,142,44)" fg:x="37262" fg:w="12"/><text x="81.7201%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (17 samples, 0.04%)</title><rect x="81.5336%" y="229" width="0.0372%" height="15" fill="rgb(238,13,15)" fg:x="37291" fg:w="17"/><text x="81.7836%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="81.6101%" y="213" width="0.0131%" height="15" fill="rgb(208,107,27)" fg:x="37326" fg:w="6"/><text x="81.8601%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.05%)</title><rect x="81.5795%" y="229" width="0.0481%" height="15" fill="rgb(205,136,37)" fg:x="37312" fg:w="22"/><text x="81.8295%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (60 samples, 0.13%)</title><rect x="81.5029%" y="245" width="0.1312%" height="15" fill="rgb(250,205,27)" fg:x="37277" fg:w="60"/><text x="81.7529%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.01%)</title><rect x="81.6363%" y="245" width="0.0109%" height="15" fill="rgb(210,80,43)" fg:x="37338" fg:w="5"/><text x="81.8863%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt; (103 samples, 0.23%)</title><rect x="81.4242%" y="261" width="0.2252%" height="15" fill="rgb(247,160,36)" fg:x="37241" fg:w="103"/><text x="81.6742%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (5 samples, 0.01%)</title><rect x="81.6604%" y="261" width="0.0109%" height="15" fill="rgb(234,13,49)" fg:x="37349" fg:w="5"/><text x="81.9104%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="81.7238%" y="229" width="0.0109%" height="15" fill="rgb(234,122,0)" fg:x="37378" fg:w="5"/><text x="81.9738%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.07%)</title><rect x="81.6713%" y="261" width="0.0678%" height="15" fill="rgb(207,146,38)" fg:x="37354" fg:w="31"/><text x="81.9213%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.05%)</title><rect x="81.6910%" y="245" width="0.0481%" height="15" fill="rgb(207,177,25)" fg:x="37363" fg:w="22"/><text x="81.9410%" y="255.50"></text></g><g><title>block_verifier`core::ptr::drop_in_place&lt;fuel_vm::interpreter::Interpreter&lt;&amp;mut fuel_vm::interpreter::memory::MemoryInstance,fuel_core_storage::vm_storage::VmStorage&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;&amp;mut fuel_core_storage::structured_storage::StructuredStorage&lt;fuel_core_storage::transactional::InMemoryTransaction&lt;fuel_core::state::generic_database::GenericDatabase&lt;fuel_core::state::key_value_view::KeyValueViewWrapper&lt;fuel_core_storage::column::Column&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;,fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;fuel_tx::transaction::types::script::ScriptBody,fuel_tx::transaction::types::script::ScriptMetadata&gt;&gt;&gt; (148 samples, 0.32%)</title><rect x="81.4220%" y="277" width="0.3236%" height="15" fill="rgb(211,178,42)" fg:x="37240" fg:w="148"/><text x="81.6720%" y="287.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (5 samples, 0.01%)</title><rect x="81.8353%" y="165" width="0.0109%" height="15" fill="rgb(230,69,54)" fg:x="37429" fg:w="5"/><text x="82.0853%" y="175.50"></text></g><g><title>block_verifier`core::fmt::write (13 samples, 0.03%)</title><rect x="81.8200%" y="181" width="0.0284%" height="15" fill="rgb(214,135,41)" fg:x="37422" fg:w="13"/><text x="82.0700%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="81.8550%" y="165" width="0.0153%" height="15" fill="rgb(237,67,25)" fg:x="37438" fg:w="7"/><text x="82.1050%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="81.8484%" y="181" width="0.0241%" height="15" fill="rgb(222,189,50)" fg:x="37435" fg:w="11"/><text x="82.0984%" y="191.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (29 samples, 0.06%)</title><rect x="81.8178%" y="197" width="0.0634%" height="15" fill="rgb(245,148,34)" fg:x="37421" fg:w="29"/><text x="82.0678%" y="207.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (25 samples, 0.05%)</title><rect x="81.8856%" y="197" width="0.0547%" height="15" fill="rgb(222,29,6)" fg:x="37452" fg:w="25"/><text x="82.1356%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.03%)</title><rect x="81.9533%" y="197" width="0.0328%" height="15" fill="rgb(221,189,43)" fg:x="37483" fg:w="15"/><text x="82.2033%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="81.9643%" y="181" width="0.0219%" height="15" fill="rgb(207,36,27)" fg:x="37488" fg:w="10"/><text x="82.2143%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.02%)</title><rect x="81.9905%" y="197" width="0.0175%" height="15" fill="rgb(217,90,24)" fg:x="37500" fg:w="8"/><text x="82.2405%" y="207.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (90 samples, 0.20%)</title><rect x="81.8134%" y="213" width="0.1968%" height="15" fill="rgb(224,66,35)" fg:x="37419" fg:w="90"/><text x="82.0634%" y="223.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (5 samples, 0.01%)</title><rect x="82.1370%" y="101" width="0.0109%" height="15" fill="rgb(221,13,50)" fg:x="37567" fg:w="5"/><text x="82.3870%" y="111.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (8 samples, 0.02%)</title><rect x="82.2354%" y="85" width="0.0175%" height="15" fill="rgb(236,68,49)" fg:x="37612" fg:w="8"/><text x="82.4854%" y="95.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (10 samples, 0.02%)</title><rect x="82.2529%" y="85" width="0.0219%" height="15" fill="rgb(229,146,28)" fg:x="37620" fg:w="10"/><text x="82.5029%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.03%)</title><rect x="82.2747%" y="85" width="0.0350%" height="15" fill="rgb(225,31,38)" fg:x="37630" fg:w="16"/><text x="82.5247%" y="95.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (136 samples, 0.30%)</title><rect x="82.0539%" y="117" width="0.2974%" height="15" fill="rgb(250,208,3)" fg:x="37529" fg:w="136"/><text x="82.3039%" y="127.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (93 samples, 0.20%)</title><rect x="82.1479%" y="101" width="0.2033%" height="15" fill="rgb(246,54,23)" fg:x="37572" fg:w="93"/><text x="82.3979%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.04%)</title><rect x="82.3097%" y="85" width="0.0415%" height="15" fill="rgb(243,76,11)" fg:x="37646" fg:w="19"/><text x="82.5597%" y="95.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (6 samples, 0.01%)</title><rect x="82.3731%" y="69" width="0.0131%" height="15" fill="rgb(245,21,50)" fg:x="37675" fg:w="6"/><text x="82.6231%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="82.3731%" y="53" width="0.0131%" height="15" fill="rgb(228,9,43)" fg:x="37675" fg:w="6"/><text x="82.6231%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.3753%" y="37" width="0.0109%" height="15" fill="rgb(208,100,47)" fg:x="37676" fg:w="5"/><text x="82.6253%" y="47.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (10 samples, 0.02%)</title><rect x="82.3709%" y="85" width="0.0219%" height="15" fill="rgb(232,26,8)" fg:x="37674" fg:w="10"/><text x="82.6209%" y="95.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (19 samples, 0.04%)</title><rect x="82.3535%" y="117" width="0.0415%" height="15" fill="rgb(216,166,38)" fg:x="37666" fg:w="19"/><text x="82.6035%" y="127.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (12 samples, 0.03%)</title><rect x="82.3688%" y="101" width="0.0262%" height="15" fill="rgb(251,202,51)" fg:x="37673" fg:w="12"/><text x="82.6188%" y="111.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (157 samples, 0.34%)</title><rect x="82.0539%" y="133" width="0.3433%" height="15" fill="rgb(254,216,34)" fg:x="37529" fg:w="157"/><text x="82.3039%" y="143.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (162 samples, 0.35%)</title><rect x="82.0495%" y="149" width="0.3542%" height="15" fill="rgb(251,32,27)" fg:x="37527" fg:w="162"/><text x="82.2995%" y="159.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (187 samples, 0.41%)</title><rect x="82.0167%" y="181" width="0.4089%" height="15" fill="rgb(208,127,28)" fg:x="37512" fg:w="187"/><text x="82.2667%" y="191.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (185 samples, 0.40%)</title><rect x="82.0211%" y="165" width="0.4045%" height="15" fill="rgb(224,137,22)" fg:x="37514" fg:w="185"/><text x="82.2711%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="82.4278%" y="165" width="0.0262%" height="15" fill="rgb(254,70,32)" fg:x="37700" fg:w="12"/><text x="82.6778%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.03%)</title><rect x="82.4278%" y="149" width="0.0262%" height="15" fill="rgb(229,75,37)" fg:x="37700" fg:w="12"/><text x="82.6778%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="82.4409%" y="133" width="0.0131%" height="15" fill="rgb(252,64,23)" fg:x="37706" fg:w="6"/><text x="82.6909%" y="143.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (13 samples, 0.03%)</title><rect x="82.4278%" y="181" width="0.0284%" height="15" fill="rgb(232,162,48)" fg:x="37700" fg:w="13"/><text x="82.6778%" y="191.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (203 samples, 0.44%)</title><rect x="82.0167%" y="197" width="0.4438%" height="15" fill="rgb(246,160,12)" fg:x="37512" fg:w="203"/><text x="82.2667%" y="207.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (6 samples, 0.01%)</title><rect x="82.4606%" y="197" width="0.0131%" height="15" fill="rgb(247,166,0)" fg:x="37715" fg:w="6"/><text x="82.7106%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="82.4606%" y="181" width="0.0131%" height="15" fill="rgb(249,219,21)" fg:x="37715" fg:w="6"/><text x="82.7106%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="82.4781%" y="197" width="0.0262%" height="15" fill="rgb(205,209,3)" fg:x="37723" fg:w="12"/><text x="82.7281%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="82.4846%" y="181" width="0.0197%" height="15" fill="rgb(243,44,1)" fg:x="37726" fg:w="9"/><text x="82.7346%" y="191.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (233 samples, 0.51%)</title><rect x="82.0102%" y="213" width="0.5094%" height="15" fill="rgb(206,159,16)" fg:x="37509" fg:w="233"/><text x="82.2602%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (364 samples, 0.80%)</title><rect x="81.7719%" y="229" width="0.7959%" height="15" fill="rgb(244,77,30)" fg:x="37400" fg:w="364"/><text x="82.0219%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="82.5393%" y="213" width="0.0284%" height="15" fill="rgb(218,69,12)" fg:x="37751" fg:w="13"/><text x="82.7893%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="82.5393%" y="197" width="0.0284%" height="15" fill="rgb(212,87,7)" fg:x="37751" fg:w="13"/><text x="82.7893%" y="207.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::codec::postcard::Postcard as fuel_core_storage::codec::Decode&lt;T&gt;&gt;::decode (6 samples, 0.01%)</title><rect x="82.5677%" y="229" width="0.0131%" height="15" fill="rgb(245,114,25)" fg:x="37764" fg:w="6"/><text x="82.8177%" y="239.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (26 samples, 0.06%)</title><rect x="82.5874%" y="213" width="0.0568%" height="15" fill="rgb(210,61,42)" fg:x="37773" fg:w="26"/><text x="82.8374%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (37 samples, 0.08%)</title><rect x="82.5808%" y="229" width="0.0809%" height="15" fill="rgb(211,52,33)" fg:x="37770" fg:w="37"/><text x="82.8308%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.02%)</title><rect x="82.6442%" y="213" width="0.0175%" height="15" fill="rgb(234,58,33)" fg:x="37799" fg:w="8"/><text x="82.8942%" y="223.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (22 samples, 0.05%)</title><rect x="82.6661%" y="229" width="0.0481%" height="15" fill="rgb(220,115,36)" fg:x="37809" fg:w="22"/><text x="82.9161%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="82.7142%" y="229" width="0.0153%" height="15" fill="rgb(243,153,54)" fg:x="37831" fg:w="7"/><text x="82.9642%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="82.7142%" y="213" width="0.0153%" height="15" fill="rgb(251,47,18)" fg:x="37831" fg:w="7"/><text x="82.9642%" y="223.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (442 samples, 0.97%)</title><rect x="81.7719%" y="245" width="0.9664%" height="15" fill="rgb(242,102,42)" fg:x="37400" fg:w="442"/><text x="82.0219%" y="255.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::compute_inputs (455 samples, 0.99%)</title><rect x="81.7478%" y="277" width="0.9948%" height="15" fill="rgb(234,31,38)" fg:x="37389" fg:w="455"/><text x="81.9978%" y="287.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::get_coin_or_default (446 samples, 0.98%)</title><rect x="81.7675%" y="261" width="0.9751%" height="15" fill="rgb(221,117,51)" fg:x="37398" fg:w="446"/><text x="82.0175%" y="271.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (11 samples, 0.02%)</title><rect x="82.7689%" y="245" width="0.0241%" height="15" fill="rgb(212,20,18)" fg:x="37856" fg:w="11"/><text x="83.0189%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (15 samples, 0.03%)</title><rect x="82.7667%" y="261" width="0.0328%" height="15" fill="rgb(245,133,36)" fg:x="37855" fg:w="15"/><text x="83.0167%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="82.8039%" y="261" width="0.0131%" height="15" fill="rgb(212,6,19)" fg:x="37872" fg:w="6"/><text x="83.0539%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.8060%" y="245" width="0.0109%" height="15" fill="rgb(218,1,36)" fg:x="37873" fg:w="5"/><text x="83.0560%" y="255.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (31 samples, 0.07%)</title><rect x="82.7536%" y="277" width="0.0678%" height="15" fill="rgb(246,84,54)" fg:x="37849" fg:w="31"/><text x="83.0036%" y="287.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (15 samples, 0.03%)</title><rect x="82.8410%" y="245" width="0.0328%" height="15" fill="rgb(242,110,6)" fg:x="37889" fg:w="15"/><text x="83.0910%" y="255.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.02%)</title><rect x="82.8826%" y="229" width="0.0219%" height="15" fill="rgb(214,47,5)" fg:x="37908" fg:w="10"/><text x="83.1326%" y="239.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (7 samples, 0.02%)</title><rect x="82.8891%" y="213" width="0.0153%" height="15" fill="rgb(218,159,25)" fg:x="37911" fg:w="7"/><text x="83.1391%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="82.8913%" y="197" width="0.0131%" height="15" fill="rgb(215,211,28)" fg:x="37912" fg:w="6"/><text x="83.1413%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="82.8935%" y="181" width="0.0109%" height="15" fill="rgb(238,59,32)" fg:x="37913" fg:w="5"/><text x="83.1435%" y="191.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.03%)</title><rect x="82.8738%" y="245" width="0.0328%" height="15" fill="rgb(226,82,3)" fg:x="37904" fg:w="15"/><text x="83.1238%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="82.9110%" y="245" width="0.0219%" height="15" fill="rgb(240,164,32)" fg:x="37921" fg:w="10"/><text x="83.1610%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="82.9197%" y="229" width="0.0131%" height="15" fill="rgb(232,46,7)" fg:x="37925" fg:w="6"/><text x="83.1697%" y="239.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (51 samples, 0.11%)</title><rect x="82.8235%" y="261" width="0.1115%" height="15" fill="rgb(229,129,53)" fg:x="37881" fg:w="51"/><text x="83.0735%" y="271.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::into_ready (59 samples, 0.13%)</title><rect x="82.8213%" y="277" width="0.1290%" height="15" fill="rgb(234,188,29)" fg:x="37880" fg:w="59"/><text x="83.0713%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (6 samples, 0.01%)</title><rect x="82.9678%" y="261" width="0.0131%" height="15" fill="rgb(246,141,4)" fg:x="37947" fg:w="6"/><text x="83.2178%" y="271.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::ExecutableTransaction::update_outputs (15 samples, 0.03%)</title><rect x="82.9503%" y="277" width="0.0328%" height="15" fill="rgb(229,23,39)" fg:x="37939" fg:w="15"/><text x="83.2003%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="82.9919%" y="213" width="0.0109%" height="15" fill="rgb(206,12,3)" fg:x="37958" fg:w="5"/><text x="83.2419%" y="223.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="82.9897%" y="229" width="0.0153%" height="15" fill="rgb(252,226,20)" fg:x="37957" fg:w="7"/><text x="83.2397%" y="239.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.01%)</title><rect x="83.0050%" y="213" width="0.0109%" height="15" fill="rgb(216,123,35)" fg:x="37964" fg:w="5"/><text x="83.2550%" y="223.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="83.0050%" y="197" width="0.0109%" height="15" fill="rgb(212,68,40)" fg:x="37964" fg:w="5"/><text x="83.2550%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="83.0050%" y="181" width="0.0109%" height="15" fill="rgb(254,125,32)" fg:x="37964" fg:w="5"/><text x="83.2550%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="83.0050%" y="165" width="0.0109%" height="15" fill="rgb(253,97,22)" fg:x="37964" fg:w="5"/><text x="83.2550%" y="175.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (76 samples, 0.17%)</title><rect x="83.0050%" y="229" width="0.1662%" height="15" fill="rgb(241,101,14)" fg:x="37964" fg:w="76"/><text x="83.2550%" y="239.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (71 samples, 0.16%)</title><rect x="83.0159%" y="213" width="0.1552%" height="15" fill="rgb(238,103,29)" fg:x="37969" fg:w="71"/><text x="83.2659%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="83.1777%" y="229" width="0.0197%" height="15" fill="rgb(233,195,47)" fg:x="38043" fg:w="9"/><text x="83.4277%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="83.1777%" y="213" width="0.0197%" height="15" fill="rgb(246,218,30)" fg:x="38043" fg:w="9"/><text x="83.4277%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.02%)</title><rect x="83.1799%" y="197" width="0.0175%" height="15" fill="rgb(219,145,47)" fg:x="38044" fg:w="8"/><text x="83.4299%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="83.1865%" y="181" width="0.0109%" height="15" fill="rgb(243,12,26)" fg:x="38047" fg:w="5"/><text x="83.4365%" y="191.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (98 samples, 0.21%)</title><rect x="82.9853%" y="245" width="0.2143%" height="15" fill="rgb(214,87,16)" fg:x="37955" fg:w="98"/><text x="83.2353%" y="255.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::ret (102 samples, 0.22%)</title><rect x="82.9831%" y="277" width="0.2230%" height="15" fill="rgb(208,99,42)" fg:x="37954" fg:w="102"/><text x="83.2331%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (102 samples, 0.22%)</title><rect x="82.9831%" y="261" width="0.2230%" height="15" fill="rgb(253,99,2)" fg:x="37954" fg:w="102"/><text x="83.2331%" y="271.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (81 samples, 0.18%)</title><rect x="83.2215%" y="245" width="0.1771%" height="15" fill="rgb(220,168,23)" fg:x="38063" fg:w="81"/><text x="83.4715%" y="255.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (84 samples, 0.18%)</title><rect x="83.2193%" y="261" width="0.1837%" height="15" fill="rgb(242,38,24)" fg:x="38062" fg:w="84"/><text x="83.4693%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="83.4095%" y="261" width="0.0131%" height="15" fill="rgb(225,182,9)" fg:x="38149" fg:w="6"/><text x="83.6595%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="83.4095%" y="245" width="0.0131%" height="15" fill="rgb(243,178,37)" fg:x="38149" fg:w="6"/><text x="83.6595%" y="255.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (98 samples, 0.21%)</title><rect x="83.2127%" y="277" width="0.2143%" height="15" fill="rgb(232,139,19)" fg:x="38059" fg:w="98"/><text x="83.4627%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::root (9 samples, 0.02%)</title><rect x="83.4270%" y="277" width="0.0197%" height="15" fill="rgb(225,201,24)" fg:x="38157" fg:w="9"/><text x="83.6770%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.04%)</title><rect x="83.4663%" y="277" width="0.0437%" height="15" fill="rgb(221,47,46)" fg:x="38175" fg:w="20"/><text x="83.7163%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="83.4860%" y="261" width="0.0241%" height="15" fill="rgb(249,23,13)" fg:x="38184" fg:w="11"/><text x="83.7360%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="83.5123%" y="277" width="0.0241%" height="15" fill="rgb(219,9,5)" fg:x="38196" fg:w="11"/><text x="83.7623%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="83.5166%" y="261" width="0.0197%" height="15" fill="rgb(254,171,16)" fg:x="38198" fg:w="9"/><text x="83.7666%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="83.5254%" y="245" width="0.0109%" height="15" fill="rgb(230,171,20)" fg:x="38202" fg:w="5"/><text x="83.7754%" y="255.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::attempt_tx_execution_with_vm (1,103 samples, 2.41%)</title><rect x="81.1334%" y="293" width="2.4116%" height="15" fill="rgb(210,71,41)" fg:x="37108" fg:w="1103"/><text x="81.3834%" y="303.50">bl..</text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (5 samples, 0.01%)</title><rect x="83.6609%" y="197" width="0.0109%" height="15" fill="rgb(206,173,20)" fg:x="38264" fg:w="5"/><text x="83.9109%" y="207.50"></text></g><g><title>block_verifier`core::fmt::write (12 samples, 0.03%)</title><rect x="83.6478%" y="213" width="0.0262%" height="15" fill="rgb(233,88,34)" fg:x="38258" fg:w="12"/><text x="83.8978%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="83.6740%" y="213" width="0.0284%" height="15" fill="rgb(223,209,46)" fg:x="38270" fg:w="13"/><text x="83.9240%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.03%)</title><rect x="83.6762%" y="197" width="0.0262%" height="15" fill="rgb(250,43,18)" fg:x="38271" fg:w="12"/><text x="83.9262%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="83.6806%" y="181" width="0.0219%" height="15" fill="rgb(208,13,10)" fg:x="38273" fg:w="10"/><text x="83.9306%" y="191.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (40 samples, 0.09%)</title><rect x="83.6391%" y="229" width="0.0875%" height="15" fill="rgb(212,200,36)" fg:x="38254" fg:w="40"/><text x="83.8891%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="83.7025%" y="213" width="0.0241%" height="15" fill="rgb(225,90,30)" fg:x="38283" fg:w="11"/><text x="83.9525%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (13 samples, 0.03%)</title><rect x="83.7287%" y="229" width="0.0284%" height="15" fill="rgb(236,182,39)" fg:x="38295" fg:w="13"/><text x="83.9787%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.03%)</title><rect x="83.7571%" y="229" width="0.0262%" height="15" fill="rgb(212,144,35)" fg:x="38308" fg:w="12"/><text x="84.0071%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="83.7637%" y="213" width="0.0197%" height="15" fill="rgb(228,63,44)" fg:x="38311" fg:w="9"/><text x="84.0137%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (6 samples, 0.01%)</title><rect x="83.7703%" y="197" width="0.0131%" height="15" fill="rgb(228,109,6)" fg:x="38314" fg:w="6"/><text x="84.0203%" y="207.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (74 samples, 0.16%)</title><rect x="83.6347%" y="245" width="0.1618%" height="15" fill="rgb(238,117,24)" fg:x="38252" fg:w="74"/><text x="83.8847%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (6 samples, 0.01%)</title><rect x="83.7834%" y="229" width="0.0131%" height="15" fill="rgb(242,26,26)" fg:x="38320" fg:w="6"/><text x="84.0334%" y="239.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9 samples, 0.02%)</title><rect x="83.9736%" y="133" width="0.0197%" height="15" fill="rgb(221,92,48)" fg:x="38407" fg:w="9"/><text x="84.2236%" y="143.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.02%)</title><rect x="84.0917%" y="117" width="0.0175%" height="15" fill="rgb(209,209,32)" fg:x="38461" fg:w="8"/><text x="84.3417%" y="127.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (12 samples, 0.03%)</title><rect x="84.1091%" y="117" width="0.0262%" height="15" fill="rgb(221,70,22)" fg:x="38469" fg:w="12"/><text x="84.3591%" y="127.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (6 samples, 0.01%)</title><rect x="84.1354%" y="117" width="0.0131%" height="15" fill="rgb(248,145,5)" fg:x="38481" fg:w="6"/><text x="84.3854%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (23 samples, 0.05%)</title><rect x="84.1485%" y="117" width="0.0503%" height="15" fill="rgb(226,116,26)" fg:x="38487" fg:w="23"/><text x="84.3985%" y="127.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (188 samples, 0.41%)</title><rect x="83.8337%" y="149" width="0.4110%" height="15" fill="rgb(244,5,17)" fg:x="38343" fg:w="188"/><text x="84.0837%" y="159.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (115 samples, 0.25%)</title><rect x="83.9933%" y="133" width="0.2514%" height="15" fill="rgb(252,159,33)" fg:x="38416" fg:w="115"/><text x="84.2433%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (21 samples, 0.05%)</title><rect x="84.1988%" y="117" width="0.0459%" height="15" fill="rgb(206,71,0)" fg:x="38510" fg:w="21"/><text x="84.4488%" y="127.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (194 samples, 0.42%)</title><rect x="83.8315%" y="165" width="0.4242%" height="15" fill="rgb(233,118,54)" fg:x="38342" fg:w="194"/><text x="84.0815%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (200 samples, 0.44%)</title><rect x="83.8271%" y="181" width="0.4373%" height="15" fill="rgb(234,83,48)" fg:x="38340" fg:w="200"/><text x="84.0771%" y="191.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.03%)</title><rect x="84.2666%" y="181" width="0.0262%" height="15" fill="rgb(228,3,54)" fg:x="38541" fg:w="12"/><text x="84.5166%" y="191.50"></text></g><g><title>block_verifier`rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6 samples, 0.01%)</title><rect x="84.2797%" y="165" width="0.0131%" height="15" fill="rgb(226,155,13)" fg:x="38547" fg:w="6"/><text x="84.5297%" y="175.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (228 samples, 0.50%)</title><rect x="83.8052%" y="197" width="0.4985%" height="15" fill="rgb(241,28,37)" fg:x="38330" fg:w="228"/><text x="84.0552%" y="207.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (233 samples, 0.51%)</title><rect x="83.8009%" y="213" width="0.5094%" height="15" fill="rgb(233,93,10)" fg:x="38328" fg:w="233"/><text x="84.0509%" y="223.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (13 samples, 0.03%)</title><rect x="84.3103%" y="213" width="0.0284%" height="15" fill="rgb(225,113,19)" fg:x="38561" fg:w="13"/><text x="84.5603%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.03%)</title><rect x="84.3103%" y="197" width="0.0284%" height="15" fill="rgb(241,2,18)" fg:x="38561" fg:w="13"/><text x="84.5603%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="84.3169%" y="181" width="0.0219%" height="15" fill="rgb(228,207,21)" fg:x="38564" fg:w="10"/><text x="84.5669%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="84.3234%" y="165" width="0.0153%" height="15" fill="rgb(213,211,35)" fg:x="38567" fg:w="7"/><text x="84.5734%" y="175.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (253 samples, 0.55%)</title><rect x="83.7987%" y="229" width="0.5532%" height="15" fill="rgb(209,83,10)" fg:x="38327" fg:w="253"/><text x="84.0487%" y="239.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (255 samples, 0.56%)</title><rect x="83.7965%" y="245" width="0.5575%" height="15" fill="rgb(209,164,1)" fg:x="38326" fg:w="255"/><text x="84.0465%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (359 samples, 0.78%)</title><rect x="83.5822%" y="261" width="0.7849%" height="15" fill="rgb(213,184,43)" fg:x="38228" fg:w="359"/><text x="83.8322%" y="271.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (53 samples, 0.12%)</title><rect x="84.3999%" y="245" width="0.1159%" height="15" fill="rgb(231,61,34)" fg:x="38602" fg:w="53"/><text x="84.6499%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="84.5158%" y="245" width="0.0197%" height="15" fill="rgb(235,75,3)" fg:x="38655" fg:w="9"/><text x="84.7658%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="84.5158%" y="229" width="0.0197%" height="15" fill="rgb(220,106,47)" fg:x="38655" fg:w="9"/><text x="84.7658%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="84.5202%" y="213" width="0.0153%" height="15" fill="rgb(210,196,33)" fg:x="38657" fg:w="7"/><text x="84.7702%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (27 samples, 0.06%)</title><rect x="84.5355%" y="245" width="0.0590%" height="15" fill="rgb(229,154,42)" fg:x="38664" fg:w="27"/><text x="84.7855%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::replace (105 samples, 0.23%)</title><rect x="84.3671%" y="261" width="0.2296%" height="15" fill="rgb(228,114,26)" fg:x="38587" fg:w="105"/><text x="84.6171%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.01%)</title><rect x="84.7235%" y="133" width="0.0109%" height="15" fill="rgb(208,144,1)" fg:x="38750" fg:w="5"/><text x="84.9735%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.03%)</title><rect x="84.7039%" y="165" width="0.0328%" height="15" fill="rgb(239,112,37)" fg:x="38741" fg:w="15"/><text x="84.9539%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.03%)</title><rect x="84.7104%" y="149" width="0.0262%" height="15" fill="rgb(210,96,50)" fg:x="38744" fg:w="12"/><text x="84.9604%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.03%)</title><rect x="84.7366%" y="165" width="0.0262%" height="15" fill="rgb(222,178,2)" fg:x="38756" fg:w="12"/><text x="84.9866%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="84.7388%" y="149" width="0.0241%" height="15" fill="rgb(226,74,18)" fg:x="38757" fg:w="11"/><text x="84.9888%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="84.7432%" y="133" width="0.0197%" height="15" fill="rgb(225,67,54)" fg:x="38759" fg:w="9"/><text x="84.9932%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.01%)</title><rect x="84.7629%" y="165" width="0.0109%" height="15" fill="rgb(251,92,32)" fg:x="38768" fg:w="5"/><text x="85.0129%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (9 samples, 0.02%)</title><rect x="84.7760%" y="165" width="0.0197%" height="15" fill="rgb(228,149,22)" fg:x="38774" fg:w="9"/><text x="85.0260%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (53 samples, 0.12%)</title><rect x="84.6842%" y="181" width="0.1159%" height="15" fill="rgb(243,54,13)" fg:x="38732" fg:w="53"/><text x="84.9342%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (62 samples, 0.14%)</title><rect x="84.6754%" y="197" width="0.1356%" height="15" fill="rgb(243,180,28)" fg:x="38728" fg:w="62"/><text x="84.9254%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (74 samples, 0.16%)</title><rect x="84.6711%" y="213" width="0.1618%" height="15" fill="rgb(208,167,24)" fg:x="38726" fg:w="74"/><text x="84.9211%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (6 samples, 0.01%)</title><rect x="84.8197%" y="197" width="0.0131%" height="15" fill="rgb(245,73,45)" fg:x="38794" fg:w="6"/><text x="85.0697%" y="207.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (81 samples, 0.18%)</title><rect x="84.6601%" y="229" width="0.1771%" height="15" fill="rgb(237,203,48)" fg:x="38721" fg:w="81"/><text x="84.9101%" y="239.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (85 samples, 0.19%)</title><rect x="84.6536%" y="245" width="0.1858%" height="15" fill="rgb(211,197,16)" fg:x="38718" fg:w="85"/><text x="84.9036%" y="255.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (17 samples, 0.04%)</title><rect x="84.8503%" y="229" width="0.0372%" height="15" fill="rgb(243,99,51)" fg:x="38808" fg:w="17"/><text x="85.1003%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.03%)</title><rect x="84.8525%" y="213" width="0.0350%" height="15" fill="rgb(215,123,29)" fg:x="38809" fg:w="16"/><text x="85.1025%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.03%)</title><rect x="84.8591%" y="197" width="0.0284%" height="15" fill="rgb(239,186,37)" fg:x="38812" fg:w="13"/><text x="85.1091%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.02%)</title><rect x="84.8678%" y="181" width="0.0197%" height="15" fill="rgb(252,136,39)" fg:x="38816" fg:w="9"/><text x="85.1178%" y="191.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.05%)</title><rect x="84.8394%" y="245" width="0.0547%" height="15" fill="rgb(223,213,32)" fg:x="38803" fg:w="25"/><text x="85.0894%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="84.8963%" y="245" width="0.0219%" height="15" fill="rgb(233,115,5)" fg:x="38829" fg:w="10"/><text x="85.1463%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="84.9028%" y="229" width="0.0153%" height="15" fill="rgb(207,226,44)" fg:x="38832" fg:w="7"/><text x="85.1528%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="84.9181%" y="245" width="0.0131%" height="15" fill="rgb(208,126,0)" fg:x="38839" fg:w="6"/><text x="85.1681%" y="255.50"></text></g><g><title>block_verifier`fuel_core_storage::codec::Encode::encode_as_value (151 samples, 0.33%)</title><rect x="84.6033%" y="261" width="0.3301%" height="15" fill="rgb(244,66,21)" fg:x="38695" fg:w="151"/><text x="84.8533%" y="271.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::persist_output_utxos (641 samples, 1.40%)</title><rect x="83.5472%" y="293" width="1.4015%" height="15" fill="rgb(222,97,12)" fg:x="38212" fg:w="641"/><text x="83.7972%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::insert_coin (639 samples, 1.40%)</title><rect x="83.5516%" y="277" width="1.3971%" height="15" fill="rgb(219,213,19)" fg:x="38214" fg:w="639"/><text x="83.8016%" y="287.50"></text></g><g><title>block_verifier`core::fmt::write (7 samples, 0.02%)</title><rect x="85.0231%" y="229" width="0.0153%" height="15" fill="rgb(252,169,30)" fg:x="38887" fg:w="7"/><text x="85.2731%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.0384%" y="229" width="0.0153%" height="15" fill="rgb(206,32,51)" fg:x="38894" fg:w="7"/><text x="85.2884%" y="239.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (20 samples, 0.04%)</title><rect x="85.0209%" y="245" width="0.0437%" height="15" fill="rgb(250,172,42)" fg:x="38886" fg:w="20"/><text x="85.2709%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.0537%" y="229" width="0.0109%" height="15" fill="rgb(209,34,43)" fg:x="38901" fg:w="5"/><text x="85.3037%" y="239.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (16 samples, 0.03%)</title><rect x="85.0690%" y="245" width="0.0350%" height="15" fill="rgb(223,11,35)" fg:x="38908" fg:w="16"/><text x="85.3190%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.02%)</title><rect x="85.1149%" y="229" width="0.0153%" height="15" fill="rgb(251,219,26)" fg:x="38929" fg:w="7"/><text x="85.3649%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="85.1105%" y="245" width="0.0219%" height="15" fill="rgb(231,119,3)" fg:x="38927" fg:w="10"/><text x="85.3605%" y="255.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (58 samples, 0.13%)</title><rect x="85.0165%" y="261" width="0.1268%" height="15" fill="rgb(216,97,11)" fg:x="38884" fg:w="58"/><text x="85.2665%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="85.1324%" y="245" width="0.0109%" height="15" fill="rgb(223,59,9)" fg:x="38937" fg:w="5"/><text x="85.3824%" y="255.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9 samples, 0.02%)</title><rect x="85.2439%" y="149" width="0.0197%" height="15" fill="rgb(233,93,31)" fg:x="38988" fg:w="9"/><text x="85.4939%" y="159.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (9 samples, 0.02%)</title><rect x="85.3204%" y="133" width="0.0197%" height="15" fill="rgb(239,81,33)" fg:x="39023" fg:w="9"/><text x="85.5704%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (19 samples, 0.04%)</title><rect x="85.3467%" y="133" width="0.0415%" height="15" fill="rgb(213,120,34)" fg:x="39035" fg:w="19"/><text x="85.5967%" y="143.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (105 samples, 0.23%)</title><rect x="85.2002%" y="165" width="0.2296%" height="15" fill="rgb(243,49,53)" fg:x="38968" fg:w="105"/><text x="85.4502%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (76 samples, 0.17%)</title><rect x="85.2636%" y="149" width="0.1662%" height="15" fill="rgb(247,216,33)" fg:x="38997" fg:w="76"/><text x="85.5136%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.04%)</title><rect x="85.3882%" y="133" width="0.0415%" height="15" fill="rgb(226,26,14)" fg:x="39054" fg:w="19"/><text x="85.6382%" y="143.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (7 samples, 0.02%)</title><rect x="85.4538%" y="133" width="0.0153%" height="15" fill="rgb(215,49,53)" fg:x="39084" fg:w="7"/><text x="85.7038%" y="143.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.02%)</title><rect x="85.4538%" y="117" width="0.0153%" height="15" fill="rgb(245,162,40)" fg:x="39084" fg:w="7"/><text x="85.7038%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.4538%" y="101" width="0.0153%" height="15" fill="rgb(229,68,17)" fg:x="39084" fg:w="7"/><text x="85.7038%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="85.4560%" y="85" width="0.0131%" height="15" fill="rgb(213,182,10)" fg:x="39085" fg:w="6"/><text x="85.7060%" y="95.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (10 samples, 0.02%)</title><rect x="85.4494%" y="149" width="0.0219%" height="15" fill="rgb(245,125,30)" fg:x="39082" fg:w="10"/><text x="85.6994%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (128 samples, 0.28%)</title><rect x="85.1936%" y="181" width="0.2799%" height="15" fill="rgb(232,202,2)" fg:x="38965" fg:w="128"/><text x="85.4436%" y="191.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (17 samples, 0.04%)</title><rect x="85.4363%" y="165" width="0.0372%" height="15" fill="rgb(237,140,51)" fg:x="39076" fg:w="17"/><text x="85.6863%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (132 samples, 0.29%)</title><rect x="85.1892%" y="197" width="0.2886%" height="15" fill="rgb(236,157,25)" fg:x="38963" fg:w="132"/><text x="85.4392%" y="207.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (154 samples, 0.34%)</title><rect x="85.1543%" y="229" width="0.3367%" height="15" fill="rgb(219,209,0)" fg:x="38947" fg:w="154"/><text x="85.4043%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (151 samples, 0.33%)</title><rect x="85.1608%" y="213" width="0.3301%" height="15" fill="rgb(240,116,54)" fg:x="38950" fg:w="151"/><text x="85.4108%" y="223.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (163 samples, 0.36%)</title><rect x="85.1521%" y="245" width="0.3564%" height="15" fill="rgb(216,10,36)" fg:x="38946" fg:w="163"/><text x="85.4021%" y="255.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (8 samples, 0.02%)</title><rect x="85.4910%" y="229" width="0.0175%" height="15" fill="rgb(222,72,44)" fg:x="39101" fg:w="8"/><text x="85.7410%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.4910%" y="213" width="0.0175%" height="15" fill="rgb(232,159,9)" fg:x="39101" fg:w="8"/><text x="85.7410%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="85.4975%" y="197" width="0.0109%" height="15" fill="rgb(210,39,32)" fg:x="39104" fg:w="5"/><text x="85.7475%" y="207.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (11 samples, 0.02%)</title><rect x="85.5085%" y="245" width="0.0241%" height="15" fill="rgb(216,194,45)" fg:x="39109" fg:w="11"/><text x="85.7585%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="85.5106%" y="229" width="0.0219%" height="15" fill="rgb(218,18,35)" fg:x="39110" fg:w="10"/><text x="85.7606%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="85.5369%" y="245" width="0.0197%" height="15" fill="rgb(207,83,51)" fg:x="39122" fg:w="9"/><text x="85.7869%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="85.5434%" y="229" width="0.0131%" height="15" fill="rgb(225,63,43)" fg:x="39125" fg:w="6"/><text x="85.7934%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.5566%" y="245" width="0.0197%" height="15" fill="rgb(207,57,36)" fg:x="39131" fg:w="9"/><text x="85.8066%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="85.5566%" y="229" width="0.0197%" height="15" fill="rgb(216,99,33)" fg:x="39131" fg:w="9"/><text x="85.8066%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.01%)</title><rect x="85.5631%" y="213" width="0.0131%" height="15" fill="rgb(225,42,16)" fg:x="39134" fg:w="6"/><text x="85.8131%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (199 samples, 0.44%)</title><rect x="85.1433%" y="261" width="0.4351%" height="15" fill="rgb(220,201,45)" fg:x="38942" fg:w="199"/><text x="85.3933%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (284 samples, 0.62%)</title><rect x="84.9815%" y="277" width="0.6209%" height="15" fill="rgb(225,33,4)" fg:x="38868" fg:w="284"/><text x="85.2315%" y="287.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (28 samples, 0.06%)</title><rect x="85.6265%" y="261" width="0.0612%" height="15" fill="rgb(224,33,50)" fg:x="39163" fg:w="28"/><text x="85.8765%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.02%)</title><rect x="85.6877%" y="261" width="0.0241%" height="15" fill="rgb(246,198,51)" fg:x="39191" fg:w="11"/><text x="85.9377%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.6965%" y="245" width="0.0153%" height="15" fill="rgb(205,22,4)" fg:x="39195" fg:w="7"/><text x="85.9465%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="85.7162%" y="261" width="0.0175%" height="15" fill="rgb(206,3,8)" fg:x="39204" fg:w="8"/><text x="85.9662%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="85.7183%" y="245" width="0.0153%" height="15" fill="rgb(251,23,15)" fg:x="39205" fg:w="7"/><text x="85.9683%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (5 samples, 0.01%)</title><rect x="85.7337%" y="261" width="0.0109%" height="15" fill="rgb(252,88,28)" fg:x="39212" fg:w="5"/><text x="85.9837%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueMutate&gt;::take (64 samples, 0.14%)</title><rect x="85.6068%" y="277" width="0.1399%" height="15" fill="rgb(212,127,14)" fg:x="39154" fg:w="64"/><text x="85.8568%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.02%)</title><rect x="85.7468%" y="213" width="0.0219%" height="15" fill="rgb(247,145,37)" fg:x="39218" fg:w="10"/><text x="85.9968%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (10 samples, 0.02%)</title><rect x="85.7468%" y="197" width="0.0219%" height="15" fill="rgb(209,117,53)" fg:x="39218" fg:w="10"/><text x="85.9968%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (10 samples, 0.02%)</title><rect x="85.7468%" y="181" width="0.0219%" height="15" fill="rgb(212,90,42)" fg:x="39218" fg:w="10"/><text x="85.9968%" y="191.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11 samples, 0.02%)</title><rect x="85.7468%" y="277" width="0.0241%" height="15" fill="rgb(218,164,37)" fg:x="39218" fg:w="11"/><text x="85.9968%" y="287.50"></text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="85.7468%" y="261" width="0.0241%" height="15" fill="rgb(246,65,34)" fg:x="39218" fg:w="11"/><text x="85.9968%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (11 samples, 0.02%)</title><rect x="85.7468%" y="245" width="0.0241%" height="15" fill="rgb(231,100,33)" fg:x="39218" fg:w="11"/><text x="85.9968%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (11 samples, 0.02%)</title><rect x="85.7468%" y="229" width="0.0241%" height="15" fill="rgb(228,126,14)" fg:x="39218" fg:w="11"/><text x="85.9968%" y="239.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (14 samples, 0.03%)</title><rect x="85.7730%" y="277" width="0.0306%" height="15" fill="rgb(215,173,21)" fg:x="39230" fg:w="14"/><text x="86.0230%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="85.8102%" y="277" width="0.0175%" height="15" fill="rgb(210,6,40)" fg:x="39247" fg:w="8"/><text x="86.0602%" y="287.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::spend_input_utxos (406 samples, 0.89%)</title><rect x="84.9487%" y="293" width="0.8877%" height="15" fill="rgb(212,48,18)" fg:x="38853" fg:w="406"/><text x="85.1987%" y="303.50"></text></g><g><title>block_verifier`&lt;fuel_tx::transaction::types::input::Input as fuel_types::canonical::Serialize&gt;::size_dynamic (5 samples, 0.01%)</title><rect x="85.8714%" y="261" width="0.0109%" height="15" fill="rgb(230,214,11)" fg:x="39275" fg:w="5"/><text x="86.1214%" y="271.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::size (8 samples, 0.02%)</title><rect x="85.8823%" y="261" width="0.0175%" height="15" fill="rgb(254,105,39)" fg:x="39280" fg:w="8"/><text x="86.1323%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (11 samples, 0.02%)</title><rect x="85.9086%" y="229" width="0.0241%" height="15" fill="rgb(245,158,5)" fg:x="39292" fg:w="11"/><text x="86.1586%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="85.9086%" y="213" width="0.0241%" height="15" fill="rgb(249,208,11)" fg:x="39292" fg:w="11"/><text x="86.1586%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="85.9108%" y="197" width="0.0219%" height="15" fill="rgb(210,39,28)" fg:x="39293" fg:w="10"/><text x="86.1608%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="85.9217%" y="181" width="0.0109%" height="15" fill="rgb(211,56,53)" fg:x="39298" fg:w="5"/><text x="86.1717%" y="191.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.04%)</title><rect x="85.8998%" y="261" width="0.0372%" height="15" fill="rgb(226,201,30)" fg:x="39288" fg:w="17"/><text x="86.1498%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.04%)</title><rect x="85.8998%" y="245" width="0.0372%" height="15" fill="rgb(239,101,34)" fg:x="39288" fg:w="17"/><text x="86.1498%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.02%)</title><rect x="85.9370%" y="261" width="0.0153%" height="15" fill="rgb(226,209,5)" fg:x="39305" fg:w="7"/><text x="86.1870%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="85.9414%" y="245" width="0.0109%" height="15" fill="rgb(250,105,47)" fg:x="39307" fg:w="5"/><text x="86.1914%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (51 samples, 0.11%)</title><rect x="85.8430%" y="277" width="0.1115%" height="15" fill="rgb(230,72,3)" fg:x="39262" fg:w="51"/><text x="86.0930%" y="287.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::update_execution_data (61 samples, 0.13%)</title><rect x="85.8364%" y="293" width="0.1334%" height="15" fill="rgb(232,218,39)" fg:x="39259" fg:w="61"/><text x="86.0864%" y="303.50"></text></g><g><title>block_verifier`core::fmt::Formatter::pad_integral (5 samples, 0.01%)</title><rect x="86.0616%" y="181" width="0.0109%" height="15" fill="rgb(248,166,6)" fg:x="39362" fg:w="5"/><text x="86.3116%" y="191.50"></text></g><g><title>block_verifier`core::fmt::num::imp::_&lt;impl core::fmt::Display for u32&gt;::fmt (8 samples, 0.02%)</title><rect x="86.0572%" y="197" width="0.0175%" height="15" fill="rgb(247,89,20)" fg:x="39360" fg:w="8"/><text x="86.3072%" y="207.50"></text></g><g><title>block_verifier`core::fmt::write (16 samples, 0.03%)</title><rect x="86.0419%" y="213" width="0.0350%" height="15" fill="rgb(248,130,54)" fg:x="39353" fg:w="16"/><text x="86.2919%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.03%)</title><rect x="86.0769%" y="213" width="0.0306%" height="15" fill="rgb(234,196,4)" fg:x="39369" fg:w="14"/><text x="86.3269%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="86.0835%" y="197" width="0.0241%" height="15" fill="rgb(250,143,31)" fg:x="39372" fg:w="11"/><text x="86.3335%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.02%)</title><rect x="86.0922%" y="181" width="0.0153%" height="15" fill="rgb(211,110,34)" fg:x="39376" fg:w="7"/><text x="86.3422%" y="191.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (38 samples, 0.08%)</title><rect x="86.0376%" y="229" width="0.0831%" height="15" fill="rgb(215,124,48)" fg:x="39351" fg:w="38"/><text x="86.2876%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="86.1075%" y="213" width="0.0131%" height="15" fill="rgb(216,46,13)" fg:x="39383" fg:w="6"/><text x="86.3575%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (9 samples, 0.02%)</title><rect x="86.1206%" y="229" width="0.0197%" height="15" fill="rgb(205,184,25)" fg:x="39389" fg:w="9"/><text x="86.3706%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.03%)</title><rect x="86.1425%" y="229" width="0.0328%" height="15" fill="rgb(228,1,10)" fg:x="39399" fg:w="15"/><text x="86.3925%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (10 samples, 0.02%)</title><rect x="86.1534%" y="213" width="0.0219%" height="15" fill="rgb(213,116,27)" fg:x="39404" fg:w="10"/><text x="86.4034%" y="223.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (71 samples, 0.16%)</title><rect x="86.0376%" y="245" width="0.1552%" height="15" fill="rgb(241,95,50)" fg:x="39351" fg:w="71"/><text x="86.2876%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.02%)</title><rect x="86.1753%" y="229" width="0.0175%" height="15" fill="rgb(238,48,32)" fg:x="39414" fg:w="8"/><text x="86.4253%" y="239.50"></text></g><g><title>block_verifier`non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (10 samples, 0.02%)</title><rect x="86.4377%" y="133" width="0.0219%" height="15" fill="rgb(235,113,49)" fg:x="39534" fg:w="10"/><text x="86.6877%" y="143.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_context (7 samples, 0.02%)</title><rect x="86.6541%" y="117" width="0.0153%" height="15" fill="rgb(205,127,43)" fg:x="39633" fg:w="7"/><text x="86.9041%" y="127.50"></text></g><g><title>block_verifier`thread-local wrapper routine for rocksdb::perf_level (9 samples, 0.02%)</title><rect x="86.6694%" y="117" width="0.0197%" height="15" fill="rgb(250,162,2)" fg:x="39640" fg:w="9"/><text x="86.9194%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (29 samples, 0.06%)</title><rect x="86.6891%" y="117" width="0.0634%" height="15" fill="rgb(220,13,41)" fg:x="39649" fg:w="29"/><text x="86.9391%" y="127.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Seek (289 samples, 0.63%)</title><rect x="86.2322%" y="149" width="0.6319%" height="15" fill="rgb(249,221,25)" fg:x="39440" fg:w="289"/><text x="86.4822%" y="159.50"></text></g><g><title>block_verifier`rocksdb::MemTable::KeyComparator::operator() (185 samples, 0.40%)</title><rect x="86.4595%" y="133" width="0.4045%" height="15" fill="rgb(215,208,19)" fg:x="39544" fg:w="185"/><text x="86.7095%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (51 samples, 0.11%)</title><rect x="86.7525%" y="117" width="0.1115%" height="15" fill="rgb(236,175,2)" fg:x="39678" fg:w="51"/><text x="87.0025%" y="127.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__grow_by_and_replace (10 samples, 0.02%)</title><rect x="86.8771%" y="117" width="0.0219%" height="15" fill="rgb(241,52,2)" fg:x="39735" fg:w="10"/><text x="87.1271%" y="127.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (8 samples, 0.02%)</title><rect x="86.8815%" y="101" width="0.0175%" height="15" fill="rgb(248,140,14)" fg:x="39737" fg:w="8"/><text x="87.1315%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.02%)</title><rect x="86.8815%" y="85" width="0.0175%" height="15" fill="rgb(253,22,42)" fg:x="39737" fg:w="8"/><text x="87.1315%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.02%)</title><rect x="86.8815%" y="69" width="0.0175%" height="15" fill="rgb(234,61,47)" fg:x="39737" fg:w="8"/><text x="87.1315%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="86.8881%" y="53" width="0.0109%" height="15" fill="rgb(208,226,15)" fg:x="39740" fg:w="5"/><text x="87.1381%" y="63.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_external (16 samples, 0.03%)</title><rect x="86.8728%" y="133" width="0.0350%" height="15" fill="rgb(217,221,4)" fg:x="39733" fg:w="16"/><text x="87.1228%" y="143.50"></text></g><g><title>block_verifier`rocksdb::SaveValue (17 samples, 0.04%)</title><rect x="86.8728%" y="149" width="0.0372%" height="15" fill="rgb(212,174,34)" fg:x="39733" fg:w="17"/><text x="87.1228%" y="159.50"></text></g><g><title>block_verifier`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (312 samples, 0.68%)</title><rect x="86.2300%" y="165" width="0.6822%" height="15" fill="rgb(253,83,4)" fg:x="39439" fg:w="312"/><text x="86.4800%" y="175.50"></text></g><g><title>block_verifier`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (317 samples, 0.69%)</title><rect x="86.2234%" y="181" width="0.6931%" height="15" fill="rgb(250,195,49)" fg:x="39436" fg:w="317"/><text x="86.4734%" y="191.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (337 samples, 0.74%)</title><rect x="86.1994%" y="213" width="0.7368%" height="15" fill="rgb(241,192,25)" fg:x="39425" fg:w="337"/><text x="86.4494%" y="223.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (337 samples, 0.74%)</title><rect x="86.1994%" y="197" width="0.7368%" height="15" fill="rgb(208,124,10)" fg:x="39425" fg:w="337"/><text x="86.4494%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="86.9406%" y="197" width="0.0241%" height="15" fill="rgb(222,33,0)" fg:x="39764" fg:w="11"/><text x="87.1906%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.02%)</title><rect x="86.9449%" y="181" width="0.0197%" height="15" fill="rgb(234,209,28)" fg:x="39766" fg:w="9"/><text x="87.1949%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (12 samples, 0.03%)</title><rect x="86.9406%" y="213" width="0.0262%" height="15" fill="rgb(224,11,23)" fg:x="39764" fg:w="12"/><text x="87.1906%" y="223.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (356 samples, 0.78%)</title><rect x="86.1950%" y="229" width="0.7784%" height="15" fill="rgb(232,99,1)" fg:x="39423" fg:w="356"/><text x="86.4450%" y="239.50"></text></g><g><title>block_verifier`rocksdb_pinnableslice_destroy (10 samples, 0.02%)</title><rect x="86.9733%" y="229" width="0.0219%" height="15" fill="rgb(237,95,45)" fg:x="39779" fg:w="10"/><text x="87.2233%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="86.9733%" y="213" width="0.0219%" height="15" fill="rgb(208,109,11)" fg:x="39779" fg:w="10"/><text x="87.2233%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.02%)</title><rect x="86.9777%" y="197" width="0.0175%" height="15" fill="rgb(216,190,48)" fg:x="39781" fg:w="8"/><text x="87.2277%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.02%)</title><rect x="86.9996%" y="229" width="0.0197%" height="15" fill="rgb(251,171,36)" fg:x="39791" fg:w="9"/><text x="87.2496%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 0.02%)</title><rect x="86.9996%" y="213" width="0.0197%" height="15" fill="rgb(230,62,22)" fg:x="39791" fg:w="9"/><text x="87.2496%" y="223.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf_opt (383 samples, 0.84%)</title><rect x="86.1928%" y="245" width="0.8374%" height="15" fill="rgb(225,114,35)" fg:x="39422" fg:w="383"/><text x="86.4428%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (6 samples, 0.01%)</title><rect x="87.0389%" y="245" width="0.0131%" height="15" fill="rgb(215,118,42)" fg:x="39809" fg:w="6"/><text x="87.2889%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (495 samples, 1.08%)</title><rect x="85.9873%" y="261" width="1.0823%" height="15" fill="rgb(243,119,21)" fg:x="39328" fg:w="495"/><text x="86.2373%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="87.0586%" y="245" width="0.0109%" height="15" fill="rgb(252,177,53)" fg:x="39818" fg:w="5"/><text x="87.3086%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="87.0586%" y="229" width="0.0109%" height="15" fill="rgb(237,209,29)" fg:x="39818" fg:w="5"/><text x="87.3086%" y="239.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (115 samples, 0.25%)</title><rect x="87.0849%" y="245" width="0.2514%" height="15" fill="rgb(212,65,23)" fg:x="39830" fg:w="115"/><text x="87.3349%" y="255.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::get (161 samples, 0.35%)</title><rect x="87.0783%" y="261" width="0.3520%" height="15" fill="rgb(230,222,46)" fg:x="39827" fg:w="161"/><text x="87.3283%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (43 samples, 0.09%)</title><rect x="87.3363%" y="245" width="0.0940%" height="15" fill="rgb(215,135,32)" fg:x="39945" fg:w="43"/><text x="87.5863%" y="255.50"></text></g><g><title>block_verifier`serde::de::SeqAccess::next_element (23 samples, 0.05%)</title><rect x="87.4391%" y="261" width="0.0503%" height="15" fill="rgb(246,101,22)" fg:x="39992" fg:w="23"/><text x="87.6891%" y="271.50"></text></g><g><title>block_verifier`&lt;fuel_core_storage::structured_storage::StructuredStorage&lt;S&gt; as fuel_storage::StorageInspect&lt;M&gt;&gt;::get (694 samples, 1.52%)</title><rect x="85.9873%" y="277" width="1.5174%" height="15" fill="rgb(206,107,13)" fg:x="39328" fg:w="694"/><text x="86.2373%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="87.4915%" y="261" width="0.0131%" height="15" fill="rgb(250,100,44)" fg:x="40016" fg:w="6"/><text x="87.7415%" y="271.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::verify_inputs_exist_and_values_match (703 samples, 1.54%)</title><rect x="85.9698%" y="293" width="1.5370%" height="15" fill="rgb(231,147,38)" fg:x="39320" fg:w="703"/><text x="86.2198%" y="303.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="87.5221%" y="277" width="0.0175%" height="15" fill="rgb(229,8,40)" fg:x="40030" fg:w="8"/><text x="87.7721%" y="287.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.01%)</title><rect x="87.5265%" y="261" width="0.0131%" height="15" fill="rgb(221,135,30)" fg:x="40032" fg:w="6"/><text x="87.7765%" y="271.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (17 samples, 0.04%)</title><rect x="87.5068%" y="293" width="0.0372%" height="15" fill="rgb(249,193,18)" fg:x="40023" fg:w="17"/><text x="87.7568%" y="303.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (21 samples, 0.05%)</title><rect x="87.5593%" y="261" width="0.0459%" height="15" fill="rgb(209,133,39)" fg:x="40047" fg:w="21"/><text x="87.8093%" y="271.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (27 samples, 0.06%)</title><rect x="87.5484%" y="277" width="0.0590%" height="15" fill="rgb(232,100,14)" fg:x="40042" fg:w="27"/><text x="87.7984%" y="287.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (26 samples, 0.06%)</title><rect x="87.6074%" y="277" width="0.0568%" height="15" fill="rgb(224,185,1)" fg:x="40069" fg:w="26"/><text x="87.8574%" y="287.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (58 samples, 0.13%)</title><rect x="87.5462%" y="293" width="0.1268%" height="15" fill="rgb(223,139,8)" fg:x="40041" fg:w="58"/><text x="87.7962%" y="303.50"></text></g><g><title>block_verifier`&lt;alloc::vec::Vec&lt;T&gt; as fuel_types::canonical::Serialize&gt;::encode_dynamic (13 samples, 0.03%)</title><rect x="87.6971%" y="261" width="0.0284%" height="15" fill="rgb(232,213,38)" fg:x="40110" fg:w="13"/><text x="87.9471%" y="271.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::chargeable_transaction::_::_&lt;impl fuel_types::canonical::Serialize for fuel_tx::transaction::types::chargeable_transaction::ChargeableTransaction&lt;Body,MetadataBody&gt;&gt;::encode_dynamic (22 samples, 0.05%)</title><rect x="87.6861%" y="277" width="0.0481%" height="15" fill="rgb(207,94,22)" fg:x="40105" fg:w="22"/><text x="87.9361%" y="287.50"></text></g><g><title>block_verifier`fuel_types::canonical::Serialize::to_bytes (31 samples, 0.07%)</title><rect x="87.6796%" y="293" width="0.0678%" height="15" fill="rgb(219,183,54)" fg:x="40102" fg:w="31"/><text x="87.9296%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="87.7342%" y="277" width="0.0131%" height="15" fill="rgb(216,185,54)" fg:x="40127" fg:w="6"/><text x="87.9842%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="87.7364%" y="261" width="0.0109%" height="15" fill="rgb(254,217,39)" fg:x="40128" fg:w="5"/><text x="87.9864%" y="271.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ec_pubkey_serialize (5 samples, 0.01%)</title><rect x="87.7779%" y="245" width="0.0109%" height="15" fill="rgb(240,178,23)" fg:x="40147" fg:w="5"/><text x="88.0279%" y="255.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_odd_multiples_table (21 samples, 0.05%)</title><rect x="88.1956%" y="213" width="0.0459%" height="15" fill="rgb(218,11,47)" fg:x="40338" fg:w="21"/><text x="88.4456%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (11 samples, 0.02%)</title><rect x="88.2174%" y="197" width="0.0241%" height="15" fill="rgb(218,51,51)" fg:x="40348" fg:w="11"/><text x="88.4674%" y="207.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_wnaf (70 samples, 0.15%)</title><rect x="88.2415%" y="213" width="0.1530%" height="15" fill="rgb(238,126,27)" fg:x="40359" fg:w="70"/><text x="88.4915%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_mul (301 samples, 0.66%)</title><rect x="88.3945%" y="213" width="0.6581%" height="15" fill="rgb(249,202,22)" fg:x="40429" fg:w="301"/><text x="88.6445%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (159 samples, 0.35%)</title><rect x="89.0526%" y="213" width="0.3476%" height="15" fill="rgb(254,195,49)" fg:x="40730" fg:w="159"/><text x="89.3026%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (1,349 samples, 2.95%)</title><rect x="89.4003%" y="213" width="2.9495%" height="15" fill="rgb(208,123,14)" fg:x="40889" fg:w="1349"/><text x="89.6503%" y="223.50">bl..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul (10 samples, 0.02%)</title><rect x="92.3585%" y="197" width="0.0219%" height="15" fill="rgb(224,200,8)" fg:x="42242" fg:w="10"/><text x="92.6085%" y="207.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_split_lambda (14 samples, 0.03%)</title><rect x="92.3585%" y="213" width="0.0306%" height="15" fill="rgb(217,61,36)" fg:x="42242" fg:w="14"/><text x="92.6085%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult (2,103 samples, 4.60%)</title><rect x="87.7998%" y="229" width="4.5980%" height="15" fill="rgb(206,35,45)" fg:x="40157" fg:w="2103"/><text x="88.0498%" y="239.50">block..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecmult_table_get_ge_storage (12 samples, 0.03%)</title><rect x="92.3978%" y="229" width="0.0262%" height="15" fill="rgb(217,65,33)" fg:x="42260" fg:w="12"/><text x="92.6478%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_sqrt (477 samples, 1.04%)</title><rect x="92.4241%" y="229" width="1.0429%" height="15" fill="rgb(222,158,48)" fg:x="42272" fg:w="477"/><text x="92.6741%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (18 samples, 0.04%)</title><rect x="93.4867%" y="197" width="0.0394%" height="15" fill="rgb(254,2,54)" fg:x="42758" fg:w="18"/><text x="93.7367%" y="207.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_gej_var (154 samples, 0.34%)</title><rect x="93.4670%" y="229" width="0.3367%" height="15" fill="rgb(250,143,38)" fg:x="42749" fg:w="154"/><text x="93.7170%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_fe_impl_inv_var (151 samples, 0.33%)</title><rect x="93.4736%" y="213" width="0.3301%" height="15" fill="rgb(248,25,0)" fg:x="42752" fg:w="151"/><text x="93.7236%" y="223.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (127 samples, 0.28%)</title><rect x="93.5260%" y="197" width="0.2777%" height="15" fill="rgb(206,152,27)" fg:x="42776" fg:w="127"/><text x="93.7760%" y="207.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_set_xo_var (6 samples, 0.01%)</title><rect x="93.8037%" y="229" width="0.0131%" height="15" fill="rgb(240,77,30)" fg:x="42903" fg:w="6"/><text x="94.0537%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ge_table_set_globalz (71 samples, 0.16%)</title><rect x="93.8168%" y="229" width="0.1552%" height="15" fill="rgb(231,5,3)" fg:x="42909" fg:w="71"/><text x="94.0668%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_ge_var (1,002 samples, 2.19%)</title><rect x="93.9721%" y="229" width="2.1908%" height="15" fill="rgb(207,226,32)" fg:x="42980" fg:w="1002"/><text x="94.2221%" y="239.50">b..</text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_add_zinv_var (480 samples, 1.05%)</title><rect x="96.1628%" y="229" width="1.0495%" height="15" fill="rgb(222,207,47)" fg:x="43982" fg:w="480"/><text x="96.4128%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_gej_double (40 samples, 0.09%)</title><rect x="97.2123%" y="229" width="0.0875%" height="15" fill="rgb(229,115,45)" fg:x="44462" fg:w="40"/><text x="97.4623%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_update_de_62 (20 samples, 0.04%)</title><rect x="97.2998%" y="229" width="0.0437%" height="15" fill="rgb(224,191,6)" fg:x="44502" fg:w="20"/><text x="97.5498%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_modinv64_var (111 samples, 0.24%)</title><rect x="97.3435%" y="229" width="0.2427%" height="15" fill="rgb(230,227,24)" fg:x="44522" fg:w="111"/><text x="97.5935%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_scalar_mul (6 samples, 0.01%)</title><rect x="97.5862%" y="229" width="0.0131%" height="15" fill="rgb(228,80,19)" fg:x="44633" fg:w="6"/><text x="97.8362%" y="239.50"></text></g><g><title>block_verifier`rustsecp256k1_v0_10_0_ecdsa_recover (4,488 samples, 9.81%)</title><rect x="87.7889%" y="245" width="9.8126%" height="15" fill="rgb(247,229,0)" fg:x="40152" fg:w="4488"/><text x="88.0389%" y="255.50">block_verifier..</text></g><g><title>block_verifier`fuel_crypto::secp256::signature::Signature::recover (4,500 samples, 9.84%)</title><rect x="87.7736%" y="261" width="9.8389%" height="15" fill="rgb(237,194,15)" fg:x="40145" fg:w="4500"/><text x="88.0236%" y="271.50">block_verifier..</text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="97.6277%" y="213" width="0.0241%" height="15" fill="rgb(219,203,20)" fg:x="44652" fg:w="11"/><text x="97.8777%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="97.6299%" y="197" width="0.0219%" height="15" fill="rgb(234,128,8)" fg:x="44653" fg:w="10"/><text x="97.8799%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.02%)</title><rect x="97.6299%" y="181" width="0.0219%" height="15" fill="rgb(248,202,8)" fg:x="44653" fg:w="10"/><text x="97.8799%" y="191.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (15 samples, 0.03%)</title><rect x="97.6234%" y="229" width="0.0328%" height="15" fill="rgb(206,104,37)" fg:x="44650" fg:w="15"/><text x="97.8734%" y="239.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (23 samples, 0.05%)</title><rect x="97.6584%" y="229" width="0.0503%" height="15" fill="rgb(223,8,27)" fg:x="44666" fg:w="23"/><text x="97.9084%" y="239.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (42 samples, 0.09%)</title><rect x="97.6234%" y="245" width="0.0918%" height="15" fill="rgb(216,217,28)" fg:x="44650" fg:w="42"/><text x="97.8734%" y="255.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (30 samples, 0.07%)</title><rect x="97.7152%" y="245" width="0.0656%" height="15" fill="rgb(249,199,1)" fg:x="44692" fg:w="30"/><text x="97.9652%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="97.7830%" y="245" width="0.0131%" height="15" fill="rgb(240,85,17)" fg:x="44723" fg:w="6"/><text x="98.0330%" y="255.50"></text></g><g><title>block_verifier`fuel_tx::transaction::types::input::Input::predicate_owner (83 samples, 0.18%)</title><rect x="97.6190%" y="261" width="0.1815%" height="15" fill="rgb(206,108,45)" fg:x="44648" fg:w="83"/><text x="97.8690%" y="271.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (32 samples, 0.07%)</title><rect x="97.8092%" y="261" width="0.0700%" height="15" fill="rgb(245,210,41)" fg:x="44735" fg:w="32"/><text x="98.0592%" y="271.50"></text></g><g><title>block_verifier`fuel_tx::transaction::validity::_&lt;impl fuel_tx::transaction::types::input::Input&gt;::check_signature (4,670 samples, 10.21%)</title><rect x="87.7539%" y="277" width="10.2106%" height="15" fill="rgb(206,13,37)" fg:x="40136" fg:w="4670"/><text x="88.0039%" y="287.50">block_verifier`..</text></g><g><title>libsystem_platform.dylib`_platform_memset (39 samples, 0.09%)</title><rect x="97.8792%" y="261" width="0.0853%" height="15" fill="rgb(250,61,18)" fg:x="44767" fg:w="39"/><text x="98.1292%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (5 samples, 0.01%)</title><rect x="97.9644%" y="277" width="0.0109%" height="15" fill="rgb(235,172,48)" fg:x="44806" fg:w="5"/><text x="98.2144%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.02%)</title><rect x="97.9798%" y="277" width="0.0175%" height="15" fill="rgb(249,201,17)" fg:x="44813" fg:w="8"/><text x="98.2298%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::checked_transaction::Checked&lt;Tx&gt;::check_signatures (4,689 samples, 10.25%)</title><rect x="87.7473%" y="293" width="10.2521%" height="15" fill="rgb(219,208,6)" fg:x="40133" fg:w="4689"/><text x="87.9973%" y="303.50">block_verifier`..</text></g><g><title>block_verifier`alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="98.0235%" y="197" width="0.0109%" height="15" fill="rgb(248,31,23)" fg:x="44833" fg:w="5"/><text x="98.2735%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.0235%" y="181" width="0.0109%" height="15" fill="rgb(245,15,42)" fg:x="44833" fg:w="5"/><text x="98.2735%" y="191.50"></text></g><g><title>block_verifier`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="98.0235%" y="213" width="0.0153%" height="15" fill="rgb(222,217,39)" fg:x="44833" fg:w="7"/><text x="98.2735%" y="223.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (62 samples, 0.14%)</title><rect x="98.0453%" y="213" width="0.1356%" height="15" fill="rgb(210,219,27)" fg:x="44843" fg:w="62"/><text x="98.2953%" y="223.50"></text></g><g><title>block_verifier`fuel_merkle::binary::root_calculator::MerkleRootCalculator::push (73 samples, 0.16%)</title><rect x="98.0235%" y="229" width="0.1596%" height="15" fill="rgb(252,166,36)" fg:x="44833" fg:w="73"/><text x="98.2735%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="98.1831%" y="229" width="0.0241%" height="15" fill="rgb(245,132,34)" fg:x="44906" fg:w="11"/><text x="98.4331%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.01%)</title><rect x="98.1962%" y="213" width="0.0109%" height="15" fill="rgb(236,54,3)" fg:x="44912" fg:w="5"/><text x="98.4462%" y="223.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::RetCtx::return_from_context (94 samples, 0.21%)</title><rect x="98.0082%" y="261" width="0.2055%" height="15" fill="rgb(241,173,43)" fg:x="44826" fg:w="94"/><text x="98.2582%" y="271.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::receipts::ReceiptsCtx::push (94 samples, 0.21%)</title><rect x="98.0082%" y="245" width="0.2055%" height="15" fill="rgb(215,190,9)" fg:x="44826" fg:w="94"/><text x="98.2582%" y="255.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::flow::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::ret (95 samples, 0.21%)</title><rect x="98.0082%" y="277" width="0.2077%" height="15" fill="rgb(242,101,16)" fg:x="44826" fg:w="95"/><text x="98.2582%" y="287.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::instruction::_&lt;impl fuel_vm::interpreter::Interpreter&lt;M,S,Tx,Ecal&gt;&gt;::instruction_inner (100 samples, 0.22%)</title><rect x="97.9994%" y="293" width="0.2186%" height="15" fill="rgb(223,190,21)" fg:x="44822" fg:w="100"/><text x="98.2494%" y="303.50"></text></g><g><title>block_verifier`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="98.2399%" y="261" width="0.0197%" height="15" fill="rgb(215,228,25)" fg:x="44932" fg:w="9"/><text x="98.4899%" y="271.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="98.2399%" y="245" width="0.0197%" height="15" fill="rgb(225,36,22)" fg:x="44932" fg:w="9"/><text x="98.4899%" y="255.50"></text></g><g><title>block_verifier`hashbrown::raw::inner::RawTableInner::fallible_with_capacity (7 samples, 0.02%)</title><rect x="98.2443%" y="229" width="0.0153%" height="15" fill="rgb(251,106,46)" fg:x="44934" fg:w="7"/><text x="98.4943%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.02%)</title><rect x="98.2443%" y="213" width="0.0153%" height="15" fill="rgb(208,90,1)" fg:x="44934" fg:w="7"/><text x="98.4943%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.2465%" y="197" width="0.0131%" height="15" fill="rgb(243,10,4)" fg:x="44935" fg:w="6"/><text x="98.4965%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="98.2487%" y="181" width="0.0109%" height="15" fill="rgb(212,137,27)" fg:x="44936" fg:w="5"/><text x="98.4987%" y="191.50"></text></g><g><title>block_verifier`fuel_tx::transaction::fee::min_gas (23 samples, 0.05%)</title><rect x="98.2203%" y="277" width="0.0503%" height="15" fill="rgb(231,220,49)" fg:x="44923" fg:w="23"/><text x="98.4703%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (5 samples, 0.01%)</title><rect x="98.2596%" y="261" width="0.0109%" height="15" fill="rgb(237,96,20)" fg:x="44941" fg:w="5"/><text x="98.5096%" y="271.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::main::predicates::finalize_check_predicate (28 samples, 0.06%)</title><rect x="98.2181%" y="293" width="0.0612%" height="15" fill="rgb(239,229,30)" fg:x="44922" fg:w="28"/><text x="98.4681%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::memory::MemoryInstance::write_noownerchecks (5 samples, 0.01%)</title><rect x="98.2815%" y="293" width="0.0109%" height="15" fill="rgb(219,65,33)" fg:x="44951" fg:w="5"/><text x="98.5315%" y="303.50"></text></g><g><title>block_verifier`fuel_vm::predicate::RuntimePredicate::from_tx (5 samples, 0.01%)</title><rect x="98.2924%" y="293" width="0.0109%" height="15" fill="rgb(243,134,7)" fg:x="44956" fg:w="5"/><text x="98.5424%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (16 samples, 0.03%)</title><rect x="98.3033%" y="293" width="0.0350%" height="15" fill="rgb(216,177,54)" fg:x="44961" fg:w="16"/><text x="98.5533%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.02%)</title><rect x="98.3383%" y="293" width="0.0175%" height="15" fill="rgb(211,160,20)" fg:x="44977" fg:w="8"/><text x="98.5883%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.02%)</title><rect x="98.3602%" y="293" width="0.0219%" height="15" fill="rgb(239,85,39)" fg:x="44987" fg:w="10"/><text x="98.6102%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.01%)</title><rect x="98.3689%" y="277" width="0.0131%" height="15" fill="rgb(232,125,22)" fg:x="44991" fg:w="6"/><text x="98.6189%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="98.3821%" y="293" width="0.0219%" height="15" fill="rgb(244,57,34)" fg:x="44997" fg:w="10"/><text x="98.6321%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.02%)</title><rect x="98.3886%" y="277" width="0.0153%" height="15" fill="rgb(214,203,32)" fg:x="45000" fg:w="7"/><text x="98.6386%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.01%)</title><rect x="98.4083%" y="293" width="0.0109%" height="15" fill="rgb(207,58,43)" fg:x="45009" fg:w="5"/><text x="98.6583%" y="303.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_chargeable_transaction (8,181 samples, 17.89%)</title><rect x="80.6153%" y="309" width="17.8870%" height="15" fill="rgb(215,193,15)" fg:x="36871" fg:w="8181"/><text x="80.8653%" y="319.50">block_verifier`fuel_core_exe..</text></g><g><title>libsystem_platform.dylib`_platform_memset (38 samples, 0.08%)</title><rect x="98.4192%" y="293" width="0.0831%" height="15" fill="rgb(232,15,44)" fg:x="45014" fg:w="38"/><text x="98.6692%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.5351%" y="245" width="0.0109%" height="15" fill="rgb(212,3,48)" fg:x="45067" fg:w="5"/><text x="98.7851%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.5351%" y="229" width="0.0109%" height="15" fill="rgb(218,128,7)" fg:x="45067" fg:w="5"/><text x="98.7851%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (5 samples, 0.01%)</title><rect x="98.5351%" y="213" width="0.0109%" height="15" fill="rgb(226,216,39)" fg:x="45067" fg:w="5"/><text x="98.7851%" y="223.50"></text></g><g><title>block_verifier`alloc::fmt::format::format_inner (11 samples, 0.02%)</title><rect x="98.5242%" y="261" width="0.0241%" height="15" fill="rgb(243,47,51)" fg:x="45062" fg:w="11"/><text x="98.7742%" y="271.50"></text></g><g><title>block_verifier`rocksdb::db::DBCommon&lt;rocksdb::db::MultiThreaded,I&gt;::cf_handle (9 samples, 0.02%)</title><rect x="98.5482%" y="261" width="0.0197%" height="15" fill="rgb(241,183,40)" fg:x="45073" fg:w="9"/><text x="98.7982%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="98.5679%" y="261" width="0.0131%" height="15" fill="rgb(231,217,32)" fg:x="45082" fg:w="6"/><text x="98.8179%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.02%)</title><rect x="98.5810%" y="261" width="0.0153%" height="15" fill="rgb(229,61,38)" fg:x="45088" fg:w="7"/><text x="98.8310%" y="271.50"></text></g><g><title>block_verifier`fuel_core::state::rocks_db::RocksDb&lt;Description&gt;::cf_u32 (34 samples, 0.07%)</title><rect x="98.5242%" y="277" width="0.0743%" height="15" fill="rgb(225,210,5)" fg:x="45062" fg:w="34"/><text x="98.7742%" y="287.50"></text></g><g><title>block_verifier`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::PinnableWideColumns*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (5 samples, 0.01%)</title><rect x="98.6313%" y="229" width="0.0109%" height="15" fill="rgb(231,79,45)" fg:x="45111" fg:w="5"/><text x="98.8813%" y="239.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::GetImpl (20 samples, 0.04%)</title><rect x="98.6051%" y="245" width="0.0437%" height="15" fill="rgb(224,100,7)" fg:x="45099" fg:w="20"/><text x="98.8551%" y="255.50"></text></g><g><title>block_verifier`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (22 samples, 0.05%)</title><rect x="98.6029%" y="261" width="0.0481%" height="15" fill="rgb(241,198,18)" fg:x="45098" fg:w="22"/><text x="98.8529%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.01%)</title><rect x="98.6510%" y="245" width="0.0131%" height="15" fill="rgb(252,97,53)" fg:x="45120" fg:w="6"/><text x="98.9010%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (5 samples, 0.01%)</title><rect x="98.6532%" y="229" width="0.0109%" height="15" fill="rgb(220,88,7)" fg:x="45121" fg:w="5"/><text x="98.9032%" y="239.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (7 samples, 0.02%)</title><rect x="98.6510%" y="261" width="0.0153%" height="15" fill="rgb(213,176,14)" fg:x="45120" fg:w="7"/><text x="98.9010%" y="271.50"></text></g><g><title>block_verifier`rocksdb_get_pinned_cf (34 samples, 0.07%)</title><rect x="98.6029%" y="277" width="0.0743%" height="15" fill="rgb(246,73,7)" fg:x="45098" fg:w="34"/><text x="98.8529%" y="287.50"></text></g><g><title>block_verifier`fuel_core_storage::kv_store::KeyValueInspect::exists (81 samples, 0.18%)</title><rect x="98.5111%" y="309" width="0.1771%" height="15" fill="rgb(245,64,36)" fg:x="45056" fg:w="81"/><text x="98.7611%" y="319.50"></text></g><g><title>block_verifier`&lt;fuel_core::state::rocks_db::RocksDb&lt;Description&gt; as fuel_core_storage::kv_store::KeyValueInspect&gt;::size_of_value (80 samples, 0.17%)</title><rect x="98.5132%" y="293" width="0.1749%" height="15" fill="rgb(245,80,10)" fg:x="45057" fg:w="80"/><text x="98.7632%" y="303.50"></text></g><g><title>block_verifier`fuel_core_storage::transactional::InMemoryTransaction&lt;S&gt;::get_from_changes (47 samples, 0.10%)</title><rect x="98.6882%" y="309" width="0.1028%" height="15" fill="rgb(232,107,50)" fg:x="45137" fg:w="47"/><text x="98.9382%" y="319.50"></text></g><g><title>block_verifier`fuel_vm::interpreter::executors::main::predicates::finalize_check_predicate (6 samples, 0.01%)</title><rect x="98.7931%" y="309" width="0.0131%" height="15" fill="rgb(253,3,0)" fg:x="45185" fg:w="6"/><text x="99.0431%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (202 samples, 0.44%)</title><rect x="98.8084%" y="309" width="0.4417%" height="15" fill="rgb(212,99,53)" fg:x="45192" fg:w="202"/><text x="99.0584%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_free (9 samples, 0.02%)</title><rect x="99.2501%" y="309" width="0.0197%" height="15" fill="rgb(249,111,54)" fg:x="45394" fg:w="9"/><text x="99.5001%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (6 samples, 0.01%)</title><rect x="99.2719%" y="309" width="0.0131%" height="15" fill="rgb(249,55,30)" fg:x="45404" fg:w="6"/><text x="99.5219%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (35 samples, 0.08%)</title><rect x="99.2850%" y="309" width="0.0765%" height="15" fill="rgb(237,47,42)" fg:x="45410" fg:w="35"/><text x="99.5350%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.03%)</title><rect x="99.3616%" y="309" width="0.0306%" height="15" fill="rgb(211,20,18)" fg:x="45445" fg:w="14"/><text x="99.6116%" y="319.50"></text></g><g><title>block_verifier`fuel_core_executor::executor::BlockExecutor&lt;R&gt;::execute_transaction_and_commit (9,406 samples, 20.57%)</title><rect x="78.8639%" y="325" width="20.5654%" height="15" fill="rgb(231,203,46)" fg:x="36070" fg:w="9406"/><text x="79.1139%" y="335.50">block_verifier`fuel_core_executo..</text></g><g><title>libsystem_platform.dylib`_platform_memset (17 samples, 0.04%)</title><rect x="99.3922%" y="309" width="0.0372%" height="15" fill="rgb(237,142,3)" fg:x="45459" fg:w="17"/><text x="99.6422%" y="319.50"></text></g><g><title>block_verifier`sha2::sha256::compress256 (233 samples, 0.51%)</title><rect x="99.4293%" y="325" width="0.5094%" height="15" fill="rgb(241,107,1)" fg:x="45476" fg:w="233"/><text x="99.6793%" y="335.50"></text></g><g><title>block_verifier`fuel_core_upgradable_executor::executor::Executor&lt;S,R&gt;::dry_run (9,820 samples, 21.47%)</title><rect x="78.5010%" y="341" width="21.4706%" height="15" fill="rgb(229,83,13)" fg:x="35904" fg:w="9820"/><text x="78.7510%" y="351.50">block_verifier`fuel_core_upgradabl..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.02%)</title><rect x="99.9541%" y="325" width="0.0175%" height="15" fill="rgb(241,91,40)" fg:x="45716" fg:w="8"/><text x="100.2041%" y="335.50"></text></g><g><title>block_verifier`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (10,131 samples, 22.15%)</title><rect x="77.8473%" y="389" width="22.1506%" height="15" fill="rgb(225,3,45)" fg:x="35605" fg:w="10131"/><text x="78.0973%" y="399.50">block_verifier`tokio::runtime::sche..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10,131 samples, 22.15%)</title><rect x="77.8473%" y="373" width="22.1506%" height="15" fill="rgb(244,223,14)" fg:x="35605" fg:w="10131"/><text x="78.0973%" y="383.50">block_verifier`tokio::runtime::task..</text></g><g><title>block_verifier`fuel_core_parallel_executor::executor::Executor&lt;S,R&gt;::produce_inner_without_da::_{{closure}}::_{{closure}} (9,832 samples, 21.50%)</title><rect x="78.5010%" y="357" width="21.4968%" height="15" fill="rgb(224,124,37)" fg:x="35904" fg:w="9832"/><text x="78.7510%" y="367.50">block_verifier`fuel_core_parallel_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.03%)</title><rect x="99.9716%" y="341" width="0.0262%" height="15" fill="rgb(251,171,30)" fg:x="45724" fg:w="12"/><text x="100.2216%" y="351.50"></text></g><g><title>all (45,737 samples, 100%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(236,46,54)" fg:x="0" fg:w="45737"/><text x="0.2500%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (12,295 samples, 26.88%)</title><rect x="73.1180%" y="485" width="26.8820%" height="15" fill="rgb(245,213,5)" fg:x="33442" fg:w="12295"/><text x="73.3680%" y="495.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (12,295 samples, 26.88%)</title><rect x="73.1180%" y="469" width="26.8820%" height="15" fill="rgb(230,144,27)" fg:x="33442" fg:w="12295"/><text x="73.3680%" y="479.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>block_verifier`std::sys::pal::unix::thread::Thread::new::thread_start (12,295 samples, 26.88%)</title><rect x="73.1180%" y="453" width="26.8820%" height="15" fill="rgb(220,86,6)" fg:x="33442" fg:w="12295"/><text x="73.3680%" y="463.50">block_verifier`std::sys::pal::unix::thread:..</text></g><g><title>block_verifier`core::ops::function::FnOnce::call_once{{vtable.shim}} (12,295 samples, 26.88%)</title><rect x="73.1180%" y="437" width="26.8820%" height="15" fill="rgb(240,20,13)" fg:x="33442" fg:w="12295"/><text x="73.3680%" y="447.50">block_verifier`core::ops::function::FnOnce:..</text></g><g><title>block_verifier`std::sys::backtrace::__rust_begin_short_backtrace (12,295 samples, 26.88%)</title><rect x="73.1180%" y="421" width="26.8820%" height="15" fill="rgb(217,89,34)" fg:x="33442" fg:w="12295"/><text x="73.3680%" y="431.50">block_verifier`std::sys::backtrace::__rust_..</text></g><g><title>block_verifier`tokio::runtime::task::raw::poll (10,133 samples, 22.15%)</title><rect x="77.8451%" y="405" width="22.1549%" height="15" fill="rgb(229,13,5)" fg:x="35604" fg:w="10133"/><text x="78.0951%" y="415.50">block_verifier`tokio::runtime::task..</text></g></svg></svg>