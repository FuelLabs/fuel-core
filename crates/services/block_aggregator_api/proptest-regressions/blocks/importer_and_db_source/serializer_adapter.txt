# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 3d8a1dc0826956e2454ff1a3d6b8d75c5b5b0eebe2986c5668745ffb2bb9b0e4 # shrinks to block = V1(BlockV1 { header: V1(BlockHeaderV1 { application: ApplicationHeader { da_height: DaBlockHeight(0), consensus_parameters_version: 0, state_transition_bytecode_version: 31, generated: GeneratedApplicationFieldsV1 { transactions_count: 0, message_receipt_count: 0, transactions_root: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855, message_outbox_root: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855, event_inbox_root: 0000000000000000000000000000000000000000000000000000000000000000 } }, consensus: ConsensusHeader { prev_root: 0000000000000000000000000000000000000000000000000000000000000000, height: 00000000, time: Tai64(4611686018427387914), generated: GeneratedConsensusFields { application_hash: cda084575be17b88d98713807263d2f5b4ffbe79ba9a4fbf544bf6493a1d641a } }, metadata: Some(BlockHeaderMetadata { id: BlockId(c636fad695fad5e9211cd08b2cb66c024d7b972572cb1005c6ab56aeca4f34b4) }) }), transactions: [Script(ChargeableTransaction { body: ScriptBody { script_gas_limit: 0, receipts_root: 0000000000000000000000000000000000000000000000000000000000000000, script: ScriptCode { bytes: Bytes(24400000) }, script_data: Bytes() }, policies: Policies { bits: PoliciesBits(WitnessLimit | Maturity), values: [0, 10000, 0, 0, 0, 0] }, inputs: [], outputs: [], witnesses: [], metadata: None })] })
