---
source: fuel-client/src/client/schema/tx.rs
expression: operation.query
---
query Query($_0: TransactionId!) {
  transaction(id: $_0) {
    gasLimit
    gasPrice
    bytePrice
    id
    inputAssetIds
    inputContracts {
      id
    }
    inputs {
      __typename
      ... on InputCoin {
        utxoId
        owner
        amount
        assetId
        witnessIndex
        maturity
        predicate
        predicateData
      }
      ... on InputContract {
        utxoId
        balanceRoot
        stateRoot
        contract {
          id
        }
      }
    }
    isScript
    outputs {
      __typename
      ... on CoinOutput {
        to
        amount
        assetId
      }
      ... on ContractOutput {
        inputIndex
        balanceRoot
        stateRoot
      }
      ... on WithdrawalOutput {
        to
        amount
        assetId
      }
      ... on ChangeOutput {
        to
        amount
        assetId
      }
      ... on VariableOutput {
        to
        amount
        assetId
      }
      ... on ContractCreated {
        contract {
          id
        }
        stateRoot
      }
    }
    maturity
    receiptsRoot
    status {
      __typename
      ... on SubmittedStatus {
        time
      }
      ... on SuccessStatus {
        block {
          id
        }
        time
        programState {
          returnType
          data
        }
      }
      ... on FailureStatus {
        block {
          id
        }
        time
        reason
        programState {
          returnType
          data
        }
      }
    }
    witnesses
    receipts {
      param1
      param2
      amount
      assetId
      gas
      digest
      contract {
        id
      }
      is
      pc
      ptr
      ra
      rb
      rc
      rd
      reason
      receiptType
      to {
        id
      }
      toAddress
      val
      len
      result
      gasUsed
      data
    }
    script
    scriptData
    salt
    staticContracts {
      id
    }
    storageSlots
    bytecodeWitnessIndex
  }
}

